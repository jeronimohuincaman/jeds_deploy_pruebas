{"version":3,"file":"src_app_modules_stock_depositos_depositos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/depositos/components/depositos.component.ts","./src/app/modules/stock/depositos/components/depositos.component.html","./src/app/modules/stock/depositos/components/save/save.component.ts","./src/app/modules/stock/depositos/components/save/save.component.html","./src/app/modules/stock/depositos/depositos.module.ts","./src/app/modules/stock/depositos/service/depositos.service.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/@angular/material/fesm2022/toolbar.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { IDeposito } from '../models/deposito';\r\nimport { DepositosService } from '../service/depositos.service';\r\nimport { debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatButton } from '@angular/material/button';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\n@Component({\r\n    selector: 'app-depositos',\r\n    templateUrl: './depositos.component.html',\r\n    styleUrls: ['./depositos.component.scss']\r\n})\r\nexport class DepositosComponent implements OnInit {\r\n    depositos: IDeposito[];\r\n    public dataSource: MatTableDataSource<IDeposito> = new MatTableDataSource();\r\n    columns = ['descripcion', 'activo', 'acciones']\r\n\r\n    search: FormControl = new FormControl('');\r\n\r\n    sortValue: string;\r\n\r\n    constructor(\r\n        private depositosService: DepositosService,\r\n        private menu: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService\r\n    ) {\r\n    }\r\n    ngOnInit(): void {\r\n        this.getDepositos();\r\n        this._listenCambios();\r\n    }\r\n\r\n    /**\r\n     *  Funcion en el componente.\r\n     * - Funcion que comunica el componente con los servicios.\r\n     * - Espera que se consulte los datos del backend para almacenarlos en una variable.\r\n     * - Teniendo la respuesta del backend en una variable, llama a la funcion 'getData...' pasandole por parametro valores del back.\r\n     */\r\n    async getDepositos(filter?: any) {\r\n        const sort = filter;\r\n        const depositos = await firstValueFrom(this.depositosService.getDepositos(sort));\r\n        this.getDataDepositos(depositos);\r\n    }\r\n\r\n    /**\r\n     *  -Funcion en el componente-\r\n     * - Esta funcion toma los datos que se la pasan por parametro para crear una tabla con AngularMaterial.\r\n     * @param data Aca se almacenan todos los valores recibidos del servicio.\r\n     */\r\n    async getDataDepositos(data) {\r\n        new Promise(async (resolve) => {\r\n            this.depositos = data.list;\r\n            this.dataSource = new MatTableDataSource(this.depositos);\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion sirve para filtrar en memoria lo que ingresemos por el buscador y actualizar la grilla\r\n     * @param depo \r\n     */\r\n    _filterDepositos(depo: string) {\r\n        const filterLike = depo.toLowerCase();\r\n        const depositoFilters = this.depositos.filter(deposito =>\r\n        deposito.descripcion.toLowerCase().includes(filterLike));\r\n\r\n        this.dataSource = new MatTableDataSource(depositoFilters)\r\n    }\r\n\r\n    /**\r\n     * Esta funcion cumple la tarea de escuchar sí se produce alguna modificacion en el filtro de la grilla.\r\n     */\r\n    _sortChange($event?: any) {\r\n        $event ? this.sortValue = $event.direction : '';\r\n        this.getDepositos(this.sortValue)\r\n    }\r\n\r\n    /**\r\n    * Esta Funcion escucha los cambios del buscador para luego filtrar.\r\n    */\r\n    _listenCambios(){\r\n        this.search.valueChanges\r\n            .pipe(\r\n                debounceTime(300),\r\n                distinctUntilChanged(),\r\n            )\r\n            .subscribe(value => {\r\n                this._filterDepositos(value)\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion guarda un deposito.\r\n     * @param documentRef \r\n     */\r\n    saveDeposito(documentRef: MatButton) {\r\n        this.menu\r\n            .open(SaveComponent, documentRef._elementRef, {})\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: response => {\r\n                    if (response) {\r\n                        this._sortChange();\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n    * Funcion en el componente\r\n    * - Esta funcion actualiza un deposito.\r\n    * @param documentRef \r\n    * @param depo \r\n    */\r\n    updateDeposito(documentRef: MatButton, depo: IDeposito) {\r\n        this.menu\r\n            .open(SaveComponent, documentRef._elementRef, depo)\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: response => {\r\n                    if (response) {\r\n                        this._sortChange();\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion elimina un deposito.\r\n     * @param documentRef \r\n     * @param depo \r\n     */\r\n    deleteDeposito(depo: IDeposito) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Depósito \" + depo.descripcion,\r\n            message: \"¿Desea eliminar el depósito: \" + depo.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this.depositosService.deleteDeposito(depo.iddeposito).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Depósito eliminado con éxito.\");\r\n                            if (res) {\r\n                                this._sortChange();\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este depósito no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"w-full\">\r\n    <!-- Buscador -->\r\n    <div class=\"bg-slate-100 w-full p-2\">\r\n        <form class=\"bg-white shadow-md w-full px-4 py-4 rounded-lg \">\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label class=\"text-gray-700\">Buscar...</mat-label>\r\n                <input matInput [formControl]=\"search\" class=\"text-black w-full\" placeholder=\"Buscar\" autocomplete=\"off\"\r\n                    #buscar>\r\n            </mat-form-field>\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"px-4 pr-2 pl-2\">\r\n        <!-- Grilla -->\r\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"_sortChange($event)\"\r\n            class='w-full mt-1 mb-18 shadow-lg'>\r\n            <ng-container matColumnDef='descripcion'>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by descripcion\">\r\n                    Descripción</th>\r\n                <td mat-cell *matCellDef='let depo'>\r\n                    {{depo.descripcion}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='activo'>\r\n                <th mat-header-cell *matHeaderCellDef>Activo</th>\r\n                <td mat-cell *matCellDef='let depo'>\r\n                    {{ depo.activo ? 'Si' : 'No' }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='acciones'>\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <button mat-header-cell mat-button (click)=\"saveDeposito(save)\" #save\r\n                        class=\" bg-blue-500 text-white rounded-md\">Create</button>\r\n                </th>\r\n                <td mat-cell *matCellDef='let depo'>\r\n                    <button mat-icon-button (click)=\"updateDeposito(edit, depo)\" #edit>\r\n                        <mat-icon class=\"text-cyan-700\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button (click)=\"deleteDeposito(depo)\" #delete>\r\n                        <mat-icon color=\"warn\">delete</mat-icon>\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n            <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IDeposito } from '../../models/deposito';\r\nimport { DepositosService } from '../../service/depositos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\n@Component({\r\n    selector: 'app-save-depositos',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    form: FormGroup;\r\n    deposito: IDeposito;\r\n    title: string;\r\n    constructor(\r\n        @Inject('MENU_DATA') public data: any,\r\n        private depositosService: DepositosService,\r\n        public alert: AppAlertService,\r\n        public menu: JedsMenuService\r\n    ) {\r\n        this.deposito = this.data ? this.data : null;\r\n        this.title = this.deposito?.iddeposito ? 'Editar depósito' : 'Nuevo depósito';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            descripcion: new FormControl((this.deposito ? this.deposito.descripcion : ''), Validators.required),\r\n            activo: new FormControl((this.deposito ? this.deposito.activo : 1), Validators.required),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.deposito = {\r\n                ...this.deposito,\r\n                descripcion: this.form.get('descripcion').value,\r\n                activo: this.form.get('activo').value,\r\n            }\r\n            if (this.deposito.iddeposito) {\r\n                this.depositosService.updateDeposito(this.deposito)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.menu.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this.depositosService.saveDeposito(this.deposito)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.menu.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.menu.close(false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Descripción</mat-label>\r\n            <input matInput formControlName='descripcion'>\r\n        </mat-form-field>\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Activo</mat-label>\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='rounded-sm' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { DepositosComponent } from './components/depositos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { DepositosService } from './service/depositos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DepositosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [DepositosComponent, SaveComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [DepositosService, JedsMenuService, AppAlertService]\r\n})\r\nexport class DepositosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IDeposito, Response } from '../models/deposito';\r\nimport { AuthService } from '@core/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class DepositosService {\r\n    constructor(private http: HttpClient, private _authService:AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los Depositos.\r\n     * @returns Depositos\r\n     */\r\n    getDepositos(sort?:any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n        .subscribe((resp:any) => {\r\n            this._authService.accessToken = resp.token,\r\n            subject.next({\r\n                'list':resp.result,\r\n                // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n            })\r\n        });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param deposito \r\n     * @returns Un deposito nuevo\r\n     */\r\n    saveDeposito(deposito: IDeposito): Observable<IDeposito> {\r\n        return this.http.post<IDeposito>(`${environment.stock.depositos}`, deposito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param deposito\r\n     * @returns Deposito actualizado\r\n     */\r\n    updateDeposito(deposito: IDeposito): Observable<IDeposito> {\r\n        return this.http.put<IDeposito>(`${environment.stock.depositos}` + '/' + deposito.iddeposito, deposito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param iddeposito \r\n     * @returns Elimina el deposito\r\n     */\r\n    deleteDeposito(iddeposito: number): Observable<IDeposito> {\r\n        return this.http.delete<IDeposito>(environment.stock.depositos + '/' + iddeposito);\r\n    }\r\n}","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["debounceTime","distinctUntilChanged","firstValueFrom","MatTableDataSource","SaveComponent","FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","depo_r9","descripcion","depo_r10","activo","ɵɵlistener","DepositosComponent_th_17_Template_button_click_1_listener","ɵɵrestoreView","_r13","_r11","ɵɵreference","ctx_r12","ɵɵnextContext","ɵɵresetView","saveDeposito","DepositosComponent_td_18_Template_button_click_1_listener","restoredCtx","_r18","depo_r14","$implicit","_r15","ctx_r17","updateDeposito","DepositosComponent_td_18_Template_button_click_5_listener","ctx_r19","deleteDeposito","ɵɵelement","DepositosComponent","constructor","depositosService","menu","confirm","alert","dataSource","columns","search","ngOnInit","getDepositos","_listenCambios","filter","_this","_asyncToGenerator","sort","depositos","getDataDepositos","data","_this2","Promise","_ref","resolve","list","_x","apply","arguments","_filterDepositos","depo","filterLike","toLowerCase","depositoFilters","deposito","includes","_sortChange","$event","sortValue","direction","valueChanges","pipe","subscribe","value","documentRef","open","_elementRef","afterClosed","next","response","title","message","dismissible","actions","show","color","label","cancel","res","iddeposito","success","error","console","ɵɵdirectiveInject","i1","DepositosService","i2","JedsMenuService","i3","FuseConfirmationService","i4","AppAlertService","selectors","decls","vars","consts","template","DepositosComponent_Template","rf","ctx","DepositosComponent_Template_table_matSortChange_9_listener","ɵɵelementContainerStart","ɵɵtemplate","DepositosComponent_th_11_Template","DepositosComponent_td_12_Template","ɵɵelementContainerEnd","DepositosComponent_th_14_Template","DepositosComponent_td_15_Template","DepositosComponent_th_17_Template","DepositosComponent_td_18_Template","DepositosComponent_tr_19_Template","DepositosComponent_tr_20_Template","ɵɵproperty","FormGroup","Validators","newForm","form","required","onSubmit","valid","warning","get","close","onCloseMenu","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_Template_button_click_22_listener","ɵɵtextInterpolate","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","routes","path","component","DepositosModule","imports","forChild","declarations","exports","environment","Subject","http","_authService","f","subject","stock","resp","accessToken","token","result","asObservable","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","EmptyError","SafeSubscriber","source","config","hasConfig","reject","subscriber","unsubscribe","complete","defaultValue","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_c0","_c1","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","type","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","length","isCombinedUsage","Array","from","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[6,7,8]}