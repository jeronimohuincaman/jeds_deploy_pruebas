{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>\r\n    ) {\r\n        this.title = 'Añadir articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulos();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list.sort((a, b) => a.factor - b.factor).map(unidad => {\r\n                //Convierto en numero\r\n                unidad.factor = parseFloat(unidad.factor);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (unidad.factor === 1) {\r\n                    um_base = unidad.um.descripcion;\r\n                }\r\n\r\n                return {idunidadmedida: unidad.idunidadmedida, descripcion_um: unidad.um.descripcion, factor_um: unidad.factor, um_base: um_base }\r\n            });\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        this.form.get($event).setValue('');\r\n\r\n        if ($event == 'articulo') {\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), [Validators.required]),\r\n            cantidad: new FormControl((''), Validators.required),\r\n        });\r\n\r\n        this.form.get('unidadmedida').disable();\r\n        this.form.get('articulo').valueChanges.pipe(\r\n            startWith(''),\r\n            debounceTime(750),\r\n            distinctUntilChanged(),\r\n            switchMap((value) => this._stockInicialService.getArticulos(value)),\r\n        ).subscribe((v) => {\r\n            this.filteredArticulos = v?.result;\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form.get('articulo').value,\r\n                unidad_medida: this.form.get('unidadmedida').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um\r\n            }\r\n\r\n            let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value);\r\n\r\n            if (existeMovimiento) {\r\n                this.form.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya ha selecionado este articulo')\r\n            }\r\n\r\n            this.onCloseMenu(articulo)\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                            {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}} {{um.um_base}})</i>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Añadir</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-stock-inicial',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuario: Observable<IUsuario[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterFechas: any = [];\r\n  stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService, \r\n    private datePipe: DatePipe, \r\n    private _stockInicialService: StockInicialService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      // activo: new FormControl(-1),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    \r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if(data){\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._stockInicialService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuario = this.formFilters.controls['usuario'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._stockInicialService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario\" matInput [matAutocomplete]=\"autoUsuario\" formControlName=\"usuario\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuario=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario of filteredUsuario | async\" [value]=\"usuario.nick\">\r\n                    {{usuario.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    stk_movimientos: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        /* this.user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.stock_inicial?.idstockinicial) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._stockInicialService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getMovimientos(idstockinicial): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const movimientos = await firstValueFrom(this._stockInicialService.getMovimientos(idstockinicial))\r\n            this.stk_movimientos = movimientos.list;\r\n            resolve(this.stk_movimientos);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addArticulo() {\r\n        if (this.form.get('deposito').value != '') {\r\n            let esEdicion = this.stock_inicial ? true : false;\r\n            this.dialogo\r\n                .open(AddArticuloComponent, { \r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        movimientos: this.stk_movimientos,\r\n                        movimientos_eliminados: this.mov_art_list_deleted,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno_articulo: res.articulo.codigo_interno\r\n                            }\r\n                            this.stk_movimientos = [...this.stk_movimientos, art_stk_ini];\r\n                            this.dataSource = new MatTableDataSource(this.stk_movimientos); //Actualizo la tabla\r\n\r\n                            if (this.stk_movimientos.length != 0) {\r\n                                this.form.get('deposito').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.stk_movimientos = this.stk_movimientos.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos);\r\n\r\n        if (this.stk_movimientos.length === 0) {\r\n            this.form.get('deposito').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input: string) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.stock_inicial ? this.stock_inicial.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.stock_inicial) { //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.getMovimientos(this.stock_inicial.idstockinicial).then((res) => {\r\n                // Mapeo la cantidad\r\n                res.map(m => m.cantidad = parseFloat(m.cantidad));\r\n\r\n                this.stk_movimientos = res; // Le asigno los movimientos\r\n                this.dataSource = new MatTableDataSource(res);\r\n                if (this.stk_movimientos.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial?.hora ? this.stock_inicial.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.stock_inicial ? this.stock_inicial.descripcion_deposito : ''), Validators.required),\r\n            articulo: new FormControl((''),),\r\n            unidadmedida: new FormControl((''),),\r\n            cantidad: new FormControl((''),),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), [Validators.maxLength(this.maxPalabras)])\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.stk_movimientos.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: Number(objeto.cantidad),\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (articulos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            const payload = {\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial?.idstockinicial) {\r\n                let depo = this.depositos.find(d => d.iddeposito === this.stock_inicial.iddeposito); //Hago esto porque cuando es una edicion me levanta el texto del deposito y, sino lo cambio durante la edicion, al persistr pincha porque le estoy enviando un string en vez de un number en 'iddeposito'.\r\n                payload['iddeposito'] = depo.iddeposito;\r\n\r\n                this._stockInicialService.updateStockInicial(payload, this.stock_inicial.idstockinicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Depósitos</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && stk_movimientos.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[215px] h-auto shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"rounded-tl-lg text-white w-auto\">Código interno</th>\r\n                        <td mat-cell *matCellDef='let articulo' class=\"w-auto\"> \r\n                            {{ articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let articulo' class=\"w-auto\">\r\n                            {{articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.cantidad }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"rounded-tr-lg text-white w-auto\"> \r\n                        <button class=\"flex items-center justify-center\"\r\n                            (click)=\"addArticulo()\">\r\n                            <mat-icon class=\"text-inherit text-xl\">add_circle_outline</mat-icon>\r\n                            <span class=\"ml-2\">Añadir Artículo</span>\r\n                        </button>\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let articulo' class=\"text-center\">\r\n                            <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\n\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'acciones']\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion_deposito'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n        deposito: -1,\r\n        usuario: '',\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_inicials + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    stkMovimientos: [] = [];\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        private _menuService: JedsMenuService,\r\n        private _searchService: SearchService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n* Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n* @param origin \r\n*/\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        // this.extraParams += this.filter.activo != -1 ? \"&filter[activo]=\" + this.filter.activo : '';\r\n                        this.extraParams = this.filter.deposito != -1 ? \"&filter[iddeposito]=\" + this.filter.deposito : '';\r\n                        this.extraParams += this.filter.usuario != '' ? \"&filter[nick_usuario]=\" + this.filter.usuario : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"&filter[fecha][gte]=\" + this.filter.filtroFechaInicio : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"&filter[fecha][lte]=\" + this.filter.filtroFechaFin : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateStockInicial(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteStockInicial(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveStockInicial() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateStockInicial(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteStockInicial(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Stock inicial \" + event.params.data.fecha,\r\n            message: \"¿Desea eliminar el Stock inicial: \" + event.params.data.fecha + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._stockInicialService.deleteStockInicial(event.params.data.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\nngOnDestroy(): void {\r\n    this._searchService.unsubscribe();\r\n}\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveStockInicial()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Stock Inicial </span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getMovimientos(idstockinicial: number) {\r\n        let f = `?filter[idstockinicial]=${idstockinicial}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(filterLike?) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        f += filterLike ? `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}` : '';\r\n        return this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        );\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUsuarios(){\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n    */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n    */\r\n    updateStockInicial(stock_inicial: IStockInicial, idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n    */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule,\r\n        TablaDinamicaModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }"],"names":["FormControl","FormGroup","Validators","Subject","debounceTime","distinctUntilChanged","finalize","firstValueFrom","startWith","switchMap","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r5","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_19_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r8","factor_um","um_base","ɵɵtemplate","AddArticuloComponent_mat_option_24_i_2_Template","idunidadmedida","descripcion_um","AddArticuloComponent","constructor","data","_stockInicialService","_empresaService","alert","dialogRef","columns","unidades_de_medida","dataSource","default_color","_unsubscribeAll","title","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","newForm","getArticulos","subscribeAlert","emitConfig","next","config","appearance","time","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","_x","apply","arguments","getTextArticulo","articulo","getUnidadesDeMedidaArticulos","idarticulo","_this2","unidadesDeMedida","_ref2","sort","a","b","factor","map","unidad","parseFloat","um","_x2","seleccionArticulo","$event","form","get","enable","setValue","disable","required","unidadmedida","cantidad","valueChanges","value","v","filteredArticulos","result","onSubmit","valid","error","find","unidad_medida","unidadmedida_descripcion","existeMovimiento","movimientos","movimiento","warning","onCloseMenu","close","ɵɵdirectiveInject","i1","StockInicialService","i2","EmpresaService","i3","AppAlertService","i4","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_19_Template","AddArticuloComponent_mat_option_24_Template","ɵɵelement","AddArticuloComponent_Template_button_click_30_listener","ɵɵclassMap","ɵɵstyleProp","ɵɵtextInterpolate","_r1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","limpiarFechas","deposito_r8","iddeposito","usuario_r9","nick","FilterMenuComponent","_menuService","datePipe","usuarios","filterDeposito","filterFechas","stockInicial","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","patchValue","filter","resetFilters","reset","transform","Usuarios","filteredUsuario","controls","_filterUsuaurio","filterValue","toLowerCase","includes","stk_list","JedsMenuService","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_Template_button_click_41_listener","FilterMenuComponent_Template_button_click_44_listener","getRawValue","_r4","ɵɵpipeBind1","EventEmitter","deposito_r18","SaveComponent_button_33_Template_button_click_0_listener","_r20","ctx_r19","ctx_r5","articulo_r21","codigo_interno_articulo","ctx_r7","articulo_r22","descripcion_articulo","ctx_r9","articulo_r23","ctx_r11","articulo_r24","SaveComponent_th_55_Template_button_click_1_listener","_r26","ctx_r25","addArticulo","ctx_r13","SaveComponent_td_56_Template_button_click_1_listener","restoredCtx","_r30","articulo_r27","$implicit","ctx_r29","deleteArticulo","SaveComponent","dialogo","stk_movimientos","mov_art_list_deleted","maxPalabras","creadoExitosamente","editadoExitosamente","stock_inicial","idstockinicial","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","getPalabrasLength","observaciones","length","isPalabraMaxLengthReached","_filterDepositos","toString","depositos","getTextDeposito","option","Depositos","filteredDepositos","getMovimientos","esEdicion","open","panelClass","movimientos_eliminados","afterClosed","res","art_stk_ini","success","item","input","dia","mes","anio","fecha","split","then","m","name","hora","descripcion_deposito","maxLength","fh","objeto","Number","payload","idusuario","id","fecha_hora","depo","d","updateStockInicial","emit","saveStockInicial","i5","MatDialog","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_31_Template","SaveComponent_button_33_Template","ɵɵelementContainerStart","SaveComponent_th_43_Template","SaveComponent_td_44_Template","ɵɵelementContainerEnd","SaveComponent_th_46_Template","SaveComponent_td_47_Template","SaveComponent_th_49_Template","SaveComponent_td_50_Template","SaveComponent_th_52_Template","SaveComponent_td_53_Template","SaveComponent_th_55_Template","SaveComponent_td_56_Template","SaveComponent_tr_57_Template","SaveComponent_tr_58_Template","SaveComponent_div_59_Template","SaveComponent_Template_button_click_61_listener","_r2","ɵɵpureFunction1","_c0","environment","TablaDinamicaComponent","StockInicialComponent","_searchService","confirm","router","_headerTextService","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","activo","extraParams","parametrosActualizados","env","stock","view_stock_inicials","search","stkMovimientos","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","_elementRef","getElementosExistentes","generarAcciones","deleteStockInicial","componentInstance","params","autoFocus","dismissible","actions","show","color","label","cancel","renderTabla","console","ngOnDestroy","unsubscribe","SearchService","i6","FuseConfirmationService","i7","i8","i9","Router","i10","HeaderTextService","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","StockInicialComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","http","_authService","getStockInicial","f","paginado","pagination","perpage","currentPage","subject","observe","resp","accessToken","token","asObservable","view_stock_movimientos","filterLike","articulo_unidad_medidas","login","view_usuarios","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","TablaDinamicaModule","MatAutocompleteModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}