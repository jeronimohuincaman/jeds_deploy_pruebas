{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>\r\n    ) {\r\n        this.title = 'Añadir articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getArticulos();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = unidadesDeMedida.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        this.form.get($event).setValue('');\r\n\r\n        if ($event == 'articulo') {\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), [Validators.required]),\r\n            cantidad: new FormControl((''), Validators.required),\r\n        });\r\n\r\n        this.form.get('unidadmedida').disable();\r\n        this.form.get('articulo').valueChanges.pipe(\r\n            startWith(''),\r\n            debounceTime(750),\r\n            distinctUntilChanged(),\r\n            switchMap((value) => this._stockInicialService.getArticulos(value)),\r\n        ).subscribe((v) => {\r\n            this.filteredArticulos = v?.result;\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form.get('articulo').value,\r\n                unidad_medida: this.form.get('unidadmedida').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                unidadmedida_descripcion: unidadmedida.um.descripcion\r\n            }\r\n            this.onCloseMenu(articulo)\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div>\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                            [value]=\"um.idunidadmedida\">{{um.um.descripcion}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('cantidad')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('cantidad').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Añadir\r\n        </button>\r\n    </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-stock-inicial',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _stockInicialService: StockInicialService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      // activo: new FormControl(-1),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    \r\n  }\r\n\r\nresetFilters() {\r\n  this.formFilters.reset({\r\n    filtroFechaInicio: '',\r\n    filtroFechaFin: '',\r\n    usuario: -1,\r\n    deposito: -1,\r\n  });\r\n}\r\n\r\nonCloseMenu(data: any = null) {\r\n  if(data){\r\n    data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n    data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n  }\r\n  this._menuService.close(data);\r\n}\r\n\r\n/**\r\n* Funcion para limpiar los filtros de rango de fechas\r\n*/\r\nlimpiarFechas() {\r\n  this.formFilters.get('filtroFechaInicio').setValue('');\r\n  this.formFilters.get('filtroFechaFin').setValue('');\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n */\r\ngetUsuarios() {\r\n  let stk_list = this.data.data;\r\n  stk_list.forEach((stk_ini) => {\r\n    const existeUsuario = this.filterUsuarios.find(user => user.codigo_usuario === stk_ini.codigo_usuario);\r\n    if (!existeUsuario) {\r\n      let usuario = { codigo_usuario: stk_ini.codigo_usuario, nick_usuario: stk_ini.nick_usuario }\r\n      this.filterUsuarios.push(usuario);\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los depositos en el filtro de grilla.\r\n */\r\nasync getDepositos() {\r\n  const stk_list = await firstValueFrom(this._stockInicialService.getDepositos(true));\r\n  this.filterDeposito = stk_list.list;\r\n}\r\n\r\n\r\n/**\r\n * Esta funcion sirve para separar la hora de la fecha asi se pueden manipular de forma separada.\r\n * @param data son todos los items que devuelve el servicio.\r\n */\r\n// getHora(data) {\r\n//   //Se usa este forEach para poder modificar la hora y mostrarla por separado en la grilla.\r\n//   data.list.forEach((stk_ini) => {\r\n//     let fh = new Date(stk_ini.fecha_hora);\r\n//     stk_ini.hora = `${fh.getHours()}:${String(fh.getMinutes()).padStart(2, '0')}:${String(fh.getSeconds()).padStart(2, '0')}`;\r\n//     this.stockInicial.push(stk_ini);\r\n//   });\r\n// }\r\n\r\n\r\n/**\r\n * Esta funcion realiza el filtrado desde el front sobre el rango de fechas seleccionado en el filtro.\r\n */\r\n// _filterFechas(stk_list: any[]) {\r\n//   this.filterFechas = []\r\n//   // Obtener las fechas de inicio y fin del formulario y formatearlas\r\n//   let fh_inicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd HH:mm:ss');\r\n//   let fh_fin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd HH:mm:ss');\r\n\r\n//   // Iterar sobre el arreglo de fechas iniciales\r\n//   stk_list.forEach((stk_ini) => {\r\n\r\n//     let item_fecha_hora = `${stk_ini.fecha} ${stk_ini.hora}`;\r\n\r\n//     const existeFecha = this.filterFechas.find(item => item.fecha_hora === item_fecha_hora);\r\n//     if (!existeFecha) {\r\n//       if (item_fecha_hora >= fh_inicio && item_fecha_hora <= fh_fin) {\r\n//         this.filterFechas.push(stk_ini);\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   return this.filterFechas\r\n// }\r\n\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario of filterUsuarios\" [value]=\"usuario.codigo_usuario\">{{usuario.nick_usuario}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    stk_movimientos: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        /* this.user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.stock_inicial?.idstockinicial) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._stockInicialService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getMovimientos(idstockinicial): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const movimientos = await firstValueFrom(this._stockInicialService.getMovimientos(idstockinicial))\r\n            this.stk_movimientos = movimientos.list;\r\n            resolve(this.stk_movimientos);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addArticulo() {\r\n        if (this.form.get('deposito').value != '') {\r\n            this.dialogo\r\n                .open(AddArticuloComponent, { panelClass: 'ayuda-dialog' })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno_articulo: res.articulo.codigo_interno\r\n                            }\r\n                            this.stk_movimientos = [...this.stk_movimientos, art_stk_ini];\r\n                            this.dataSource = new MatTableDataSource(this.stk_movimientos); //Actualizo la tabla\r\n\r\n                            if (this.stk_movimientos.length != 0) {\r\n                                this.form.get('deposito').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.stk_movimientos = this.stk_movimientos.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos);\r\n\r\n        if (this.stk_movimientos.length === 0) {\r\n            this.form.get('deposito').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input: string) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.stock_inicial ? this.stock_inicial.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.stock_inicial) { //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.getMovimientos(this.stock_inicial.idstockinicial).then((res) => {\r\n                this.stk_movimientos = res;\r\n                this.dataSource = new MatTableDataSource(res);\r\n                if (this.stk_movimientos.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial?.hora ? this.stock_inicial.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.stock_inicial ? this.stock_inicial.descripcion_deposito : ''), Validators.required),\r\n            articulo: new FormControl((''),),\r\n            unidadmedida: new FormControl((''),),\r\n            cantidad: new FormControl((''),),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), [Validators.maxLength(this.maxPalabras)])\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.stk_movimientos.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (articulos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            this.stock_inicial = {\r\n                ...this.stock_inicial,\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial.idstockinicial) {\r\n                this._stockInicialService.updateStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"shadow-md mb-3\">\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>Depósitos</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && stk_movimientos.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                    <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                        {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef>Código interno</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef> <button mat-mini-fab color=\"primary\" matTooltip='Añadir Articulo' aria-label=\"icon\"\r\n                                class=\"rounded-full\" (click)=\"addArticulo()\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button></th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n            </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\n\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'acciones']\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion_deposito'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n        deposito: -1,\r\n        usuario: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_inicials + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n    stkMovimientos: [] = [];\r\n\r\n    constructor(\r\n        private _stockInicialService: StockInicialService,\r\n        private _menuService: JedsMenuService,\r\n        private _searchService: SearchService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n* Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n* @param origin \r\n*/\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        // this.extraParams += this.filter.activo != -1 ? \"&filter[activo]=\" + this.filter.activo : '';\r\n                        this.extraParams = this.filter.deposito != -1 ? \"&filter[iddeposito]=\" + this.filter.deposito : '';\r\n                        this.extraParams += this.filter.usuario != -1 ? \"&filter[codigo_usuario]=\" + this.filter.usuario : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"&filter[fecha][gte]=\" + this.filter.filtroFechaInicio : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"&filter[fecha][lte]=\" + this.filter.filtroFechaFin : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateStockInicial(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteStockInicial(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveStockInicial() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateStockInicial(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteStockInicial(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Stock inicial \" + event.params.data.fecha,\r\n            message: \"¿Desea eliminar el Stock inicial: \" + event.params.data.fecha + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._stockInicialService.deleteStockInicial(event.params.data.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\nngOnDestroy(): void {\r\n    this._searchService.unsubscribe();\r\n}\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 \">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Stock Inicial'\r\n                (click)=\"saveStockInicial()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getMovimientos(idstockinicial: number) {\r\n        let f = `?filter[idstockinicial]=${idstockinicial}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(filterLike?) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        f += filterLike ? `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}` : '';\r\n        return this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        );\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n    */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n    */\r\n    updateStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + stock_inicial.idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n    */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule,\r\n        TablaDinamicaModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }"],"names":["FormControl","FormGroup","Validators","Subject","debounceTime","distinctUntilChanged","finalize","firstValueFrom","startWith","switchMap","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r6","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_19_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r9","idunidadmedida","ɵɵtextInterpolate","um","AddArticuloComponent_button_29_Template_button_click_0_listener","_r11","ctx_r10","AddArticuloComponent","constructor","data","_stockInicialService","alert","dialogRef","columns","unidades_de_medida","dataSource","_unsubscribeAll","title","ngOnInit","newForm","getArticulos","subscribeAlert","emitConfig","subscribe","next","config","appearance","time","pipe","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","_x","apply","arguments","getTextArticulo","articulo","getUnidadesDeMedidaArticulos","idarticulo","_this2","unidadesDeMedida","_ref2","_x2","seleccionArticulo","$event","form","get","enable","setValue","disable","required","unidadmedida","cantidad","valueChanges","value","v","filteredArticulos","result","onSubmit","valid","error","find","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","StockInicialService","i2","AppAlertService","i3","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","ɵɵtemplate","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_19_Template","AddArticuloComponent_mat_option_24_Template","ɵɵelement","AddArticuloComponent_button_29_Template","AddArticuloComponent_Template_button_click_31_listener","_r1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r5","ctx_r4","limpiarFechas","deposito_r6","iddeposito","usuario_r7","codigo_usuario","nick_usuario","FilterMenuComponent","_menuService","datePipe","usuarios","filterDeposito","filterUsuarios","filterFechas","stockInicial","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","patchValue","filter","resetFilters","reset","transform","stk_list","forEach","stk_ini","existeUsuario","user","push","JedsMenuService","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_Template_button_click_37_listener","FilterMenuComponent_Template_button_click_40_listener","getRawValue","_r0","EventEmitter","map","deposito_r17","SaveComponent_button_33_Template_button_click_0_listener","_r19","ctx_r18","articulo_r20","descripcion_articulo","articulo_r21","codigo_interno_articulo","articulo_r22","articulo_r23","descripcion_um","SaveComponent_th_56_Template_button_click_1_listener","_r25","ctx_r24","addArticulo","SaveComponent_td_57_Template_button_click_1_listener","restoredCtx","_r29","articulo_r26","$implicit","ctx_r28","deleteArticulo","SaveComponent","dialogo","stk_movimientos","maxPalabras","creadoExitosamente","editadoExitosamente","stock_inicial","idstockinicial","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","getPalabrasLength","observaciones","length","isPalabraMaxLengthReached","_filterDepositos","filterValue","toString","toLowerCase","depositos","includes","getTextDeposito","option","Depositos","filteredDepositos","getMovimientos","movimientos","open","panelClass","afterClosed","res","art_stk_ini","success","warning","item","input","dia","mes","anio","fecha","split","then","name","hora","descripcion_deposito","maxLength","fh","objeto","idusuario","id","fecha_hora","updateStockInicial","emit","saveStockInicial","i4","MatDialog","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_31_Template","SaveComponent_button_33_Template","ɵɵelementContainerStart","SaveComponent_th_44_Template","SaveComponent_td_45_Template","ɵɵelementContainerEnd","SaveComponent_th_47_Template","SaveComponent_td_48_Template","SaveComponent_th_50_Template","SaveComponent_td_51_Template","SaveComponent_th_53_Template","SaveComponent_td_54_Template","SaveComponent_th_56_Template","SaveComponent_td_57_Template","SaveComponent_tr_58_Template","SaveComponent_tr_59_Template","SaveComponent_Template_button_click_61_listener","_r2","ɵɵpipeBind1","ɵɵpureFunction1","_c0","environment","TablaDinamicaComponent","StockInicialComponent","_searchService","confirm","router","_headerTextService","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","activo","extraParams","parametrosActualizados","env","stock","view_stock_inicials","search","stkMovimientos","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","_elementRef","getElementosExistentes","generarAcciones","deleteStockInicial","componentInstance","params","autoFocus","dismissible","actions","show","color","label","cancel","renderTabla","console","ngOnDestroy","unsubscribe","SearchService","i5","FuseConfirmationService","i6","i7","i8","Router","i9","HeaderTextService","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_Template_button_click_3_listener","StockInicialComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","http","_authService","getStockInicial","sort","f","paginado","pagination","perpage","currentPage","subject","observe","resp","accessToken","token","asObservable","view_stock_movimientos","filterLike","articulo_unidad_medidas","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","TablaDinamicaModule","MatAutocompleteModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}