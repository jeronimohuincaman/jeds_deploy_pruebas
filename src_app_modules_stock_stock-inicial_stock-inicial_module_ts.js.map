{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts","./src/app/shared/constants/date-format.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    stk_movimientos: any[] = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        this.user = JSON.parse(sessionStorage.getItem('user'))\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getDepositos();\r\n        this.getArticulos();\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    async getDepositos() {\r\n        const depositos = await firstValueFrom(this._stockInicialService.getDepositos());\r\n        new Promise(async (resolve) => {\r\n            this.depositos = depositos.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = unidadesDeMedida.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        this.getUnidadesDeMedidaArticulos($event)\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addArticulo() {\r\n        let articulo = this.articulos.find(articulo => articulo.idarticulo === this.form.get('articulo').value);        //Traigo un articulo que coincida con mi seleccion para poder utilizar su descripcion.\r\n        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n        let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n            idarticulo: this.form.get('articulo').value,\r\n            cantidad: this.form.get('cantidad').value,\r\n            idunidadmedida: this.form.get('unidadmedida').value,\r\n            idarticulo0: {\r\n                descripcion: articulo.descripcion\r\n            },\r\n            idunidadmedida0: {\r\n                descripcion: unidadmedida.um.descripcion\r\n            },\r\n        }\r\n\r\n        this.stk_movimientos = [...this.stk_movimientos, art_stk_ini];\r\n\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos); //Actualizo la tabla\r\n\r\n        //Despues de cargar un nuevo item, se limpian los campos del formulario.\r\n        this.form.get('articulo').setValue('')\r\n        this.form.get('unidadmedida').setValue('')\r\n        this.form.get('cantidad').setValue('')\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.stk_movimientos = this.stk_movimientos.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos)\r\n    }\r\n\r\n    newForm() {\r\n        let fecha_hora = this.datePipe.transform(new Date(), 'yyyy-MM-dd HH:mm:ss');\r\n        this.stock_inicial ? this.stock_inicial.fecha_hora = this.datePipe.transform(this.stock_inicial.fecha_hora, 'yyyy-MM-dd') : '';\r\n\r\n        if (this.stock_inicial) {                                       //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.stk_movimientos = this.stock_inicial.stkMovimientos\r\n            this.dataSource = new MatTableDataSource(this.stk_movimientos)\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial ? this.stock_inicial.fecha_hora : this.datePipe.transform(fecha_hora, 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial ? this.stock_inicial.hora : this.datePipe.transform(fecha_hora, 'HH:mm:ss')), Validators.required),\r\n            deposito: new FormControl((this.stock_inicial ? this.stock_inicial.iddeposito : ''), Validators.required),\r\n            articulo: new FormControl((''),),\r\n            unidadmedida: new FormControl((''),),\r\n            cantidad: new FormControl((''),),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), Validators.required)\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.stk_movimientos.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if(articulos.length === 0){\r\n                return alert('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            this.stock_inicial = {\r\n                ...this.stock_inicial,\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial.idstockinicial) {\r\n                this._stockInicialService.updateStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-192 sm:w-192 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-2/5\">\r\n                <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" />\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" class=\"w-1/5\">\r\n                <mat-label>Hora</mat-label>\r\n                <input matInput formControlName=\"hora\" type=\"time\"/>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" class=\"w-1/5\">\r\n                <mat-label>Usuario</mat-label>\r\n                <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n            </mat-form-field>\r\n        </div>\r\n        <mat-form-field appearance='outline' class=\"w-1/2\">\r\n            <mat-label>Depósitos</mat-label>\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option *ngFor=\"let deposito of depositos\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Articulos</mat-label>\r\n                <mat-select (ngModelChange)=\"seleccionArticulo($event)\" formControlName=\"articulo\">\r\n                    <mat-option *ngFor=\"let articulo of articulos\"\r\n                        [value]=\"articulo.idarticulo\">{{articulo.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>UM</mat-label>\r\n                <mat-select formControlName=\"unidadmedida\">\r\n                    <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                        [value]=\"um.idunidadmedida\">{{um.um.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                <mat-label>Cantidad</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"cantidad\">\r\n            </mat-form-field>\r\n            <button mat-mini-fab color=\"primary\" aria-label=\"icon\" (click)=\"addArticulo()\">\r\n                <mat-icon>add</mat-icon>\r\n            </button>\r\n        </div>\r\n        <!-- Grilla -->\r\n        <div class=\"px-4 pr-2 pl-2 overflow-y-auto max-h-[150px] mb-4\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 mb-5 shadow-lg'>\r\n                <ng-container matColumnDef='articulo'>\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        Articulo</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{articulo.idarticulo0.descripcion}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='codigointerno'>\r\n                    <th mat-header-cell *matHeaderCellDef>Código interno</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.idarticulo0.codigo_interno}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='cantidad'>\r\n                    <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.cantidad}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='unidadmedida'>\r\n                    <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.idunidadmedida0.descripcion }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='acciones'>\r\n                    <th mat-header-cell *matHeaderCellDef>Acciones</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                            <mat-icon color=\"warn\">delete</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n            </table>\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" class=\"mt-2\">\r\n            <mat-label>Observaciones</mat-label>\r\n            <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='rounded-sm' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { IDeposito } from '../../depositos/models/deposito';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n    usuarios: IUsuario[] = [];\r\n    filterDeposito: IDeposito[] = [];\r\n    filterUsuarios: any = [];\r\n    filterFechas: any = [];\r\n\r\n    columns = ['fecha', 'hora', 'responsable', 'deposito', 'acciones']\r\n\r\n    form: FormGroup;\r\n\r\n    //campo del buscador\r\n    search_control: FormControl = new FormControl('');\r\n\r\n    @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n    // MatPaginator atributos\r\n    totalRows = 0;\r\n    pageSize = 25;\r\n    currentPage = 0;\r\n    pageSizeOptions: number[] = [5, 10, 25, 50, 100];\r\n    // MatPaginator Output\r\n    pageEvent: PageEvent;\r\n\r\n    //variable auxiliar para el orden de listado\r\n    sortValue: string = 'desc';\r\n\r\n    constructor(\r\n        private stockInicialService: StockInicialService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getStockInicial();\r\n        this.newForm();\r\n        this._listenCambios();\r\n    }\r\n\r\n    _listenCambios() {\r\n        // funcion que escucha los cambios del buscador para filtrar\r\n        // this.search_control.valueChanges\r\n        //     .pipe(\r\n        //         debounceTime(300),\r\n        //         distinctUntilChanged(),\r\n        //     )\r\n        //     .subscribe(() => {\r\n        //         this._filterStocksIniciales()\r\n        //     });\r\n\r\n        // funcion que escucha los cambios de los selectores para filtrar\r\n        this.form.valueChanges\r\n            .pipe(\r\n                debounceTime(300),\r\n                distinctUntilChanged(),\r\n            )\r\n            .subscribe(() => {\r\n                this._filterStocksIniciales()\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Formulario de filtros\r\n     */\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            filtroFechaInicio: new FormControl(('')),\r\n            filtroFechaFin: new FormControl(('')),\r\n            filtroUsuario: new FormControl(('')),\r\n            filtroDeposito: new FormControl(('')),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion para limpiar los filtros de rango de fechas\r\n     */\r\n    limpiarFechas() {\r\n        this.form.get('filtroFechaInicio').setValue(null);\r\n        this.form.get('filtroFechaFin').setValue(null);\r\n    }\r\n\r\n    /**\r\n     * Esta funcion sirve para separar la hora de la fecha asi se pueden manipular de forma separada.\r\n     * @param data son todos los items que devuelve el servicio.\r\n     */\r\n    getHora(data) {\r\n        //Se usa este forEach para poder modificar la hora y mostrarla por separado en la grilla.\r\n        data.list.forEach((stk_ini) => {\r\n            let fh = new Date(stk_ini.fecha_hora);\r\n            stk_ini.hora = `${fh.getHours()}:${String(fh.getMinutes()).padStart(2, '0')}:${String(fh.getSeconds()).padStart(2, '0')}`;\r\n            this.stockInicial.push(stk_ini);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n     */\r\n    getUsuarios(stk_list) {\r\n        stk_list.forEach((stk_ini) => {\r\n            const existeUsuario = this.filterUsuarios.find(user => user.codigo === stk_ini.usuario.codigo);\r\n            if (!existeUsuario) {\r\n                let usuario = { codigo: stk_ini.usuario.codigo, nick: stk_ini.usuario.nick }\r\n                this.filterUsuarios.push(usuario);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para listas los depositos en el filtro de grilla.\r\n     */\r\n    getDepositos(stk_list) {\r\n        stk_list.forEach((stk_ini) => {\r\n            const existeDeposito = this.filterDeposito.find(deposito => deposito.iddeposito === stk_ini.deposito.iddeposito);\r\n            if (!existeDeposito) {\r\n                let deposito = stk_ini.deposito\r\n                this.filterDeposito.push(deposito);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion realiza el filtrado desde el front sobre el rango de fechas seleccionado en el filtro.\r\n     */\r\n    _filterFechas(stk_list: any[]) {\r\n        this.filterFechas = []\r\n        // Obtener las fechas de inicio y fin del formulario y formatearlas\r\n        let fh_inicio = this.datePipe.transform(this.form.get('filtroFechaInicio').value, 'yyyy-MM-dd HH:mm:ss');\r\n        let fh_fin = this.datePipe.transform(this.form.get('filtroFechaFin').value, 'yyyy-MM-dd HH:mm:ss');\r\n\r\n        // Iterar sobre el arreglo de fechas iniciales\r\n        stk_list.forEach((stk_ini) => {\r\n            const existeFecha = this.filterFechas.find(item => item.fecha_hora === stk_ini.fecha_hora);\r\n            if (!existeFecha) {\r\n                if (stk_ini.fecha_hora >= fh_inicio && stk_ini.fecha_hora <= fh_fin) {\r\n                    this.filterFechas.push(stk_ini);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this.filterFechas\r\n    }\r\n\r\n    /**\r\n     *  -Funcion en el componente.-\r\n     * - Espera que se consulten los items del backend para almacenarlos en una variable.\r\n     * - Teniendo la respuesta del backend en una variable, llama a la funcion 'getData...' pasandole por parametro los items.\r\n     * - Le envia el filtro y el paginado al servicio.\r\n     * @param filter Recibe los valores que haya tomado el filtro en la grilla.\r\n     */\r\n    async getStockInicial(filter?: any) {\r\n        const paginado = { pagination: 1, perpage: this.pageSize, currentPage: this.currentPage + 1 };\r\n        const stocks_iniciales = await firstValueFrom(this.stockInicialService.getStockInicial({ paginado, filter }));\r\n        this.getDataStocksIniciales(stocks_iniciales);\r\n    }\r\n\r\n    /**\r\n     *  -Funcion en el componente-\r\n     * - Esta funcion toma los datos que se la pasan por parametro para crear una tabla con AngularMaterial.\r\n     * @param data En data se almacenan los fondos.\r\n     */\r\n    async getDataStocksIniciales(data) {\r\n        new Promise(async (resolve) => {\r\n            this.getHora(data)\r\n            this.getUsuarios(this.stockInicial);\r\n            this.getDepositos(this.stockInicial)\r\n            if(this.form.get('filtroFechaInicio').value && this.form.get('filtroFechaFin').value){\r\n                data.list = this._filterFechas(data.list)\r\n            }\r\n\r\n            if (!!this.paginator) {\r\n                this.paginator.pageIndex = this.currentPage;\r\n                this.paginator.length = data['totalCount'];\r\n            }\r\n            this.dataSource = new MatTableDataSource(data.list);\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * -Funcion en el componente-\r\n     * * Setea la nueva cantidad de items que se quiere mostrar por pagina a las variables del componente y asi actualizar la pagina con la nueva cantidad.\r\n     * @param event Es la modificacion en el template de cuantos items se quiere mostrar por pagina.\r\n     */\r\n    actualizarPagina(event: PageEvent) {\r\n        this.pageSize = event.pageSize;\r\n        this.currentPage = event.pageIndex;\r\n        this.getStockInicial();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el componente\r\n     * Esta funcion toma los valores que tenga el formulario de filtro y\r\n     * los encapsula en una constante para pasarla como parametro para obtener el listado de items. \r\n     * @const payload \r\n     */\r\n    _filterStocksIniciales($event?: any) {\r\n        if ($event) { this.sortValue = $event.direction }\r\n        const payload = {\r\n            usuario: this.form.get('filtroUsuario').value,\r\n            deposito: this.form.get('filtroDeposito').value,\r\n            sort: this.sortValue\r\n        }\r\n        this.getStockInicial(payload);\r\n    }\r\n\r\n\r\n    saveStockInicial(documentRef: MatButton) {\r\n        this.dialogo\r\n            .open(SaveComponent, {})\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: response => {\r\n                    if (response) {\r\n                        this.getStockInicial();\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n\r\n    updateStockInicial(documentRef: MatButton, stock_inicial: IStockInicial) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: stock_inicial })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: response => {\r\n                    if (response) {\r\n                        this._filterStocksIniciales()\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion elimina un item.\r\n     * @param documentRef \r\n     * @param stock_inicial \r\n     */\r\n    deleteStockInicial(stock_inicial: IStockInicial) {\r\n        this.confirm.open({\r\n            title: \"Eliminar stock inicial\",\r\n            message: \"¿Desea eliminar el stock inicial: \" + stock_inicial.fecha_hora + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this.stockInicialService.deleteStockInicial(stock_inicial.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock Inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this._filterStocksIniciales()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"w-full\">\r\n    <!-- Filtro -->\r\n    <div class=\"bg-slate-100 w-full p-2 \">\r\n        <form [formGroup]=\"form\"\r\n            class=\"bg-white shadow-md w-full px-4 py-4 rounded-lg flex justify-center items-center\">\r\n            <!--Buscador-->\r\n            <!-- <mat-form-field appearance=\"outline\" class=\" w-2/5 ml-2\">\r\n                <mat-label class=\"text-gray-700\"> Descripción</mat-label>\r\n                <input matInput [formControl]=\"search_control\" class=\"text-black w-full\" placeholder=\"Buscar\"\r\n                    autocomplete=\"off\" #buscar_descripcion>\r\n            </mat-form-field> -->\r\n\r\n            <!-- Fecha inicio-->\r\n            <mat-form-field appearance=\"outline\" class=\"w-1/3 ml-2\">\r\n                <mat-label>Rango de fechas</mat-label>\r\n                <mat-date-range-input [rangePicker]=\"picker\">\r\n                    <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                    <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n                </mat-date-range-input>\r\n                <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-date-range-picker #picker></mat-date-range-picker>\r\n                <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                    *ngIf=\"form.get('filtroFechaInicio').value || form.get('filtroFechaFin').value\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n\r\n            <!-- Deposito -->\r\n            <mat-form-field appearance='outline' class=\" w-1/3 ml-2\">\r\n                <mat-label>Deposito</mat-label>\r\n                <mat-select formControlName=\"filtroDeposito\" (change)=\"_filterStocksIniciales()\">\r\n                    <mat-option [value]=\"\">Todos</mat-option>\r\n                    <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                        [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!-- Usuario -->\r\n            <mat-form-field appearance='outline' class=\" w-1/3 ml-2\">\r\n                <mat-label>Usuario</mat-label>\r\n                <mat-select formControlName=\"filtroUsuario\" (change)=\"_filterStocksIniciales()\">\r\n                    <mat-option>Todos</mat-option>\r\n                    <mat-option *ngFor=\"let usuario of filterUsuarios\" [value]=\"usuario.codigo\">{{usuario.nick}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </form>\r\n    </div>\r\n    <!-- Grilla -->\r\n    <div class=\"px-4 pr-2 pl-2\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"_filterStocksIniciales($event)\"\r\n            class='w-full mt-1 mb-18 shadow-lg'>\r\n            <ng-container matColumnDef='fecha'>\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by fecha\">Fecha</th>\r\n                <td mat-cell *matCellDef='let stock_inicial'>\r\n                    {{stock_inicial.fecha_hora | date: 'dd/MM/yyyy'}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='hora'>\r\n                <th mat-header-cell *matHeaderCellDef>Hora</th>\r\n                <td mat-cell *matCellDef='let stock_inicial'>\r\n                    {{stock_inicial.hora}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='responsable'>\r\n                <th mat-header-cell *matHeaderCellDef>Responsable</th>\r\n                <td mat-cell *matCellDef='let stock_inicial'>\r\n                    {{stock_inicial.usuario.nick}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='deposito'>\r\n                <th mat-header-cell *matHeaderCellDef>Depósito</th>\r\n                <td mat-cell *matCellDef='let stock_inicial'>\r\n                    {{stock_inicial.deposito.descripcion}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='acciones'>\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <button mat-header-cell mat-button (click)=\"saveStockInicial(save)\" #save\r\n                        class=\" bg-blue-500  text-white rounded-md\">Crear</button>\r\n                </th>\r\n                <td mat-cell *matCellDef='let stock_inicial'>\r\n                    <button mat-icon-button (click)=\"updateStockInicial(edit, stock_inicial)\" #edit>\r\n                        <mat-icon class=\"text-cyan-700\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button (click)=\"deleteStockInicial(stock_inicial)\" #delete>\r\n                        <mat-icon color=\"warn\">delete</mat-icon>\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n            <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n        </table>\r\n\r\n        <mat-paginator #paginator [length]=\"totalRows\" [pageIndex]=\"currentPage\" [pageSize]=\"pageSize\"\r\n            [pageSizeOptions]=\"pageSizeOptions\" (page)=\"actualizarPagina($event)\" aria-label=\"Select page\"\r\n            class=\"fixed bottom-0  w-full z-50\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IStockInicial, ResponseStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<ResponseStockInicial[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<ResponseStockInicial[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.body.token,\r\n                    subject.next({\r\n                        'list': resp.body.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos() {\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulos}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getDepositos() {\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + stock_inicial.idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n     */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }","// @Component({\r\n//     selector: 'app-save-stock-inicial',\r\n//     templateUrl: './save.component.html',\r\n//     styleUrls: ['./save.component.scss'],\r\n//     providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n// })\r\n\r\n\r\n/**\r\n * Formateo de fecha\r\n */\r\nexport const MY_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: 'mm/dd/yyyy',\r\n    },\r\n    display: {\r\n        dateInput: 'dd/MM/yyyy',\r\n        monthYearLabel: 'MMM yyyy',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM yyyy',\r\n    },\r\n};"],"names":["FormControl","FormGroup","Validators","firstValueFrom","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","deposito_r16","iddeposito","ɵɵadvance","ɵɵtextInterpolate","descripcion","articulo_r17","idarticulo","um_r18","idunidadmedida","um","ɵɵtextInterpolate1","articulo_r19","idarticulo0","articulo_r20","codigo_interno","articulo_r21","cantidad","articulo_r22","idunidadmedida0","ɵɵlistener","SaveComponent_td_62_Template_button_click_1_listener","restoredCtx","ɵɵrestoreView","_r26","articulo_r23","$implicit","ctx_r25","ɵɵnextContext","ɵɵresetView","deleteArticulo","ɵɵelement","SaveComponent","constructor","data","_stockInicialService","datePipe","alert","dialogRef","columns","unidades_de_medida","stk_movimientos","dataSource","stock_inicial","title","idstockinicial","user","JSON","parse","sessionStorage","getItem","ngOnInit","newForm","getDepositos","getArticulos","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","_x","apply","arguments","_this2","depositos","_ref2","_x2","getUnidadesDeMedidaArticulos","_this3","unidadesDeMedida","_ref3","_x3","seleccionArticulo","$event","addArticulo","articulo","find","form","get","value","unidadmedida","art_stk_ini","setValue","filter","item","fecha_hora","transform","Date","stkMovimientos","name","fecha","required","hora","deposito","observaciones","onSubmit","valid","warning","fh","map","objeto","length","idusuario","id","updateStockInicial","subscribe","next","close","saveStockInicial","onCloseMenu","ɵɵdirectiveInject","i1","StockInicialService","i2","DatePipe","i3","AppAlertService","i4","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","SaveComponent_Template","rf","ctx","SaveComponent_Template_button_click_5_listener","ɵɵtemplate","SaveComponent_mat_option_27_Template","SaveComponent_Template_mat_select_ngModelChange_32_listener","SaveComponent_mat_option_33_Template","SaveComponent_mat_option_38_Template","SaveComponent_Template_button_click_43_listener","ɵɵelementContainerStart","SaveComponent_th_49_Template","SaveComponent_td_50_Template","ɵɵelementContainerEnd","SaveComponent_th_52_Template","SaveComponent_td_53_Template","SaveComponent_th_55_Template","SaveComponent_td_56_Template","SaveComponent_th_58_Template","SaveComponent_td_59_Template","SaveComponent_th_61_Template","SaveComponent_td_62_Template","SaveComponent_tr_63_Template","SaveComponent_tr_64_Template","SaveComponent_Template_button_click_70_listener","_r0","MatPaginator","debounceTime","distinctUntilChanged","StockInicialComponent_button_12_Template_button_click_0_listener","_r18","ctx_r17","limpiarFechas","deposito_r19","usuario_r20","codigo","nick","ɵɵpipeBind2","stock_inicial_r21","stock_inicial_r22","stock_inicial_r23","usuario","stock_inicial_r24","StockInicialComponent_th_42_Template_button_click_1_listener","_r27","_r25","ɵɵreference","ctx_r26","StockInicialComponent_td_43_Template_button_click_1_listener","_r32","stock_inicial_r28","_r29","ctx_r31","StockInicialComponent_td_43_Template_button_click_5_listener","ctx_r33","deleteStockInicial","StockInicialComponent","stockInicialService","dialogo","confirm","stockInicial","usuarios","filterDeposito","filterUsuarios","filterFechas","search_control","totalRows","pageSize","currentPage","pageSizeOptions","sortValue","getStockInicial","_listenCambios","valueChanges","pipe","_filterStocksIniciales","filtroFechaInicio","filtroFechaFin","filtroUsuario","filtroDeposito","getHora","forEach","stk_ini","getHours","String","getMinutes","padStart","getSeconds","push","getUsuarios","stk_list","existeUsuario","existeDeposito","_filterFechas","fh_inicio","fh_fin","existeFecha","paginado","pagination","perpage","stocks_iniciales","getDataStocksIniciales","paginator","pageIndex","actualizarPagina","event","direction","payload","sort","documentRef","open","afterClosed","response","message","dismissible","actions","show","color","label","cancel","res","success","error","console","MatDialog","FuseConfirmationService","i5","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_button_12_Template","StockInicialComponent_Template_mat_select_change_16_listener","StockInicialComponent_mat_option_19_Template","StockInicialComponent_Template_mat_select_change_23_listener","StockInicialComponent_mat_option_26_Template","StockInicialComponent_Template_table_matSortChange_28_listener","StockInicialComponent_th_30_Template","StockInicialComponent_td_31_Template","StockInicialComponent_th_33_Template","StockInicialComponent_td_34_Template","StockInicialComponent_th_36_Template","StockInicialComponent_td_37_Template","StockInicialComponent_th_39_Template","StockInicialComponent_td_40_Template","StockInicialComponent_th_42_Template","StockInicialComponent_td_43_Template","StockInicialComponent_tr_44_Template","StockInicialComponent_tr_45_Template","StockInicialComponent_Template_mat_paginator_page_46_listener","environment","Subject","http","_authService","f","subject","stock","observe","resp","accessToken","body","token","result","headers","asObservable","articulo_unidad_medidas","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","JedsMenuService","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}