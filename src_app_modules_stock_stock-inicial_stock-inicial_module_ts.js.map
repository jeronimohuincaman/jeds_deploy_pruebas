{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, firstValueFrom, map, startWith } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.title = 'Añadir articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getArticulos();\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = unidadesDeMedida.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        this.form.get($event).setValue('');\r\n\r\n        if ($event == 'articulo') {\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''),Validators.required),\r\n            unidadmedida: new FormControl((''),[Validators.required]),\r\n            cantidad: new FormControl((''),Validators.required),\r\n        });\r\n\r\n        this.form.get('unidadmedida').disable()\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form.get('articulo').value,\r\n                unidad_medida: this.form.get('unidadmedida').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                unidadmedida_descripcion: unidadmedida.um.descripcion\r\n            }\r\n            this.onCloseMenu(articulo)\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div>\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('cantidad')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('cantidad').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                            [value]=\"um.idunidadmedida\">{{um.um.descripcion}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Añadir\r\n        </button>\r\n    </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-stock-inicial',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _stockInicialService: StockInicialService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      // activo: new FormControl(-1),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    \r\n  }\r\n\r\nresetFilters() {\r\n  this.formFilters.reset({\r\n    filtroFechaInicio: '',\r\n    filtroFechaFin: '',\r\n    usuario: -1,\r\n    deposito: -1,\r\n  });\r\n}\r\n\r\nonCloseMenu(data: any = null) {\r\n  if(data){\r\n    data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n    data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n  }\r\n  this._menuService.close(data);\r\n}\r\n\r\n/**\r\n* Funcion para limpiar los filtros de rango de fechas\r\n*/\r\nlimpiarFechas() {\r\n  this.formFilters.get('filtroFechaInicio').setValue('');\r\n  this.formFilters.get('filtroFechaFin').setValue('');\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n */\r\ngetUsuarios() {\r\n  let stk_list = this.data.data;\r\n  stk_list.forEach((stk_ini) => {\r\n    const existeUsuario = this.filterUsuarios.find(user => user.codigo_usuario === stk_ini.codigo_usuario);\r\n    if (!existeUsuario) {\r\n      let usuario = { codigo_usuario: stk_ini.codigo_usuario, nick_usuario: stk_ini.nick_usuario }\r\n      this.filterUsuarios.push(usuario);\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los depositos en el filtro de grilla.\r\n */\r\nasync getDepositos() {\r\n  const stk_list = await firstValueFrom(this._stockInicialService.getDepositos(true));\r\n  this.filterDeposito = stk_list.list;\r\n}\r\n\r\n\r\n/**\r\n * Esta funcion sirve para separar la hora de la fecha asi se pueden manipular de forma separada.\r\n * @param data son todos los items que devuelve el servicio.\r\n */\r\n// getHora(data) {\r\n//   //Se usa este forEach para poder modificar la hora y mostrarla por separado en la grilla.\r\n//   data.list.forEach((stk_ini) => {\r\n//     let fh = new Date(stk_ini.fecha_hora);\r\n//     stk_ini.hora = `${fh.getHours()}:${String(fh.getMinutes()).padStart(2, '0')}:${String(fh.getSeconds()).padStart(2, '0')}`;\r\n//     this.stockInicial.push(stk_ini);\r\n//   });\r\n// }\r\n\r\n\r\n/**\r\n * Esta funcion realiza el filtrado desde el front sobre el rango de fechas seleccionado en el filtro.\r\n */\r\n// _filterFechas(stk_list: any[]) {\r\n//   this.filterFechas = []\r\n//   // Obtener las fechas de inicio y fin del formulario y formatearlas\r\n//   let fh_inicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd HH:mm:ss');\r\n//   let fh_fin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd HH:mm:ss');\r\n\r\n//   // Iterar sobre el arreglo de fechas iniciales\r\n//   stk_list.forEach((stk_ini) => {\r\n\r\n//     let item_fecha_hora = `${stk_ini.fecha} ${stk_ini.hora}`;\r\n\r\n//     const existeFecha = this.filterFechas.find(item => item.fecha_hora === item_fecha_hora);\r\n//     if (!existeFecha) {\r\n//       if (item_fecha_hora >= fh_inicio && item_fecha_hora <= fh_fin) {\r\n//         this.filterFechas.push(stk_ini);\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   return this.filterFechas\r\n// }\r\n\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario of filterUsuarios\" [value]=\"usuario.codigo_usuario\">{{usuario.nick_usuario}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, firstValueFrom, map, startWith } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    stk_movimientos: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        /* this.user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.exist()\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.stock_inicial?.idstockinicial) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    \r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._stockInicialService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getMovimientos(idstockinicial): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const movimientos = await firstValueFrom(this._stockInicialService.getMovimientos(idstockinicial))\r\n            this.stk_movimientos = movimientos.list;\r\n            resolve(this.stk_movimientos);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addArticulo() {\r\n        this.dialogo\r\n        .open(AddArticuloComponent, { panelClass: 'ayuda-dialog' })\r\n        .afterClosed()\r\n        .subscribe({\r\n            next: (res) => {                \r\n                let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                    idarticulo: res.articulo.idarticulo,\r\n                    cantidad: res.cantidad,\r\n                    idunidadmedida: res.unidad_medida,\r\n                    descripcion_articulo: res.articulo.descripcion,\r\n                    descripcion_um: res.unidadmedida_descripcion,\r\n                    codigo_interno_articulo: res.articulo.codigo_interno\r\n                }                \r\n                this.stk_movimientos = [...this.stk_movimientos, art_stk_ini];\r\n                this.dataSource = new MatTableDataSource(this.stk_movimientos); //Actualizo la tabla\r\n\r\n                if (this.stk_movimientos.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.stk_movimientos = this.stk_movimientos.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos);\r\n\r\n        if (this.stk_movimientos.length === 0) {\r\n            this.form.get('deposito').enable();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input: string) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.stock_inicial ? this.stock_inicial.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.stock_inicial) { //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.getMovimientos(this.stock_inicial.idstockinicial).then((res) => {\r\n                this.stk_movimientos = res;\r\n                this.dataSource = new MatTableDataSource(res);\r\n                if (this.stk_movimientos.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial?.hora ? this.stock_inicial.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.stock_inicial ? this.stock_inicial.descripcion_deposito : ''), Validators.required),\r\n            articulo: new FormControl((''),),\r\n            unidadmedida: new FormControl((''),),\r\n            cantidad: new FormControl((''),),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), Validators.required)\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.stk_movimientos.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (articulos.length === 0) {\r\n                return alert('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            this.stock_inicial = {\r\n                ...this.stock_inicial,\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial.idstockinicial) {\r\n                this._stockInicialService.updateStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"shadow-md mb-3\">\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>Depósitos</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && stk_movimientos.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef>Código interno</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef> <button mat-mini-fab color=\"primary\" matTooltip='Añadir Articulo' aria-label=\"icon\"\r\n                                class=\"rounded-full\" (click)=\"addArticulo()\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button></th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n            </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\n\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'acciones']\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion_deposito'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n        deposito: -1,\r\n        usuario: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_inicials + '?sort=-idstockinicial';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n    stkMovimientos: [] = [];\r\n\r\n    constructor(\r\n        private _stockInicialService: StockInicialService,\r\n        private _menuService: JedsMenuService,\r\n        private _searchService: SearchService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n* Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n* @param origin \r\n*/\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        // this.extraParams += this.filter.activo != -1 ? \"&filter[activo]=\" + this.filter.activo : '';\r\n                        this.extraParams = this.filter.deposito != -1 ? \"&filter[iddeposito]=\" + this.filter.deposito : '';\r\n                        this.extraParams += this.filter.usuario != -1 ? \"&filter[codigo_usuario]=\" + this.filter.usuario : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"&filter[fecha][gte]=\" + this.filter.filtroFechaInicio : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"&filter[fecha][lte]=\" + this.filter.filtroFechaFin : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateStockInicial(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteStockInicial(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveStockInicial() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateStockInicial(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteStockInicial(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Stock inicial \" + event.params.data.fecha,\r\n            message: \"¿Desea eliminar el Stock inicial: \" + event.params.data.fecha + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._stockInicialService.deleteStockInicial(event.params.data.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            alert(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\nngOnDestroy(): void {\r\n    this._searchService.unsubscribe();\r\n}\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 \">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Stock Inicial'\r\n                (click)=\"saveStockInicial()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.body.token,\r\n                    subject.next({\r\n                        'list': resp.body.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getMovimientos(idstockinicial: number) {\r\n        let f = `?filter[idstockinicial]=${idstockinicial}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos() {\r\n        let f = '?filter[activo]=1&pagination=1&per-page=10&page=1'\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + stock_inicial.idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n     */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule,\r\n        TablaDinamicaModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }"],"names":["FormControl","FormGroup","Validators","firstValueFrom","map","startWith","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","articulo_r5","ɵɵadvance","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_19_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarCasillero","AddArticuloComponent_button_24_Template_button_click_0_listener","_r9","ctx_r8","um_r10","idunidadmedida","ɵɵtextInterpolate","um","AddArticuloComponent","constructor","data","_stockInicialService","datePipe","alert","dialogRef","dialogo","columns","unidades_de_medida","dataSource","title","ngOnInit","newForm","getArticulos","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","pipe","value","_filterArticulos","_x","apply","arguments","filterValue","toString","toLowerCase","filter","articulo","includes","getTextArticulo","getUnidadesDeMedidaArticulos","idarticulo","_this2","unidadesDeMedida","_ref2","_x2","seleccionArticulo","$event","enable","setValue","disable","required","unidadmedida","cantidad","onSubmit","valid","warning","find","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","StockInicialService","i2","DatePipe","i3","AppAlertService","i4","MatDialogRef","MatDialog","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_Template_input_ngModelChange_14_listener","ɵɵtemplate","AddArticuloComponent_mat_option_17_Template","AddArticuloComponent_button_19_Template","ɵɵelement","AddArticuloComponent_button_24_Template","AddArticuloComponent_mat_option_29_Template","AddArticuloComponent_Template_button_click_31_listener","_r0","ɵɵpipeBind1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r5","ctx_r4","limpiarFechas","deposito_r6","iddeposito","usuario_r7","codigo_usuario","ɵɵtextInterpolate1","nick_usuario","FilterMenuComponent","_menuService","usuarios","filterDeposito","filterUsuarios","filterFechas","stockInicial","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","patchValue","resetFilters","reset","transform","stk_list","forEach","stk_ini","existeUsuario","user","push","JedsMenuService","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_Template_button_click_37_listener","FilterMenuComponent_Template_button_click_40_listener","getRawValue","deposito_r16","SaveComponent_button_32_Template_button_click_0_listener","_r18","ctx_r17","articulo_r19","descripcion_articulo","articulo_r20","codigo_interno_articulo","articulo_r21","articulo_r22","descripcion_um","SaveComponent_th_53_Template_button_click_1_listener","_r24","ctx_r23","addArticulo","SaveComponent_td_54_Template_button_click_1_listener","restoredCtx","_r28","articulo_r25","$implicit","ctx_r27","deleteArticulo","SaveComponent","stk_movimientos","stock_inicial","idstockinicial","JSON","parse","localStorage","getItem","exist","_filterDepositos","depositos","getTextDeposito","option","Depositos","filteredDepositos","getMovimientos","movimientos","open","panelClass","afterClosed","subscribe","next","res","art_stk_ini","length","item","input","dia","mes","anio","fecha","split","then","name","Date","hora","descripcion_deposito","observaciones","fh","objeto","idusuario","id","fecha_hora","updateStockInicial","saveStockInicial","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_mat_option_30_Template","SaveComponent_button_32_Template","ɵɵelementContainerStart","SaveComponent_th_41_Template","SaveComponent_td_42_Template","ɵɵelementContainerEnd","SaveComponent_th_44_Template","SaveComponent_td_45_Template","SaveComponent_th_47_Template","SaveComponent_td_48_Template","SaveComponent_th_50_Template","SaveComponent_td_51_Template","SaveComponent_th_53_Template","SaveComponent_td_54_Template","SaveComponent_tr_55_Template","SaveComponent_tr_56_Template","SaveComponent_Template_button_click_58_listener","_r1","EventEmitter","debounceTime","distinctUntilChanged","environment","TablaDinamicaComponent","StockInicialComponent","_searchService","confirm","router","_headerTextService","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","activo","extraParams","parametrosActualizados","env","stock","view_stock_inicials","search","stkMovimientos","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","_elementRef","getElementosExistentes","generarAcciones","deleteStockInicial","params","autoFocus","message","dismissible","actions","show","color","label","cancel","success","renderTabla","error","console","ngOnDestroy","unsubscribe","SearchService","i5","FuseConfirmationService","i6","i7","i8","Router","i9","HeaderTextService","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_Template_button_click_3_listener","StockInicialComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","Subject","http","_authService","getStockInicial","sort","f","paginado","pagination","perpage","currentPage","subject","observe","resp","accessToken","body","token","result","asObservable","view_stock_movimientos","articulo_unidad_medidas","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","TablaDinamicaModule","MatAutocompleteModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}