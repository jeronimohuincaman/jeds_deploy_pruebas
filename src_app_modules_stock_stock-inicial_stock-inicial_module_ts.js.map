{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-stock-inicial',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuario: Observable<IUsuario[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterFechas: any = [];\r\n  stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService, \r\n    private datePipe: DatePipe, \r\n    private _stockInicialService: StockInicialService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      // activo: new FormControl(-1),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    \r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if(data){\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._stockInicialService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuario = this.formFilters.controls['usuario'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._stockInicialService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario\" matInput [matAutocomplete]=\"autoUsuario\" formControlName=\"usuario\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuario=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario of filteredUsuario | async\" [value]=\"usuario.nick\">\r\n                    {{usuario.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, map, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    articulos_list = [];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    deposito_default = 0;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n\r\n        // Escuchamos los cambios en el control de 'articulo' para filtrar mientras escribe\r\n        this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n            debounceTime(300),  // Evita demasiadas llamadas consecutivas\r\n            distinctUntilChanged(), // Solo procede si el valor cambia\r\n            switchMap((value) => {\r\n                const idarticulo = typeof value === 'object' ? value.idarticulo : null;\r\n                const filterLike = typeof value === 'string' ? value : null;\r\n                return this._stockInicialService.getArticulos(idarticulo, filterLike);\r\n            })\r\n        ).subscribe(response => {\r\n            this.filteredArticulos = response.list;\r\n        });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.stock_inicial ? this.stock_inicial.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.stock_inicial) { //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.getItems(this.stock_inicial.idstockinicial).then((items) => {\r\n                // Mapeo la cantidad\r\n                this.mov_art_list = items.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        stock: m.stock_minimo_articulo\r\n                    }\r\n                });\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial?.hora ? this.stock_inicial.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.stock_inicial ? { iddeposito: this.stock_inicial.iddeposito, descripcion: this.stock_inicial.descripcion_deposito } : ''), Validators.required),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), [Validators.maxLength(this.maxPalabras)])\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), [Validators.required, Validators.min(1)])\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var movimiento_articulo Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (this.form.get('deposito').value != '') {\r\n\r\n            if (movimiento) {\r\n                let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                    idarticulo: movimiento.articulo.idarticulo,\r\n                    cantidad: movimiento.cantidad,\r\n                    idunidadmedida: movimiento.unidad_medida,\r\n                    descripcion_articulo: movimiento.articulo.descripcion,\r\n                    descripcion_um: movimiento.unidadmedida_descripcion,\r\n                    codigo_interno: movimiento.articulo.codigo_interno\r\n                }\r\n                this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                }\r\n\r\n                // Actualizar validaciones según el estado de la grilla\r\n                this.updateFormValidators()\r\n\r\n                this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n                this.alert.success(\"Artículo añadido con éxito\");\r\n            }\r\n\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteMovimiento(articulo) {\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito').enable();\r\n        }\r\n\r\n        // Actualizar validaciones según el estado de la grilla\r\n        this.updateFormValidators();\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionItem($event, info?) {\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable();\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo);\r\n\r\n            // Muevo el foco al campo \"cantidad\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"cantidad\".\r\n            setTimeout(() => {\r\n                const cantidadField = document.querySelector('[formControlName=\"cantidad\"]') as HTMLInputElement;\r\n                cantidadField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        //Al seleccionar un deposito...\r\n        if ($event.iddeposito) {\r\n            this.form_carga_articulos.enable();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'deposito') {\r\n            this.form_carga_articulos.disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning('Por favor, Ingrese una cantidad mayor a cero');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe seleccionar un artículo');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form_carga_articulos.get('articulo').value,\r\n                unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                cantidad: this.form_carga_articulos.get('cantidad').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um\r\n            }\r\n\r\n            let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n\r\n            if (existeMovimiento) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya ha selecionado este articulo')\r\n            }\r\n\r\n            this.addMovimiento(articulo)\r\n        }\r\n\r\n        // Mueve el foco al campo \"articulo\" después de la carga\r\n        this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n        const articuloField = document.querySelector('[formControlName=\"articulo\"]') as HTMLInputElement;\r\n        articuloField?.focus();\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caractemovimiento.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: Number(objeto.cantidad),\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (articulos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            const payload = {\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial?.idstockinicial) {\r\n                let depo = this.depositos.find(d => d.iddeposito === this.form.get('deposito').value.iddeposito); //Hago esto porque cuando es una edicion me levanta el texto del deposito y, sino lo cambio durante la edicion, al persistr pincha porque le estoy enviando un string en vez de un number en 'iddeposito'.\r\n\r\n                payload['iddeposito'] = depo.iddeposito;\r\n\r\n                this._stockInicialService.updateStockInicial(payload, this.stock_inicial.idstockinicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n    * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n    */\r\n    etiquetaArticulo() {\r\n        let deposito = this.form.get('deposito').value;\r\n\r\n        if (!deposito) {\r\n            return this.alert.error('Debe seleccionar un depósito');\r\n        }\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._stockInicialService.getArticulos(idarticulo, null).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.stock_inicial?.idstockinicial) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.result;\r\n            this.articulos_list = this.articulos;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list.sort((a, b) => a.factor - b.factor).map(unidad => {\r\n                //Convierto en numero\r\n                unidad.factor = parseFloat(unidad.factor);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (unidad.factor === 1) {\r\n                    um_base = unidad.um.descripcion;\r\n                }\r\n\r\n                return { idunidadmedida: unidad.idunidadmedida, descripcion_um: unidad.um.descripcion, factor_um: unidad.factor, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._stockInicialService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.stock_inicial) {\r\n                this.form.get('deposito').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param idstockinicial \r\n     * @returns \r\n     */\r\n    async getItems(idstockinicial): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._stockInicialService.getItems(idstockinicial));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo?.idarticulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n     * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n     */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.required, Validators.min(1)]);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.min(1));\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Depósitos</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"dep\"\r\n                        (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #dep=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\" [disabled]=\"!form.get('deposito')?.value\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Cantidad</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'acciones']\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion_deposito'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n        deposito: -1,\r\n        usuario: '',\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_inicials + '?sort=-idstockinicial';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    stkMovimientos: [] = [];\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        private _menuService: JedsMenuService,\r\n        private _searchService: SearchService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (stock_inicial: IStockInicial) => stock_inicial.puede_modificar === true ? 'jedstion:editar' : '',\r\n                iconoAccionado: (stock_inicial: IStockInicial) => '',\r\n                iconoDeshabilitado: (stock_inicial: IStockInicial) => stock_inicial.puede_modificar === false ? 'jedstion:editar_disabled' : '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (stock_inicial: IStockInicial) => stock_inicial.puede_eliminar === true ? 'jedstion:eliminar' : '',\r\n                iconoAccionado: (stock_inicial: IStockInicial) => '',\r\n                iconoDeshabilitado: (stock_inicial: IStockInicial) => stock_inicial.puede_eliminar === false ? 'jedstion:eliminar_disabled' : '',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n* Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n* @param origin \r\n*/\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        // this.extraParams += this.filter.activo != -1 ? \"&filter[activo]=\" + this.filter.activo : '';\r\n                        this.extraParams = this.filter.deposito != -1 ? \"&filter[iddeposito]=\" + this.filter.deposito : '';\r\n                        this.extraParams += this.filter.usuario != '' ? \"&filter[nick_usuario]=\" + this.filter.usuario : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"&filter[fecha][gte]=\" + this.filter.filtroFechaInicio : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"&filter[fecha][lte]=\" + this.filter.filtroFechaFin : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                if (event.params.data.puede_modificar) {\r\n                    this.updateStockInicial(event);\r\n                }\r\n                break;\r\n            case 'eliminar':\r\n                if (event.params.data.puede_eliminar) {\r\n                    this.deleteStockInicial(event);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveStockInicial() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateStockInicial(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteStockInicial(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Stock inicial \" + event.params.data.fecha,\r\n            message: \"¿Desea eliminar el Stock inicial: \" + event.params.data.fecha + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._stockInicialService.deleteStockInicial(event.params.data.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveStockInicial()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Stock Inicial </span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getItems(idstockinicial?: number) {\r\n        let f = `?filter[idstockinicial]=${idstockinicial}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(idarticulo?: number, filterLike?: string) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        if (idarticulo) {\r\n            f += `&filter[idarticulo]=${idarticulo}`;\r\n        } else if (filterLike) {\r\n            f += `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}`;\r\n        }\r\n        \r\n        let subject = new Subject<any>();\r\n        this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        ).subscribe((resp: any) => {\r\n            this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n        });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUsuarios() {\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n    */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n    */\r\n    updateStockInicial(stock_inicial: IStockInicial, idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n    */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule,\r\n        TablaDinamicaModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","deposito_r8","iddeposito","ɵɵadvance","ɵɵtextInterpolate","descripcion","usuario_r9","nick","ɵɵtextInterpolate1","FilterMenuComponent","constructor","data","_menuService","_empresaService","datePipe","_stockInicialService","usuarios","filterDeposito","filterFechas","stockInicial","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","getDepositos","getUsuarios","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","filteredUsuario","controls","valueChanges","_filterUsuaurio","filterValue","toLowerCase","includes","_this2","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","EmpresaService","i3","DatePipe","i4","StockInicialService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_Template_button_click_41_listener","FilterMenuComponent_Template_button_click_44_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r4","ɵɵpipeBind1","EventEmitter","Validators","debounceTime","distinctUntilChanged","finalize","switchMap","takeWhile","tap","timer","MAT_DIALOG_DATA","MatTableDataSource","LectorQrComponent","ctx_r0","_alertConfig","type","showAlert","message","deposito_r22","SaveComponent_button_33_Template_button_click_0_listener","_r24","ctx_r23","limpiarCasillero","articulo_r25","ɵɵtextInterpolate2","codigo_interno","SaveComponent_button_44_Template_button_click_0_listener","_r27","ctx_r26","um_r28","factor_um","um_base","SaveComponent_mat_option_53_i_2_Template","idunidadmedida","descripcion_um","ctx_r9","movimiento_articulo_r31","ctx_r11","movimiento_articulo_r32","descripcion_articulo","ctx_r13","movimiento_articulo_r33","ctx_r15","movimiento_articulo_r34","cantidad","ctx_r17","SaveComponent_td_79_Template_button_click_1_listener","restoredCtx","_r38","movimiento_r35","$implicit","ctx_r37","deleteMovimiento","SaveComponent","alert","dialogRef","dialogo","columns","articulos_list","unidades_de_medida","mov_art_list","mov_art_list_deleted","maxPalabras","dataSource","creadoExitosamente","editadoExitosamente","deposito_default","stock_inicial","title","idstockinicial","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","newForm","exist","subscribeAlert","form_carga_articulos","idarticulo","filterLike","getArticulos","response","filteredArticulos","emitConfig","next","config","appearance","time","dia","mes","anio","fecha","split","getItems","then","items","m","parseFloat","codigo_interno_articulo","stock","stock_minimo_articulo","length","form","disable","enable","name","required","hora","descripcion_deposito","observaciones","maxLength","articulo","unidadmedida","min","updateFormValidators","addMovimiento","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","success","warning","item","seleccionItem","$event","info","getUnidadesDeMedidaArticulos","setTimeout","cantidadField","document","querySelector","focus","input","onCargar","key","preventDefault","valid","error","find","um","existeMovimiento","articuloField","onSubmit","isPalabraMaxLengthReached","fh","articulos","objeto","Number","payload","idusuario","id","fecha_hora","depo","depositos","d","updateStockInicial","emit","saveStockInicial","etiquetaArticulo","open","panelClass","componentInstance","sendObject","code","decodedText","parseInt","console","Promise","_ref","resolve","result","_filterArticulos","_x","apply","arguments","unidadesDeMedida","_ref2","sort","a","b","factor","unidad","_x2","option","_this3","Depositos","_ref3","depositoPorDefecto","filteredDepositos","_filterDepositos","_x3","_this4","_ref4","_x4","toString","getTextDeposito","getTextArticulo","getPalabrasLength","setValidators","clearValidators","updateValueAndValidity","AppAlertService","i5","MatDialogRef","MatDialog","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_ngModelChange_28_listener","SaveComponent_mat_option_31_Template","SaveComponent_button_33_Template","SaveComponent_Template_input_ngModelChange_40_listener","SaveComponent_mat_option_43_Template","SaveComponent_button_44_Template","SaveComponent_Template_button_click_46_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","SaveComponent_Template_mat_select_ngModelChange_52_listener","SaveComponent_mat_option_53_Template","SaveComponent_Template_mat_form_field_keydown_enter_55_listener","SaveComponent_Template_button_click_60_listener","ɵɵelementContainerStart","SaveComponent_th_66_Template","SaveComponent_td_67_Template","ɵɵelementContainerEnd","SaveComponent_th_69_Template","SaveComponent_td_70_Template","SaveComponent_th_72_Template","SaveComponent_td_73_Template","SaveComponent_th_75_Template","SaveComponent_td_76_Template","SaveComponent_th_78_Template","SaveComponent_td_79_Template","SaveComponent_tr_80_Template","SaveComponent_tr_81_Template","SaveComponent_div_82_Template","SaveComponent_Template_button_click_90_listener","_r2","_r5","tmp_22_0","ɵɵpureFunction1","_c0","environment","TablaDinamicaComponent","StockInicialComponent","_searchService","confirm","router","_headerTextService","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","activo","extraParams","parametrosActualizados","env","view_stock_inicials","search","stkMovimientos","setTitulo","nombre_boton","functionName","iconoAccion","puede_modificar","iconoAccionado","iconoDeshabilitado","puede_eliminar","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","_elementRef","getElementosExistentes","afterClosed","generarAcciones","params","deleteStockInicial","autoFocus","dismissible","actions","show","color","label","cancel","res","renderTabla","ngOnDestroy","unsubscribe","SearchService","i6","FuseConfirmationService","i7","i8","i9","Router","i10","HeaderTextService","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_Template_button_click_3_listener","StockInicialComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","http","_authService","getStockInicial","f","paginado","pagination","perpage","currentPage","subject","observe","resp","accessToken","token","asObservable","view_stock_movimientos","articulo_unidad_medidas","login","view_usuarios","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","TablaDinamicaModule","MatAutocompleteModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}