{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>\r\n    ) {\r\n        this.title = 'Añadir articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getArticulos();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = unidadesDeMedida.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        this.form.get($event).setValue('');\r\n\r\n        if ($event == 'articulo') {\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''),Validators.required),\r\n            unidadmedida: new FormControl((''),[Validators.required]),\r\n            cantidad: new FormControl((''),Validators.required),\r\n        });\r\n\r\n        this.form.get('unidadmedida').disable()\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form.get('articulo').value,\r\n                unidad_medida: this.form.get('unidadmedida').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                unidadmedida_descripcion: unidadmedida.um.descripcion\r\n            }\r\n            this.onCloseMenu(articulo)\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div>\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                            [value]=\"um.idunidadmedida\">{{um.um.descripcion}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('cantidad')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('cantidad').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Añadir\r\n        </button>\r\n    </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-stock-inicial',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _stockInicialService: StockInicialService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      // activo: new FormControl(-1),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    \r\n  }\r\n\r\nresetFilters() {\r\n  this.formFilters.reset({\r\n    filtroFechaInicio: '',\r\n    filtroFechaFin: '',\r\n    usuario: -1,\r\n    deposito: -1,\r\n  });\r\n}\r\n\r\nonCloseMenu(data: any = null) {\r\n  if(data){\r\n    data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n    data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n  }\r\n  this._menuService.close(data);\r\n}\r\n\r\n/**\r\n* Funcion para limpiar los filtros de rango de fechas\r\n*/\r\nlimpiarFechas() {\r\n  this.formFilters.get('filtroFechaInicio').setValue('');\r\n  this.formFilters.get('filtroFechaFin').setValue('');\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n */\r\ngetUsuarios() {\r\n  let stk_list = this.data.data;\r\n  stk_list.forEach((stk_ini) => {\r\n    const existeUsuario = this.filterUsuarios.find(user => user.codigo_usuario === stk_ini.codigo_usuario);\r\n    if (!existeUsuario) {\r\n      let usuario = { codigo_usuario: stk_ini.codigo_usuario, nick_usuario: stk_ini.nick_usuario }\r\n      this.filterUsuarios.push(usuario);\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los depositos en el filtro de grilla.\r\n */\r\nasync getDepositos() {\r\n  const stk_list = await firstValueFrom(this._stockInicialService.getDepositos(true));\r\n  this.filterDeposito = stk_list.list;\r\n}\r\n\r\n\r\n/**\r\n * Esta funcion sirve para separar la hora de la fecha asi se pueden manipular de forma separada.\r\n * @param data son todos los items que devuelve el servicio.\r\n */\r\n// getHora(data) {\r\n//   //Se usa este forEach para poder modificar la hora y mostrarla por separado en la grilla.\r\n//   data.list.forEach((stk_ini) => {\r\n//     let fh = new Date(stk_ini.fecha_hora);\r\n//     stk_ini.hora = `${fh.getHours()}:${String(fh.getMinutes()).padStart(2, '0')}:${String(fh.getSeconds()).padStart(2, '0')}`;\r\n//     this.stockInicial.push(stk_ini);\r\n//   });\r\n// }\r\n\r\n\r\n/**\r\n * Esta funcion realiza el filtrado desde el front sobre el rango de fechas seleccionado en el filtro.\r\n */\r\n// _filterFechas(stk_list: any[]) {\r\n//   this.filterFechas = []\r\n//   // Obtener las fechas de inicio y fin del formulario y formatearlas\r\n//   let fh_inicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd HH:mm:ss');\r\n//   let fh_fin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd HH:mm:ss');\r\n\r\n//   // Iterar sobre el arreglo de fechas iniciales\r\n//   stk_list.forEach((stk_ini) => {\r\n\r\n//     let item_fecha_hora = `${stk_ini.fecha} ${stk_ini.hora}`;\r\n\r\n//     const existeFecha = this.filterFechas.find(item => item.fecha_hora === item_fecha_hora);\r\n//     if (!existeFecha) {\r\n//       if (item_fecha_hora >= fh_inicio && item_fecha_hora <= fh_fin) {\r\n//         this.filterFechas.push(stk_ini);\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   return this.filterFechas\r\n// }\r\n\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario of filterUsuarios\" [value]=\"usuario.codigo_usuario\">{{usuario.nick_usuario}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    stk_movimientos: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        /* this.user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.stock_inicial?.idstockinicial) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    \r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._stockInicialService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getMovimientos(idstockinicial): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const movimientos = await firstValueFrom(this._stockInicialService.getMovimientos(idstockinicial))\r\n            this.stk_movimientos = movimientos.list;\r\n            resolve(this.stk_movimientos);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addArticulo() {\r\n        if (this.form.get('deposito').value != '') {\r\n            this.dialogo\r\n            .open(AddArticuloComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: (res) => {                \r\n                    let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                        idarticulo: res.articulo.idarticulo,\r\n                        cantidad: res.cantidad,\r\n                        idunidadmedida: res.unidad_medida,\r\n                        descripcion_articulo: res.articulo.descripcion,\r\n                        descripcion_um: res.unidadmedida_descripcion,\r\n                        codigo_interno_articulo: res.articulo.codigo_interno\r\n                    }                \r\n                    this.stk_movimientos = [...this.stk_movimientos, art_stk_ini];\r\n                    this.dataSource = new MatTableDataSource(this.stk_movimientos); //Actualizo la tabla\r\n    \r\n                    if (this.stk_movimientos.length != 0) {\r\n                        this.form.get('deposito').disable();\r\n                    }\r\n\r\n                    this.alert.success(\"Artículo añadido con éxito\")\r\n                },\r\n            });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.stk_movimientos = this.stk_movimientos.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos);\r\n\r\n        if (this.stk_movimientos.length === 0) {\r\n            this.form.get('deposito').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input: string) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.stock_inicial ? this.stock_inicial.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.stock_inicial) { //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.getMovimientos(this.stock_inicial.idstockinicial).then((res) => {\r\n                this.stk_movimientos = res;\r\n                this.dataSource = new MatTableDataSource(res);\r\n                if (this.stk_movimientos.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial?.hora ? this.stock_inicial.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.stock_inicial ? this.stock_inicial.descripcion_deposito : ''), Validators.required),\r\n            articulo: new FormControl((''),),\r\n            unidadmedida: new FormControl((''),),\r\n            cantidad: new FormControl((''),),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), [Validators.maxLength(this.maxPalabras)])\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n        \r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.stk_movimientos.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (articulos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            this.stock_inicial = {\r\n                ...this.stock_inicial,\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial.idstockinicial) {\r\n                this._stockInicialService.updateStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(this.stock_inicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"shadow-md mb-3\">\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>Depósitos</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && stk_movimientos.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                    <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                        {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef>Código interno</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef> <button mat-mini-fab color=\"primary\" matTooltip='Añadir Articulo' aria-label=\"icon\"\r\n                                class=\"rounded-full\" (click)=\"addArticulo()\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button></th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n            </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\n\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'acciones']\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion_deposito'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n        deposito: -1,\r\n        usuario: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_inicials + '?sort=-idstockinicial';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n    stkMovimientos: [] = [];\r\n\r\n    constructor(\r\n        private _stockInicialService: StockInicialService,\r\n        private _menuService: JedsMenuService,\r\n        private _searchService: SearchService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n* Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n* @param origin \r\n*/\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        // this.extraParams += this.filter.activo != -1 ? \"&filter[activo]=\" + this.filter.activo : '';\r\n                        this.extraParams = this.filter.deposito != -1 ? \"&filter[iddeposito]=\" + this.filter.deposito : '';\r\n                        this.extraParams += this.filter.usuario != -1 ? \"&filter[codigo_usuario]=\" + this.filter.usuario : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"&filter[fecha][gte]=\" + this.filter.filtroFechaInicio : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"&filter[fecha][lte]=\" + this.filter.filtroFechaFin : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateStockInicial(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteStockInicial(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveStockInicial() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateStockInicial(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteStockInicial(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Stock inicial \" + event.params.data.fecha,\r\n            message: \"¿Desea eliminar el Stock inicial: \" + event.params.data.fecha + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._stockInicialService.deleteStockInicial(event.params.data.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\nngOnDestroy(): void {\r\n    this._searchService.unsubscribe();\r\n}\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 \">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Stock Inicial'\r\n                (click)=\"saveStockInicial()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.body.token,\r\n                    subject.next({\r\n                        'list': resp.body.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getMovimientos(idstockinicial: number) {\r\n        let f = `?filter[idstockinicial]=${idstockinicial}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos() {\r\n        let f = '?filter[activo]=1&pagination=1&per-page=10&page=1'\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + stock_inicial.idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n     */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule,\r\n        TablaDinamicaModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r6","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r9","idunidadmedida","ɵɵtextInterpolate","um","AddArticuloComponent_button_30_Template_button_click_0_listener","_r11","ctx_r10","AddArticuloComponent","constructor","data","_stockInicialService","alert","dialogRef","columns","unidades_de_medida","dataSource","_unsubscribeAll","title","ngOnInit","newForm","getArticulos","subscribeAlert","emitConfig","subscribe","next","config","appearance","time","pipe","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","filterValue","toString","toLowerCase","filter","articulo","includes","getTextArticulo","getUnidadesDeMedidaArticulos","idarticulo","_this2","unidadesDeMedida","_ref2","_x2","seleccionArticulo","$event","enable","setValue","disable","required","unidadmedida","cantidad","onSubmit","valid","error","find","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","StockInicialService","i2","AppAlertService","i3","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","ɵɵtemplate","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_button_30_Template","AddArticuloComponent_Template_button_click_32_listener","_r1","ɵɵpipeBind1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r5","ctx_r4","limpiarFechas","deposito_r6","iddeposito","usuario_r7","codigo_usuario","nick_usuario","FilterMenuComponent","_menuService","datePipe","usuarios","filterDeposito","filterUsuarios","filterFechas","stockInicial","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","patchValue","resetFilters","reset","transform","stk_list","forEach","stk_ini","existeUsuario","user","push","JedsMenuService","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_Template_button_click_37_listener","FilterMenuComponent_Template_button_click_40_listener","getRawValue","_r0","EventEmitter","deposito_r17","SaveComponent_button_33_Template_button_click_0_listener","_r19","ctx_r18","articulo_r20","descripcion_articulo","articulo_r21","codigo_interno_articulo","articulo_r22","articulo_r23","descripcion_um","SaveComponent_th_56_Template_button_click_1_listener","_r25","ctx_r24","addArticulo","SaveComponent_td_57_Template_button_click_1_listener","restoredCtx","_r29","articulo_r26","$implicit","ctx_r28","deleteArticulo","SaveComponent","dialogo","stk_movimientos","maxPalabras","creadoExitosamente","editadoExitosamente","stock_inicial","idstockinicial","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","getPalabrasLength","observaciones","length","isPalabraMaxLengthReached","_filterDepositos","depositos","getTextDeposito","option","Depositos","filteredDepositos","getMovimientos","movimientos","open","panelClass","afterClosed","res","art_stk_ini","success","warning","item","input","dia","mes","anio","fecha","split","then","name","hora","descripcion_deposito","maxLength","fh","objeto","idusuario","id","fecha_hora","updateStockInicial","emit","saveStockInicial","i4","MatDialog","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_31_Template","SaveComponent_button_33_Template","ɵɵelementContainerStart","SaveComponent_th_44_Template","SaveComponent_td_45_Template","ɵɵelementContainerEnd","SaveComponent_th_47_Template","SaveComponent_td_48_Template","SaveComponent_th_50_Template","SaveComponent_td_51_Template","SaveComponent_th_53_Template","SaveComponent_td_54_Template","SaveComponent_th_56_Template","SaveComponent_td_57_Template","SaveComponent_tr_58_Template","SaveComponent_tr_59_Template","SaveComponent_Template_button_click_61_listener","_r2","ɵɵpureFunction1","_c0","debounceTime","distinctUntilChanged","environment","TablaDinamicaComponent","StockInicialComponent","_searchService","confirm","router","_headerTextService","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","activo","extraParams","parametrosActualizados","env","stock","view_stock_inicials","search","stkMovimientos","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","_elementRef","getElementosExistentes","generarAcciones","deleteStockInicial","componentInstance","params","autoFocus","dismissible","actions","show","color","label","cancel","renderTabla","console","ngOnDestroy","unsubscribe","SearchService","i5","FuseConfirmationService","i6","i7","i8","Router","i9","HeaderTextService","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_Template_button_click_3_listener","StockInicialComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","http","_authService","getStockInicial","sort","f","paginado","pagination","perpage","currentPage","subject","observe","resp","accessToken","body","token","result","asObservable","view_stock_movimientos","articulo_unidad_medidas","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","TablaDinamicaModule","MatAutocompleteModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}