{"version":3,"file":"src_app_modules_stock_stock-inicial_stock-inicial_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/stock-inicial/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/stock-inicial/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/stock-inicial/components/save/save.component.ts","./src/app/modules/stock/stock-inicial/components/save/save.component.html","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.ts","./src/app/modules/stock/stock-inicial/components/stock-inicial.component.html","./src/app/modules/stock/stock-inicial/service/stock-inicial.service.ts","./src/app/modules/stock/stock-inicial/stock-inicial.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>\r\n    ) {\r\n        this.title = 'Añadir articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulos();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = unidadesDeMedida.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        this.form.get($event).setValue('');\r\n\r\n        if ($event == 'articulo') {\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), [Validators.required]),\r\n            cantidad: new FormControl((''), Validators.required),\r\n        });\r\n\r\n        this.form.get('unidadmedida').disable();\r\n        this.form.get('articulo').valueChanges.pipe(\r\n            startWith(''),\r\n            debounceTime(750),\r\n            distinctUntilChanged(),\r\n            switchMap((value) => this._stockInicialService.getArticulos(value)),\r\n        ).subscribe((v) => {\r\n            this.filteredArticulos = v?.result;\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form.get('articulo').value,\r\n                unidad_medida: this.form.get('unidadmedida').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                unidadmedida_descripcion: unidadmedida.um.descripcion\r\n            }\r\n\r\n            let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value);\r\n\r\n            if (existeMovimiento) {\r\n                this.form.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya ha selecionado este articulo')\r\n            }\r\n\r\n            this.onCloseMenu(articulo)\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        [style.color]=\"color_secundario || '' \" class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                            [value]=\"um.idunidadmedida\">{{um.um.descripcion}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('cantidad')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('cantidad').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            [style.color]=\"color_secundario || '' \" class='w-full rounded-none md:w-36 md:rounded-full py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Añadir</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { firstValueFrom, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-stock-inicial',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService, \r\n    private datePipe: DatePipe, \r\n    private _stockInicialService: StockInicialService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      // activo: new FormControl(-1),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    \r\n  }\r\n\r\nresetFilters() {\r\n  this.formFilters.reset({\r\n    filtroFechaInicio: '',\r\n    filtroFechaFin: '',\r\n    usuario: -1,\r\n    deposito: -1,\r\n  });\r\n}\r\n\r\nonCloseMenu(data: any = null) {\r\n  if(data){\r\n    data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n    data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n  }\r\n  this._menuService.close(data);\r\n}\r\n\r\n/**\r\n* Funcion para limpiar los filtros de rango de fechas\r\n*/\r\nlimpiarFechas() {\r\n  this.formFilters.get('filtroFechaInicio').setValue('');\r\n  this.formFilters.get('filtroFechaFin').setValue('');\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n */\r\ngetUsuarios() {\r\n  let stk_list = this.data.data;\r\n  stk_list.forEach((stk_ini) => {\r\n    const existeUsuario = this.filterUsuarios.find(user => user.codigo_usuario === stk_ini.codigo_usuario);\r\n    if (!existeUsuario) {\r\n      let usuario = { codigo_usuario: stk_ini.codigo_usuario, nick_usuario: stk_ini.nick_usuario }\r\n      this.filterUsuarios.push(usuario);\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Esta funcion es para listas los depositos en el filtro de grilla.\r\n */\r\nasync getDepositos() {\r\n  const stk_list = await firstValueFrom(this._stockInicialService.getDepositos(true));\r\n  this.filterDeposito = stk_list.list;\r\n}\r\n\r\n\r\n/**\r\n * Esta funcion sirve para separar la hora de la fecha asi se pueden manipular de forma separada.\r\n * @param data son todos los items que devuelve el servicio.\r\n */\r\n// getHora(data) {\r\n//   //Se usa este forEach para poder modificar la hora y mostrarla por separado en la grilla.\r\n//   data.list.forEach((stk_ini) => {\r\n//     let fh = new Date(stk_ini.fecha_hora);\r\n//     stk_ini.hora = `${fh.getHours()}:${String(fh.getMinutes()).padStart(2, '0')}:${String(fh.getSeconds()).padStart(2, '0')}`;\r\n//     this.stockInicial.push(stk_ini);\r\n//   });\r\n// }\r\n\r\n\r\n/**\r\n * Esta funcion realiza el filtrado desde el front sobre el rango de fechas seleccionado en el filtro.\r\n */\r\n// _filterFechas(stk_list: any[]) {\r\n//   this.filterFechas = []\r\n//   // Obtener las fechas de inicio y fin del formulario y formatearlas\r\n//   let fh_inicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd HH:mm:ss');\r\n//   let fh_fin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd HH:mm:ss');\r\n\r\n//   // Iterar sobre el arreglo de fechas iniciales\r\n//   stk_list.forEach((stk_ini) => {\r\n\r\n//     let item_fecha_hora = `${stk_ini.fecha} ${stk_ini.hora}`;\r\n\r\n//     const existeFecha = this.filterFechas.find(item => item.fecha_hora === item_fecha_hora);\r\n//     if (!existeFecha) {\r\n//       if (item_fecha_hora >= fh_inicio && item_fecha_hora <= fh_fin) {\r\n//         this.filterFechas.push(stk_ini);\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   return this.filterFechas\r\n// }\r\n\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        [style.color]=\"color_secundario || '' \" class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario of filterUsuarios\" [value]=\"usuario.codigo_usuario\">{{usuario.nick_usuario}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            [style.color]=\"color_secundario || '' \" class=\"w-full rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IStockInicial } from '../../models/stock-inicial';\r\nimport { StockInicialService } from '../../service/stock-inicial.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-save-stock-inicial',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    stock_inicial: IStockInicial;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    stk_movimientos: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.stock_inicial = this.data ? this.data : null;\r\n        this.title = this.stock_inicial?.idstockinicial ? 'Editar stock inicial' : 'Nuevo stock inicial';\r\n        /* this.user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.stock_inicial?.idstockinicial) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._stockInicialService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getMovimientos(idstockinicial): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const movimientos = await firstValueFrom(this._stockInicialService.getMovimientos(idstockinicial))\r\n            this.stk_movimientos = movimientos.list;\r\n            resolve(this.stk_movimientos);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addArticulo() {\r\n        if (this.form.get('deposito').value != '') {\r\n            let esEdicion = this.stock_inicial ? true : false;\r\n            this.dialogo\r\n                .open(AddArticuloComponent, { \r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        movimientos: this.stk_movimientos,\r\n                        movimientos_eliminados: this.mov_art_list_deleted,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno_articulo: res.articulo.codigo_interno\r\n                            }\r\n                            this.stk_movimientos = [...this.stk_movimientos, art_stk_ini];\r\n                            this.dataSource = new MatTableDataSource(this.stk_movimientos); //Actualizo la tabla\r\n\r\n                            if (this.stk_movimientos.length != 0) {\r\n                                this.form.get('deposito').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.stk_movimientos = this.stk_movimientos.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.stk_movimientos);\r\n\r\n        if (this.stk_movimientos.length === 0) {\r\n            this.form.get('deposito').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input: string) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.stock_inicial ? this.stock_inicial.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.stock_inicial) { //Sí existe el stock inicial, cargo la grilla con sus articulos...\r\n            this.getMovimientos(this.stock_inicial.idstockinicial).then((res) => {\r\n                this.stk_movimientos = res;\r\n                this.dataSource = new MatTableDataSource(res);\r\n                if (this.stk_movimientos.length != 0) {\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            user: new FormControl((this.user ? this.user.name : '')),\r\n            fecha: new FormControl((this.stock_inicial?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.stock_inicial?.hora ? this.stock_inicial.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.stock_inicial ? this.stock_inicial.descripcion_deposito : ''), Validators.required),\r\n            articulo: new FormControl((''),),\r\n            unidadmedida: new FormControl((''),),\r\n            cantidad: new FormControl((''),),\r\n            observaciones: new FormControl((this.stock_inicial ? this.stock_inicial.observaciones : ''), [Validators.maxLength(this.maxPalabras)])\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let fh = this.datePipe.transform(this.form.get('fecha').value, 'yyyy-MM-dd'); //Esta linea hace que siempre se mantenga el formato de la facha cuando se modifica manualmente.\r\n            let articulos = this.stk_movimientos.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: Number(objeto.cantidad),\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (articulos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al stock inicial')\r\n            }\r\n\r\n            const payload = {\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${fh} ${this.form.get('hora').value}`,\r\n                hora: this.form.get('hora').value,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                observaciones: this.form.get('observaciones').value,\r\n                articulos: articulos\r\n            }\r\n\r\n            if (this.stock_inicial?.idstockinicial) {\r\n                let depo = this.depositos.find(d => d.iddeposito === this.stock_inicial.iddeposito); //Hago esto porque cuando es una edicion me levanta el texto del deposito y, sino lo cambio durante la edicion, al persistr pincha porque le estoy enviando un string en vez de un number en 'iddeposito'.\r\n                payload['iddeposito'] = depo.iddeposito;\r\n\r\n                this._stockInicialService.updateStockInicial(payload, this.stock_inicial.idstockinicial)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._stockInicialService.saveStockInicial(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        [style.color]=\"color_secundario || '' \" class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Usuario</mat-label>\r\n                    <input matInput placeholder=\"Nombre del menu\" formControlName=\"user\" [readonly]=\"true\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Depósitos</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && stk_movimientos.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                   <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef>Código interno</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            {{ articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef> \r\n                            <button mat-mini-fab [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n                                [style.color]=\"color_secundario || '' \" matTooltip='Añadir Articulo' aria-label=\"icon\"\r\n                                class=\"rounded-full\" (click)=\"addArticulo()\">\r\n                                <mat-icon>add</mat-icon>\r\n                            </button></th>\r\n                        <td mat-cell *matCellDef='let articulo'>\r\n                            <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario && color_secundario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            [style.color]=\"color_secundario || '' \" class='w-full rounded-none md:w-36 md:rounded-full py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\n\r\nimport { StockInicialService } from '../service/stock-inicial.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-stock-inicial',\r\n    templateUrl: './stock-inicial.component.html',\r\n    styleUrls: ['./stock-inicial.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class StockInicialComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IStockInicial> = new MatTableDataSource();\r\n    stockInicial: IStockInicial[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'acciones']\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion_deposito'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n        deposito: -1,\r\n        usuario: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_inicials + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    stkMovimientos: [] = [];\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary' && 'text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _stockInicialService: StockInicialService,\r\n        private _empresaService: EmpresaService,\r\n        private _menuService: JedsMenuService,\r\n        private _searchService: SearchService,\r\n        private dialogo: MatDialog,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n* Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n* @param origin \r\n*/\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        // this.extraParams += this.filter.activo != -1 ? \"&filter[activo]=\" + this.filter.activo : '';\r\n                        this.extraParams = this.filter.deposito != -1 ? \"&filter[iddeposito]=\" + this.filter.deposito : '';\r\n                        this.extraParams += this.filter.usuario != -1 ? \"&filter[codigo_usuario]=\" + this.filter.usuario : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"&filter[fecha][gte]=\" + this.filter.filtroFechaInicio : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"&filter[fecha][lte]=\" + this.filter.filtroFechaFin : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateStockInicial(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteStockInicial(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveStockInicial() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateStockInicial(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Stock inicial editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteStockInicial(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Stock inicial \" + event.params.data.fecha,\r\n            message: \"¿Desea eliminar el Stock inicial: \" + event.params.data.fecha + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._stockInicialService.deleteStockInicial(event.params.data.idstockinicial).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Stock inicial eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Stock inicial no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\nngOnDestroy(): void {\r\n    this._searchService.unsubscribe();\r\n}\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveStockInicial()' #save [class]=\"color_primario && color_secundario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Stock Inicial </span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IStockInicial } from '../models/stock-inicial';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n@Injectable()\r\nexport class StockInicialService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los sotcks iniciales.\r\n     * @returns sotcks iniciales\r\n     */\r\n    getStockInicial(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=usuario,deposito,stkMovimientos.idarticulo0,stkMovimientos.idunidadmedida0&';\r\n        f += sort?.filter?.sort == 'desc' ? 'sort=fecha_hora&' : 'sort=-fecha_hora&';\r\n        f += sort?.filter?.deposito ? `filter[iddeposito]=${sort.filter.deposito}&` : ''\r\n        f += sort?.filter?.usuario ? `filter[idusuario]=${sort.filter.usuario}&` : ''\r\n        f += sort?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += sort?.paginado?.perpage ? 'per-page=' + sort.paginado.perpage + '&' : '';\r\n        f += sort?.paginado?.currentPage ? 'page=' + sort.paginado.currentPage + '&' : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.stock_inicial}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getMovimientos(idstockinicial: number) {\r\n        let f = `?filter[idstockinicial]=${idstockinicial}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(filterLike?) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        f += filterLike ? `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}` : '';\r\n        return this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        );\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        list: resp.result\r\n                    })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param stock_inicial \r\n     * @returns Crea un item nuevo\r\n    */\r\n    saveStockInicial(stock_inicial: IStockInicial): Observable<IStockInicial> {\r\n        return this.http.post<IStockInicial>(`${environment.stock.stock_inicial}`, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param stock_inicial\r\n     * @returns Item actualizado actualizado\r\n    */\r\n    updateStockInicial(stock_inicial: IStockInicial, idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.put<IStockInicial>(`${environment.stock.stock_inicial}` + '/' + idstockinicial, stock_inicial);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idstockinicial \r\n     * @returns Elimina un item\r\n    */\r\n    deleteStockInicial(idstockinicial: number): Observable<IStockInicial> {\r\n        return this.http.delete<IStockInicial>(environment.stock.stock_inicial + '/' + idstockinicial);\r\n    }\r\n\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { StockInicialComponent } from './components/stock-inicial.component';\r\nimport { StockInicialService } from './service/stock-inicial.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: StockInicialComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [StockInicialComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatDatepickerModule,\r\n        MatButtonModule,\r\n        TablaDinamicaModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [StockInicialService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class StockInicialModule { }"],"names":["FormControl","FormGroup","Validators","Subject","debounceTime","distinctUntilChanged","finalize","firstValueFrom","startWith","switchMap","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r6","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_19_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r9","idunidadmedida","ɵɵtextInterpolate","um","AddArticuloComponent_button_29_Template_button_click_0_listener","_r11","ctx_r10","AddArticuloComponent","constructor","data","_stockInicialService","_empresaService","alert","dialogRef","columns","unidades_de_medida","dataSource","default_color","_unsubscribeAll","title","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","newForm","getArticulos","subscribeAlert","emitConfig","next","config","appearance","time","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","_x","apply","arguments","getTextArticulo","articulo","getUnidadesDeMedidaArticulos","idarticulo","_this2","unidadesDeMedida","_ref2","_x2","seleccionArticulo","$event","form","get","enable","setValue","disable","required","unidadmedida","cantidad","valueChanges","value","v","filteredArticulos","result","onSubmit","valid","error","find","unidad_medida","unidadmedida_descripcion","existeMovimiento","movimientos","movimiento","warning","onCloseMenu","close","ɵɵdirectiveInject","i1","StockInicialService","i2","EmpresaService","i3","AppAlertService","i4","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","ɵɵtemplate","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_19_Template","AddArticuloComponent_mat_option_24_Template","ɵɵelement","AddArticuloComponent_button_29_Template","AddArticuloComponent_Template_button_click_31_listener","ɵɵclassMap","ɵɵstyleProp","_r1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r5","ctx_r4","limpiarFechas","deposito_r6","iddeposito","usuario_r7","codigo_usuario","nick_usuario","FilterMenuComponent","_menuService","datePipe","usuarios","filterDeposito","filterUsuarios","filterFechas","stockInicial","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","patchValue","filter","resetFilters","reset","transform","stk_list","forEach","stk_ini","existeUsuario","user","push","JedsMenuService","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_Template_button_click_37_listener","FilterMenuComponent_Template_button_click_40_listener","getRawValue","_r0","EventEmitter","map","deposito_r17","SaveComponent_button_33_Template_button_click_0_listener","_r19","ctx_r18","articulo_r20","descripcion_articulo","articulo_r21","codigo_interno_articulo","articulo_r22","articulo_r23","descripcion_um","SaveComponent_th_55_Template_button_click_1_listener","_r25","ctx_r24","addArticulo","ctx_r13","SaveComponent_td_56_Template_button_click_1_listener","restoredCtx","_r29","articulo_r26","$implicit","ctx_r28","deleteArticulo","SaveComponent","dialogo","stk_movimientos","mov_art_list_deleted","maxPalabras","creadoExitosamente","editadoExitosamente","stock_inicial","idstockinicial","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","getPalabrasLength","observaciones","length","isPalabraMaxLengthReached","_filterDepositos","filterValue","toString","toLowerCase","depositos","includes","getTextDeposito","option","Depositos","filteredDepositos","getMovimientos","esEdicion","open","panelClass","movimientos_eliminados","afterClosed","res","art_stk_ini","success","item","input","dia","mes","anio","fecha","split","then","name","hora","descripcion_deposito","maxLength","fh","objeto","Number","payload","idusuario","id","fecha_hora","depo","d","updateStockInicial","emit","saveStockInicial","i5","MatDialog","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_31_Template","SaveComponent_button_33_Template","ɵɵelementContainerStart","SaveComponent_th_43_Template","SaveComponent_td_44_Template","ɵɵelementContainerEnd","SaveComponent_th_46_Template","SaveComponent_td_47_Template","SaveComponent_th_49_Template","SaveComponent_td_50_Template","SaveComponent_th_52_Template","SaveComponent_td_53_Template","SaveComponent_th_55_Template","SaveComponent_td_56_Template","SaveComponent_tr_57_Template","SaveComponent_tr_58_Template","SaveComponent_Template_button_click_60_listener","_r2","ɵɵpipeBind1","ɵɵpureFunction1","_c0","environment","TablaDinamicaComponent","StockInicialComponent","_searchService","confirm","router","_headerTextService","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","activo","extraParams","parametrosActualizados","env","stock","view_stock_inicials","search","stkMovimientos","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","_elementRef","getElementosExistentes","generarAcciones","deleteStockInicial","componentInstance","params","autoFocus","dismissible","actions","show","color","label","cancel","renderTabla","console","ngOnDestroy","unsubscribe","SearchService","i6","FuseConfirmationService","i7","i8","i9","Router","i10","HeaderTextService","viewQuery","StockInicialComponent_Query","StockInicialComponent_Template","StockInicialComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","StockInicialComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","http","_authService","getStockInicial","sort","f","paginado","pagination","perpage","currentPage","subject","observe","resp","accessToken","token","asObservable","view_stock_movimientos","filterLike","articulo_unidad_medidas","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","MatPaginatorModule","MatDatepickerModule","TablaDinamicaModule","MatAutocompleteModule","routes","path","component","StockInicialModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}