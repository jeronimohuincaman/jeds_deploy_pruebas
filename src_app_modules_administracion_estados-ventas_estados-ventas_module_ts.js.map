{"version":3,"file":"src_app_modules_administracion_estados-ventas_estados-ventas_module_ts.js","mappings":"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","sources":["./src/app/modules/administracion/estados-ventas/components/estados-ventas.component.ts","./src/app/modules/administracion/estados-ventas/components/estados-ventas.component.html","./src/app/modules/administracion/estados-ventas/components/filter-menu/filter-menu.component.ts","./src/app/modules/administracion/estados-ventas/components/filter-menu/filter-menu.component.html","./src/app/modules/administracion/estados-ventas/components/save/save.component.ts","./src/app/modules/administracion/estados-ventas/components/save/save.component.html","./src/app/modules/administracion/estados-ventas/estados-ventas.module.ts","./src/app/modules/administracion/estados-ventas/service/estados-ventas.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router } from \"@angular/router\";\nimport { HeaderTextService } from \"@shared/components/header-text/header-text.service\";\nimport { IEstadoVenta } from \"../models/estado-ventas\";\nimport { IFilter } from \"@shared/models/filter\";\nimport { environment } from \"environments/environment\";\nimport { FormControl } from \"@angular/forms\";\nimport { debounceTime, distinctUntilChanged, Subject, Subscription, takeUntil } from \"rxjs\";\nimport { EmpresaService } from \"@shared/service/app/empresa.service\";\nimport { SearchService } from \"app/layout/common/search/search.service\";\nimport { TablaDinamicaComponent } from \"@shared/components/tabla-dinamica/tabla-dinamica.component\";\nimport { JedsMenuService } from \"@shared/service/app/jeds-menu.service\";\nimport { MatButton } from \"@angular/material/button\";\nimport { SaveComponent } from \"./save/save.component\";\nimport { EstadosVentasService } from \"../service/estados-ventas.service\";\nimport { FuseConfirmationService } from \"@fuse/services/confirmation\";\nimport { AppAlertService } from \"@shared/service/app/alert.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { FilterMenuComponent } from \"./filter-menu/filter-menu.component\";\n\n@Component({\n    selector: 'app-estados-ventas',\n    templateUrl: './estados-ventas.component.html',\n    styleUrls: ['./estados-ventas.component.scss']\n})\nexport class EstadosVentasComponent implements OnInit, OnDestroy {\n    public dataSource: MatTableDataSource<IEstadoVenta> = new MatTableDataSource();\n    column_params = ['idestado', 'descripcion', 'activo', 'acciones']\n    headers = ['ID', 'Descripcion', 'Activo', 'Acciones'];\n    funcionesObjeto = null;\n    filtroBusqueda: string = '';\n    filtersLike = ['descripcion'];\n    filter: IFilter = {\n        activo: -1,\n    };\n    @Input() extraParams = '';\n    @Output() parametrosActualizados = new EventEmitter<any>();\n    env = environment.administracion.estados_ventas + '?';\n    search: FormControl = new FormControl('');\n    sortValue: string;\n    FilterEventSub$: Subscription;\n    SearchTextSub$: Subscription;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'border-primary text-primary';\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    constructor(\n        private router: Router,\n        public _headerTextService: HeaderTextService,\n        private _empresaService: EmpresaService,\n        private _searchService: SearchService,\n        private _menuService: JedsMenuService,\n        private _estadoVentaService: EstadosVentasService,\n        private confirm: FuseConfirmationService,\n        private alert: AppAlertService,\n        private dialogo: MatDialog\n    ) {\n        this._headerTextService.setTitulo(this.router);\n        /**\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\n         */\n        this.funcionesObjeto = [\n            {\n                nombre_boton: \"Editar\",\n                functionName: 'editar',\n                iconoAccion: (estado: IEstadoVenta) => 'jedstion:editar',\n                iconoAccionado: (estado: IEstadoVenta) => '',\n                iconoDeshabilitado: (estado: IEstadoVenta) => '',\n                visible: (estado: IEstadoVenta) => true\n            },\n            {\n                nombre_boton: \"Eliminar\",\n                functionName: 'eliminar',\n                iconoAccion: (estado: IEstadoVenta) => 'jedstion:eliminar',\n                iconoAccionado: (estado: IEstadoVenta) => '',\n                iconoDeshabilitado: (estado: IEstadoVenta) => '',\n                visible: (estado: IEstadoVenta) => true\n            },\n        ];\n    }\n\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\n\n    ngOnInit(): void {\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(empresa => {\n                this.color_primario = empresa.color_primario;\n                this.color_secundario = empresa.color_secundario;\n            });\n                \n        // Load empresa data\n        this._empresaService.getEmpresa();\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\n            debounceTime(250),\n            distinctUntilChanged()\n        )\n        .subscribe(value => {\n            this.filtroBusqueda = value;\n            this.tabla.filters(this.filtroBusqueda);\n        });\n        \n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\n            this.onFilterMenu(this._searchService.getFilterOrigin())\n        });\n    }\n\n    /**\n     * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\n     * @param origin \n     */\n    onFilterMenu(origin: MatButton) {\n        this._menuService\n            .open(FilterMenuComponent, origin._elementRef, {\n                filter: this.filter,\n            })\n            .afterClosed()\n            .subscribe({\n                next: filter => {\n                    if (filter) {\n                        this.filter = filter;\n                        this.extraParams = this.filter?.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\n                        this.tabla.filters(this.filtroBusqueda);\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\n                    }\n                },\n            });\n    }\n    \n    /**\n     * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\n     * @param event \n     */\n    generarAcciones(event: { name: string, params: any }) {\n        switch (event.name) { \n            case 'editar':\n                this.updateEstadoVenta(event);\n                break;\n            case 'eliminar':\n                this.deleteEstadoVenta(event);\n                break;               \n        }\n    }\n\n    /**\n     * Esta funcion guarda un item\n     */\n    saveEstadoVenta() {\n        this.dialogo\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\n            .componentInstance.creadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.alert.success(\"Estado de Venta creado con éxito.\");\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n    \n    /**\n     * Esta funcion modifica un item\n     * @param event \n     */\n    updateEstadoVenta(event) {\n        this.dialogo\n            .open(SaveComponent, { data: {\n                ...event.params.data,\n                editando: true\n            }, panelClass: 'my-dialog', autoFocus: false })\n            .componentInstance.editadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.alert.success(\"Estado de Venta editado con éxito.\");\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n    \n    /**\n     * Esta funcion elimina un item\n     * @param event \n     */\n    deleteEstadoVenta(event) {\n        this.confirm.open({\n            title: \"Eliminar Estado de Venta\",\n            message: \"¿Desea eliminar el estado de venta: \" + event.params.data.descripcion + \"?\",\n            dismissible: false,\n            actions: {\n                confirm: {\n                    show: true,\n                    color: 'warn',\n                    label: 'Si',\n                },\n                cancel: {\n                    show: true,\n                    label: 'No',\n                },\n            },\n        })\n        .afterClosed()\n        .subscribe(res => {\n            if (res === 'confirmed') {\n                this._estadoVentaService.deleteEstadoVenta(event.params.data.idestado).subscribe({\n                    next: (data) => {\n                        // Manejar la respuesta exitosa\n                        this.alert.success(\"Estado de Venta eliminado con éxito.\");\n                        if (res) {\n                            this.tabla.renderTabla()\n                        }\n                    },\n                    error: (error) => {\n                        // Manejar el error\n                        console.error(error);\n                        this.alert.warning(\"Este Estado de Venta no puede eliminarse. Tiene elementos asociados.\");\n                    }\n                });\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this._searchService.unsubscribe();\n    }\n}","<div class=\"w-full flex flex-col relative \">\n    <div class=\"mb-12 mt-6\">\n        <!-- Contenedor del botón -->\n        <div class=\"absolute right-10\">\n            <button mat-flat-button #save (click)=\"saveEstadoVenta()\" [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\n                <div class=\"flex item-center\">\n                    <!-- SVG con fill=\"currentColor\" -->\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\n                    </svg>\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Estado</span>\n                </div>\n            </button>\n        </div>\n    </div>\n    <div class=\"pr-2 pl-2\">\n        <!-- Tabla dinámica -->\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\n        </app-tabla-dinamica>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { fuseAnimations } from '@fuse/animations';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-filter-menu-banco',\n  templateUrl: './filter-menu.component.html',\n  styleUrls: ['./filter-menu.component.scss'],\n  animations: fuseAnimations\n})\nexport class FilterMenuComponent implements OnInit {\n  public formFilters: FormGroup;\n  public proveedorespp: any[];\n  color_primario: string;\n  color_secundario: string;\n  default_color: string = 'bg-primary';\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject('MENU_DATA') public data: any, \n    private _menuService: JedsMenuService,\n    private _empresaService: EmpresaService\n  ) { }\n\n  ngOnInit(): void {\n    /**\n    * Formulario de filtros\n    */\n    this.formFilters = new FormGroup({\n      activo: new FormControl(('')),\n    });\n    // Subscribe to empresa data\n    this._empresaService.empresa$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(empresa => {\n          this.color_primario = empresa.color_primario;\n          this.color_secundario = empresa.color_secundario;\n      });\n\n    // Load empresa data\n    this._empresaService.getEmpresa();\n    this.formFilters.patchValue(this.data.filter);\n  }\n\n  resetFilters() {\n    this.formFilters.reset({\n      activo: -1\n    });\n  }\n\n  onCloseMenu(data: any = null) {\n    this._menuService.close(data);\n  }\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\n    [@expandCollapse]=\"'expanded'\">\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\n        <div>\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\n                <mat-icon class=\"text-white\">refresh</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\n        <span class=\"font-semibold text-gray-600 text-base\">Activo</span>\n        <mat-form-field\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <mat-select formControlName=\"activo\">\n                <mat-option [value]='-1'>Todos</mat-option>\n                <mat-option [value]='1'>Si</mat-option>\n                <mat-option [value]='0'>No</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \n            [style.border]=\"color_primario || '' \"\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\n            <span class=\"font-medium text-base\">Limpiar</span>\n        </button>\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\n            <span class=\"text-white font-bold\">Filtrar</span>\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\nimport { IAlertConfig } from '@shared/models/alert';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\nimport { IEstadoVenta } from '../../models/estado-ventas';\nimport { EstadosVentasService } from '../../service/estados-ventas.service';\n@Component({\n    selector: 'app-save-estados-ventas',\n    templateUrl: './save.component.html',\n    styleUrls: ['./save.component.scss']\n})\nexport class SaveComponent implements OnInit {\n    columns = ['nombre', 'activo', 'acciones'];\n    form: FormGroup;\n    estado: IEstadoVenta;\n    showAlert = false;\n    _alertConfig: IAlertConfig;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'bg-primary';\n    title: string;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private _estadosVentasService: EstadosVentasService,\n        private _empresaService: EmpresaService,\n        public alert: AppAlertService,\n        public dialogRef: MatDialogRef<SaveComponent>\n    ) {\n        this.estado = this.data ? this.data : null;\n        if (this.estado?.editando === true) {\n            this.title = 'Editar Estados de Venta'\n        } else {\n            this.title = 'Alta Estados de Venta'\n        }\n    }\n\n    ngOnInit(): void {\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(empresa => {\n                this.color_primario = empresa.color_primario;\n                this.color_secundario = empresa.color_secundario;\n            });\n        \n        // Load empresa data\n        this._empresaService.getEmpresa();\n        this.newForm();\n        this.subscribeAlert();\n    }\n\n    // Alert\n    subscribeAlert() {\n        this.alert.emitConfig.subscribe({\n            next: (config: IAlertConfig) => {\n                this.showAlert = true;\n                this._alertConfig = {\n                ...config,\n                appearance: 'border',\n                };\n                let time = 2;\n                timer(100, 1500)\n                .pipe(\n                    finalize(() => {\n                        this.showAlert = false;\n                        this._alertConfig = null;\n                    }),\n                    takeWhile(() => time > 0),\n                    takeUntil(this._unsubscribeAll),\n                    tap(() => (time -= 1))\n                )\n                .subscribe();\n            },\n        });\n    }\n\n    newForm() {\n        this.form = new FormGroup({\n            descripcion: new FormControl((this.estado ? this.estado.descripcion : ''), Validators.required),\n            activo: new FormControl((this.estado ? (this.estado.activo ? true : false) : true)), // Se hace esa condicional porque en el componente\n                                                                                     // grilla dinamica convertimos los valores para poder \n                                                                                     // mostrarlos en la columna correspondiente\n        });\n    }\n\n    onSubmit() {\n        if (!this.form.valid) {\n            return this.alert.error('Revise Los Datos Ingresados');\n        } else {\n            this.estado = {\n                ...this.estado,\n                descripcion: this.form.get('descripcion').value,\n                activo: this.form.get('activo').value ? 1 : 0,\n            }\n            if (this.estado.idestado) {\n                this._estadosVentasService.updateEstadoVenta(this.estado)\n                    .subscribe({\n                        next: (data) => {\n                            if (data) {\n                                this.editadoExitosamente.emit();\n                                this.onCloseMenu();\n                            }\n                        }\n                    });\n            } else {\n                this._estadosVentasService.saveEstadoVenta(this.estado)\n                    .subscribe({\n                        next: (data) => {\n                            if (data) {\n                                this.creadoExitosamente.emit();\n                                this.onCloseMenu();\n                            }\n                        }\n                    });\n            }\n        }\n    }\n\n    onCloseMenu() {\n        this.dialogRef.close(false)\n    }\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-auto sm:w-auto sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg\">{{ title }}</span>\n        <div>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n    <!-- Alert -->\n    <fuse-alert\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\n        [type]=\"_alertConfig.type\"\n        [appearance]=\"'outline'\"\n        *ngIf=\"showAlert\"\n        [@fadeIn]=\"showAlert\"\n    >\n    {{ _alertConfig.message }}\n    </fuse-alert>\n    <form class=\"flex w-full sm:w-[800px] h-full p-4 form-menu\" [formGroup]=\"form\">\n        <div class=\"flex flex-col sm:flex-row gap-8 w-full\">\n            <mat-form-field appearance='outline' class=\"w-full\">\n                <mat-label>Descripción</mat-label>\n                <input matInput formControlName='descripcion'>\n            </mat-form-field>\n            <mat-checkbox formControlName='activo' class=\"mb-4\" [checked]=\"form.get('activo').value === 1\">\n                Activo\n            </mat-checkbox>\n        </div>\n    </form>\n    <div class=\"w-full md:flex md:justify-end md:pb-6 md:px-6 mt-auto\"> \n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\n            <span class=\"text-white font-medium text-base\">Guardar</span>\n        </button>\n    </div>\n</div>","import { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FuseAlertComponent } from '@fuse/components/alert';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSortModule } from '@angular/material/sort';\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { EstadosVentasComponent } from './components/estados-ventas.component';\nimport { EstadosVentasService } from './service/estados-ventas.service';\nimport { SaveComponent } from './components/save/save.component';\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\nconst routes: Routes = [\n    {\n        path: '',\n        component: EstadosVentasComponent\n    }\n];\n@NgModule({\n    declarations: [EstadosVentasComponent, SaveComponent, FilterMenuComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MatTableModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatIconModule,\n        FuseAlertComponent,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatCheckboxModule,\n        MatToolbarModule,\n        MatCheckboxModule,\n        MatSortModule,\n        TablaDinamicaModule,\n        MatDialogModule\n    ],\n    exports: [RouterModule],\n    providers: [EstadosVentasService, JedsMenuService, AppAlertService]\n})\nexport class EstadosVentasModule { }","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { Observable } from 'rxjs';\nimport { IEstadoVenta } from '../models/estado-ventas';\n\n@Injectable()\nexport class EstadosVentasService {\n    constructor(private http: HttpClient) {}\n    /**\n     * Funcion en el Servicio \n     * @param estado\n     * @returns Un Estado de Venta Nuevo\n     */\n    saveEstadoVenta(estado: IEstadoVenta): Observable<IEstadoVenta> {\n        return this.http.post<IEstadoVenta>(`${environment.administracion.estados_ventas}`, estado);\n    }\n    /**\n     * Funcion en el servicio\n     * @param estado \n     * @returns Estado Venta actualizado\n     */\n    updateEstadoVenta(estado: IEstadoVenta): Observable<IEstadoVenta> {\n        return this.http.put<IEstadoVenta>(`${environment.administracion.estados_ventas}`+'/'+estado.idestado, estado);\n    }\n    /**\n     * Funcion en el servicio\n     * @param idestado\n     * @returns Elimina un Estado Venta\n     */\n    deleteEstadoVenta(idestado: number): Observable<IEstadoVenta> {\n        return this.http.delete<IEstadoVenta>(environment.administracion.estados_ventas+'/'+idestado);\n    }\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["EventEmitter","MatTableDataSource","environment","FormControl","debounceTime","distinctUntilChanged","Subject","takeUntil","TablaDinamicaComponent","SaveComponent","FilterMenuComponent","EstadosVentasComponent","constructor","router","_headerTextService","_empresaService","_searchService","_menuService","_estadoVentaService","confirm","alert","dialogo","dataSource","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","filter","activo","extraParams","parametrosActualizados","env","administracion","estados_ventas","search","default_color","_unsubscribeAll","setTitulo","nombre_boton","functionName","iconoAccion","estado","iconoAccionado","iconoDeshabilitado","visible","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateEstadoVenta","deleteEstadoVenta","saveEstadoVenta","panelClass","componentInstance","creadoExitosamente","success","data","params","editando","autoFocus","editadoExitosamente","title","message","descripcion","dismissible","actions","show","color","label","cancel","res","idestado","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i1","Router","i2","HeaderTextService","i3","EmpresaService","i4","SearchService","i5","JedsMenuService","i6","EstadosVentasService","i7","FuseConfirmationService","i8","AppAlertService","i9","MatDialog","selectors","viewQuery","EstadosVentasComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","EstadosVentasComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","EstadosVentasComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","ɵɵadvance","ɵɵclassMap","ɵɵstyleProp","ɵɵproperty","FormGroup","fuseAnimations","formFilters","patchValue","resetFilters","reset","onCloseMenu","close","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_Template_button_click_23_listener","FilterMenuComponent_Template_button_click_26_listener","getRawValue","Validators","MAT_DIALOG_DATA","finalize","takeWhile","tap","timer","ctx_r0","_alertConfig","type","showAlert","ɵɵtextInterpolate1","_estadosVentasService","dialogRef","columns","newForm","subscribeAlert","emitConfig","config","appearance","time","form","required","onSubmit","valid","get","emit","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","ɵɵtemplate","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_button_click_18_listener","ɵɵtextInterpolate","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","routes","path","component","EstadosVentasModule","imports","forChild","declarations","exports","http","post","put","delete","ɵɵinject","HttpClient","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_c0","_c1","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","length","isCombinedUsage","Array","from","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}