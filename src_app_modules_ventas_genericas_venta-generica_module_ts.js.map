{"version":3,"file":"src_app_modules_ventas_genericas_venta-generica_module_ts.js","mappings":"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","sources":["./src/app/modules/ventas/genericas/components/venta-genericas.component.ts","./src/app/modules/ventas/genericas/components/venta-genericas.component.html","./src/app/modules/ventas/genericas/service/venta-generica.service.ts","./src/app/modules/ventas/genericas/venta-generica.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\nimport { VentaGenericasService} from '../service/venta-generica.service';\r\nimport { IVentaGenerica } from '../models/venta-generica';\r\n\r\n@Component({\r\n    selector: 'app-venta-generica',\r\n    templateUrl: './venta-genericas.component.html',\r\n    styleUrls: ['./venta-genericas.component.scss']\r\n})\r\nexport class VentaGenericasComponent implements OnInit, OnDestroy {\r\n    ventas: IVentaGenerica[];\r\n    public dataSource: MatTableDataSource<IVentaGenerica> = new MatTableDataSource();\r\n    headers = ['ID', 'Fecha', 'Vendedor', 'Cliente', 'Obra', 'Tratamiento', 'Instalaci√≥n', 'Acarreo', 'Bien Cargada', 'Acciones'];\r\n    column_params = ['idventagenerica', 'fecha', 'vendedor', 'cliente', 'obra', 'tratamiento', 'colocacion', 'acarreo', 'bien_cargada', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['cliente', 'vendedor'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.ventas.view_venta_genericas + '?';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n\r\n    constructor(\r\n        private _ventaGenericasService: VentaGenericasService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Reporte\",\r\n                functionName: 'orden_servicio',\r\n                iconoAccion: (venta_generica: IVentaGenerica) => 'jedstion:imprimir',\r\n                iconoAccionado: (venta_generica: IVentaGenerica) => '',\r\n                iconoDeshabilitado: (venta_generica: IVentaGenerica) => '',\r\n            }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        // this._menuService\r\n        //     .open(FilterMenuComponent, origin._elementRef, {\r\n        //         filter: this.filter,\r\n        //         data: this.tabla.getElementosExistentes()\r\n        //     })\r\n        //     .afterClosed()\r\n        //     .subscribe({\r\n        //         next: filter => {\r\n        //             if (filter) {\r\n        //                 this.filter = filter;\r\n        //                 this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n        //                 this.extraParams += this.filter.usuario_responsable != -1 ? \"filter[idusuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n        //                 this.extraParams += this.filter.usuario_encargado != -1 ? \"filter[usuario_entrega]=\" + this.filter.usuario_encargado + '&' : '';\r\n        //                 this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n        //                 this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n        //                 this.tabla.filters(this.filtroBusqueda);\r\n        //                 // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n        //             }\r\n        //         },\r\n        //     });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'orden_servicio':\r\n                this.reporteOrdenServicio(event);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pesta√±a\r\n     */\r\n    reporteOrdenServicio(event) {\r\n        const idVentaGenerica = event.params.data.idventagenerica;\r\n        this._ventaGenericasService.reporteOrdenServicio(idVentaGenerica).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                const reportePath = data.path;\r\n                if (this.pwaService.isPwa()) {\r\n                    this.router.navigate(['/reporte', reportePath]);\r\n                } else {\r\n                    const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                    window.open(reporteUrl, '_blank'); \r\n                }\r\n                } else {\r\n                console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla din√°mica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" \r\n            [cache]=\"false\"\r\n            [columnsNames]=\"headers\" \r\n            [renderType]=\"'client'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IVentaGenericaResponse } from '../models/venta-generica';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class VentaGenericasService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    \r\n    /**\r\n     * \r\n     * @param idventagenerica\r\n     * @returns \r\n     */\r\n    reporteOrdenServicio(idventagenerica: number): Observable<IVentaGenericaResponse> {\r\n        return this.http.get<IVentaGenericaResponse>(`${environment.ventas.reporte_orden_servicio}` + idventagenerica);\r\n    }\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { VentaGenericasService } from './service/venta-generica.service';\r\nimport { VentaGenericasComponent } from './components/venta-genericas.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: VentaGenericasComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [VentaGenericasComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [VentaGenericasService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class VentaGenericasModule {}"],"names":["EventEmitter","Subject","debounceTime","distinctUntilChanged","takeUntil","MatTableDataSource","FormControl","TablaDinamicaComponent","environment","VentaGenericasComponent","constructor","_ventaGenericasService","_empresaService","confirm","alert","dialogo","_searchService","_menuService","router","_headerTextService","pwaService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","filter","deposito","filtroFechaInicio","filtroFechaFin","extraParams","parametrosActualizados","env","ventas","view_venta_genericas","search","default_color","_unsubscribeAll","setTitulo","nombre_boton","functionName","iconoAccion","venta_generica","iconoAccionado","iconoDeshabilitado","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","generarAcciones","name","reporteOrdenServicio","idVentaGenerica","params","data","idventagenerica","success","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","open","console","error","ngOnDestroy","unsubscribe","closeAll","i0","…µ…µdirectiveInject","i1","VentaGenericasService","i2","EmpresaService","i3","FuseConfirmationService","i4","AppAlertService","i5","MatDialog","i6","SearchService","i7","JedsMenuService","i8","Router","i9","HeaderTextService","i10","PwaService","selectors","viewQuery","VentaGenericasComponent_Query","rf","ctx","…µ…µelementStart","…µ…µlistener","VentaGenericasComponent_Template_app_tabla_dinamica_functionEmitter_2_listener","$event","…µ…µelementEnd","…µ…µadvance","…µ…µproperty","http","_authService","get","reporte_orden_servicio","…µ…µinject","HttpClient","AuthService","factory","…µfac","RouterModule","CommonModule","DatePipe","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","component","VentaGenericasModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}