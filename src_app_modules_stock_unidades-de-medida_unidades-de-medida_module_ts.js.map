{"version":3,"file":"src_app_modules_stock_unidades-de-medida_unidades-de-medida_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/unidades-de-medida/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/unidades-de-medida/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/unidades-de-medida/components/save/save.component.ts","./src/app/modules/stock/unidades-de-medida/components/save/save.component.html","./src/app/modules/stock/unidades-de-medida/components/unidades-de-medida.component.ts","./src/app/modules/stock/unidades-de-medida/components/unidades-de-medida.component.html","./src/app/modules/stock/unidades-de-medida/service/unidades-de-medida.service.ts","./src/app/modules/stock/unidades-de-medida/unidades-de-medida.module.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-unidades-de-medida',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      activo: new FormControl(-1)\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      activo: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this.menuService.close(data);\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <span class=\"font-semibold text-gray-600 text-base\">Activo</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='0' class=\"fila-naranja\">No</mat-option>\r\n                <mat-option [value]='1' class=\"fila-amarillo\">Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IUnidadDeMedida } from '../../models/unidad-de-medida';\r\nimport { UnidadesDeMedidaService } from '../../service/unidades-de-medida.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-save-unidades-de-medida',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    form: FormGroup;\r\n    unidadMedida: IUnidadDeMedida;\r\n    title:string;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private unidadMedidaService: UnidadesDeMedidaService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>\r\n    ) {\r\n        this.unidadMedida = this.data ? this.data : null;\r\n        this.unidadMedida?.idunidadmedida ? this.title = 'Editar unidad de medida' : this.title = 'Nueva unidad de medida';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            descripcion: new FormControl((this.unidadMedida ? this.unidadMedida.descripcion : ''), Validators.required),\r\n            activo: new FormControl((this.unidadMedida ? (this.unidadMedida?.activo ? 1 : 0) : '')),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.unidadMedida = {\r\n                ...this.unidadMedida,\r\n                descripcion: this.form.get('descripcion').value,\r\n                activo: this.form.get('activo').value,\r\n            }\r\n            if (this.unidadMedida.idunidadmedida) {\r\n                this.unidadMedidaService.updateUnidadDeMedida(this.unidadMedida)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.onCloseMenu();\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this.unidadMedidaService.saveUnidadDeMedida(this.unidadMedida)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.onCloseMenu();\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col md:min-w-140 sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden bg-white shadow-sm dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Descripción</mat-label>\r\n            <input matInput formControlName='descripcion'>\r\n        </mat-form-field>\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Activo</mat-label>\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IUnidadDeMedida } from '../models/unidad-de-medida';\r\nimport { UnidadesDeMedidaService } from '../service/unidades-de-medida.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-unidades-de-medida',\r\n    templateUrl: './unidades-de-medida.component.html',\r\n    styleUrls: ['./unidades-de-medida.component.scss']\r\n})\r\nexport class UnidadesDeMedidaComponent implements OnInit, OnDestroy {\r\n    pedidos_de_presupuesto: IUnidadDeMedida[];\r\n    public dataSource: MatTableDataSource<IUnidadDeMedida> = new MatTableDataSource();\r\n    headers = ['Descripcion', 'Activo', 'Acciones'];\r\n    column_params = ['descripcion', 'activo', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.unidad_medidas + '?'; \r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _unidadesDeMedidaService: UnidadesDeMedidaService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        public _headerTextService: HeaderTextService,\r\n        private router: Router,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        },\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n     * @param origin \r\n     */\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateUnidadDeMedida(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteUnidadDeMedida(event);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveUnidadDeMedida() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Unidad de medida creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateUnidadDeMedida(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Unidad de medida editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteUnidadDeMedida(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Unidad de medida \" + event.params.data.descripcion,\r\n            message: \"¿Desea eliminar la Unidad de medida: \" + event.params.data.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._unidadesDeMedidaService.deleteUnidadDeMedida(event.params.data.idunidadmedida).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Unidad de medida eliminada con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Esta Unidad de medida no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveUnidadDeMedida()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Agregar Unidad de medida</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IUnidadDeMedida, Response } from '../models/unidad-de-medida';\r\nimport { AuthService } from '@core/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class UnidadesDeMedidaService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los unidades de medidas.\r\n     * @returns Unidades de medidas \r\n     */\r\n    getUnidadesDeMedida(filter?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += filter == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        var subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.stock.unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param unidad_medida \r\n     * @returns Una unidad de medida\r\n    */\r\n    saveUnidadDeMedida(unidad_medida: IUnidadDeMedida): Observable<IUnidadDeMedida> {\r\n        return this.http.post<IUnidadDeMedida>(`${environment.stock.unidad_medidas}`, unidad_medida);\r\n    }\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param unidad_medida \r\n     * @returns Una unidad de medida actualizada\r\n    */\r\n    updateUnidadDeMedida(unidad_medida: IUnidadDeMedida): Observable<IUnidadDeMedida> {\r\n        return this.http.put<IUnidadDeMedida>(`${environment.stock.unidad_medidas}` + '/' + unidad_medida.idunidadmedida, unidad_medida);\r\n    }\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idunidadmedida \r\n     * @returns Elimina la unidad de medida\r\n    */\r\n    deleteUnidadDeMedida(idunidadmedida: number): Observable<IUnidadDeMedida> {\r\n        return this.http.delete<IUnidadDeMedida>(environment.stock.unidad_medidas + '/' + idunidadmedida);\r\n    }\r\n\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UnidadesDeMedidaComponent } from './components/unidades-de-medida.component';\r\nimport { UnidadesDeMedidaService } from './service/unidades-de-medida.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from  '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UnidadesDeMedidaComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [UnidadesDeMedidaComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [UnidadesDeMedidaService, JedsMenuService, AppAlertService]\r\n})\r\nexport class UnidadesDeMedidaModule { }"],"names":["FormControl","FormGroup","fuseAnimations","Subject","takeUntil","FilterMenuComponent","constructor","data","menuService","_empresaService","default_color","_unsubscribeAll","ngOnInit","formFilters","activo","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","patchValue","filter","resetFilters","reset","onCloseMenu","close","i0","ɵɵdirectiveInject","i1","JedsMenuService","i2","EmpresaService","selectors","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_Template_button_click_23_listener","FilterMenuComponent_Template_button_click_26_listener","getRawValue","ɵɵproperty","ɵɵadvance","ɵɵclassMap","ɵɵstyleProp","EventEmitter","Validators","MAT_DIALOG_DATA","finalize","takeWhile","tap","timer","ctx_r0","_alertConfig","type","showAlert","ɵɵtextInterpolate1","message","SaveComponent","unidadMedidaService","alert","dialogRef","columns","creadoExitosamente","editadoExitosamente","unidadMedida","idunidadmedida","title","newForm","subscribeAlert","emitConfig","next","config","appearance","time","form","descripcion","required","onSubmit","valid","error","get","value","updateUnidadDeMedida","emit","saveUnidadDeMedida","UnidadesDeMedidaService","i3","AppAlertService","i4","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","ɵɵtemplate","SaveComponent_fuse_alert_8_Template","ɵɵelement","SaveComponent_Template_button_click_23_listener","ɵɵtextInterpolate","debounceTime","distinctUntilChanged","MatTableDataSource","TablaDinamicaComponent","environment","UnidadesDeMedidaComponent","_unidadesDeMedidaService","confirm","dialogo","_searchService","_menuService","_headerTextService","router","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","unidad_medidas","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","generarAcciones","name","deleteUnidadDeMedida","panelClass","componentInstance","success","params","autoFocus","dismissible","actions","show","color","label","cancel","res","renderTabla","console","warning","ngOnDestroy","unsubscribe","FuseConfirmationService","i5","MatDialog","i6","SearchService","i7","i8","HeaderTextService","i9","Router","viewQuery","UnidadesDeMedidaComponent_Query","UnidadesDeMedidaComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","UnidadesDeMedidaComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","http","_authService","getUnidadesDeMedida","f","subject","resp","accessToken","token","result","asObservable","unidad_medida","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","TablaDinamicaModule","routes","path","component","UnidadesDeMedidaModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}