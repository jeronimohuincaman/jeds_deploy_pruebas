{"version":3,"file":"src_app_modules_administracion_bancos_bancos_module_ts.js","mappings":"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","sources":["./src/app/modules/administracion/bancos/bancos.module.ts","./src/app/modules/administracion/bancos/components/bancos.component.ts","./src/app/modules/administracion/bancos/components/bancos.component.html","./src/app/modules/administracion/bancos/components/filter-menu/filter-menu.component.ts","./src/app/modules/administracion/bancos/components/filter-menu/filter-menu.component.html","./src/app/modules/administracion/bancos/components/save/save.component.ts","./src/app/modules/administracion/bancos/components/save/save.component.html","./src/app/modules/administracion/bancos/service/bancos.service.ts"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BancosComponent } from './components/bancos.component';\r\nimport { BancosService } from './service/bancos.service';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from  '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: BancosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [BancosComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [BancosService, JedsMenuService, AppAlertService]\r\n})\r\nexport class BancosModule { }","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IBanco } from '../models/banco';\r\nimport { BancosService } from '../service/bancos.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { FormControl } from '@angular/forms';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-bancos',\r\n    templateUrl: './bancos.component.html',\r\n    styleUrls: ['./bancos.component.scss']\r\n})\r\nexport class BancosComponent implements OnInit, OnDestroy {\r\n    bancos: IBanco[];\r\n    public dataSource: MatTableDataSource<IBanco> = new MatTableDataSource();\r\n    column_params = ['descripcion', 'activo', 'acciones']\r\n    headers = ['Nombre Banco', 'Activo', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.administracion.banco_token + '?';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _bancosService: BancosService,\r\n        private _empresaService: EmpresaService,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (banco: IBanco) => 'jedstion:editar',\r\n                iconoAccionado: (banco: IBanco) => '',\r\n                iconoDeshabilitado: (banco: IBanco) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (banco: IBanco) => 'jedstion:eliminar',\r\n                iconoAccionado: (banco: IBanco) => '',\r\n                iconoDeshabilitado: (banco: IBanco) => '',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n        debounceTime(250),\r\n        distinctUntilChanged()\r\n    )\r\n        .subscribe(value => {\r\n            this.filtroBusqueda = value;\r\n            this.tabla.filters(this.filtroBusqueda);\r\n        });\r\n\r\n    this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n        this.onFilterMenu(this._searchService.getFilterOrigin())\r\n    });\r\n    }\r\n\r\n        /**\r\n    * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n    * @param origin \r\n    */\r\n        onFilterMenu(origin: MatButton) {\r\n            this._menuService\r\n                .open(FilterMenuComponent, origin._elementRef, {\r\n                    filter: this.filter,\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: filter => {\r\n                        if (filter) {\r\n                            this.filter = filter;\r\n                            this.extraParams = this.filter?.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\r\n                            this.tabla.filters(this.filtroBusqueda);\r\n                            // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                        }\r\n                    },\r\n                });\r\n        }\r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateBanco(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteBanco(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveBanco() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Banco creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateBanco(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Banco editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteBanco(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Banco \" + event.params.data.descripcion,\r\n            message: \"¿Desea eliminar la Banco: \" + event.params.data.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._bancosService.deleteBanco(event.params.data.idbanco).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Banco eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Banco no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"absolute right-10\">\r\n            <button mat-flat-button (click)='saveBanco()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Agregar Banco</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-banco',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    /**\r\n    * Formulario de filtros\r\n    */\r\n    this.formFilters = new FormGroup({\r\n      activo: new FormControl(('')),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      activo: -1\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this._menuService.close(data);\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <span class=\"font-semibold text-gray-600 text-base\">Activo</span>\r\n        <mat-form-field\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"activo\">\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n                <mat-option [value]='0'>No</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IBanco } from '../../models/banco';\r\nimport { BancosService } from '../../service/bancos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-save-banco',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    form: FormGroup;\r\n    banco: IBanco;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _bancosService: BancosService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>\r\n    ) {\r\n        this.banco = this.data ? this.data : null;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            nombre: new FormControl((this.banco ? this.banco.descripcion : ''), Validators.required),\r\n            activo: new FormControl((this.banco ? (this.banco.activo ? 1 : 0) : 1)), // Se hace esa condicional porque en el componente\r\n                                                                                     // grilla dinamica convertimos los valores para poder \r\n                                                                                     // mostrarlos en la columna correspondiente\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.banco = {\r\n                ...this.banco,\r\n                descripcion: this.form.get('nombre').value,\r\n                activo: this.form.get('activo').value,\r\n            }\r\n            if (this.banco.idbanco) {\r\n                this._bancosService.updateBanco(this.banco)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.onCloseMenu();\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._bancosService.saveBanco(this.banco)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.onCloseMenu();\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Nuevo Banco</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input matInput formControlName='nombre'>\r\n        </mat-form-field>\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Activo</mat-label>\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { IBanco } from '../models/banco';\r\n\r\n@Injectable()\r\nexport class BancosService {\r\n  constructor(private http: HttpClient) {}\r\n  /**\r\n   * Funcion en el servicio\r\n   * - Esta funcion retorna los bancos activos.\r\n   * @returns Bancos activos\r\n   */\r\n  getBancos(filter?:any): Observable<IBanco[]> {\r\n    let f = '?';\r\n    f += filter == 'desc' ? 'sort=-descripcion' : 'sort=descripcion'; \r\n    \r\n    return this.http.get<IBanco[]>(`${environment.administracion.bancos}${f}`);\r\n  }\r\n/**\r\n * Funcion en el Servicio \r\n * @param banco \r\n * @returns Un banco nuevo\r\n */\r\n  saveBanco(banco: IBanco): Observable<IBanco> {\r\n    return this.http.post<IBanco>(`${environment.administracion.bancos}`, banco);\r\n  }\r\n/**\r\n * Funcion en el servicio\r\n * @param banco \r\n * @returns Banco actualizado\r\n */\r\n  updateBanco(banco: IBanco): Observable<IBanco> {\r\n    return this.http.put<IBanco>(`${environment.administracion.bancos}`+'/'+banco.idbanco, banco);\r\n  }\r\n/**\r\n * Funcion en el servicio\r\n * @param idbanco \r\n * @returns Elimina el banco\r\n */\r\n  deleteBanco(idbanco: number): Observable<IBanco> {\r\n    return this.http.delete<IBanco>(environment.administracion.bancos+'/'+idbanco);\r\n  }\r\n\r\n}"],"names":["RouterModule","CommonModule","BancosComponent","BancosService","MatTableModule","MatButtonModule","MatDialogModule","SaveComponent","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","JedsMenuService","MatIconModule","AppAlertService","MatTooltipModule","MatSortModule","FilterMenuComponent","TablaDinamicaModule","routes","path","component","BancosModule","imports","forChild","declarations","i1","exports","EventEmitter","Subject","debounceTime","distinctUntilChanged","takeUntil","MatTableDataSource","environment","FormControl","TablaDinamicaComponent","constructor","_bancosService","_empresaService","_searchService","_menuService","confirm","alert","dialogo","router","_headerTextService","dataSource","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","filter","activo","extraParams","parametrosActualizados","env","administracion","banco_token","search","default_color","_unsubscribeAll","setTitulo","nombre_boton","functionName","iconoAccion","banco","iconoAccionado","iconoDeshabilitado","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateBanco","deleteBanco","saveBanco","panelClass","componentInstance","creadoExitosamente","success","data","params","autoFocus","editadoExitosamente","title","descripcion","message","dismissible","actions","show","color","label","cancel","res","idbanco","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i2","EmpresaService","i3","SearchService","i4","i5","FuseConfirmationService","i6","i7","MatDialog","i8","Router","i9","HeaderTextService","selectors","viewQuery","BancosComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","BancosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","BancosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","ɵɵadvance","ɵɵclassMap","ɵɵstyleProp","ɵɵproperty","FormGroup","fuseAnimations","formFilters","patchValue","resetFilters","reset","onCloseMenu","close","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_Template_button_click_23_listener","FilterMenuComponent_Template_button_click_26_listener","getRawValue","Validators","MAT_DIALOG_DATA","finalize","takeWhile","tap","timer","ctx_r0","_alertConfig","type","showAlert","ɵɵtextInterpolate1","dialogRef","columns","newForm","subscribeAlert","emitConfig","config","appearance","time","form","nombre","required","onSubmit","valid","get","emit","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","ɵɵtemplate","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_button_click_23_listener","http","getBancos","f","bancos","post","put","delete","ɵɵinject","HttpClient","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}