{"version":3,"file":"src_app_modules_stock_movimiento-conversion_movimiento-conversion_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/movimiento-conversion/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/movimiento-conversion/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/movimiento-conversion/components/movimiento-conversion.component.ts","./src/app/modules/stock/movimiento-conversion/components/movimiento-conversion.component.html","./src/app/modules/stock/movimiento-conversion/components/save/save.component.ts","./src/app/modules/stock/movimiento-conversion/components/save/save.component.html","./src/app/modules/stock/movimiento-conversion/movimiento-conversion.module.ts","./src/app/modules/stock/movimiento-conversion/service/movimiento-conversion.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IMovimientoConversion } from '../../models/movimiento-conversion';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MovimientoConversionService } from '../../service/movimiento-conversion.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-movimiento-conversion',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuario: Observable<IUsuario[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterFechas: any = [];\r\n  movimientos_conversion_list: IMovimientoConversion[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _movimientosInternosService: MovimientoConversionService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._movimientosInternosService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuario = this.formFilters.controls['usuario'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._movimientosInternosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario\" matInput [matAutocomplete]=\"autoUsuario\" formControlName=\"usuario\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuario=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario of filteredUsuario | async\" [value]=\"usuario.nick\">\r\n                    {{usuario.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IMovimientoConversion } from '../models/movimiento-conversion';\r\nimport { MovimientoConversionService } from '../service/movimiento-conversion.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-movimiento-conversion',\r\n    templateUrl: './movimiento-conversion.component.html',\r\n    styleUrls: ['./movimiento-conversion.component.scss']\r\n})\r\nexport class MovimientoConversionComponent implements OnInit, OnDestroy {\r\n    movimientos_conversion: IMovimientoConversion[];\r\n    public dataSource: MatTableDataSource<IMovimientoConversion> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora','Responsable', 'Depósito','Artículo','Cantidad' , 'UM Origen', 'Cantidad','UM Destino', 'Acciones'];\r\n    column_params = ['fecha','hora', 'usuario','deposito', 'articulo','cantidad' , 'descripcion_um_origen','cantidad_conversion','descripcion_um_destino', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'usuario', 'deposito'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.movimiento_conversion + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _movimientoConversionService: MovimientoConversionService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'remove_red_eye',\r\n            nombre_boton: \"Ver\",\r\n            functionName: 'ver',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario != '' ? \"filter[usuario]=\" + this.filter.usuario + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'ver':\r\n                this.verMovimientoConversion(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteMovimientoConversion(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveMovimientoConversion() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento conversion creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    verMovimientoConversion(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteMovimientoConversion(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Movimiento conversion: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el movimiento conversion realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._movimientoConversionService.deleteMovimientoConversion(event.params.data.idmovimientoconversion).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Movimiento conversion eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este movimiento conversion no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveMovimientoConversion()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nueva Conversión</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IMovimientoConversion } from '../../models/movimiento-conversion';\r\nimport { MovimientoConversionService } from '../../service/movimiento-conversion.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-save-movimiento-conversion',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    form: FormGroup;\r\n    movimiento_conversion: IMovimientoConversion;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[] = [];\r\n    articulos: any[] = [];\r\n    unidades_de_medida_en_stock: any[] = [];\r\n    all_unidades_de_medida: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    articulos_list = [];\r\n    unidades_de_medida_destino: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _movimientoConversionService: MovimientoConversionService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n    ) {\r\n        this.movimiento_conversion = this.data ? this.data : null;\r\n        this.title = this.movimiento_conversion?.idmovimientoconversion ? `Editar conversion ${this.movimiento_conversion.fecha} ${this.movimiento_conversion.hora}` : `Nueva conversion`;\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.exist();\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.movimiento_conversion ? this.movimiento_conversion.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.movimiento_conversion?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.movimiento_conversion?.hora ? this.movimiento_conversion.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.movimiento_conversion ? { iddeposito: this.movimiento_conversion.iddeposito, descripcion: this.movimiento_conversion.deposito } : ''), Validators.required),\r\n            articulo: new FormControl((this.movimiento_conversion ? {\r\n                codigo_interno: this.movimiento_conversion.codigo_interno_articulo,\r\n                idarticulo: this.movimiento_conversion.idarticulo,\r\n                descripcion: this.movimiento_conversion.articulo\r\n            } : null), Validators.required),\r\n            unidad_medida_origen: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.unidad_medida_origen : ''), Validators.required),\r\n            unidad_medida_destino: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.unidad_medida_destino : ''), Validators.required),\r\n            cantidad: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.cantidad : ''), Validators.required),\r\n            observaciones: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n            stock_existente: new FormControl(('')),\r\n        });\r\n\r\n        this.form.get('unidad_medida_destino').disable();\r\n\r\n        if (this.movimiento_conversion) {\r\n            this.form.get('unidad_medida_origen').disable();\r\n            this.form.get('fecha').disable();\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    *Esta funcion se encarga de manejar las acciones necesarias segun sí el formulario es para crear o editar.\r\n    */\r\n    exist() {\r\n        if (this.movimiento_conversion?.idmovimientoconversion) {\r\n            this.getDepositos(true);    //Cargó todos los depósitos...\r\n            this.getArticulosDepositosStock(this.movimiento_conversion.iddeposito, this.movimiento_conversion.idarticulo, this.movimiento_conversion.unidad_medida_origen) //Solicito los articulos que hay en stock en un depósito en concreto...\r\n                .then(() => {   //...al final la peticion y asegurarme que esten todos los datos necesarios...\r\n                    this.getUnidadesDeMedidaArticulosStock(this.movimiento_conversion.idarticulo) //...hacemos un filtrado de las unidades de medida de los articulos que estan en stock.\r\n                })\r\n\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion lista los depósitos.\r\n     * @param option \r\n     */\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._movimientoConversionService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Filtro que ayuda en el autocompletado del input correspondiente.\r\n     * @param deposito \r\n     * @returns \r\n     */\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n     * Funcion que se encarga de obtener el valor textual para mostrarlo en el input de autocompletado.\r\n     * @param option \r\n     * @returns \r\n     */\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista los articulos que posee un déposito.\r\n    */\r\n    async getArticulosDepositosStock(iddeposito, idarticulo?, idunidadmedida?) {\r\n        const articulos_um_deposito = await firstValueFrom(this._movimientoConversionService.getArticulosDepositosStock(iddeposito, idarticulo, idunidadmedida)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            if (this.movimiento_conversion) {\r\n                let stock = articulos_um_deposito.list[0].stock;\r\n                this.form.get('stock_existente').setValue(Number(stock));\r\n            }\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n* Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n* @param $event \r\n*/\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.getUnidadesDeMedidaArticulosStock($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n            //Y habilitamos los demas inputs\r\n            this.form.get('unidad_medida_origen').enable()\r\n            this.form.get('cantidad').enable()\r\n        }\r\n\r\n        //Al seleccionar una UM...\r\n        if ($event.um) {\r\n            // this.unidades_de_medida_destino = this.all_unidades_de_medida.filter(x => x.idunidadmedida != $event.um); //Filtramos las unidades de media distintas a la seleccionada en el origen\r\n            this.unidades_de_medida_destino = this.all_unidades_de_medida.filter(x => Number(x.factor) === 1); //Filtramos las unidades de media y que solo se muestre la UM con factor uno\r\n            let articulo_um = this.unidades_de_medida_en_stock.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidad_medida_origen').value); //Consultamos sí existe un articulo con esa UM.\r\n            let stock = articulo_um.stock; //variable auxiliar  \r\n            this.form.get('stock_existente').setValue(stock);\r\n            this.form.get('unidad_medida_destino').enable();\r\n        }\r\n\r\n        //Al seleccionar un depósito...\r\n        if ($event.iddeposito) {\r\n            this.getArticulosDepositosStock($event.iddeposito);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo en stock en el depósito.\r\n     * @param idarticulo \r\n     */\r\n    async getUnidadesDeMedidaArticulosStock(idarticulo?) {\r\n        await new Promise(async (resolve) => {\r\n            let um_base;\r\n            this.unidades_de_medida_en_stock = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            }); //Filtramos para obtener las unidades de medida solamente de los articulos de ese deposito.\r\n            this.getUnidadesDeMedidaArticulo(idarticulo)\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion se encarga de llamar a todas las UM que tenga un articulo sin importar si existe o no  en el deposito.\r\n     * @param idarticulo \r\n     */\r\n    async getUnidadesDeMedidaArticulo(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            const unidadesmedidas = await firstValueFrom(this._movimientoConversionService.getUnidadesDeMedidaArticulos(idarticulo));\r\n            this.all_unidades_de_medida = unidadesmedidas.list.filter(a => a.idarticulo === idarticulo).map(a => { return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um.descripcion, factor: a.factor } });\r\n            this.unidades_de_medida_destino = unidadesmedidas.list.filter(a => a.idarticulo === idarticulo).map(a => { return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um.descripcion, factor: a.factor } });;\r\n\r\n            if (this.movimiento_conversion?.idmovimientoconversion) {//En caso de edicion...\r\n                this.unidades_de_medida_destino = this.unidades_de_medida_destino.filter(umd => umd.idunidadmedida != this.movimiento_conversion.unidad_medida_origen); //...Listar solo las UM distintas a la UM de origen.\r\n            }\r\n\r\n            resolve(true)\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidad_medida_origen').disable();\r\n            this.form.get('unidad_medida_origen').setValue('');\r\n            this.form.get('unidad_medida_destino').disable();\r\n            this.form.get('unidad_medida_destino').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n            this.form.get('cantidad').disable();\r\n        }\r\n\r\n        if ($event == 'unidad_medida_origen') {\r\n            this.form.get('unidad_medida_origen').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n            this.form.get('unidad_medida_destino').setValue('');\r\n            this.form.get('unidad_medida_destino').disable();\r\n        }\r\n\r\n        if ($event == 'unidad_medida_destino') {\r\n            this.form.get('unidad_medida_destino').setValue('');\r\n        }\r\n\r\n        if ($event == 'cantidad') {\r\n            this.form.get($event).setValue('');\r\n        }\r\n\r\n        if ($event == 'deposito') {\r\n            this.form.get('deposito').setValue('');\r\n            this.articulos_list = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es la encargada de encapsular y enviar los datos al servicio.\r\n     * @returns \r\n     */\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            if (this.form.get('cantidad').value > this.form.get('stock_existente').value) {\r\n                this.form.get('cantidad').setValue('');\r\n                return this.alert.warning('La cantidad a convertir no puede ser mayor al Stock Existente!');\r\n            }\r\n\r\n            if (this.form.get('cantidad').value < 1) {\r\n                this.form.get('cantidad').setValue('');\r\n                return this.alert.warning('La cantidad a convertir no puede ser un valor negativo!');\r\n            }\r\n\r\n            if (this.form.get('unidad_medida_origen').value === this.form.get('unidad_medida_destino').value) {\r\n                this.form.get('unidad_medida_destino').setValue('');\r\n                return this.alert.warning('La Unidad de medida a convertir no puede ser igual a la Unidad de Medida base')\r\n            }\r\n\r\n            //El 'Payload' es lo que espera el backend para poder persistir en la BD.\r\n            const payload = {\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${this.form.get('fecha').value} ${this.form.get('hora').value}`,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                idarticulo: this.form.get('articulo').value.idarticulo,\r\n                unidad_medida_origen: this.form.get('unidad_medida_origen').value,\r\n                unidad_medida_destino: this.form.get('unidad_medida_destino').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                observaciones: this.form.get('observaciones').value,\r\n            }\r\n\r\n            this._movimientoConversionService.saveMovimientoConversion(payload)\r\n                .subscribe({\r\n                    next: (data) => {\r\n                        if (data) {\r\n                            this.creadoExitosamente.emit();\r\n                            this.dialogRef.close(data);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" readonly=\"true\"\r\n                        [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" [readonly]=\"movimiento_conversion\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"dep\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\" [readonly]=\"movimiento_conversion\">\r\n                    <mat-autocomplete autoActiveFirstOption #dep=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && !movimiento_conversion\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\" [readonly]=\"movimiento_conversion\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value && !movimiento_conversion\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\"\r\n                    [ngClass]=\"['w-full', movimiento_conversion ? 'sm:w-3/4' : 'sm:w-2/4']\">\r\n                    <mat-label>UM Base</mat-label>\r\n                    <mat-select formControlName=\"unidad_medida_origen\"\r\n                        (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida_en_stock\" [value]=\"um.idunidadmedida\">\r\n                            {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}} {{um.um_base}})</i>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('unidad_medida_origen')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('unidad_medida_origen').value && !movimiento_conversion\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" *ngIf=\"!movimiento_conversion\" class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Artículo base en stock</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <!-- Condicional para la etiqueta del campo -->\r\n                    <mat-label *ngIf=\"movimiento_conversion; else normalLabel\">\r\n                        Cant. Convertida\r\n                    </mat-label>\r\n                    <ng-template #normalLabel>\r\n                        <mat-label>Cant. a convertir</mat-label>\r\n                    </ng-template>\r\n                    <!-- <mat-label>Cantidad a convertir</mat-label> -->\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\" [readonly]=\"movimiento_conversion\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('cantidad')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('cantidad').value && !movimiento_conversion\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>UM a convertir</mat-label>\r\n                    <mat-select formControlName=\"unidad_medida_destino\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida_destino\"\r\n                            [value]=\"um.idunidadmedida\">{{um.descripcion_um}}</mat-option>\r\n                    </mat-select>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('unidad_medida_destino')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('unidad_medida_destino').value && !movimiento_conversion\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"\r\n                    [readonly]=\"movimiento_conversion\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MovimientoConversionComponent } from './components/movimiento-conversion.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MovimientoConversionService } from './service/movimiento-conversion.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MovimientoConversionComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [MovimientoConversionComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [MovimientoConversionService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class MovimientoConversionModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IMovimientoConversion } from '../models/movimiento-conversion';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class MovimientoConversionService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param movimiento_conversion \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveMovimientoConversion(movimiento_conversion: IMovimientoConversion): Observable<IMovimientoConversion> {\r\n        return this.http.post<IMovimientoConversion>(`${environment.stock.movimiento_conversion}`, movimiento_conversion);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idmovimientoconversion \r\n     * @returns Elimina un item\r\n     */\r\n    deleteMovimientoConversion(idmovimientoconversion: number): Observable<IMovimientoConversion> {\r\n        return this.http.delete<IMovimientoConversion>(`${environment.stock.movimiento_conversion}` + '/' + idmovimientoconversion);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositosStock(deposito_origen: number, idarticulo?: number, idunidadmedida?: number) {\r\n        let f = `?filter[deposito]=${deposito_origen}`;\r\n        f += idarticulo ? `&filter[idarticulo]=${idarticulo}` : '';\r\n        f += idunidadmedida ? `&filter[idunidadmedida]=${idunidadmedida}` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUsuarios() {\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","deposito_r8","iddeposito","ɵɵadvance","ɵɵtextInterpolate","descripcion","usuario_r9","nick","ɵɵtextInterpolate1","FilterMenuComponent","constructor","data","_menuService","datePipe","_movimientosInternosService","_empresaService","usuarios","filterDeposito","filterFechas","movimientos_conversion_list","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","getDepositos","getUsuarios","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","filteredUsuario","controls","valueChanges","_filterUsuaurio","filterValue","toLowerCase","includes","_this2","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","DatePipe","i3","MovimientoConversionService","i4","EmpresaService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_Template_button_click_41_listener","FilterMenuComponent_Template_button_click_44_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r4","ɵɵpipeBind1","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","MovimientoConversionComponent","_movimientoConversionService","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","movimiento_conversion","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","next","generarAcciones","name","verMovimientoConversion","deleteMovimientoConversion","saveMovimientoConversion","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","title","fecha","message","hora","dismissible","actions","show","color","label","cancel","res","idmovimientoconversion","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","viewQuery","MovimientoConversionComponent_Query","MovimientoConversionComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","MovimientoConversionComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","finalize","takeWhile","tap","timer","MAT_DIALOG_DATA","ctx_r0","_alertConfig","type","showAlert","deposito_r17","SaveComponent_button_29_Template_button_click_0_listener","_r19","ctx_r18","limpiarCasillero","articulo_r20","ɵɵtextInterpolate2","codigo_interno","SaveComponent_button_39_Template_button_click_0_listener","_r22","ctx_r21","um_r23","factor_um","um_base","SaveComponent_mat_option_44_i_2_Template","idunidadmedida","descripcion_um","SaveComponent_button_45_Template_button_click_0_listener","_r27","ctx_r26","SaveComponent_button_52_Template_button_click_0_listener","_r29","ctx_r28","um_r30","SaveComponent_button_58_Template_button_click_0_listener","_r32","ctx_r31","dialogRef","depositos","articulos","unidades_de_medida_en_stock","all_unidades_de_medida","articulos_list","unidades_de_medida_destino","maxPalabras","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","newForm","subscribeAlert","emitConfig","config","appearance","time","dia","mes","anio","split","form","required","articulo","codigo_interno_articulo","idarticulo","unidad_medida_origen","unidad_medida_destino","cantidad","observaciones","maxLength","stock_existente","disable","getPalabrasLength","length","isPalabraMaxLengthReached","getArticulosDepositosStock","then","getUnidadesDeMedidaArticulosStock","option","Depositos","Promise","_ref","resolve","filteredDepositos","_filterDepositos","_x","apply","arguments","toString","getTextDeposito","articulos_um_deposito","_ref2","Number","filteredArticulos","_filterArticulos","_x2","forEach","item","existeArticulo","find","push","seleccionArticulo","enable","um","x","factor","articulo_um","a","getTextArticulo","_this3","_ref3","sort","b","parseFloat","getUnidadesDeMedidaArticulo","_x3","_this4","_ref4","unidadesmedidas","getUnidadesDeMedidaArticulos","umd","_x4","onSubmit","valid","payload","idusuario","id","fecha_hora","emit","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_ngModelChange_24_listener","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_Template_input_ngModelChange_34_listener","SaveComponent_mat_option_37_Template","SaveComponent_button_39_Template","SaveComponent_Template_mat_select_ngModelChange_43_listener","SaveComponent_mat_option_44_Template","SaveComponent_button_45_Template","SaveComponent_mat_form_field_46_Template","SaveComponent_mat_label_48_Template","SaveComponent_ng_template_49_Template","ɵɵtemplateRefExtractor","SaveComponent_button_52_Template","SaveComponent_mat_option_57_Template","SaveComponent_button_58_Template","SaveComponent_Template_button_click_66_listener","_r2","_r5","ɵɵpureFunction1","_c0","_r12","_c1","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","MovimientoConversionModule","imports","forChild","declarations","exports","http","_authService","post","delete","f","subject","resp","result","asObservable","deposito_origen","view_stock_articulo_depositos","accessToken","token","articulo_unidad_medidas","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}