{"version":3,"file":"src_app_modules_stock_movimiento-conversion_movimiento-conversion_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/movimiento-conversion/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/movimiento-conversion/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/movimiento-conversion/components/movimiento-conversion.component.ts","./src/app/modules/stock/movimiento-conversion/components/movimiento-conversion.component.html","./src/app/modules/stock/movimiento-conversion/components/save/save.component.ts","./src/app/modules/stock/movimiento-conversion/components/save/save.component.html","./src/app/modules/stock/movimiento-conversion/movimiento-conversion.module.ts","./src/app/modules/stock/movimiento-conversion/service/movimiento-conversion.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IMovimientoConversion } from '../../models/movimiento-conversion';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MovimientoConversionService } from '../../service/movimiento-conversion.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-movimiento-conversion',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  movimientos_conversion_list: IMovimientoConversion[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _movimientosInternosService: MovimientoConversionService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: -1,\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._movimientosInternosService.getUsuarios());\r\n    this.filterUsuarios = Usuarios.list\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._movimientosInternosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario of filterUsuarios\" [value]=\"usuario.codigo\">{{usuario.nick}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IMovimientoConversion } from '../models/movimiento-conversion';\r\nimport { MovimientoConversionService } from '../service/movimiento-conversion.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-movimiento-conversion',\r\n    templateUrl: './movimiento-conversion.component.html',\r\n    styleUrls: ['./movimiento-conversion.component.scss']\r\n})\r\nexport class MovimientoConversionComponent implements OnInit, OnDestroy {\r\n    movimientos_conversion: IMovimientoConversion[];\r\n    public dataSource: MatTableDataSource<IMovimientoConversion> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora','Responsable', 'Depósito','Artículo','Cantidad' , 'UM Origen', 'Cantidad','UM Destino', 'Acciones'];\r\n    column_params = ['fecha','hora', 'usuario','deposito', 'articulo','cantidad' , 'descripcion_um_origen','cantidad_conversion','descripcion_um_destino', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'usuario', 'deposito'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.movimiento_conversion + '?sort=-idmovimientoconversion';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n\r\n    constructor(\r\n        private _movimientoConversionService: MovimientoConversionService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'remove_red_eye',\r\n            nombre_boton: \"Ver\",\r\n            functionName: 'ver',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario != -1 ? \"filter[idusuario]=\" + this.filter.usuario + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'ver':\r\n                this.verMovimientoConversion(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteMovimientoConversion(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveMovimientoConversion() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento conversion creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    verMovimientoConversion(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteMovimientoConversion(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Movimiento conversion: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el movimiento conversion realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._movimientoConversionService.deleteMovimientoConversion(event.params.data.idmovimientoconversion).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Movimiento conversion eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este movimiento conversion no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Conversion'\r\n                (click)=\"saveMovimientoConversion()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IMovimientoConversion } from '../../models/movimiento-conversion';\r\nimport { MovimientoConversionService } from '../../service/movimiento-conversion.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-save-movimiento-conversion',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    form: FormGroup;\r\n    movimiento_conversion: IMovimientoConversion;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[] = [];\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    articulos_list = [];\r\n    unidades_de_medida_destino: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _movimientoConversionService: MovimientoConversionService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n    ) {\r\n        this.movimiento_conversion = this.data ? this.data : null;\r\n        this.title = this.movimiento_conversion?.idmovimientoconversion ? `Editar conversion ${this.movimiento_conversion.fecha} ${this.movimiento_conversion.hora}` : `Nueva conversion`;\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.exist();\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.movimiento_conversion ? this.movimiento_conversion.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.movimiento_conversion?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.movimiento_conversion?.hora ? this.movimiento_conversion.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito: new FormControl((this.movimiento_conversion ? { iddeposito: this.movimiento_conversion.iddeposito, descripcion: this.movimiento_conversion.deposito } : ''), Validators.required),\r\n            articulo: new FormControl((this.movimiento_conversion ? {\r\n                codigo_interno: this.movimiento_conversion.codigo_interno_articulo, \r\n                idarticulo: this.movimiento_conversion.idarticulo, \r\n                descripcion: this.movimiento_conversion.articulo \r\n            } : null), Validators.required),\r\n            unidad_medida_origen: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.unidad_medida_origen : ''), Validators.required),\r\n            unidad_medida_destino: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.unidad_medida_destino : ''), Validators.required),\r\n            cantidad: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.cantidad : ''), Validators.required),\r\n            observaciones: new FormControl((this.movimiento_conversion ? this.movimiento_conversion.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n            stock_existente: new FormControl(('')),\r\n        });\r\n\r\n        if (this.movimiento_conversion) {\r\n            this.form.get('unidad_medida_origen').disable();\r\n            this.form.get('unidad_medida_destino').disable();\r\n            this.form.get('fecha').disable();\r\n            this._movimientoConversionService.getArticulosDepositosStock(this.movimiento_conversion.iddeposito, this.movimiento_conversion.idarticulo, this.movimiento_conversion.unidad_medida_origen).subscribe((res: any) => {\r\n                this.form.get('stock_existente').setValue(Number(res.list[0].stock) - this.movimiento_conversion.cantidad);\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    *Esta funcion se encarga de manejar las acciones necesarias segun sí el formulario es para crear o editar.\r\n    */\r\n    exist() {\r\n        if (this.movimiento_conversion?.idmovimientoconversion) {\r\n            this.getDepositos(true);    //Cargó todos los depósitos...\r\n            this.getArticulosDepositosStock(this.movimiento_conversion.iddeposito) //Solicito los articulos que hay en stock en un depósito en concreto...\r\n                .then(() => {   //...al final la peticion y asegurarme que esten todos los datos necesarios...\r\n                    this.getUnidadesDeMedidaArticulosStock(this.movimiento_conversion.idarticulo) //...hacemos un filtrado de las unidades de medida de los articulos que estan en stock.\r\n                })\r\n\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion lista los depósitos.\r\n     * @param option \r\n     */\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._movimientoConversionService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Filtro que ayuda en el autocompletado del input correspondiente.\r\n     * @param deposito \r\n     * @returns \r\n     */\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n     * Funcion que se encarga de obtener el valor textual para mostrarlo en el input de autocompletado.\r\n     * @param option \r\n     * @returns \r\n     */\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista los articulos que posee un déposito.\r\n    */\r\n    async getArticulosDepositosStock(iddeposito) {\r\n        const articulos_um_deposito = await firstValueFrom(this._movimientoConversionService.getArticulosDepositosStock(iddeposito)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n* Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n* @param $event \r\n*/\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.getUnidadesDeMedidaArticulosStock($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n            //Y habilitamos los demas inputs\r\n            this.form.get('unidad_medida_origen').enable()\r\n            this.form.get('unidad_medida_destino').enable()\r\n            this.form.get('cantidad').enable()\r\n        }\r\n\r\n        //Al seleccionar una UM...\r\n        if ($event.um) {\r\n            this.unidades_de_medida_destino = this.unidades_de_medida.filter(x => x.idunidadmedida != $event.um); //Filtramos las unidades de media distintas a la seleccionada en el origen\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidad_medida_origen').value); //Consultamos sí existe un articulo con esa UM.\r\n            let stock = articulo_um.stock; //variable auxiliar  \r\n            this.form.get('stock_existente').setValue(stock);\r\n            this.form.get('unidad_medida_destino').enable();\r\n        }\r\n\r\n        //Al seleccionar un depósito...\r\n        if ($event.iddeposito) {\r\n            this.getArticulosDepositosStock($event.iddeposito);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo en stock en el depósito.\r\n     * @param idarticulo \r\n     */\r\n    async getUnidadesDeMedidaArticulosStock(idarticulo?) {\r\n        await new Promise(async (resolve) => {\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo).map(a => { return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock } }); //Filtramos para obtener las unidades de medida solamente de los articulos de ese deposito.\r\n            this.getUnidadesDeMedidaArticulo(idarticulo)\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion se encarga de llamar a todas las UM que tenga un articulo sin importar si existe o no  en el deposito.\r\n     * @param idarticulo \r\n     */\r\n    async getUnidadesDeMedidaArticulo(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            const unidadesmedidas = await firstValueFrom(this._movimientoConversionService.getUnidadesDeMedidaArticulos(idarticulo));\r\n            this.unidades_de_medida_destino = unidadesmedidas.list.filter(a => a.idarticulo === idarticulo).map(a => { return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um.descripcion } });;\r\n\r\n            if (this.movimiento_conversion?.idmovimientoconversion) {//En caso de edicion...\r\n                this.unidades_de_medida_destino = this.unidades_de_medida_destino.filter(umd => umd.idunidadmedida != this.movimiento_conversion.unidad_medida_origen); //...Listar solo las UM distintas a la UM de origen.\r\n            }\r\n\r\n            resolve(true)\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidad_medida_origen').disable();\r\n            this.form.get('unidad_medida_origen').setValue('');\r\n            this.form.get('unidad_medida_destino').disable();\r\n            this.form.get('unidad_medida_destino').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n            this.form.get('cantidad').disable();\r\n        }\r\n\r\n        if ($event == 'unidad_medida_origen') {\r\n            this.form.get('unidad_medida_origen').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n            this.form.get('unidad_medida_destino').setValue('');\r\n            this.form.get('unidad_medida_destino').disable();\r\n        }\r\n\r\n        if ($event == 'unidad_medida_destino') {\r\n            this.form.get('unidad_medida_destino').setValue('');\r\n        }\r\n\r\n        if ($event == 'cantidad') {\r\n            this.form.get($event).setValue('');\r\n        }\r\n\r\n        if ($event == 'deposito') {\r\n            this.form.get('deposito').setValue('');\r\n            this.articulos_list = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es la encargada de encapsular y enviar los datos al servicio.\r\n     * @returns \r\n     */\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            if (this.form.get('cantidad').value > this.form.get('stock_existente').value) {\r\n                this.form.get('cantidad').setValue('');\r\n                return this.alert.warning('La cantidad a convertir no puede ser mayor al Stock Existente!');\r\n            }\r\n\r\n            if (this.form.get('cantidad').value < 1) {\r\n                this.form.get('cantidad').setValue('');\r\n                return this.alert.warning('La cantidad a convertir no puede ser un valor negativo!');\r\n            }\r\n\r\n            //El 'Payload' es lo que espera el backend para poder persistir en la BD.\r\n            const payload = {\r\n                idusuario: this.user.id,\r\n                fecha_hora: `${this.form.get('fecha').value} ${this.form.get('hora').value}`,\r\n                iddeposito: this.form.get('deposito').value.iddeposito,\r\n                idarticulo: this.form.get('articulo').value.idarticulo,\r\n                unidad_medida_origen: this.form.get('unidad_medida_origen').value,\r\n                unidad_medida_destino: this.form.get('unidad_medida_destino').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                observaciones: this.form.get('observaciones').value,\r\n            }\r\n\r\n            this._movimientoConversionService.saveMovimientoConversion(payload)\r\n                .subscribe({\r\n                    next: (data) => {\r\n                        if (data) {\r\n                            this.creadoExitosamente.emit();\r\n                            this.dialogRef.close(data);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                <mat-label>Hora</mat-label>\r\n                <input matInput formControlName=\"hora\" type=\"time\" [readonly]=\"movimiento_conversion\"/>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Depósito</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"dep\"\r\n                    (ngModelChange)=\"seleccionArticulo($event)\" [readonly]=\"movimiento_conversion\">\r\n                <mat-autocomplete autoActiveFirstOption #dep=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                    <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                        {{ deposito.descripcion }}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                    *ngIf=\"form.get('deposito').value && !movimiento_conversion\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                <mat-label>Artículo</mat-label>\r\n                <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                    (ngModelChange)=\"seleccionArticulo($event)\" [readonly]=\"movimiento_conversion\">\r\n                <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                    <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                        {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n                <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                    *ngIf=\"form.get('articulo').value && !movimiento_conversion\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                <mat-label>UM Base</mat-label>\r\n                <mat-select formControlName=\"unidad_medida_origen\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                    <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                        [value]=\"um.idunidadmedida\">{{um.descripcion_um}}</mat-option>\r\n                </mat-select>\r\n                <button matSuffix mat-icon-button (click)=\"limpiarCasillero('unidad_medida_origen')\" class=\"mr-2\"\r\n                    *ngIf=\"form.get('unidad_medida_origen').value && !movimiento_conversion\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                <mat-label>En stock</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                <mat-label>Cantidad</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"cantidad\" [readonly]=\"movimiento_conversion\">\r\n                <button matSuffix mat-icon-button (click)=\"limpiarCasillero('cantidad')\" class=\"mr-2\"\r\n                    *ngIf=\"form.get('cantidad').value && !movimiento_conversion\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                <mat-label>UM a convertir</mat-label>\r\n                <mat-select formControlName=\"unidad_medida_destino\">\r\n                    <mat-option *ngFor=\"let um of unidades_de_medida_destino\"\r\n                        [value]=\"um.idunidadmedida\">{{um.descripcion_um}}</mat-option>\r\n                </mat-select>\r\n                <button matSuffix mat-icon-button (click)=\"limpiarCasillero('unidad_medida_destino')\" class=\"mr-2\"\r\n                    *ngIf=\"form.get('unidad_medida_destino').value && !movimiento_conversion\">\r\n                    <mat-icon>clear</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\" [readonly]=\"movimiento_conversion\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' *ngIf=\"!movimiento_conversion\" (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MovimientoConversionComponent } from './components/movimiento-conversion.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MovimientoConversionService } from './service/movimiento-conversion.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MovimientoConversionComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [MovimientoConversionComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [MovimientoConversionService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class MovimientoConversionModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IMovimientoConversion } from '../models/movimiento-conversion';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class MovimientoConversionService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param movimiento_conversion \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveMovimientoConversion(movimiento_conversion: IMovimientoConversion): Observable<IMovimientoConversion> {\r\n        return this.http.post<IMovimientoConversion>(`${environment.stock.movimiento_conversion}`, movimiento_conversion);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idmovimientoconversion \r\n     * @returns Elimina un item\r\n     */\r\n    deleteMovimientoConversion(idmovimientoconversion: number): Observable<IMovimientoConversion> {\r\n        return this.http.delete<IMovimientoConversion>(`${environment.stock.movimiento_conversion}` + '/' + idmovimientoconversion);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositosStock(deposito_origen: number, idarticulo?: number, idunidadmedida?:number) {\r\n        let f = `?filter[deposito]=${deposito_origen}`;\r\n        f+= idarticulo ? `&filter[idarticulo]=${idarticulo}` : '';\r\n        f+= idunidadmedida ? `&filter[idunidadmedida]=${idunidadmedida}` : '';\r\n        \r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUsuarios() {\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","i0","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","ɵɵproperty","deposito_r6","iddeposito","ɵɵadvance","ɵɵtextInterpolate","descripcion","usuario_r7","codigo","ɵɵtextInterpolate1","nick","FilterMenuComponent","constructor","data","_menuService","datePipe","_movimientosInternosService","usuarios","filterDeposito","filterUsuarios","filterFechas","movimientos_conversion_list","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","_this2","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","DatePipe","i3","MovimientoConversionService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵelement","ɵɵtemplate","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_Template_button_click_37_listener","FilterMenuComponent_Template_button_click_40_listener","getRawValue","_r0","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","MovimientoConversionComponent","_movimientoConversionService","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","movimiento_conversion","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","pipe","subscribe","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","next","generarAcciones","name","verMovimientoConversion","deleteMovimientoConversion","saveMovimientoConversion","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","title","fecha","message","hora","dismissible","actions","show","color","label","cancel","res","idmovimientoconversion","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","FuseConfirmationService","AppAlertService","i4","MatDialog","i5","SearchService","i6","i7","Router","i8","HeaderTextService","viewQuery","MovimientoConversionComponent_Query","MovimientoConversionComponent_Template_button_click_3_listener","MovimientoConversionComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","$event","Validators","Subject","finalize","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","ctx_r0","_alertConfig","type","showAlert","deposito_r14","SaveComponent_button_28_Template_button_click_0_listener","_r16","ctx_r15","limpiarCasillero","articulo_r17","ɵɵtextInterpolate2","codigo_interno","SaveComponent_button_38_Template_button_click_0_listener","_r19","ctx_r18","um_r20","idunidadmedida","descripcion_um","SaveComponent_button_44_Template_button_click_0_listener","_r22","ctx_r21","SaveComponent_button_53_Template_button_click_0_listener","_r24","ctx_r23","um_r25","SaveComponent_button_59_Template_button_click_0_listener","_r27","ctx_r26","SaveComponent_button_68_Template_button_click_0_listener","_r29","ctx_r28","onSubmit","dialogRef","depositos","articulos","unidades_de_medida","articulos_list","unidades_de_medida_destino","maxPalabras","_unsubscribeAll","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","newForm","subscribeAlert","emitConfig","config","appearance","time","dia","mes","anio","split","form","required","articulo","codigo_interno_articulo","idarticulo","unidad_medida_origen","unidad_medida_destino","cantidad","observaciones","maxLength","stock_existente","disable","getArticulosDepositosStock","Number","getPalabrasLength","length","isPalabraMaxLengthReached","then","getUnidadesDeMedidaArticulosStock","option","Depositos","Promise","_ref","resolve","filteredDepositos","valueChanges","_filterDepositos","_x","apply","arguments","filterValue","toString","toLowerCase","includes","getTextDeposito","articulos_um_deposito","_ref2","filteredArticulos","_filterArticulos","_x2","forEach","item","existeArticulo","find","push","seleccionArticulo","enable","um","x","articulo_um","a","getTextArticulo","_this3","_ref3","getUnidadesDeMedidaArticulo","_x3","_this4","_ref4","unidadesmedidas","getUnidadesDeMedidaArticulos","umd","_x4","valid","payload","idusuario","id","fecha_hora","emit","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_ngModelChange_23_listener","SaveComponent_mat_option_26_Template","SaveComponent_button_28_Template","SaveComponent_Template_input_ngModelChange_33_listener","SaveComponent_mat_option_36_Template","SaveComponent_button_38_Template","SaveComponent_Template_mat_select_ngModelChange_42_listener","SaveComponent_mat_option_43_Template","SaveComponent_button_44_Template","SaveComponent_button_53_Template","SaveComponent_mat_option_58_Template","SaveComponent_button_59_Template","SaveComponent_button_68_Template","_r1","_r2","ɵɵpipeBind1","ɵɵpureFunction1","_c0","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","MovimientoConversionModule","imports","forChild","declarations","exports","http","_authService","post","delete","f","subject","resp","result","asObservable","deposito_origen","view_stock_articulo_depositos","articulo_unidad_medidas","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}