{"version":3,"file":"src_app_modules_compras_pedidos-de-presupuesto_pedidos-de-presupuestos_module_ts.js","mappings":"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","sources":["./src/app/modules/compras/pedidos-de-presupuesto/components/cotizar/cotizar.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/cotizar/cotizar.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/filter-menu/filter-menu.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/filter-menu/filter-menu.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/generar-orden/generar-orden.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/generar-orden/generar-orden.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/nueva-cotizacion/nueva-cotizacion.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/nueva-cotizacion/nueva-cotizacion.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/pedidos-de-presupuesto.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/pedidos-de-presupuesto.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/save/save.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/save/save.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/ver-cotizacion/ver-cotizacion.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/ver-cotizacion/ver-cotizacion.component.html","./src/app/modules/compras/pedidos-de-presupuesto/pedidos-de-presupuestos.module.ts","./src/app/modules/compras/pedidos-de-presupuesto/service/pedidos-de-presupuesto.service.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ICotizacion, ICreateCotizacion, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { environment } from 'environments/environment';\r\nimport { NuevaCotizacionComponent } from '../nueva-cotizacion/nueva-cotizacion.component';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { IResponse } from '@shared/models/response-with-token';\r\nimport { GenerarOrdenComponent } from '../generar-orden/generar-orden.component';\r\n\r\n@Component({\r\n    selector: 'app-cotizar-pedidos-de-presupuesto',\r\n    templateUrl: './cotizar.component.html',\r\n    styleUrls: ['./cotizar.component.scss']\r\n})\r\nexport class CotizarComponent implements OnInit {\r\n    // Necesarios para la app\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    // Particulares del modulo\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Proveedor', 'Acciones'];\r\n    column_params = ['fecha', 'proveedor', 'acciones'];\r\n    form: FormGroup;\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    funcionesObjeto = null;\r\n    cotizaciones: ICotizacion[];\r\n    env = null;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _pedidosDePresupuestosService: PedidoDePresupuestoService,\r\n        private confirm: FuseConfirmationService,\r\n        private _empresaService: EmpresaService,\r\n        private dialogo: MatDialog,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<CotizarComponent>\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data ? this.data : null;\r\n        this.title = `Cotizaciones Pedido de Presupuesto N° ${this.pedido_de_presupuesto.idpedido}`;\r\n\r\n        /**\r\n     * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n     */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (cotizacion: ICotizacion) => cotizacion.orden_compra ? 'jedstion:editar_disabled' : 'jedstion:editar',\r\n                iconoAccionado: (cotizacion: ICotizacion) => '',\r\n                iconoDeshabilitado: (cotizacion: ICotizacion) => '',\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (cotizacion: ICotizacion) => cotizacion.orden_compra ? 'jedstion:eliminar_disabled' : 'jedstion:eliminar',\r\n                iconoAccionado: (cotizacion: ICotizacion) => '',\r\n                iconoDeshabilitado: (cotizacion: ICotizacion) => '',\r\n            },\r\n            {\r\n                icono: 'orden_de_compra',\r\n                nombre_boton: \"Generar Orden de Compra\",\r\n                functionName: 'orden_de_compra',\r\n                iconoAccion: (cotizacion: ICotizacion) => cotizacion.orden_compra ? 'jedstion:orden_de_produccion_disabled' : 'jedstion:orden_de_produccion',\r\n                iconoAccionado: (cotizacion: ICotizacion) => '',\r\n                iconoDeshabilitado: (cotizacion: ICotizacion) => '',\r\n            }\r\n        ];\r\n\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        this.env = environment.compras.view_compras_cotizacion + '?' + `filter[idpedido]=${this.pedido_de_presupuesto.idpedido}&sort=-fecha`;\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1700)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                if (event.params.data.orden_compra != null) {\r\n                    this.alert.warning('No puedes editar esta cotización. Tiene una orden de compra asociada. Eliminela antes de continuar.');\r\n                } else {\r\n                    this.updateCotizacion(event);\r\n                }\r\n                break;\r\n            case 'eliminar':\r\n                if (event.params.data.orden_compra != null) {\r\n                    this.alert.warning('No puedes eliminar esta cotización. Tiene una orden de compra asociada. Eliminela antes de continuar.');\r\n                } else {\r\n                    this.deleteCotizacion(event);\r\n                }\r\n                break;\r\n            case 'orden_de_compra':\r\n                if (event.params.data.orden_compra != null) {\r\n                    this.alert.warning(' Ya haz generado una orden de compra para esta cotización.');\r\n                } else {\r\n                    this.generarOrdenDeCompra(event);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    nuevaCotizacion() {\r\n        this.dialogo\r\n            .open(NuevaCotizacionComponent, {\r\n                data: {\r\n                    pedido_de_presupuesto: this.pedido_de_presupuesto,\r\n                    cotizacion: null\r\n                },\r\n                panelClass: 'my-dialog',\r\n                autoFocus: false\r\n            })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Cotización creada con éxito.\");\r\n                    this.tabla.renderTabla();\r\n                },\r\n            });\r\n    }\r\n\r\n    /** Modal Encargado de levantar edicion */\r\n    updateCotizacion(event) {\r\n        this.dialogo\r\n            .open(NuevaCotizacionComponent, {\r\n                data: {\r\n                    pedido_de_presupuesto: this.pedido_de_presupuesto,\r\n                    cotizacion: event.params.data\r\n                },\r\n                panelClass: 'my-dialog',\r\n                autoFocus: false\r\n            })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: (data: IResponse<any>) => {\r\n                    if (data.success) {\r\n                        this.alert.success(\"Cotización editada con éxito.\");\r\n                    } else if (!data.success) {\r\n                        this.alert.error(data.result);\r\n                    }\r\n\r\n                    this.tabla.renderTabla();\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteCotizacion(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Cotización \" + event.params.data.observaciones,\r\n            message: \"¿Desea eliminar la Cotización de: \" + event.params.data.proveedor + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._pedidosDePresupuestosService.deleteCotizacion(event.params.data.idcotizacion).subscribe({\r\n                        next: (data: any) => {\r\n                            // Manejar la respuesta exitosa\r\n                            if (data.success) {\r\n                                this.alert.success(\"Cotización eliminada con éxito.\");\r\n                                this.tabla.renderTabla()\r\n                            } else {\r\n                                this.alert.error(data.result);\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este pedido de presupuesto no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado levantar el modal de orden de compra\r\n     * @param event \r\n     */\r\n    generarOrdenDeCompra(event) {\r\n        this.dialogo\r\n            .open(GenerarOrdenComponent, {\r\n                data: {\r\n                    pedido_de_presupuesto: this.pedido_de_presupuesto,\r\n                    cotizacion: event.params.data\r\n                },\r\n                panelClass: 'my-dialog',\r\n                autoFocus: false\r\n            })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: (data: IResponse<any>) => {\r\n                    if (data.success) {\r\n                        this.alert.success(\"Orden de compra Generada con éxito.\");\r\n                    } else if (!data.success) {\r\n                        this.alert.error(data.result);\r\n                    }\r\n\r\n                    this.tabla.renderTabla();\r\n                }\r\n            })\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <div class=\"p-4\">\r\n        <div class=\"flex mb-2\">\r\n            <!-- Contenedor del botón -->\r\n            <div class=\"ml-auto\">\r\n                <button mat-flat-button (click)='nuevaCotizacion()' #save [class]=\"color_primario ? '' : default_color\"\r\n                    [style.border]=\"color_primario || '' \" [style.color]=\"color_primario || '' \"\r\n                    class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                    <div class=\"flex item-center\">\r\n                        <!-- SVG con fill=\"currentColor\" -->\r\n                        <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                        </svg>\r\n                        <span class=\"ml-2 text-lg mt-0.5\">Nueva cotizacion</span>\r\n                    </div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Grilla -->\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [isModal]=\"true\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { PedidoDePresupuestoService } from 'app/modules/compras/pedidos-de-presupuesto/service/pedidos-de-presupuesto.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-pedidos-de-presupuesto',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedores: IProveedor[] = [];\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  filteredProveedores: Observable<IProveedor[]>;\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any,\r\n    private _empresaService: EmpresaService,\r\n    private menuService: JedsMenuService,\r\n    private _pedidoDePresupuestoService: PedidoDePresupuestoService\r\n  ) {\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n        this.color_primario = empresa.color_primario;\r\n        this.color_secundario = empresa.color_secundario;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      cotizado: new FormControl((-1)),\r\n      proveedor: new FormControl((''))\r\n    });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    this.getProveedores();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      cotizado: -1,\r\n      proveedor: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this.menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n  * @returns \r\n  */\r\n  async getProveedores(option?) {\r\n    const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores(option));\r\n    new Promise(async (resolve) => {\r\n      this.proveedores = Proveedores.list;\r\n      this.filteredProveedores = this.formFilters.get('proveedor').valueChanges.pipe(\r\n        startWith(''),\r\n        map((value) => this._filterProveedores(value)),\r\n      );\r\n      resolve(true);\r\n    })\r\n  };\r\n\r\n  getTextProveedor(option) {\r\n    return option ? option.RazonSocial : '';\r\n  }\r\n\r\n  private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n    const filterValue = proveedor.toString().toLowerCase();\r\n    return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <!-- Cotizado -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Contestado</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName='cotizado'>\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Proveedores -->\r\n        <span *ngIf=\"formFilters.get('proveedor')\" class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\r\n        <mat-form-field *ngIf=\"formFilters.get('proveedor')\"\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\"\r\n                formControlName=\"proveedor\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete autoActiveFirstOption #autoProveedor=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                    {{ proveedor.RazonSocial }}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \"\r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { ICotizacion, ICotizacionItem, ICreateGenerarOC, IItemPedidoForm, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { combineLatest, finalize, firstValueFrom, map, Observable, startWith, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n// Interfaz que maneja el modal de dialog\r\ninterface DataModal {\r\n    pedido_de_presupuesto: {},\r\n    cotizacion: {}\r\n}\r\n\r\n@Component({\r\n    selector: 'app-generar-orden-pedido-de-presupuesto',\r\n    templateUrl: './generar-orden.component.html',\r\n    styleUrls: ['./generar-orden.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\n\r\nexport class GenerarOrdenComponent implements OnInit {\r\n    // Necesarios para la app\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n    @Output() public editadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n\r\n    // Particulares del modulo\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    cotizacion: ICotizacion\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    form: FormGroup;\r\n    proveedores: IProveedor[];\r\n    columns = ['codigointerno', 'articulo', 'solicitado', 'detalle', 'cotiza', 'cantidad', 'unitario', 'subtotal', 'oc']; // estos son las columnas de la grilla\r\n    items_formulario: IItemPedidoForm[];\r\n    isReadOnly: boolean = true; // Cambiar a false si quieres permitir edición\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: DataModal,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<GenerarOrdenComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data.pedido_de_presupuesto ? this.data.pedido_de_presupuesto : null;\r\n        this.cotizacion = this.data.cotizacion ? this.data.cotizacion : null;\r\n        this.title = `Generar Orden de compra a partir de la Cotización #${this.cotizacion.idcotizacion} - ${this.cotizacion.proveedor}`;\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getProveedores(); // Método que carga proveedores\r\n        this.subscribeAlert();\r\n        this.existeCotizacion();\r\n    }\r\n\r\n    /**\r\n     * Metodo que inicializa el/los formularios de la aplicaciónz\r\n     */\r\n    newForm() {\r\n        const [dia, mes, anio] = this.cotizacion ? this.cotizacion.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl(({ Codigo: this.cotizacion.idproveedor, RazonSocial: this.cotizacion.proveedor }), [Validators.required]),\r\n            fecha: new FormControl((this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd')), [Validators.required]),\r\n            total: new FormControl(''),\r\n            observaciones: new FormControl((this.cotizacion.observaciones), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n\r\n        if (this.isReadOnly) {\r\n            this.form.disable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de encapsular los datos en un payload y realizar la persistencia\r\n     */\r\n    onSubmit() {\r\n        const existeOrdenCompra = this.items_formulario.find(i => i.oc.value === true);\r\n        if (!existeOrdenCompra) {\r\n            return this.alert.warning('Debe marcar por lo menos un item para generar la orden de compra');\r\n        }\r\n\r\n        const payload: ICreateGenerarOC = {\r\n            cotizacion: this.cotizacion.idcotizacion\r\n        }\r\n\r\n        if (this.cotizacion?.idcotizacion) {\r\n            this._pedidoDePresupuestoService.generarOrdenCompra(payload)\r\n                .subscribe({\r\n                    next: (data: any) => {\r\n                        if (data) {\r\n                            this.creadoExitosamente.emit(data);\r\n                            this.onCloseMenu(data);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de cerrar el dialogo, transmitiendo la informacion al componente padre\r\n     * @param data \r\n     */\r\n    onCloseMenu(data) {\r\n        this.dialogRef.close(data)\r\n    }\r\n\r\n    /**\r\n     * Metodo que se encarga de verificar que exista cotizacion para mapear los datos del servicio que lista los items de una cotizacion\r\n     */\r\n    async existeCotizacion() {\r\n        let Items; // Variable auxiliar\r\n\r\n        if (this.cotizacion?.idcotizacion) {\r\n            Items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsCotizacion(this.cotizacion.idcotizacion));\r\n        }\r\n\r\n        Items.list = Items.list.map(i => {\r\n            return {\r\n                ...i,\r\n                codigo_interno: i.codigo_articulo,\r\n                oc: i.oc === 1 ? true : false,\r\n                cotiza: i.cotiza === 1 ? true : false,\r\n                cantidad: Number(i.cantidad),\r\n                unitario: Number(i.unitario),\r\n                subtotal: Number(i.subtotal)\r\n            }\r\n        })\r\n\r\n        await this.crearGrillaForm(Items);\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de\r\n     * 1) Recorrer los items que me devuelve la API para agregar un input con el valor en \"cantidad recibida\", valor \"unitario\", \"subtotal\", \"OC\" y \"Cotiza\".\r\n     * 2) Escuchar los cambios de \"cantidad recibida\" y valor \"unitaro\" para calcular el subtotal y total.\r\n     * 3) Actualizar el campo \"total\" y rendizar los items en la grilla.\r\n     * @param Items \r\n     */\r\n    crearGrillaForm(Items) {\r\n        const subtotalObservables = []; // Almacena los observables de subtotales\r\n        this.items_formulario = Items.list;\r\n\r\n        this.items_formulario.forEach((item: IItemPedidoForm | ICotizacionItem, index, items_array) => {\r\n\r\n            // Define los FormControls\r\n            const cantidadRecibidaControl = new FormControl(\r\n                { value: item.cantidad, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const unitarioControl = new FormControl(\r\n                { value: item.unitario || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const subtotalControl = new FormControl(\r\n                { value: item.subtotal || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            // Escuchar cambios en cantidad_recibida y unitario\r\n            cantidadRecibidaControl.valueChanges.subscribe(() => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n            unitarioControl.valueChanges.subscribe((a) => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n\r\n            subtotalObservables.push(\r\n                subtotalControl.valueChanges.pipe(\r\n                    startWith(Number(subtotalControl.value) || 0)\r\n                )\r\n            );\r\n\r\n            // Asigna los controles al item\r\n            items_array[index].cantidad_recibida = cantidadRecibidaControl;\r\n            items_array[index].unitario = unitarioControl;\r\n            items_array[index].subtotal = subtotalControl;\r\n\r\n            items_array[index].cotiza = new FormControl({ value: item.cotiza, disabled: this.isReadOnly });  // No es necesario un validador aquí si es booleano\r\n            items_array[index].oc = new FormControl({ value: item.oc, disabled: this.isReadOnly });     // No es necesario un validador aquí si es booleano\r\n        });\r\n\r\n        this.updateTotal()\r\n\r\n\r\n        combineLatest(subtotalObservables).pipe(\r\n            map((subtotales: number[]) => {\r\n                return subtotales.reduce((sum, current) => sum + (current || 0), 0);\r\n            })\r\n        ).subscribe((total) => {\r\n            this.form.get('total')?.patchValue(total, { emitEvent: false });\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource(this.items_formulario);\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n     * Metodo que consulta los proveedores del sistema y ademas encapsula los proveedores de que tiene un pedido de presupuesto\r\n     * @param option \r\n     */\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores(option));\r\n        const proveedores_del_pedido = this.pedido_de_presupuesto.proveedores.split(',').map(num => parseInt(num));\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list.filter(p => proveedores_del_pedido.includes(p.Codigo));\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Metodo de filtrado utilizado en los autocompletes\r\n     * @param proveedor \r\n     * @returns \r\n     */\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n     * Metodo para renderizar el texto de un autocomplete\r\n     * @param option \r\n     * @returns \r\n     */\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n     * Metodo para calcular el valor total entre todos los subtotales de una grilla\r\n     */\r\n    updateTotal() {\r\n        const total = this.items_formulario.reduce((sum, item) => {\r\n            const subtotal = Number(item.subtotal['value']) || 0;\r\n            return sum + subtotal;\r\n        }, 0);\r\n\r\n        this.form.get('total')?.setValue(total, { emitEvent: false });\r\n    }\r\n\r\n\r\n    /**\r\n    * Método para calcular y actualizar el subtotal\r\n    */\r\n    updateSubtotal(\r\n        cantidadRecibidaControl: FormControl,\r\n        unitarioControl: FormControl,\r\n        subtotalControl: FormControl\r\n    ) {\r\n        const cantidad = Number(cantidadRecibidaControl.value) || 0;\r\n        const unitario = Number(unitarioControl.value) || 0;\r\n        const subtotal = cantidad * unitario;\r\n\r\n        subtotalControl.setValue(subtotal, { emitEvent: false }); // Evita bucles de eventos\r\n    }\r\n\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-auto sm:w-min-w-auto sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu(false)\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <!-- Date, Supplier, and Total Inputs -->\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <!-- Date Picker -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/3\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-2/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value && this.isReadOnly === false\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n\r\n                <!-- Total Input -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/3 sm:w-40\">\r\n                    <mat-label>Total</mat-label>\r\n                    <div class=\"flex items-center\">\r\n                        <input matInput formControlName='total' type=\"number\">\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Grilla (Table) -->\r\n            <div class=\"overflow-y-auto max-h-[500] h-[500] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"w-full mt-1\">\r\n                    <!-- Columns Definitions -->\r\n                    <ng-container matColumnDef=\"codigointerno\">\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.articulo_descripcion}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='solicitado'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Solicitado</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            {{ row.cantidad }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Detalle</th>\r\n                        <div\r\n                            class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\">\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                {{ row.detalle }}\r\n                            </td>\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cotiza'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cotiza</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.cotiza\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto\">Cant. a Pedir</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_recibida\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unitario'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto p-2\">\r\n                            Precio Unitario\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.unitario\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='subtotal'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto\">Subtotal</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.subtotal\" type=\"number\" readonly placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='oc'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">OC</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.oc\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Observations -->\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Generar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { ICotizacion, ICotizacionItem, ICreateCotizacion, IItemPedidoForm, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { combineLatest, finalize, firstValueFrom, map, Observable, startWith, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\ninterface DataModal {\r\n    pedido_de_presupuesto: {},\r\n    cotizacion: {}\r\n}\r\n\r\n@Component({\r\n    selector: 'app-nueva-cotizacion',\r\n    templateUrl: './nueva-cotizacion.component.html',\r\n    styleUrls: ['./nueva-cotizacion.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\n\r\nexport class NuevaCotizacionComponent implements OnInit {\r\n    // Necesarios para la app\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n    @Output() public editadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n\r\n    // Particulares del modulo\r\n    cotizacion: ICotizacion\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    form: FormGroup;\r\n    proveedores: IProveedor[];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    columns = ['codigointerno', 'articulo', 'solicitado', 'detalle', 'cotiza', 'cantidad', 'unitario', 'subtotal', 'oc'];\r\n    items_formulario: IItemPedidoForm[];\r\n    isReadOnly: boolean = false;\r\n    isAllSelected: boolean = true;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: DataModal,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<NuevaCotizacionComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data.pedido_de_presupuesto ? this.data.pedido_de_presupuesto : null;\r\n        this.cotizacion = this.data.cotizacion ? this.data.cotizacion : null;\r\n        this.title = `Contestación de Pedido de Presupuesto #${this.pedido_de_presupuesto.idpedido}`;\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getProveedores(); // Método que carga proveedores\r\n        this.subscribeAlert();\r\n        this.existeCotizacion();\r\n    }\r\n\r\n    /**\r\n    * Metodo que inicializa el/los formularios de la aplicaciónz\r\n    */\r\n    newForm() {\r\n        const [dia, mes, anio] = this.cotizacion ? this.cotizacion.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl((this.cotizacion?.idproveedor ? { Codigo: this.cotizacion.idproveedor, RazonSocial: this.cotizacion.proveedor } : ''), Validators.required),\r\n            fecha: new FormControl((this.cotizacion?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            total: new FormControl(''),\r\n            observaciones: new FormControl((this.cotizacion?.observaciones ? this.cotizacion.observaciones : this.pedido_de_presupuesto.observaciones), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Metodo encargado de encapsular los datos en un payload y realizar la persistencia\r\n    */\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            this.alert.error('Error al cargar cotizacion. Verifique haber seleccionado un proveedor');\r\n        } else {\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            const items_cotizacion = this.items_formulario.map((item: IItemPedidoForm) => {\r\n                return {\r\n                    idpedidoitem: item.idpedidoitem,\r\n                    cotiza: item.cotiza.value === true ? 1 : 0,\r\n                    cantidad: item.cantidad_recibida['value'] ? item.cantidad_recibida['value'] : 0,\r\n                    unitario: item.unitario['value'] ? item.unitario['value'] : 0,\r\n                    oc: item.oc.value === true ? 1 : 0\r\n                }\r\n            });\r\n\r\n\r\n            const existe_item_cotizado_con_valor_cero = items_cotizacion.find(i => i.cotiza === 1 && i.unitario <= 0);\r\n            if (existe_item_cotizado_con_valor_cero) {\r\n                return this.alert.error('Error al cargar cotizacion. No se puede cotizar un item con valor menor o igual a cero.');\r\n            };\r\n\r\n            const existe_cantidad_item_mayor_a_la_solicitada = this.items_formulario.find((item: IItemPedidoForm) => item.cantidad_recibida['value'] > item.cantidad);\r\n            if (existe_cantidad_item_mayor_a_la_solicitada) {\r\n                return this.alert.error('Error al cargar cotizacion. No se puede cotizar una cantidad mayor a la pedida');\r\n            }\r\n\r\n            const payload: ICreateCotizacion = {\r\n                cotizacion: {\r\n                    idpedido: this.pedido_de_presupuesto.idpedido,\r\n                    idproveedor: this.form.get('proveedor').value.Codigo,\r\n                    fecha: fecha_formateada,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                items: items_cotizacion\r\n            }\r\n\r\n            if (this.cotizacion?.idcotizacion) {\r\n                this._pedidoDePresupuestoService.updateCotizazcion(this.cotizacion.idcotizacion, payload)\r\n                    .subscribe({\r\n                        next: (data: any) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit(data);\r\n                                this.onCloseMenu(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._pedidoDePresupuestoService.saveCotizacion(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.onCloseMenu(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu(data) {\r\n        this.dialogRef.close(data)\r\n    }\r\n\r\n    /**\r\n    * Metodo que se encarga de verificar que exista cotizacion para mapear los datos del servicio que lista los items de una cotizacion\r\n    */\r\n    async existeCotizacion() {\r\n        let Items; // Variable auxiliar\r\n\r\n        if (this.cotizacion?.idcotizacion) {\r\n            Items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsCotizacion(this.cotizacion.idcotizacion));\r\n        } else {\r\n            Items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsPedido(this.pedido_de_presupuesto.idpedido));\r\n        }\r\n\r\n        Items.list = Items.list.map(i => {\r\n            return {\r\n                ...i,\r\n                codigo_interno: i.codigo_articulo ? i.codigo_articulo : i.codigo_interno,\r\n                oc: this.cotizacion?.idcotizacion ? (i.oc === 1 ? true : false) : false,\r\n                cotiza: this.cotizacion?.idcotizacion ? (i.cotiza === 1 ? true : false) : true,\r\n                cantidad: Number(i.cantidad),\r\n                unitario: Number(i.unitario),\r\n                subtotal: Number(i.subtotal)\r\n            }\r\n        })\r\n\r\n\r\n        await this.crearGrillaForm(Items);\r\n    }\r\n\r\n    /**\r\n* Metodo encargado de\r\n* 1) Recorrer los items que me devuelve la API para agregar un input con el valor en \"cantidad recibida\", valor \"unitario\", \"subtotal\", \"OC\" y \"Cotiza\".\r\n* 2) Escuchar los cambios de \"cantidad recibida\" y valor \"unitaro\" para calcular el subtotal y total.\r\n* 3) Actualizar el campo \"total\" y rendizar los items en la grilla.\r\n* @param Items \r\n*/\r\n    crearGrillaForm(Items) {\r\n        const subtotalObservables = []; // Almacena los observables de subtotales\r\n        this.items_formulario = Items.list;\r\n\r\n        this.items_formulario.forEach((item: IItemPedidoForm | ICotizacionItem, index, items_array) => {\r\n\r\n            // Define los FormControls\r\n            const cantidadRecibidaControl = new FormControl(\r\n                { value: item.cantidad || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const unitarioControl = new FormControl(\r\n                { value: item.unitario || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const subtotalControl = new FormControl(\r\n                { value: item.subtotal || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            // Escuchar cambios en cantidad_recibida y unitario\r\n            cantidadRecibidaControl.valueChanges.subscribe(() => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n            unitarioControl.valueChanges.subscribe((a) => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n\r\n            subtotalObservables.push(\r\n                subtotalControl.valueChanges.pipe(\r\n                    startWith(Number(subtotalControl.value) || 0)\r\n                )\r\n            );\r\n\r\n            // Asigna los controles al item\r\n            items_array[index].cantidad_recibida = cantidadRecibidaControl;\r\n            items_array[index].unitario = unitarioControl;\r\n            items_array[index].subtotal = subtotalControl;\r\n\r\n            items_array[index].cotiza = new FormControl({ value: item.cotiza, disabled: this.isReadOnly });  // No es necesario un validador aquí si es booleano\r\n            items_array[index].oc = new FormControl({ value: item.oc, disabled: this.isReadOnly });     // No es necesario un validador aquí si es booleano\r\n        });\r\n\r\n        this.updateTotal()\r\n\r\n\r\n        combineLatest(subtotalObservables).pipe(\r\n            map((subtotales: number[]) => {\r\n                return subtotales.reduce((sum, current) => sum + (current || 0), 0);\r\n            })\r\n        ).subscribe((total) => {\r\n            this.form.get('total')?.patchValue(total, { emitEvent: false });\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource(this.items_formulario);\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores(option));\r\n        const proveedores_del_pedido = this.pedido_de_presupuesto.proveedores.split(',').map(num => parseInt(num));\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list.filter(p => proveedores_del_pedido.includes(p.Codigo));\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n     * Metodo para calcular el valor total entre todos los subtotales de una grilla\r\n     */\r\n    updateTotal() {\r\n        const total = this.items_formulario.reduce((sum, item) => {\r\n            const subtotal = Number(item.subtotal['value']) || 0;\r\n            return sum + subtotal;\r\n        }, 0);\r\n\r\n        this.form.get('total')?.setValue(total, { emitEvent: false });\r\n    }\r\n\r\n\r\n    /**\r\n    * Método para calcular y actualizar el subtotal\r\n    */\r\n    updateSubtotal(\r\n        cantidadRecibidaControl: FormControl,\r\n        unitarioControl: FormControl,\r\n        subtotalControl: FormControl\r\n    ) {\r\n        const cantidad = Number(cantidadRecibidaControl.value) || 0;\r\n        const unitario = Number(unitarioControl.value) || 0;\r\n        const subtotal = cantidad * unitario;\r\n\r\n        subtotalControl.setValue(subtotal, { emitEvent: false }); // Evita bucles de eventos\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Este metodo es el encargado de seleccionar/deseleccionar todos los checkbox de la grilla\r\n     * @param control caolumna del checkbox que se quiere seleccionar/deseleccionar\r\n     */\r\n    seleccionarTodos(control: string) {\r\n        // Obtengo todos los items de ese control que esten seleccionados\r\n        const items_seleccion = this.items_formulario.filter(item => item[control].value === this.isAllSelected);\r\n\r\n        // Si hay mas de un item con el valor de la varibale global, seteo el valor contrario. Esto es asi al ser un metodo reutilizable, si nosotros seleccionamos todos en la columna \"cotiza\" y despues vamos a \"oc\" y seleccionamos todos, deberiamos solo obtener el valor de seleccion (seleccionar todos o deseleccionar todos) de esa columna no del ultimo valor que tiene la varibale global.\r\n        if (items_seleccion.length > 1) {\r\n            this.isAllSelected = !this.isAllSelected; // Asignamos el valor contrario a la variable global\r\n        }\r\n\r\n        // Recorremos todas las filas de ese columa y le asignamos el valor de la variable global\r\n        this.items_formulario.forEach(item => {\r\n            item[control].setValue(this.isAllSelected);\r\n        });\r\n\r\n        this.isAllSelected = !this.isAllSelected; // Le asignamos el valor contrario a la ultima seleccion\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-auto sm:w-min-w-auto sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu(false)\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <!-- Date, Supplier, and Total Inputs -->\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <!-- Date Picker -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/3\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-2/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value && this.isReadOnly === false\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n\r\n                <!-- Total Input -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/3 sm:w-40\">\r\n                    <mat-label>Total</mat-label>\r\n                    <div class=\"flex items-center\">\r\n                        <input matInput formControlName='total' type=\"number\">\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Grilla (Table) -->\r\n            <div class=\"overflow-y-auto max-h-[500] h-[500] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"w-full mt-1\">\r\n                    <!-- Columns Definitions -->\r\n                    <ng-container matColumnDef=\"codigointerno\">\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \"\r\n                            class=\"rounded-tl-lg text-white w-auto text-center\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto text-center\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.articulo_descripcion}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='solicitado'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto text-center\">Solicitado\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            {{ row.cantidad }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Detalle</th>\r\n                        <div\r\n                            class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\">\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                {{ row.detalle }}\r\n                            </td>\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cotiza'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"[style.background]=\"color_primario || '' \" class=\"text-white w-auto text-center\" [ngClass]=\"['cursor-pointer','transition-colors','duration-500','ease-in-out', 'hover:bg-gray-500' ]\"  (click)=\"seleccionarTodos('cotiza')\">\r\n                            Cotiza\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.cotiza\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto\">Cant. a Pedir</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_recibida\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unitario'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto p-2\">\r\n                            Precio Unitario\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.unitario\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='subtotal'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto text-center\">Subtotal\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.subtotal\" type=\"number\" readonly placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"oc\">\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\"\r\n                            [ngClass]=\"['cursor-pointer','transition-colors','duration-500','ease-in-out', 'hover:bg-gray-500' ]\"\r\n                            class=\"text-white w-auto rounded-tr-lg text-center\" (click)=\"seleccionarTodos('oc')\">\r\n                            OC\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.oc\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Observations -->\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IPedidoDePresupuesto } from '../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../service/pedidos-de-presupuesto.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { CotizarComponent } from './cotizar/cotizar.component';\r\nimport { VerCotizacionComponent } from './ver-cotizacion/ver-cotizacion.component';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\nimport { EnviarEmailModalComponent } from '@shared/components/enviar-email-modal/enviar-email.component';\r\n\r\n@Component({\r\n    selector: 'app-pedidos-de-presupuesto',\r\n    templateUrl: './pedidos-de-presupuesto.component.html',\r\n    styleUrls: ['./pedidos-de-presupuesto.component.scss']\r\n})\r\n\r\nexport class PedidoDePresupuestoComponent implements OnInit, OnDestroy {\r\n    pedidos_de_presupuesto: IPedidoDePresupuesto[];\r\n    public dataSource: MatTableDataSource<IPedidoDePresupuesto> = new MatTableDataSource();\r\n    headers = ['Numero', 'Fecha', 'Contestado', 'Proveedores', 'Acciones'];\r\n    column_params = ['idpedido', 'fecha', 'cotizado', 'proveedores_descripcion', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['proveedores_descripcion'];\r\n    filter: IFilter = {\r\n        cotizado: -1,\r\n        proveedor: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.compras.view_compras_pedidos + '?';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    @Output() public enviadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private _pedidoDePresupuestosService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'view',\r\n            nombre_boton: \"Ver pedido\",\r\n            functionName: 'ver',\r\n            iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:ver',\r\n            iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n            iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n        },\r\n        {\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            iconoAccion: (pedido: IPedidoDePresupuesto) => pedido.cotizado === 0 ? 'jedstion:editar' : 'jedstion:editar_disabled',\r\n            iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n            iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n            iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:eliminar',\r\n            iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n            iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n        },\r\n        {\r\n            icono: 'comment',\r\n            nombre_boton: \"Cotizaciones\",\r\n            functionName: 'cotizaciones',\r\n            iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:cotizar',\r\n            iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n            iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '' /* 'jedstion:cotizar_disabled' */,\r\n        },\r\n        {\r\n            icono: 'impresora',\r\n            nombre_boton: \"Reporte de Pedido\",\r\n            functionName: 'reporte_pedido',\r\n            iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:imprimir',\r\n            iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n            iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n        },\r\n        {\r\n            icono: 'send',\r\n            nombre_boton: \"Enviar Pedido\",\r\n            functionName: 'enviar_pedido',\r\n            iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:enviar',\r\n            iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n            iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n        }\r\n        ];\r\n\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.cotizado != -1 ? \"filter[cotizado]=\" + this.filter.cotizado : '';\r\n                        this.extraParams += this.filter.proveedor != -1 ? \"&filter[proveedores][like]=\" + this.filter.proveedor.Codigo.toString() : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                if (event.params.data.cotizado === 0) {\r\n                    this.updatePedidoDePresupuesto(event);\r\n                } else {\r\n                    this.alert.warning('Este pedido no puede editarse. Tiene una cotización asociada')\r\n                }\r\n                break;\r\n            case 'eliminar':\r\n                this.deletePedidoDePresupuesto(event);\r\n                break;\r\n            case 'cotizaciones':\r\n                this.cotizarPedidoDePresupuesto(event);\r\n                break;\r\n            case 'ver':\r\n                this.verPedidoDePresupuesto(event);\r\n                break;\r\n            case 'reporte_pedido':\r\n                this.reportePedidoDePresupuesto(event);\r\n                break;\r\n            case 'enviar_pedido':\r\n                // this.alert.info('Esta función estará disponible proximamente');\r\n                this.enviarPedidoDePresupuesto(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    savePedidoDePresupuesto() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updatePedidoDePresupuesto(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deletePedidoDePresupuesto(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar pedido de presupuesto \" + event.params.data.observaciones,\r\n            message: \"¿Desea eliminar el pedido de presupuesto: \" + event.params.data.observaciones + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._pedidoDePresupuestosService.deletePedidoDePresupuesto(event.params.data.idpedido).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Pedido de presupuesto eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este pedido de presupuesto no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    cotizarPedidoDePresupuesto(event) {\r\n        this.dialogo\r\n            .open(CotizarComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    verPedidoDePresupuesto(event) {\r\n        this.dialogo\r\n            .open(VerCotizacionComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reportePedidoDePresupuesto(event) {\r\n        const idpedido = event.params.data.idpedido;\r\n        this._pedidoDePresupuestosService.reportePedidoDePresupuesto(idpedido).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank');\r\n                    }\r\n                } else {\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    enviarPedidoDePresupuesto(event) {\r\n        const modal_data = {\r\n            model: event.params.data,\r\n            _endpointService: environment.compras.compras_pedidos_enviar_presupuesto,\r\n            title: `Enviar Pedido de Presupuesto N°${event.params.data.idpedido}`,\r\n            permiteAdjunto: false\r\n        };\r\n\r\n        this.dialogo\r\n            .open(EnviarEmailModalComponent, { data: modal_data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.enviadoExitosamente\r\n            .subscribe({\r\n                next: (data) => {\r\n                    if (data['success'] === true) {\r\n                        this.alert.success('Email enviado con éxito');\r\n                    } else {\r\n                        this.alert.error(data['error']);\r\n                    }\r\n\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='savePedidoDePresupuesto()' #save\r\n                [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Pedido de presupuesto</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { ICreatePedidoPresupuesto, IItemPedido, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { debounceTime, distinctUntilChanged, finalize, firstValueFrom, map, Observable, startWith, Subject, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-save-pedidos-de-presupuesto',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'detalle', 'acciones'];\r\n    selectedProveedores: IProveedor[] = [];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    mov_art_list: any[] = [];\r\n    articulos: IArticulo[] = []\r\n    articulos_list = [];\r\n    unidades_de_medida: any[] = [];\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    proveedores: IProveedor[];\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data ? this.data : null;\r\n        this.title = this.pedido_de_presupuesto?.idpedido ? 'Editar pedido de presupuesto' : 'Nuevo pedido de presupuesto';\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getProveedores(); // Método que carga proveedores\r\n        this.getArticulos(); // Método que carga articulos\r\n        this.subscribeAlert();\r\n\r\n        // Escuchamos los cambios en el control de 'articulo' para filtrar mientras escribe\r\n        this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n            debounceTime(300),  // Evita demasiadas llamadas consecutivas\r\n            distinctUntilChanged(), // Solo procede si el valor cambia\r\n            switchMap((value) => {\r\n                const idarticulo = typeof value === 'object' ? value.idarticulo : null;\r\n                const filterLike = typeof value === 'string' ? value : null;\r\n                return this._pedidoDePresupuestoService.getArticulos(idarticulo, filterLike);\r\n            })\r\n        ).subscribe(response => {\r\n            this.filteredArticulos = response.list;\r\n        });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.pedido_de_presupuesto ? this.pedido_de_presupuesto.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.pedido_de_presupuesto) { //Sí existe el pedido de presupuesto, cargo la grilla con sus articulos...\r\n            this.getItemsPedido(this.pedido_de_presupuesto.idpedido).then((res) => {\r\n                this.mov_art_list = res.map((m: IItemPedido) => {\r\n                    return {\r\n                        articulo: m.idarticulo,\r\n                        cantidad: m.cantidad,\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.articulo_descripcion,\r\n                        descripcion_um: m.um_descripcion,\r\n                        codigo_interno_articulo: m.codigo_interno,\r\n                        detalle: m.detalle\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.pedido_de_presupuesto?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'YYYY-MM-dd')), [Validators.required]),\r\n            proveedor: new FormControl(''),\r\n            observaciones: new FormControl((this.pedido_de_presupuesto?.observaciones ? this.pedido_de_presupuesto?.observaciones : ''))\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), [Validators.required, Validators.min(1)]),\r\n            detalle: new FormControl((''))\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    selectProveedor($event: MatAutocompleteSelectedEvent): void {\r\n        const selected = $event.option.value;\r\n\r\n        if (selected && !this.selectedProveedores.includes(selected)) {\r\n            this.selectedProveedores.push(selected);\r\n        }\r\n\r\n        this.form.get('proveedor').setValue('');\r\n    }\r\n\r\n    removeProveedor(proveedor: IProveedor): void {\r\n        const index = this.selectedProveedores.indexOf(proveedor);\r\n        if (index >= 0) {\r\n            this.selectedProveedores.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            const items_pedido = this.mov_art_list.map(a => {\r\n                return {\r\n                    idarticulo: a.articulo,\r\n                    idunidadmedida: a.idunidadmedida,\r\n                    cantidad: a.cantidad,\r\n                    detalle: a.detalle\r\n                }\r\n            });\r\n\r\n            const proveedores_id = this.selectedProveedores.map(p => {\r\n                return p.Codigo\r\n            })\r\n\r\n            const payload: ICreatePedidoPresupuesto = {\r\n                pedido: {\r\n                    fecha: fecha_formateada,\r\n                    observaciones: this.form.get('observaciones').value\r\n                },\r\n                articulos: items_pedido,\r\n                proveedores: proveedores_id\r\n            }\r\n\r\n            if (this.pedido_de_presupuesto?.idpedido) {\r\n                this._pedidoDePresupuestoService.updatePedidoDePresupuesto(this.pedido_de_presupuesto.idpedido, payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._pedidoDePresupuestoService.savePedidoDePresupuesto(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Esta funcion maneja las cambios de seleccion que puedan tener los combos.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n\r\n            // Muevo el foco al campo \"cantidad\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"cantidad\".\r\n            setTimeout(() => {\r\n                const cantidadField = document.querySelector('[formControlName=\"cantidad\"]') as HTMLInputElement;\r\n                cantidadField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        if ($event && info === 'cambio_de_foco') {\r\n            $event.preventDefault();\r\n\r\n            // Muevo el foco al campo \"detalle\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"detalle\".\r\n            setTimeout(() => {\r\n                const detalleField = document.querySelector('[formControlName=\"detalle\"]') as HTMLInputElement;\r\n                detalleField?.focus();\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    /**\r\n* Funcion para limpiar campos\r\n*/\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('detalle').setValue('');\r\n        }\r\n\r\n        if (input === 'proveedor') {\r\n            this.selectedProveedores = [];\r\n            this.form.get('proveedor').setValue(null);\r\n        }\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var movimiento_articulo Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (movimiento) { //Si 'res' no es false | undefined | null, continua con la logica...\r\n            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                articulo: movimiento.articulo.idarticulo,\r\n                cantidad: movimiento.cantidad,\r\n                idunidadmedida: movimiento.unidad_medida,\r\n                descripcion_articulo: movimiento.articulo.descripcion,\r\n                descripcion_um: movimiento.unidadmedida_descripcion,\r\n                codigo_interno_articulo: movimiento.articulo.codigo_interno,\r\n                detalle: movimiento.detalle\r\n            }\r\n            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n            // Actualizar validaciones según el estado de la grilla\r\n            this.updateFormValidators()\r\n\r\n            this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n            this.alert.success(\"Artículo añadido con éxito\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteMovimiento(articulo) {\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('presupuesto').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent, input?: string) {\r\n\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning('Por favor, Ingrese una cantidad mayor a cero');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe seleccionar un artículo');\r\n        } else {\r\n            let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.articulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n\r\n            if (existeMovimiento) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida');\r\n            }\r\n\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n            let movimiento_articulo = {\r\n                articulo: this.form_carga_articulos.get('articulo').value,\r\n                unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                detalle: this.form_carga_articulos.get('detalle').value,\r\n                cantidad: this.form_carga_articulos.get('cantidad').value\r\n            }\r\n\r\n            this.addMovimiento(movimiento_articulo);\r\n        }\r\n\r\n        // Mueve el foco al campo \"articulo\" después de la carga\r\n        this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n        const articuloField = document.querySelector('[formControlName=\"articulo\"]') as HTMLInputElement;\r\n        articuloField?.focus();\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n\r\n    /**\r\n    * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n    */\r\n    etiquetaArticulo() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._pedidoDePresupuestoService.getArticulos(idarticulo).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores());\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n\r\n            // En caso de edicion...\r\n            if (this.pedido_de_presupuesto) {\r\n                const id_proveedores = this.pedido_de_presupuesto.proveedores.toString().split(\",\"); // Encapsulo los idproveedor que me envia el servicio en un arreglo de tipo String...\r\n\r\n                // Por cada idproveedor...\r\n                id_proveedores.forEach(idproveedor => {\r\n                    // Busco el proveedor el cual coincida su 'codigo' y el 'idproveedor' parseado a Entero...\r\n                    let proveedor = this.proveedores.find((p: IProveedor) => p.Codigo === parseInt(idproveedor));\r\n\r\n                    // Si no existe el proveedor en arreglo que lista los chips...\r\n                    if (!this.selectedProveedores.includes(proveedor)) {\r\n                        // Lo agrego.\r\n                        this.selectedProveedores.push(proveedor);\r\n                    }\r\n                    // Sino no hace nada...\r\n                });\r\n                // Termina ejecucion...\r\n            }\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._pedidoDePresupuestoService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            this.articulos_list = this.articulos;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._pedidoDePresupuestoService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list.sort((a, b) => a.factor - b.factor).map(unidad => {\r\n                //Convierto en numero\r\n                unidad.factor = parseFloat(unidad.factor);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (unidad.factor === 1) {\r\n                    um_base = unidad.um.descripcion;\r\n                }\r\n\r\n                return { idunidadmedida: unidad.idunidadmedida, descripcion_um: unidad.um.descripcion, factor_um: unidad.factor, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    async getItemsPedido(idpedido): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsPedido(idpedido))\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo?.idarticulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n    */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.required, Validators.min(1)]);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.min(1));\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                <mat-label>Proveedor</mat-label>\r\n                <mat-chip-grid #chipgrid aria-label=\"Seleccione Proveedor\">\r\n                    <mat-chip-row *ngFor=\"let proveedor of selectedProveedores\" [value]=\"proveedor\"\r\n                        (removed)=\"removeProveedor(proveedor)\">\r\n                        {{ proveedor.RazonSocial }}\r\n                        <button matChipRemove>\r\n                            <mat-icon>cancel</mat-icon>\r\n                        </button>\r\n                    </mat-chip-row>\r\n                    <input [placeholder]=\" 'Agregar Proveedor' \" #proveedorInput formControlName=\"proveedor\"\r\n                        [matChipInputFor]=\"chipgrid\" [matAutocomplete]=\"auto\" />\r\n                </mat-chip-grid>\r\n                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selectProveedor($event)\">\r\n                    <mat-option *ngFor=\" let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                        {{ proveedor.RazonSocial }}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                        (keydown.enter)=\"seleccionItem($event, 'cambio_de_foco')\">\r\n                        <mat-label>Cantidad</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full  sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Detalle</mat-label>\r\n                            <input matInput type=\"text\" formControlName=\"detalle\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Cargar'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <div class=\"search-container mt-2 mb-1 flex\">\r\n                <div class=\"relative w-full md:w-1/3\">\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar artículo\"\r\n                        class=\"w-full bg-slate-50 border border-gray-200 rounded-lg shadow-md py-2 px-4 text-sm placeholder-gray-500 text-gray-700 transition duration-300\" />\r\n                    <span class=\"absolute inset-y-0 right-4 flex items-center text-gray-400\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fill-rule=\"evenodd\"\r\n                                d=\"M12.9 14.32a8 8 0 111.42-1.42l4.39 4.4a1 1 0 11-1.42 1.41l-4.4-4.39zM8 14a6 6 0 100-12 6 6 0 000 12z\"\r\n                                clip-rule=\"evenodd\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">UM</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Detalle</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            <i>{{ movimiento_articulo.detalle }}</i>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { ICreateCotizacion, IItemPedido, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { firstValueFrom, Observable, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-ver-cotizacion-pedidos-de-presupuesto',\r\n    templateUrl: './ver-cotizacion.component.html',\r\n    styleUrls: ['./ver-cotizacion.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n\r\n})\r\nexport class VerCotizacionComponent implements OnInit {\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'detalle'];\r\n    form: FormGroup;\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    mov_art_list: any[] = [];\r\n    selectedProveedores: IProveedor[] = [];\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    proveedores: IProveedor[];\r\n\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n\r\n    maxPalabras: number = 50;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<VerCotizacionComponent>\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data ? this.data : null;\r\n        this.title = `Pedido De Presupuesto N° ${this.pedido_de_presupuesto.idpedido}`;\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getProveedores();\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.pedido_de_presupuesto.fecha.split('/'); //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.getItemsPedido(this.pedido_de_presupuesto.idpedido).then((res) => {\r\n            this.mov_art_list = res.map((m: IItemPedido) => {\r\n                return {\r\n                    articulo: m.idarticulo,\r\n                    cantidad: m.cantidad,\r\n                    idunidadmedida: m.idunidadmedida,\r\n                    descripcion_articulo: m.articulo_descripcion,\r\n                    descripcion_um: m.um_descripcion,\r\n                    codigo_interno_articulo: m.codigo_interno,\r\n                    detalle: m.detalle\r\n                }\r\n            })\r\n\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n        });\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl({ disabled: true, value: (this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd')) }, [Validators.required]),\r\n            proveedor: new FormControl(''),\r\n            observaciones: new FormControl({ disabled: true, value: (this.pedido_de_presupuesto.observaciones) }, Validators.required),\r\n        });\r\n\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getItemsPedido(idpedido): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsPedido(idpedido))\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores());\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n\r\n            // En caso de edicion...\r\n            if (this.pedido_de_presupuesto) {\r\n                const id_proveedores = this.pedido_de_presupuesto.proveedores.toString().split(\",\"); // Encapsulo los idproveedor que me envia el servicio en un arreglo de tipo String...\r\n\r\n                // Por cada idproveedor...\r\n                id_proveedores.forEach(idproveedor => {\r\n                    // Busco el proveedor el cual coincida su 'codigo' y el 'idproveedor' parseado a Entero...\r\n                    let proveedor = this.proveedores.find((p: IProveedor) => p.Codigo === parseInt(idproveedor));\r\n\r\n                    // Si no existe el proveedor en arreglo que lista los chips...\r\n                    if (!this.selectedProveedores.includes(proveedor)) {\r\n                        // Lo agrego.\r\n                        this.selectedProveedores.push(proveedor);\r\n                    }\r\n                    // Sino no hace nada...\r\n                });\r\n                // Termina ejecucion...\r\n            }\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                <mat-label>Proveedor</mat-label>\r\n                <mat-chip-grid disabled #chipgrid aria-label=\"Seleccione Proveedor\">\r\n                    <mat-chip-row [ngClass]=\"'bg-slate-800'\" *ngFor=\"let proveedor of selectedProveedores\"\r\n                        [value]=\"proveedor\">\r\n                        {{ proveedor.RazonSocial }}\r\n                        <button matChipRemove *ngIf=\"!pedido_de_presupuesto\">\r\n                            <mat-icon>cancel</mat-icon>\r\n                        </button>\r\n                    </mat-chip-row>\r\n                    <input readonly [placeholder]=\" 'Agregar Proveedor' \" #proveedorInput formControlName=\"proveedor\"\r\n                        [matChipInputFor]=\"chipgrid\" />\r\n                </mat-chip-grid>\r\n            </mat-form-field>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[450px] h-[450px] sm:max-h-[200px] sm:h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">UM</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\" rounded-tr-lg text-white w-auto\">Detalle\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            <i>{{ movimiento_articulo.detalle }}</i>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div disabled class=\"counter\" ngClass=\"text-gray-400\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { PedidoDePresupuestoComponent } from './components/pedidos-de-presupuesto.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { PedidoDePresupuestoService } from './service/pedidos-de-presupuesto.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { CotizarComponent } from './components/cotizar/cotizar.component';\r\nimport { VerCotizacionComponent } from './components/ver-cotizacion/ver-cotizacion.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { NuevaCotizacionComponent } from './components/nueva-cotizacion/nueva-cotizacion.component';\r\nimport { GenerarOrdenComponent } from './components/generar-orden/generar-orden.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PedidoDePresupuestoComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [PedidoDePresupuestoComponent, SaveComponent, FilterMenuComponent, CotizarComponent, VerCotizacionComponent, NuevaCotizacionComponent, GenerarOrdenComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        MatChipsModule,\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [PedidoDePresupuestoService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class PedidosDePresupuestoModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { map, Observable, Subject } from 'rxjs';\r\nimport { ICotizacion, ICreateCotizacion, ICreateGenerarOC, ICreatePedidoPresupuesto, IItemPedido, IPedidoDePresupuesto, IResponseObservable } from '../models/pedido-de-presupuesto';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IResponse, Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class PedidoDePresupuestoService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los Rubros.\r\n     * @returns Rubros\r\n     */\r\n    getPedidoDePresupuesto(sort?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param pedido_de_presupuesto \r\n     * @returns Crea un item nuevo\r\n     */\r\n    savePedidoDePresupuesto(pedido_de_presupuesto: ICreatePedidoPresupuesto): Observable<IPedidoDePresupuesto> {\r\n        return this.http.post<IPedidoDePresupuesto>(`${environment.compras.compras_pedidos}`, pedido_de_presupuesto);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idpedido\r\n     * @param pedido_de_presupuesto\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updatePedidoDePresupuesto(idpedido: number, pedido_de_presupuesto: ICreatePedidoPresupuesto): Observable<IPedidoDePresupuesto> {\r\n        return this.http.put<IPedidoDePresupuesto>(`${environment.compras.compras_pedidos}` + '/' + idpedido, pedido_de_presupuesto);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idpedido \r\n     * @returns Elimina un item\r\n     */\r\n    deletePedidoDePresupuesto(idpedido: number): Observable<IPedidoDePresupuesto> {\r\n        return this.http.delete<IPedidoDePresupuesto>(`${environment.compras.compras_pedidos}` + '/' + idpedido);\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    enviarPedidoDePresupuesto(pedido_de_presupuesto: IPedidoDePresupuesto): Observable<IPedidoDePresupuesto> {\r\n        return this.http.post<IPedidoDePresupuesto>(``, pedido_de_presupuesto);\r\n    }\r\n\r\n    getArticulos(idarticulo?: number, filterLike?: string) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        if (idarticulo) {\r\n            f += `&filter[idarticulo]=${idarticulo}`;\r\n        } else if (filterLike) {\r\n            f += `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}`;\r\n        }\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        ).subscribe((resp: any) => {\r\n            this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n        });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItemsPedido(idpedido: number): Observable<IItemPedido> {\r\n        let f = `?filter[idpedido]=${idpedido}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.view_compras_pedido_item}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    saveCotizacion(cotizacion: ICreateCotizacion): Observable<IPedidoDePresupuesto> {\r\n        return this.http.post<IPedidoDePresupuesto>(`${environment.compras.compras_cotizacion}`, cotizacion);\r\n    }\r\n\r\n    updateCotizazcion(idcotizacion: number, cotizacion: ICreateCotizacion): Observable<IPedidoDePresupuesto> {\r\n        return this.http.put<IPedidoDePresupuesto>(`${environment.compras.compras_cotizacion}` + '/' + idcotizacion, cotizacion);\r\n    }\r\n\r\n    deleteCotizacion(idcotizacion: number): Observable<ICotizacion> {\r\n        return this.http.delete<IPedidoDePresupuesto>(`${environment.compras.compras_cotizacion}` + '/' + idcotizacion);\r\n    }\r\n\r\n    getCotizacionesPedido(idpedido: number): Observable<IResponseObservable> {\r\n        let f = `?filter[idpedido]=${idpedido}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.view_compras_cotizacion}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItemsCotizacion(idcotizacion: number): Observable<IResponseObservable> {\r\n        let f = `?filter[idcotizacion]=${idcotizacion}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.view_compras_cotizacion_item}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    generarOrdenCompra(payload: ICreateGenerarOC): Observable<any> {\r\n        return this.http.post<ICreateGenerarOC>(`${environment.compras.compras_orden_compra_cotizacion}`, payload);\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idpedido\r\n    * @returns \r\n    */\r\n    reportePedidoDePresupuesto(idpedido: number): Observable<IResponse<any>> {\r\n        return this.http.get<IResponse<any>>(`${environment.compras.generar_reporte_pedido}` + idpedido);\r\n    }\r\n}"],"names":["EventEmitter","MAT_DIALOG_DATA","finalize","Subject","takeUntil","takeWhile","tap","timer","MatTableDataSource","environment","NuevaCotizacionComponent","TablaDinamicaComponent","GenerarOrdenComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","CotizarComponent","constructor","data","_pedidosDePresupuestosService","confirm","_empresaService","dialogo","alert","dialogRef","default_color","_unsubscribeAll","creadoExitosamente","editadoExitosamente","dataSource","headers","column_params","funcionesObjeto","env","pedido_de_presupuesto","title","idpedido","icono","nombre_boton","functionName","iconoAccion","cotizacion","orden_compra","iconoAccionado","iconoDeshabilitado","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","compras","view_compras_cotizacion","ngOnInit","getEmpresa","subscribeAlert","emitConfig","next","config","appearance","time","onCloseMenu","close","generarAcciones","event","name","params","warning","updateCotizacion","deleteCotizacion","generarOrdenDeCompra","nuevaCotizacion","open","panelClass","autoFocus","componentInstance","success","tabla","renderTabla","error","result","observaciones","proveedor","dismissible","actions","show","color","label","cancel","afterClosed","res","idcotizacion","console","ɵɵdirectiveInject","i1","PedidoDePresupuestoService","i2","FuseConfirmationService","i3","EmpresaService","i4","MatDialog","i5","AppAlertService","MatDialogRef","selectors","viewQuery","CotizarComponent_Query","rf","ctx","ɵɵlistener","CotizarComponent_Template_button_click_5_listener","ɵɵtemplate","CotizarComponent_fuse_alert_8_Template","CotizarComponent_Template_button_click_12_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","CotizarComponent_Template_app_tabla_dinamica_functionEmitter_19_listener","$event","ɵɵclassMap","ɵɵstyleProp","ɵɵtextInterpolate","FormControl","FormGroup","fuseAnimations","firstValueFrom","map","startWith","proveedor_r4","RazonSocial","FilterMenuComponent_mat_form_field_23_mat_option_7_Template","_r2","ctx_r1","getTextProveedor","ɵɵpipeBind1","filteredProveedores","FilterMenuComponent","menuService","_pedidoDePresupuestoService","proveedores","formFilters","cotizado","patchValue","filter","getProveedores","resetFilters","reset","option","_this","_asyncToGenerator","Proveedores","Promise","_ref","resolve","list","get","valueChanges","value","_filterProveedores","_x","apply","arguments","filterValue","toString","toLowerCase","includes","JedsMenuService","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_span_22_Template","FilterMenuComponent_mat_form_field_23_Template","FilterMenuComponent_Template_button_click_25_listener","FilterMenuComponent_Template_button_click_28_listener","getRawValue","Validators","combineLatest","MY_DATE_FORMATS","MAT_DATE_FORMATS","proveedor_r27","GenerarOrdenComponent_button_26_Template_button_click_0_listener","ɵɵrestoreView","_r29","ctx_r28","ɵɵnextContext","ɵɵresetView","limpiarCasillero","ctx_r6","row_r30","codigo_interno","ctx_r8","row_r31","articulo_descripcion","ctx_r10","row_r32","cantidad","ctx_r12","row_r33","detalle","ctx_r14","row_r34","cotiza","ctx_r16","row_r35","cantidad_recibida","ctx_r18","row_r36","unitario","ctx_r20","row_r37","subtotal","ctx_r22","row_r38","oc","datePipe","maxPalabras","columns","isReadOnly","minDate","maxDate","Date","newForm","existeCotizacion","dia","mes","anio","fecha","split","form","Codigo","idproveedor","required","transform","total","maxLength","disable","onSubmit","existeOrdenCompra","items_formulario","find","i","payload","generarOrdenCompra","emit","Items","getItemsCotizacion","codigo_articulo","Number","crearGrillaForm","subtotalObservables","forEach","item","index","items_array","cantidadRecibidaControl","disabled","min","unitarioControl","subtotalControl","updateSubtotal","updateTotal","a","push","subtotales","reduce","sum","current","emitEvent","_this2","proveedores_del_pedido","num","parseInt","p","setValue","getPalabrasLength","length","isPalabraMaxLengthReached","cambiarFecha","partes","fh","DatePipe","outputs","features","ɵɵProvidersFeature","provide","useValue","GenerarOrdenComponent_Template","GenerarOrdenComponent_Template_button_click_5_listener","GenerarOrdenComponent_fuse_alert_8_Template","GenerarOrdenComponent_button_21_Template","GenerarOrdenComponent_mat_option_24_Template","GenerarOrdenComponent_button_26_Template","ɵɵelementContainerStart","GenerarOrdenComponent_th_35_Template","GenerarOrdenComponent_td_36_Template","ɵɵelementContainerEnd","GenerarOrdenComponent_th_38_Template","GenerarOrdenComponent_td_39_Template","GenerarOrdenComponent_th_41_Template","GenerarOrdenComponent_td_42_Template","GenerarOrdenComponent_th_44_Template","GenerarOrdenComponent_td_46_Template","GenerarOrdenComponent_th_48_Template","GenerarOrdenComponent_td_49_Template","GenerarOrdenComponent_th_51_Template","GenerarOrdenComponent_td_52_Template","GenerarOrdenComponent_th_54_Template","GenerarOrdenComponent_td_55_Template","GenerarOrdenComponent_th_57_Template","GenerarOrdenComponent_td_58_Template","GenerarOrdenComponent_th_60_Template","GenerarOrdenComponent_td_61_Template","GenerarOrdenComponent_tr_62_Template","GenerarOrdenComponent_tr_63_Template","GenerarOrdenComponent_div_64_Template","GenerarOrdenComponent_Template_button_click_72_listener","_r1","_r3","ɵɵpureFunction1","_c0","ɵɵtextInterpolate2","NuevaCotizacionComponent_button_26_Template_button_click_0_listener","NuevaCotizacionComponent_th_48_Template_th_click_0_listener","_r35","ctx_r34","seleccionarTodos","ɵɵpureFunction0","row_r39","NuevaCotizacionComponent_th_60_Template_th_click_0_listener","_r41","ctx_r40","row_r42","isAllSelected","valid","fecha_formateada","items_cotizacion","idpedidoitem","existe_item_cotizado_con_valor_cero","existe_cantidad_item_mayor_a_la_solicitada","items","updateCotizazcion","saveCotizacion","getItemsPedido","control","items_seleccion","NuevaCotizacionComponent_Template","NuevaCotizacionComponent_Template_button_click_5_listener","NuevaCotizacionComponent_fuse_alert_8_Template","NuevaCotizacionComponent_button_21_Template","NuevaCotizacionComponent_mat_option_24_Template","NuevaCotizacionComponent_button_26_Template","NuevaCotizacionComponent_th_35_Template","NuevaCotizacionComponent_td_36_Template","NuevaCotizacionComponent_th_38_Template","NuevaCotizacionComponent_td_39_Template","NuevaCotizacionComponent_th_41_Template","NuevaCotizacionComponent_td_42_Template","NuevaCotizacionComponent_th_44_Template","NuevaCotizacionComponent_td_46_Template","NuevaCotizacionComponent_th_48_Template","NuevaCotizacionComponent_td_49_Template","NuevaCotizacionComponent_th_51_Template","NuevaCotizacionComponent_td_52_Template","NuevaCotizacionComponent_th_54_Template","NuevaCotizacionComponent_td_55_Template","NuevaCotizacionComponent_th_57_Template","NuevaCotizacionComponent_td_58_Template","NuevaCotizacionComponent_th_60_Template","NuevaCotizacionComponent_td_61_Template","NuevaCotizacionComponent_tr_62_Template","NuevaCotizacionComponent_tr_63_Template","NuevaCotizacionComponent_div_64_Template","NuevaCotizacionComponent_Template_button_click_72_listener","_c1","debounceTime","distinctUntilChanged","SaveComponent","VerCotizacionComponent","EnviarEmailModalComponent","PedidoDePresupuestoComponent","_pedidoDePresupuestosService","_searchService","_menuService","router","_headerTextService","pwaService","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","view_compras_pedidos","search","enviadoExitosamente","setTitulo","pedido","SearchTextSub$","getSearchText","filters","FilterEventSub$","getFilterEvent","onFilterMenu","getFilterOrigin","origin","_elementRef","updatePedidoDePresupuesto","deletePedidoDePresupuesto","cotizarPedidoDePresupuesto","verPedidoDePresupuesto","reportePedidoDePresupuesto","enviarPedidoDePresupuesto","savePedidoDePresupuesto","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","modal_data","model","_endpointService","compras_pedidos_enviar_presupuesto","permiteAdjunto","ngOnDestroy","unsubscribe","i6","SearchService","i7","i8","Router","i9","HeaderTextService","i10","PwaService","PedidoDePresupuestoComponent_Query","PedidoDePresupuestoComponent_Template_button_click_3_listener","PedidoDePresupuestoComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","switchMap","LectorQrComponent","SaveComponent_mat_chip_row_22_Template_mat_chip_row_removed_0_listener","restoredCtx","_r28","proveedor_r26","$implicit","ctx_r27","removeProveedor","proveedor_r29","articulo_r30","descripcion","SaveComponent_button_39_Template_button_click_0_listener","_r32","ctx_r31","um_r33","factor_um","um_base","SaveComponent_mat_option_48_i_2_Template","idunidadmedida","descripcion_um","ctx_r11","movimiento_articulo_r36","codigo_interno_articulo","ctx_r13","movimiento_articulo_r37","descripcion_articulo","ctx_r15","movimiento_articulo_r38","ctx_r17","movimiento_articulo_r39","ctx_r19","movimiento_articulo_r40","ctx_r21","SaveComponent_td_87_Template_button_click_1_listener","_r44","movimiento_r41","ctx_r43","deleteMovimiento","selectedProveedores","mov_art_list","articulos","articulos_list","unidades_de_medida","getArticulos","form_carga_articulos","idarticulo","filterLike","response","filteredArticulos","then","m","articulo","um_descripcion","unidadmedida","updateFormValidators","selectProveedor","selected","indexOf","splice","items_pedido","proveedores_id","seleccionItem","info","getUnidadesDeMedidaArticulos","setTimeout","cantidadField","document","querySelector","focus","preventDefault","detalleField","input","addMovimiento","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","enable","onCargar","key","existeMovimiento","um","articuloField","etiquetaArticulo","sendObject","code","decodedText","JSON","parse","id_proveedores","_ref2","_filterArticulos","_x2","_this3","unidadesDeMedida","_ref3","sort","b","factor","unidad","parseFloat","_x3","_this4","_ref4","_x4","getTextArticulo","setValidators","clearValidators","updateValueAndValidity","applyFilter","trim","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_chip_row_22_Template","SaveComponent_Template_mat_autocomplete_optionSelected_25_listener","SaveComponent_mat_option_27_Template","SaveComponent_Template_input_ngModelChange_35_listener","SaveComponent_mat_option_38_Template","SaveComponent_button_39_Template","SaveComponent_Template_button_click_41_listener","SaveComponent_Template_mat_select_ngModelChange_47_listener","SaveComponent_mat_option_48_Template","SaveComponent_Template_mat_form_field_keydown_enter_49_listener","SaveComponent_Template_mat_form_field_keydown_enter_54_listener","SaveComponent_Template_button_click_59_listener","SaveComponent_Template_input_keyup_64_listener","target","SaveComponent_th_71_Template","SaveComponent_td_72_Template","SaveComponent_th_74_Template","SaveComponent_td_75_Template","SaveComponent_th_77_Template","SaveComponent_td_78_Template","SaveComponent_th_80_Template","SaveComponent_td_81_Template","SaveComponent_th_83_Template","SaveComponent_td_84_Template","SaveComponent_th_86_Template","SaveComponent_td_87_Template","SaveComponent_tr_88_Template","SaveComponent_tr_89_Template","SaveComponent_div_90_Template","SaveComponent_Template_button_click_98_listener","_r5","_r7","VerCotizacionComponent_mat_chip_row_22_button_2_Template","proveedor_r18","ctx_r3","ctx_r5","movimiento_articulo_r20","ctx_r7","movimiento_articulo_r21","ctx_r9","movimiento_articulo_r22","movimiento_articulo_r23","movimiento_articulo_r24","VerCotizacionComponent_Template","VerCotizacionComponent_Template_button_click_5_listener","VerCotizacionComponent_fuse_alert_8_Template","VerCotizacionComponent_mat_chip_row_22_Template","VerCotizacionComponent_th_28_Template","VerCotizacionComponent_td_29_Template","VerCotizacionComponent_th_31_Template","VerCotizacionComponent_td_32_Template","VerCotizacionComponent_th_34_Template","VerCotizacionComponent_td_35_Template","VerCotizacionComponent_th_37_Template","VerCotizacionComponent_td_38_Template","VerCotizacionComponent_th_40_Template","VerCotizacionComponent_td_41_Template","VerCotizacionComponent_tr_42_Template","VerCotizacionComponent_tr_43_Template","VerCotizacionComponent_div_44_Template","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","MatChipsModule","routes","component","PedidosDePresupuestoModule","imports","forChild","declarations","exports","http","_authService","getPedidoDePresupuesto","f","subject","administracion","view_clientes","resp","accessToken","token","asObservable","post","compras_pedidos","put","delete","stock","articulo_unidad_medidas","view_compras_pedido_item","compras_cotizacion","getCotizacionesPedido","view_compras_cotizacion_item","compras_orden_compra_cotizacion","generar_reporte_pedido","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}