{"version":3,"file":"src_app_modules_compras_pedidos-de-presupuesto_pedidos-de-presupuestos_module_ts.js","mappings":"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","sources":["./src/app/modules/compras/pedidos-de-presupuesto/components/cotizar/cotizar.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/cotizar/cotizar.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/filter-menu/filter-menu.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/filter-menu/filter-menu.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/generar-orden/generar-orden.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/generar-orden/generar-orden.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/nueva-cotizacion/nueva-cotizacion.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/nueva-cotizacion/nueva-cotizacion.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/pedidos-de-presupuesto.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/pedidos-de-presupuesto.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/save/save.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/save/save.component.html","./src/app/modules/compras/pedidos-de-presupuesto/components/ver-cotizacion/ver-cotizacion.component.ts","./src/app/modules/compras/pedidos-de-presupuesto/components/ver-cotizacion/ver-cotizacion.component.html","./src/app/modules/compras/pedidos-de-presupuesto/pedidos-de-presupuestos.module.ts","./src/app/modules/compras/pedidos-de-presupuesto/service/pedidos-de-presupuesto.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ICotizacion, ICreateCotizacion, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { environment } from 'environments/environment';\r\nimport { NuevaCotizacionComponent } from '../nueva-cotizacion/nueva-cotizacion.component';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { IResponse } from '@shared/models/response-with-token';\r\nimport { GenerarOrdenComponent } from '../generar-orden/generar-orden.component';\r\n\r\n@Component({\r\n    selector: 'app-cotizar-pedidos-de-presupuesto',\r\n    templateUrl: './cotizar.component.html',\r\n    styleUrls: ['./cotizar.component.scss']\r\n})\r\nexport class CotizarComponent implements OnInit {\r\n    // Necesarios para la app\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    // Particulares del modulo\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Proveedor', 'Acciones'];\r\n    column_params = ['fecha', 'proveedor', 'acciones'];\r\n    form: FormGroup;\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    funcionesObjeto = null;\r\n    cotizaciones: ICotizacion[];\r\n    env = null;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _pedidosDePresupuestosService: PedidoDePresupuestoService,\r\n        private confirm: FuseConfirmationService,\r\n        private _empresaService: EmpresaService,\r\n        private dialogo: MatDialog,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<CotizarComponent>\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data ? this.data : null;\r\n        this.title = `Cotizaciones Pedido de Presupuesto N° ${this.pedido_de_presupuesto.idpedido}`;\r\n\r\n        /**\r\n     * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n     */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (cotizacion: ICotizacion) => cotizacion.orden_compra ? 'jedstion:editar_disabled' : 'jedstion:editar',\r\n                iconoAccionado: (cotizacion: ICotizacion) => '',\r\n                iconoDeshabilitado: (cotizacion: ICotizacion) => '',\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (cotizacion: ICotizacion) => cotizacion.orden_compra ? 'jedstion:eliminar_disabled' : 'jedstion:eliminar',\r\n                iconoAccionado: (cotizacion: ICotizacion) => '',\r\n                iconoDeshabilitado: (cotizacion: ICotizacion) => '',\r\n            },\r\n            {\r\n                icono: 'orden_de_compra',\r\n                nombre_boton: \"Generar Orden de Compra\",\r\n                functionName: 'orden_de_compra',\r\n                iconoAccion: (cotizacion: ICotizacion) => cotizacion.orden_compra ? 'jedstion:orden_de_produccion_disabled' : 'jedstion:orden_de_produccion',\r\n                iconoAccionado: (cotizacion: ICotizacion) => '',\r\n                iconoDeshabilitado: (cotizacion: ICotizacion) => '',\r\n            }\r\n        ];\r\n\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        this.env = environment.compras.view_compras_cotizacion + '?' + `filter[idpedido]=${this.pedido_de_presupuesto.idpedido}&sort=-fecha`;\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1700)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                if (event.params.data.orden_compra != null) {\r\n                    this.alert.warning('No puedes editar esta cotización. Tiene una orden de compra asociada. Eliminela antes de continuar.');\r\n                } else {\r\n                    this.updateCotizacion(event);\r\n                }\r\n                break;\r\n            case 'eliminar':\r\n                if (event.params.data.orden_compra != null) {\r\n                    this.alert.warning('No puedes eliminar esta cotización. Tiene una orden de compra asociada. Eliminela antes de continuar.');\r\n                } else {\r\n                    this.deleteCotizacion(event);\r\n                }\r\n                break;\r\n            case 'orden_de_compra':\r\n                if (event.params.data.orden_compra != null) {\r\n                    this.alert.warning(' Ya haz generado una orden de compra para esta cotización.');\r\n                } else {\r\n                    this.generarOrdenDeCompra(event);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    nuevaCotizacion() {\r\n        this.dialogo\r\n            .open(NuevaCotizacionComponent, {\r\n                data: {\r\n                    pedido_de_presupuesto: this.pedido_de_presupuesto,\r\n                    cotizacion: null\r\n                },\r\n                panelClass: 'my-dialog',\r\n                autoFocus: false\r\n            })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Cotización creada con éxito.\");\r\n                    this.tabla.renderTabla();\r\n                },\r\n            });\r\n    }\r\n\r\n    /** Modal Encargado de levantar edicion */\r\n    updateCotizacion(event) {\r\n        this.dialogo\r\n            .open(NuevaCotizacionComponent, {\r\n                data: {\r\n                    pedido_de_presupuesto: this.pedido_de_presupuesto,\r\n                    cotizacion: event.params.data\r\n                },\r\n                panelClass: 'my-dialog',\r\n                autoFocus: false\r\n            })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: (data: IResponse<any>) => {\r\n                    if (data.success) {\r\n                        this.alert.success(\"Cotización editada con éxito.\");\r\n                    } else if (!data.success) {\r\n                        this.alert.error(data.result);\r\n                    }\r\n\r\n                    this.tabla.renderTabla();\r\n                }\r\n            })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteCotizacion(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Cotización \" + event.params.data.observaciones,\r\n            message: \"¿Desea eliminar la Cotización de: \" + event.params.data.proveedor + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._pedidosDePresupuestosService.deleteCotizacion(event.params.data.idcotizacion).subscribe({\r\n                        next: (data: any) => {\r\n                            // Manejar la respuesta exitosa\r\n                            if (data.success) {\r\n                                this.alert.success(\"Cotización eliminada con éxito.\");\r\n                                this.tabla.renderTabla()\r\n                            } else {\r\n                                this.alert.error(data.result);\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este pedido de presupuesto no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado levantar el modal de orden de compra\r\n     * @param event \r\n     */\r\n    generarOrdenDeCompra(event) {\r\n        this.dialogo\r\n            .open(GenerarOrdenComponent, {\r\n                data: {\r\n                    pedido_de_presupuesto: this.pedido_de_presupuesto,\r\n                    cotizacion: event.params.data\r\n                },\r\n                panelClass: 'my-dialog',\r\n                autoFocus: false\r\n            })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: (data: IResponse<any>) => {\r\n                    if (data.success) {\r\n                        this.alert.success(\"Orden de compra Generada con éxito.\");\r\n                    } else if (!data.success) {\r\n                        this.alert.error(data.result);\r\n                    }\r\n\r\n                    this.tabla.renderTabla();\r\n                }\r\n            })\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl h-full overflow-y-auto shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <div class=\"p-4 h-full\">\r\n        <div class=\"flex mb-2\">\r\n            <!-- Contenedor del botón -->\r\n            <div class=\"ml-auto\">\r\n                <button mat-flat-button (click)='nuevaCotizacion()' #save [class]=\"color_primario ? '' : default_color\"\r\n                    [style.border]=\"color_primario || '' \" [style.color]=\"color_primario || '' \"\r\n                    class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                    <div class=\"flex item-center\">\r\n                        <!-- SVG con fill=\"currentColor\" -->\r\n                        <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                        </svg>\r\n                        <span class=\"ml-2 text-lg mt-0.5\">Nueva cotizacion</span>\r\n                    </div>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Grilla -->\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [isModal]=\"true\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { PedidoDePresupuestoService } from 'app/modules/compras/pedidos-de-presupuesto/service/pedidos-de-presupuesto.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-pedidos-de-presupuesto',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedores: IProveedor[] = [];\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  filteredProveedores: Observable<IProveedor[]>;\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any,\r\n    private _empresaService: EmpresaService,\r\n    private menuService: JedsMenuService,\r\n    private _pedidoDePresupuestoService: PedidoDePresupuestoService\r\n  ) {\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n        this.color_primario = empresa.color_primario;\r\n        this.color_secundario = empresa.color_secundario;\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      cotizado: new FormControl((-1)),\r\n      proveedor: new FormControl((''))\r\n    });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n    this.getProveedores();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      cotizado: -1,\r\n      proveedor: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this.menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n  * @returns \r\n  */\r\n  async getProveedores(option?) {\r\n    const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores(option));\r\n    new Promise(async (resolve) => {\r\n      this.proveedores = Proveedores.list;\r\n      this.filteredProveedores = this.formFilters.get('proveedor').valueChanges.pipe(\r\n        startWith(''),\r\n        map((value) => this._filterProveedores(value)),\r\n      );\r\n      resolve(true);\r\n    })\r\n  };\r\n\r\n  getTextProveedor(option) {\r\n    return option ? option.RazonSocial : '';\r\n  }\r\n\r\n  private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n    const filterValue = proveedor.toString().toLowerCase();\r\n    return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <!-- Cotizado -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Contestado</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName='cotizado'>\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Proveedores -->\r\n        <span *ngIf=\"formFilters.get('proveedor')\" class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\r\n        <mat-form-field *ngIf=\"formFilters.get('proveedor')\"\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\"\r\n                formControlName=\"proveedor\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete autoActiveFirstOption #autoProveedor=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                    {{ proveedor.RazonSocial }}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \"\r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { ICotizacion, ICotizacionItem, ICreateGenerarOC, IItemPedidoForm, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { combineLatest, finalize, firstValueFrom, map, Observable, startWith, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n// Interfaz que maneja el modal de dialog\r\ninterface DataModal {\r\n    pedido_de_presupuesto: {},\r\n    cotizacion: {}\r\n}\r\n\r\n@Component({\r\n    selector: 'app-generar-orden-pedido-de-presupuesto',\r\n    templateUrl: './generar-orden.component.html',\r\n    styleUrls: ['./generar-orden.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\n\r\nexport class GenerarOrdenComponent implements OnInit {\r\n    // Necesarios para la app\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n    @Output() public editadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n\r\n    // Particulares del modulo\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    cotizacion: ICotizacion\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    form: FormGroup;\r\n    proveedores: IProveedor[];\r\n    columns = ['codigointerno', 'articulo', 'solicitado', 'detalle', 'cotiza', 'cantidad', 'unitario', 'subtotal', 'oc']; // estos son las columnas de la grilla\r\n    items_formulario: IItemPedidoForm[];\r\n    isReadOnly: boolean = true; // Cambiar a false si quieres permitir edición\r\n    isHovering: boolean;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: DataModal,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<GenerarOrdenComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data.pedido_de_presupuesto ? this.data.pedido_de_presupuesto : null;\r\n        this.cotizacion = this.data.cotizacion ? this.data.cotizacion : null;\r\n        this.title = `Generar Orden de compra a partir de la Cotización #${this.cotizacion.idcotizacion} - ${this.cotizacion.proveedor}`;\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    onHover(hovering: boolean, $event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.isHovering = hovering;\r\n    \r\n        const target = $event.target as HTMLElement;\r\n        const span = target.querySelector('span');\r\n\r\n        if (span) {\r\n            span.style.color = hovering ? 'white' : '';\r\n        }\r\n    \r\n        if (hovering) {\r\n            target.style.setProperty('background-color', this.color_primario, 'important');\r\n        } else {\r\n            target.style.removeProperty('background-color');\r\n            target.style.removeProperty('color');\r\n        }\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.loadServices();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    /**\r\n     * Metodo que inicializa el/los formularios de la aplicaciónz\r\n     */\r\n    newForm() {\r\n        const [dia, mes, anio] = this.cotizacion ? this.cotizacion.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl(({ Codigo: this.cotizacion.idproveedor, RazonSocial: this.cotizacion.proveedor }), [Validators.required]),\r\n            fecha: new FormControl((this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd')), [Validators.required]),\r\n            total: new FormControl(''),\r\n            observaciones: new FormControl((this.cotizacion.observaciones), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n\r\n        if (this.isReadOnly) {\r\n            this.form.disable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de encapsular los datos en un payload y realizar la persistencia\r\n     */\r\n    onSubmit() {\r\n        const existeOrdenCompra = this.items_formulario.find(i => i.oc.value === true);\r\n        if (!existeOrdenCompra) {\r\n            return this.alert.warning('Debe marcar por lo menos un item para generar la orden de compra');\r\n        }\r\n\r\n        const payload: ICreateGenerarOC = {\r\n            cotizacion: this.cotizacion.idcotizacion\r\n        }\r\n\r\n        if (this.cotizacion?.idcotizacion) {\r\n            this._pedidoDePresupuestoService.generarOrdenCompra(payload)\r\n                .subscribe({\r\n                    next: (data: any) => {\r\n                        if (data) {\r\n                            this.creadoExitosamente.emit(data);\r\n                            this.onCloseMenu(data);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de cerrar el dialogo, transmitiendo la informacion al componente padre\r\n     * @param data \r\n     */\r\n    onCloseMenu(data) {\r\n        this.dialogRef.close(data)\r\n    }\r\n\r\n    /**\r\n    * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n    */\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this.getProveedores(), // Método que carga proveedores\r\n            this.existeCotizacion(), // Método que carga articulos\r\n        ]).then(() => {\r\n            this.mostrarSpinner = false;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Metodo que se encarga de verificar que exista cotizacion para mapear los datos del servicio que lista los items de una cotizacion\r\n     */\r\n    async existeCotizacion() {\r\n        let Items; // Variable auxiliar\r\n\r\n        if (this.cotizacion?.idcotizacion) {\r\n            Items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsCotizacion(this.cotizacion.idcotizacion));\r\n        }\r\n\r\n        Items.list = Items.list.map(i => {\r\n            return {\r\n                ...i,\r\n                codigo_interno: i.codigo_articulo,\r\n                oc: i.oc === 1 ? true : false,\r\n                cotiza: i.cotiza === 1 ? true : false,\r\n                cantidad: Number(i.cantidad),\r\n                unitario: Number(i.unitario),\r\n                subtotal: Number(i.subtotal)\r\n            }\r\n        })\r\n\r\n        await this.crearGrillaForm(Items);\r\n    }\r\n\r\n    /**\r\n     * Metodo encargado de\r\n     * 1) Recorrer los items que me devuelve la API para agregar un input con el valor en \"cantidad recibida\", valor \"unitario\", \"subtotal\", \"OC\" y \"Cotiza\".\r\n     * 2) Escuchar los cambios de \"cantidad recibida\" y valor \"unitaro\" para calcular el subtotal y total.\r\n     * 3) Actualizar el campo \"total\" y rendizar los items en la grilla.\r\n     * @param Items \r\n     */\r\n    crearGrillaForm(Items) {\r\n        const subtotalObservables = []; // Almacena los observables de subtotales\r\n        this.items_formulario = Items.list;\r\n\r\n        this.items_formulario.forEach((item: IItemPedidoForm | ICotizacionItem, index, items_array) => {\r\n\r\n            // Define los FormControls\r\n            const cantidadRecibidaControl = new FormControl(\r\n                { value: item.cantidad, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const unitarioControl = new FormControl(\r\n                { value: item.unitario || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const subtotalControl = new FormControl(\r\n                { value: item.subtotal || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            // Escuchar cambios en cantidad_recibida y unitario\r\n            cantidadRecibidaControl.valueChanges.subscribe(() => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n            unitarioControl.valueChanges.subscribe((a) => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n\r\n            subtotalObservables.push(\r\n                subtotalControl.valueChanges.pipe(\r\n                    startWith(Number(subtotalControl.value) || 0)\r\n                )\r\n            );\r\n\r\n            // Asigna los controles al item\r\n            items_array[index].cantidad_recibida = cantidadRecibidaControl;\r\n            items_array[index].unitario = unitarioControl;\r\n            items_array[index].subtotal = subtotalControl;\r\n\r\n            items_array[index].cotiza = new FormControl({ value: item.cotiza, disabled: this.isReadOnly });  // No es necesario un validador aquí si es booleano\r\n            items_array[index].oc = new FormControl({ value: item.oc, disabled: this.isReadOnly });     // No es necesario un validador aquí si es booleano\r\n        });\r\n\r\n        this.updateTotal()\r\n\r\n\r\n        combineLatest(subtotalObservables).pipe(\r\n            map((subtotales: number[]) => {\r\n                return subtotales.reduce((sum, current) => sum + (current || 0), 0);\r\n            })\r\n        ).subscribe((total) => {\r\n            this.form.get('total')?.patchValue(total, { emitEvent: false });\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource(this.items_formulario);\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n     * Metodo que consulta los proveedores del sistema y ademas encapsula los proveedores de que tiene un pedido de presupuesto\r\n     * @param option \r\n     */\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores(option));\r\n        const proveedores_del_pedido = this.pedido_de_presupuesto.proveedores.split(',').map(num => parseInt(num));\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list.filter(p => proveedores_del_pedido.includes(p.Codigo));\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Metodo de filtrado utilizado en los autocompletes\r\n     * @param proveedor \r\n     * @returns \r\n     */\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n     * Metodo para renderizar el texto de un autocomplete\r\n     * @param option \r\n     * @returns \r\n     */\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n     * Metodo para calcular el valor total entre todos los subtotales de una grilla\r\n     */\r\n    updateTotal() {\r\n        const total = this.items_formulario.reduce((sum, item) => {\r\n            const subtotal = Number(item.subtotal['value']) || 0;\r\n            return sum + subtotal;\r\n        }, 0);\r\n\r\n        this.form.get('total')?.setValue(total, { emitEvent: false });\r\n    }\r\n\r\n\r\n    /**\r\n    * Método para calcular y actualizar el subtotal\r\n    */\r\n    updateSubtotal(\r\n        cantidadRecibidaControl: FormControl,\r\n        unitarioControl: FormControl,\r\n        subtotalControl: FormControl\r\n    ) {\r\n        const cantidad = Number(cantidadRecibidaControl.value) || 0;\r\n        const unitario = Number(unitarioControl.value) || 0;\r\n        const subtotal = cantidad * unitario;\r\n\r\n        subtotalControl.setValue(subtotal, { emitEvent: false }); // Evita bucles de eventos\r\n    }\r\n\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl overflow-y-auto shadow-lg bg-white dark:bg-slate-900\">\r\n\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu(false)\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4 overflow-y-auto\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <!-- Date, Supplier, and Total Inputs -->\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <!-- Date Picker -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/3\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-2/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\" (mouseenter)=\"onHover(true, $event)\"\r\n                        (mouseleave)=\"onHover(false, $event)\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value && this.isReadOnly === false\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n\r\n                <!-- Total Input -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/3 sm:w-40\">\r\n                    <mat-label>Total</mat-label>\r\n                    <div class=\"flex items-center\">\r\n                        <input matInput formControlName='total' type=\"number\">\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Grilla (Table) -->\r\n            <div class=\"overflow-y-auto max-h-[500] h-[500] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"w-full mt-1\">\r\n                    <!-- Columns Definitions -->\r\n                    <ng-container matColumnDef=\"codigointerno\">\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.articulo_descripcion}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='solicitado'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Solicitado</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            {{ row.cantidad }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Detalle</th>\r\n                        <div\r\n                            class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\">\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                {{ row.detalle }}\r\n                            </td>\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cotiza'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cotiza</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.cotiza\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto\">Cant. a Pedir</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_recibida\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unitario'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto p-2\">\r\n                            Precio Unitario\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.unitario\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='subtotal'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto\">Subtotal</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.subtotal\" type=\"number\" readonly placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='oc'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">OC</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.oc\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n\r\n            <!-- Observations -->\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </form>\r\n    <div *ngIf=\"!mostrarSpinner\" class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Generar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, ElementRef, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ICotizacion, ICotizacionItem, ICreateCotizacion, IItemPedidoForm, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { combineLatest, finalize, firstValueFrom, map, Observable, startWith, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { FormateadorService } from '@shared/service/app/formateador.service';\r\nimport { InputFormatDirective } from '@shared/components/input-format/input-format.directive';\r\n\r\ninterface DataModal {\r\n    pedido_de_presupuesto: {},\r\n    cotizacion: {}\r\n}\r\n\r\n@Component({\r\n    selector: 'app-nueva-cotizacion',\r\n    templateUrl: './nueva-cotizacion.component.html',\r\n    styleUrls: ['./nueva-cotizacion.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\n\r\nexport class NuevaCotizacionComponent implements OnInit {\r\n    // Necesarios para la app\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n    @Output() public editadoExitosamente: EventEmitter<{ data?}> = new EventEmitter();\r\n\r\n    // Particulares del modulo\r\n    cotizacion: ICotizacion\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    form: FormGroup;\r\n    proveedores: IProveedor[];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    columns = ['codigointerno', 'articulo', 'solicitado', 'detalle', 'cotiza', 'cantidad', 'unitario', 'subtotal', 'oc'];\r\n    items_formulario: IItemPedidoForm[];\r\n    isReadOnly: boolean = false;\r\n    isAllSelected: boolean = true;\r\n    isHovering: boolean;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: DataModal,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<NuevaCotizacionComponent>,\r\n        private dialogo: MatDialog,\r\n        private formateador: FormateadorService,\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data.pedido_de_presupuesto ? this.data.pedido_de_presupuesto : null;\r\n        this.cotizacion = this.data.cotizacion ? this.data.cotizacion : null;\r\n        this.title = `Contestación de Pedido de Presupuesto #${this.pedido_de_presupuesto.idpedido}`;\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n    }\r\n\r\n    onHover(hovering: boolean, $event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.isHovering = hovering;\r\n\r\n        const target = $event.target as HTMLElement;\r\n        const span = target.querySelector('span');\r\n\r\n        if (span) {\r\n            span.style.color = hovering ? 'white' : '';\r\n        }\r\n\r\n        if (hovering) {\r\n            target.style.setProperty('background-color', this.color_primario, 'important');\r\n        } else {\r\n            target.style.removeProperty('background-color');\r\n            target.style.removeProperty('color');\r\n        }\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.loadServices();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    /**\r\n    * Metodo que inicializa el/los formularios de la aplicaciónz\r\n    */\r\n    newForm() {\r\n        const [dia, mes, anio] = this.cotizacion ? this.cotizacion.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl((this.cotizacion?.idproveedor ? { Codigo: this.cotizacion.idproveedor, RazonSocial: this.cotizacion.proveedor } : ''), Validators.required),\r\n            fecha: new FormControl((this.cotizacion?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            total: new FormControl(''),\r\n            observaciones: new FormControl((this.cotizacion?.observaciones ? this.cotizacion.observaciones : this.pedido_de_presupuesto.observaciones), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Metodo encargado de encapsular los datos en un payload y realizar la persistencia\r\n    */\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            this.alert.error('Error al cargar cotizacion. Verifique haber seleccionado un proveedor');\r\n        } else {\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            const items_cotizacion = this.items_formulario.map((item: IItemPedidoForm) => {\r\n                // Parseo el valor unitario a numero para poder persistr\r\n                let valor_unitario = item.unitario['value'] ? item.unitario['value'] : 0;\r\n                valor_unitario = this.formateador.parseCurrency(valor_unitario);\r\n\r\n                return {\r\n                    idpedidoitem: item.idpedidoitem,\r\n                    cotiza: item.cotiza.value === true ? 1 : 0,\r\n                    cantidad: item.cantidad_recibida['value'] ? item.cantidad_recibida['value'] : 0,\r\n                    unitario: valor_unitario,\r\n                    oc: item.oc.value === true ? 1 : 0\r\n                }\r\n            });\r\n\r\n            const existe_item_cotizado_con_valor_cero = items_cotizacion.find(i => i.cotiza === 1 && i.unitario < 0);\r\n            if (existe_item_cotizado_con_valor_cero) {\r\n                return this.alert.error('Error al cargar cotizacion. No se puede cotizar un item con valor menor a cero.');\r\n            };\r\n\r\n            const existe_cantidad_item_mayor_a_la_solicitada = this.items_formulario.find((item: IItemPedidoForm) => item.cantidad_recibida['value'] > item.cantidad);\r\n            if (existe_cantidad_item_mayor_a_la_solicitada) {\r\n                return this.alert.error('Error al cargar cotizacion. No se puede cotizar una cantidad mayor a la pedida');\r\n            }\r\n\r\n            const payload: ICreateCotizacion = {\r\n                cotizacion: {\r\n                    idpedido: this.pedido_de_presupuesto.idpedido,\r\n                    idproveedor: this.form.get('proveedor').value.Codigo,\r\n                    fecha: fecha_formateada,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                items: items_cotizacion\r\n            }\r\n\r\n            if (this.cotizacion?.idcotizacion) {\r\n                this._pedidoDePresupuestoService.updateCotizazcion(this.cotizacion.idcotizacion, payload)\r\n                    .subscribe({\r\n                        next: (data: any) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit(data);\r\n                                this.onCloseMenu(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._pedidoDePresupuestoService.saveCotizacion(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.onCloseMenu(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n        }\r\n    }\r\n\r\n    onCloseMenu(data) {\r\n        this.dialogRef.close(data)\r\n    }\r\n\r\n    /**\r\n    * Metodo encargado de\r\n    * 1) Recorrer los items que me devuelve la API para agregar un input con el valor en \"cantidad recibida\", valor \"unitario\", \"subtotal\", \"OC\" y \"Cotiza\".\r\n    * 2) Escuchar los cambios de \"cantidad recibida\" y valor \"unitaro\" para calcular el subtotal y total.\r\n    * 3) Actualizar el campo \"total\" y rendizar los items en la grilla.\r\n    * @param Items \r\n    */\r\n    crearGrillaForm(Items) {\r\n        const subtotalObservables = []; // Almacena los observables de subtotales\r\n        this.items_formulario = Items.list;\r\n\r\n        this.items_formulario.forEach((item: IItemPedidoForm | ICotizacionItem, index, items_array) => {\r\n\r\n            // Define los FormControls\r\n            const cantidadRecibidaControl = new FormControl(\r\n                { value: item.cantidad || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const unitarioControl = new FormControl(\r\n                { value: item.unitario || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n            const subtotalControl = new FormControl(\r\n                { value: item.subtotal || null, disabled: this.isReadOnly },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            // Escuchar cambios en cantidad_recibida y unitario\r\n            cantidadRecibidaControl.valueChanges.subscribe(() => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n\r\n            unitarioControl.valueChanges.subscribe(() => {\r\n                this.updateSubtotal(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal()\r\n            });\r\n\r\n            subtotalControl.valueChanges.subscribe(() => {\r\n                this.updatePrecioUnitario(cantidadRecibidaControl, unitarioControl, subtotalControl);\r\n                this.updateTotal();\r\n            });\r\n\r\n            subtotalObservables.push(\r\n                subtotalControl.valueChanges.pipe(\r\n                    startWith(subtotalControl.value || 0)\r\n                )\r\n            );\r\n\r\n            // Asigna los controles al item\r\n            items_array[index].cantidad_recibida = cantidadRecibidaControl;\r\n            items_array[index].unitario = unitarioControl;\r\n            items_array[index].subtotal = subtotalControl;\r\n\r\n            items_array[index].cotiza = new FormControl({ value: item.cotiza, disabled: this.isReadOnly });  // No es necesario un validador aquí si es booleano\r\n            items_array[index].oc = new FormControl({ value: item.oc, disabled: this.isReadOnly });     // No es necesario un validador aquí si es booleano\r\n        });\r\n\r\n        this.updateTotal()\r\n\r\n        this.dataSource = new MatTableDataSource(this.items_formulario.sort((a: IItemPedidoForm | ICotizacionItem, b: IItemPedidoForm | ICotizacionItem) => a.idpedidoitem - b.idpedidoitem));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param row Fila del datasource que contiene un input que se desea enfocar\r\n     * @param column Columna donde se encuentra el input que se desea enfocar\r\n     * Previemente tengo que agregar el atributo data-column y data-index a cada input de la grilla para poder seleccionarlos\r\n     */\r\n    focusNextInput(row: any, column: string) {\r\n        const index = this.dataSource.data.indexOf(row); // Obtiene el índice de la fila actual\r\n        const nextIndex = index + 1; // Calcula el índice de la siguiente fila\r\n\r\n        const selector = `[data-column=\"${column}\"][data-index=\"${nextIndex}\"]`; // Armo el seletor para el siguiente input\r\n        const nextInput = document.querySelector(selector) as HTMLElement; // Seleccion el proximo input\r\n\r\n        // Si existe fila consecuente, y tiene input, hago foco\r\n        if (nextInput) {\r\n            nextInput.focus();\r\n        }\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n    * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n    */\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this.getProveedores(), // Método que carga proveedores\r\n            this.existeCotizacion(), // Método que carga articulos\r\n        ]).then(() => {\r\n            this.mostrarSpinner = false;\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Metodo que se encarga de verificar que exista cotizacion para mapear los datos del servicio que lista los items de una cotizacion\r\n    */\r\n    async existeCotizacion() {\r\n        let Items; // Variable auxiliar\r\n\r\n        if (this.cotizacion?.idcotizacion) {\r\n            Items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsCotizacion(this.cotizacion.idcotizacion));\r\n        } else {\r\n            Items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsPedido(this.pedido_de_presupuesto.idpedido));\r\n        }\r\n\r\n        Items.list = Items.list.map(i => {\r\n            return {\r\n                ...i,\r\n                codigo_interno: i.codigo_articulo ? i.codigo_articulo : i.codigo_interno,\r\n                oc: this.cotizacion?.idcotizacion ? (i.oc === 1 ? true : false) : false,\r\n                cotiza: this.cotizacion?.idcotizacion ? (i.cotiza === 1 ? true : false) : true,\r\n                cantidad: Number(i.cantidad),\r\n                unitario: Number(i.unitario),\r\n                subtotal: Number(i.subtotal)\r\n            }\r\n        })\r\n\r\n        await this.crearGrillaForm(Items);\r\n    }\r\n\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores(option));\r\n        const proveedores_del_pedido = this.pedido_de_presupuesto.proveedores.split(',').map(num => parseInt(num));\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list.filter(p => proveedores_del_pedido.includes(p.Codigo));\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n     * Metodo para calcular el valor total entre todos los subtotales de una grilla\r\n     */\r\n    updateTotal() {\r\n        // Parsea los valores del subtotal de formato moneda a numero\r\n        // para poder calcular, ésto sólo si el valor viene en string, sino no hace nada\r\n        this.items_formulario.map((e) => {\r\n            if (typeof (e.subtotal['value']) == 'string') {\r\n                e.subtotal['value'] = this.formateador.parseCurrency(e.subtotal['value']);\r\n            }\r\n        });\r\n\r\n        const total = this.items_formulario.reduce((sum, item) => {\r\n            const subtotal = Number(item.subtotal['value']) || 0;\r\n            return sum + subtotal;\r\n        }, 0);\r\n\r\n        this.form.get('total')?.setValue(total, { emitEvent: false });\r\n    }\r\n\r\n\r\n    /**\r\n    * Método para calcular y actualizar el subtotal\r\n    */\r\n    updateSubtotal(\r\n        cantidadRecibidaControl: FormControl,\r\n        unitarioControl: FormControl,\r\n        subtotalControl: FormControl\r\n    ) {\r\n        const cantidad = Number(cantidadRecibidaControl.value) || 0;\r\n        const unitario = Number(this.formateador.parseCurrency(unitarioControl.value)) || 0;\r\n        const subtotal = cantidad * unitario;\r\n\r\n        const subtotalFormateado = this.formateador.formatCurrency(subtotal);\r\n\r\n        subtotalControl.setValue(subtotalFormateado, { emitEvent: false }); // Evita bucles de eventos\r\n    }\r\n\r\n    /**\r\n     * Método para calcular y actualizar el precio unitario\r\n     */\r\n    updatePrecioUnitario(\r\n        cantidadRecibidaControl: FormControl,\r\n        unitarioControl: FormControl,\r\n        subtotalControl: FormControl\r\n    ) {\r\n        const cantidad = Number(cantidadRecibidaControl.value) || 0;\r\n        const subtotal = Number(this.formateador.parseCurrency(subtotalControl.value)) || 0;\r\n        const unitario = subtotal / cantidad || 0;\r\n\r\n        const unitarioFormateado = this.formateador.formatCurrency(unitario);\r\n\r\n        unitarioControl.setValue(unitario > 0 ? unitarioFormateado : 0, { emitEvent: false }); // Evita bucles de eventos\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Este metodo es el encargado de seleccionar/deseleccionar todos los checkbox de la grilla\r\n     * @param control caolumna del checkbox que se quiere seleccionar/deseleccionar\r\n     */\r\n    seleccionarTodos(control: string) {\r\n        // Obtengo todos los items de ese control que esten seleccionados\r\n        const items_seleccion = this.items_formulario.filter(item => item[control].value === this.isAllSelected);\r\n\r\n        // Si hay mas de un item con el valor de la varibale global, seteo el valor contrario. Esto es asi al ser un metodo reutilizable, si nosotros seleccionamos todos en la columna \"cotiza\" y despues vamos a \"oc\" y seleccionamos todos, deberiamos solo obtener el valor de seleccion (seleccionar todos o deseleccionar todos) de esa columna no del ultimo valor que tiene la varibale global.\r\n        if (items_seleccion.length > 1) {\r\n            this.isAllSelected = !this.isAllSelected; // Asignamos el valor contrario a la variable global\r\n        }\r\n\r\n        // Recorremos todas las filas de ese columa y le asignamos el valor de la variable global\r\n        this.items_formulario.forEach(item => {\r\n            item[control].setValue(this.isAllSelected);\r\n        });\r\n\r\n        this.isAllSelected = !this.isAllSelected; // Le asignamos el valor contrario a la ultima seleccion\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl overflow-y-scroll shadow-lg bg-white dark:bg-slate-900\">\r\n\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu(false)\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <!-- Date, Supplier, and Total Inputs -->\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <!-- Date Picker -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/3\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-2/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\"\r\n                            (mouseenter)=\"onHover(true, $event)\" (mouseleave)=\"onHover(false, $event)\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value && this.isReadOnly === false\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n\r\n                <!-- Total Input -->\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/3 sm:w-40\">\r\n                    <mat-label>Total</mat-label>\r\n                    <div class=\"flex items-center\">\r\n                        <input matInput formControlName='total' type=\"number\">\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <app-grid-filter (filterChange)=\"applyFilter($event)\"></app-grid-filter>\r\n\r\n            <!-- Grilla (Table) -->\r\n            <div class=\"overflow-y-scroll max-h-[300px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=\"w-full mt-1\">\r\n                    <!-- Columns Definitions -->\r\n                    <ng-container matColumnDef=\"codigointerno\">\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \"\r\n                            class=\"rounded-tl-lg text-white w-auto text-center\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto text-center\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.articulo_descripcion}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='solicitado'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto text-center\">Solicitado\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            {{ row.cantidad }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Detalle</th>\r\n                        <div\r\n                            class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\">\r\n                            <td mat-cell *matCellDef=\"let row\">\r\n                                {{ row.detalle }}\r\n                            </td>\r\n                        </div>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cotiza'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto text-center\"\r\n                            [ngClass]=\"['cursor-pointer','transition-colors','duration-500','ease-in-out', 'hover:bg-gray-500' ]\"\r\n                            (click)=\"seleccionarTodos('cotiza')\">\r\n                            Cotiza\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.cotiza\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto\">Cant. a Pedir</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_recibida\"  #focusableInput\r\n                            [attr.data-column]=\"'cantidad'\" [attr.data-index]=\"dataSource.data.indexOf(row)\"\r\n                            (keydown.enter)=\"focusNextInput(row, 'cantidad')\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unitario'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto p-2\">\r\n                            Precio Unitario\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.unitario\" type=\"text\" #focusableInput\r\n                                [attr.data-column]=\"'unitario'\" [attr.data-index]=\"dataSource.data.indexOf(row)\"\r\n                                (keydown.enter)=\"focusNextInput(row, 'unitario')\" appFormatInput=\"currency\" min=\"0\"\r\n                                placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 hover:bg-white transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='subtotal'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white w-auto text-center\">Subtotal\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.subtotal\" #focusableInput\r\n                            [attr.data-column]=\"'subtotal'\" [attr.data-index]=\"dataSource.data.indexOf(row)\"\r\n                            (keydown.enter)=\"focusNextInput(row, 'subtotal')\" type=\"text\" placeholder=\"0\" min=\"0\" appFormatInput=\"currency\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"oc\">\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\"\r\n                            [ngClass]=\"['cursor-pointer','transition-colors','duration-500','ease-in-out', 'hover:bg-gray-500' ]\"\r\n                            class=\"text-white w-auto rounded-tr-lg text-center\" (click)=\"seleccionarTodos('oc')\">\r\n                            OC\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <mat-checkbox [formControl]=\"row.oc\"></mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"columns; sticky: true\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columns\"></tr>\r\n                </table>\r\n\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n\r\n            <!-- Observations -->\r\n            <mat-form-field appearance=\"outline\" class=\"w-full my-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n    </form>\r\n    <div *ngIf=\"!mostrarSpinner\" class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IPedidoDePresupuesto } from '../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../service/pedidos-de-presupuesto.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { CotizarComponent } from './cotizar/cotizar.component';\r\nimport { VerCotizacionComponent } from './ver-cotizacion/ver-cotizacion.component';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\nimport { EnviarEmailModalComponent } from '@shared/components/enviar-email-modal/enviar-email.component';\r\n\r\n@Component({\r\n    selector: 'app-pedidos-de-presupuesto',\r\n    templateUrl: './pedidos-de-presupuesto.component.html',\r\n    styleUrls: ['./pedidos-de-presupuesto.component.scss']\r\n})\r\n\r\nexport class PedidoDePresupuestoComponent implements OnInit, OnDestroy {\r\n    pedidos_de_presupuesto: IPedidoDePresupuesto[];\r\n    public dataSource: MatTableDataSource<IPedidoDePresupuesto> = new MatTableDataSource();\r\n    headers = ['Numero', 'Fecha', 'Contestado', 'Proveedores', 'Acciones'];\r\n    column_params = ['idpedido', 'fecha', 'cotizado', 'proveedores_descripcion', 'acciones'];\r\n    accionesObjeto = null;\r\n    funcionesObjeto = null;\r\n    showMenu: any;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['proveedores_descripcion'];\r\n    filter: IFilter = {\r\n        cotizado: -1,\r\n        proveedor: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.compras.view_compras_pedidos + '?';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    @Output() public enviadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private _pedidoDePresupuestosService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n                visible: (pedido: IPedidoDePresupuesto) => false\r\n            }\r\n        ];\r\n\r\n        this.showMenu = (pedido: IPedidoDePresupuesto) => true;\r\n        /**\r\n         * Aca se declaran los botones que van a ir en la botonera de la grilla dependiendo si showMenu es true o false\r\n         */\r\n        this.accionesObjeto = [\r\n            {\r\n                nombre_boton: \"Ver pedido\",\r\n                functionName: 'ver',\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:ver',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n                visible: (pedido: IPedidoDePresupuesto) => true\r\n            },\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => pedido.cotizado === 0 ? 'jedstion:editar' : 'jedstion:editar_disabled',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n                visible: (pedido: IPedidoDePresupuesto) => true\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:eliminar',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n                visible: (pedido: IPedidoDePresupuesto) => true\r\n            },\r\n            {\r\n                icono: 'comment',\r\n                nombre_boton: \"Cotizaciones\",\r\n                functionName: 'cotizaciones',\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:cotizar',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '' /* 'jedstion:cotizar_disabled' */,\r\n                visible: (pedido: IPedidoDePresupuesto) => true\r\n            },\r\n            {\r\n                icono: 'impresora',\r\n                nombre_boton: \"Reporte de Pedido\",\r\n                functionName: 'reporte_pedido',\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:imprimir',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n                visible: (pedido: IPedidoDePresupuesto) => true\r\n            },\r\n            {\r\n                icono: 'send',\r\n                nombre_boton: \"Enviar Pedido\",\r\n                functionName: 'enviar_pedido',\r\n                iconoAccion: (pedido: IPedidoDePresupuesto) => 'jedstion:enviar',\r\n                iconoAccionado: (pedido: IPedidoDePresupuesto) => '',\r\n                iconoDeshabilitado: (pedido: IPedidoDePresupuesto) => '',\r\n                visible: (pedido: IPedidoDePresupuesto) => true\r\n            }\r\n        ]\r\n\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.cotizado != -1 ? \"filter[cotizado]=\" + this.filter.cotizado : '';\r\n                        this.extraParams += this.filter.proveedor != -1 ? \"&filter[proveedores][like]=\" + this.filter.proveedor.Codigo.toString() : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                if (event.params.data.cotizado === 0) {\r\n                    this.updatePedidoDePresupuesto(event);\r\n                } else {\r\n                    this.alert.warning('Este pedido no puede editarse. Tiene una cotización asociada')\r\n                }\r\n                break;\r\n            case 'eliminar':\r\n                this.deletePedidoDePresupuesto(event);\r\n                break;\r\n            case 'cotizaciones':\r\n                this.cotizarPedidoDePresupuesto(event);\r\n                break;\r\n            case 'ver':\r\n                this.verPedidoDePresupuesto(event);\r\n                break;\r\n            case 'reporte_pedido':\r\n                this.reportePedidoDePresupuesto(event);\r\n                break;\r\n            case 'enviar_pedido':\r\n                // this.alert.info('Esta función estará disponible proximamente');\r\n                this.enviarPedidoDePresupuesto(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    savePedidoDePresupuesto() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updatePedidoDePresupuesto(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deletePedidoDePresupuesto(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar pedido de presupuesto \" + event.params.data.observaciones,\r\n            message: \"¿Desea eliminar el pedido de presupuesto: \" + event.params.data.observaciones + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._pedidoDePresupuestosService.deletePedidoDePresupuesto(event.params.data.idpedido).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Pedido de presupuesto eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este pedido de presupuesto no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    cotizarPedidoDePresupuesto(event) {\r\n        this.dialogo\r\n            .open(CotizarComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    verPedidoDePresupuesto(event) {\r\n        this.dialogo\r\n            .open(VerCotizacionComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reportePedidoDePresupuesto(event) {\r\n        const idpedido = event.params.data.idpedido;\r\n        this._pedidoDePresupuestosService.reportePedidoDePresupuesto(idpedido).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank');\r\n                    }\r\n                } else {\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    enviarPedidoDePresupuesto(event) {\r\n        const modal_data = {\r\n            model: event.params.data,\r\n            _endpointService: environment.compras.compras_pedidos_enviar_presupuesto,\r\n            title: `Enviar Pedido de Presupuesto N°${event.params.data.idpedido}`,\r\n            permiteAdjunto: false\r\n        };\r\n\r\n        this.dialogo\r\n            .open(EnviarEmailModalComponent, { data: modal_data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.enviadoExitosamente\r\n            .subscribe({\r\n                next: (data) => {\r\n                    if (data['success'] === true) {\r\n                        this.alert.success('Email enviado con éxito');\r\n                    } else {\r\n                        this.alert.error(data['error']);\r\n                    }\r\n\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"absolute right-10\">\r\n            <button mat-flat-button (click)='savePedidoDePresupuesto()' #save\r\n                [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Pedido de presupuesto</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\"\r\n            [acciones]=\"accionesObjeto\" [showMenu]=\"showMenu\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport {\r\n    ICreatePedidoPresupuesto,\r\n    IItemPedido,\r\n    IPedidoDePresupuesto,\r\n} from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport {\r\n    MAT_DIALOG_DATA,\r\n    MatDialog,\r\n    MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport {\r\n    BehaviorSubject,\r\n    catchError,\r\n    debounceTime,\r\n    distinctUntilChanged,\r\n    finalize,\r\n    firstValueFrom,\r\n    map,\r\n    Observable,\r\n    of,\r\n    startWith,\r\n    Subject,\r\n    switchMap,\r\n    takeUntil,\r\n    takeWhile,\r\n    tap,\r\n    timer,\r\n} from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { IRubro } from 'app/modules/stock/rubros/models/rubro';\r\nimport { ISelectResponse } from '@shared/models/select-response';\r\n\r\n@Component({\r\n    selector: 'app-save-pedidos-de-presupuesto',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }],\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Para el funcionamiento del sistema\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> =\r\n        new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> =\r\n        new EventEmitter<void>();\r\n\r\n    // Propios del modulo\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    columns = [\r\n        'codigointerno',\r\n        'articulo',\r\n        'cantidad',\r\n        'unidadmedida',\r\n        'detalle',\r\n        'acciones',\r\n    ];\r\n    selectedProveedores: IProveedor[] = [];\r\n    form_carga_articulos: FormGroup;\r\n    form: FormGroup;\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    mov_art_list: any[] = [];\r\n    articulos: IArticulo[] = [];\r\n    articulos_list = [];\r\n    unidades_de_medida: any[] = [];\r\n    proveedores: IProveedor[];\r\n    filteredProveedores$: Observable<IProveedor[]>;\r\n    filteredArticulos$: BehaviorSubject<IArticulo[]> = new BehaviorSubject([]);\r\n    rubros: IRubro[] = [];\r\n    filteredRubros$: BehaviorSubject<ISelectResponse[]> = new BehaviorSubject(\r\n        []\r\n    );\r\n    isHovering: boolean;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data ? this.data : null;\r\n        this.title = this.pedido_de_presupuesto?.idpedido\r\n            ? 'Editar pedido de presupuesto'\r\n            : 'Nuevo pedido de presupuesto';\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe((empresa) => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n        this.loadServices();\r\n\r\n        // Escuchamos los cambios en el control de 'articulo' para filtrar mientras escribe\r\n        this.form_carga_articulos\r\n            .get('articulo')\r\n            .valueChanges.pipe(\r\n                debounceTime(500), // Evita demasiadas llamadas consecutivas\r\n                distinctUntilChanged(), // Solo procede si el valor cambia\r\n                switchMap((value) => {\r\n                    const idarticulo =\r\n                        typeof value === 'object' ? value.idarticulo : null;\r\n                    const filterLike = typeof value === 'string' ? value : null;\r\n                    let idrubro = this.form_carga_articulos.get('rubro').value\r\n                        ? this.form_carga_articulos.get('rubro').value.idrubro\r\n                        : null;\r\n\r\n                    return this._pedidoDePresupuestoService\r\n                        .getArticulos(idarticulo, filterLike, idrubro)\r\n                        .pipe(\r\n                            catchError(() => of({ list: [] })) // Manejo de errores\r\n                        );\r\n                })\r\n            )\r\n            .subscribe((response) => {\r\n                this.filteredArticulos$.next(response.list || []);\r\n            });\r\n    }\r\n\r\n    onHover(hovering: boolean, $event: MouseEvent) {\r\n        $event.preventDefault();\r\n        this.isHovering = hovering;\r\n    \r\n        const target = $event.target as HTMLElement;\r\n        const span = target.querySelector('span');\r\n\r\n        if (span) {\r\n            span.style.color = hovering ? 'white' : '';\r\n        }\r\n    \r\n        if (hovering) {\r\n            target.style.setProperty('background-color', this.color_primario, 'important');\r\n        } else {\r\n            target.style.removeProperty('background-color');\r\n            target.style.removeProperty('color');\r\n        }\r\n    }\r\n    \r\n\r\n    /**\r\n     * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n     */\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this.getProveedores(), // Método que carga proveedores\r\n            this.getArticulos(), // Método que carga articulos\r\n            this.getRubros(), // Método que carga rubros\r\n        ]).then(() => {\r\n            this.mostrarSpinner = false;\r\n        });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.pedido_de_presupuesto\r\n            ? this.pedido_de_presupuesto.fecha.split('/')\r\n            : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.pedido_de_presupuesto) {\r\n            //Sí existe el pedido de presupuesto, cargo la grilla con sus articulos...\r\n            this.getItemsPedido(this.pedido_de_presupuesto.idpedido).then(\r\n                (res) => {\r\n                    this.mov_art_list = res.map((m: IItemPedido) => {\r\n                        return {\r\n                            articulo: m.idarticulo,\r\n                            cantidad: m.cantidad,\r\n                            idunidadmedida: m.idunidadmedida,\r\n                            descripcion_articulo: m.articulo_descripcion,\r\n                            descripcion_um: m.um_descripcion,\r\n                            codigo_interno_articulo: m.codigo_interno,\r\n                            detalle: m.detalle,\r\n                        };\r\n                    });\r\n\r\n                    this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n                }\r\n            );\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl(\r\n                this.pedido_de_presupuesto?.fecha\r\n                    ? this.datePipe.transform(\r\n                          new Date(`${mes}/${dia}/${anio}`),\r\n                          'yyyy-MM-dd'\r\n                      )\r\n                    : this.datePipe.transform(new Date(), 'YYYY-MM-dd'),\r\n                [Validators.required]\r\n            ),\r\n            proveedor: new FormControl(''),\r\n            observaciones: new FormControl(\r\n                this.pedido_de_presupuesto?.observaciones\r\n                    ? this.pedido_de_presupuesto?.observaciones\r\n                    : null\r\n            ),\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            rubro: new FormControl(''),\r\n            articulo: new FormControl('', Validators.required),\r\n            unidadmedida: new FormControl('', Validators.required),\r\n            cantidad: new FormControl('', [\r\n                Validators.required,\r\n                Validators.min(1),\r\n            ]),\r\n            detalle: new FormControl(''),\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    selectProveedor(\r\n        $event: MatAutocompleteSelectedEvent,\r\n        input: HTMLInputElement\r\n    ): void {\r\n        const selected = $event.option.value;\r\n\r\n        if (selected && !this.selectedProveedores.includes(selected)) {\r\n            this.selectedProveedores.push(selected);\r\n        }\r\n\r\n        this.form.get('proveedor').setValue('');\r\n        input.value = '';\r\n    }\r\n\r\n    removeProveedor(proveedor: IProveedor): void {\r\n        const index = this.selectedProveedores.indexOf(proveedor);\r\n        if (index >= 0) {\r\n            this.selectedProveedores.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            const fecha = this.form.get('fecha').value;\r\n            const fecha_formateada = this.datePipe.transform(\r\n                fecha,\r\n                'yyyy-MM-dd'\r\n            );\r\n\r\n            const items_pedido = this.mov_art_list.map((a) => {\r\n                return {\r\n                    idarticulo: a.articulo,\r\n                    idunidadmedida: a.idunidadmedida,\r\n                    cantidad: a.cantidad,\r\n                    detalle: a.detalle,\r\n                };\r\n            });\r\n\r\n            const proveedores_id = this.selectedProveedores.map((p) => {\r\n                return p.Codigo;\r\n            });\r\n\r\n            const payload: ICreatePedidoPresupuesto = {\r\n                pedido: {\r\n                    fecha: fecha_formateada,\r\n                    observaciones:\r\n                        this.form.get('observaciones').value != null &&\r\n                        this.form.get('observaciones').value != ''\r\n                            ? this.form.get('observaciones').value\r\n                            : null,\r\n                },\r\n                articulos: items_pedido,\r\n                proveedores: proveedores_id,\r\n            };\r\n\r\n            if (this.pedido_de_presupuesto?.idpedido) {\r\n                this._pedidoDePresupuestoService\r\n                    .updatePedidoDePresupuesto(\r\n                        this.pedido_de_presupuesto.idpedido,\r\n                        payload\r\n                    )\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu();\r\n                            }\r\n                        },\r\n                    });\r\n            } else {\r\n                this._pedidoDePresupuestoService\r\n                    .savePedidoDePresupuesto(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu();\r\n                            }\r\n                        },\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener los combos.\r\n     * @param $event\r\n     */\r\n    seleccionItem($event, info?) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo); //...Buscamos las UM que posee ese articulo.\r\n\r\n            // Muevo el foco al campo \"cantidad\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"cantidad\".\r\n            setTimeout(() => {\r\n                const cantidadField = document.querySelector(\r\n                    '[formControlName=\"cantidad\"]'\r\n                ) as HTMLInputElement;\r\n                cantidadField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        if ($event.idrubro && !$event.idarticulo) {\r\n            this.getArticulos($event.idrubro);\r\n\r\n            // Muevo el foco al campo \"articulo\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"articulo\".\r\n            setTimeout(() => {\r\n                const articuloField = document.querySelector(\r\n                    '[formControlName=\"articulo\"]'\r\n                ) as HTMLInputElement;\r\n                articuloField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        if ($event && info === 'cambio_de_foco') {\r\n            $event.preventDefault();\r\n\r\n            // Muevo el foco al campo \"detalle\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"detalle\".\r\n            setTimeout(() => {\r\n                const detalleField = document.querySelector(\r\n                    '[formControlName=\"detalle\"]'\r\n                ) as HTMLInputElement;\r\n                detalleField?.focus();\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Funcion para limpiar campos\r\n     */\r\n    limpiarCasillero(input) {\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        } else if (this.form_carga_articulos.get(input)) {\r\n            this.form_carga_articulos.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'rubro') {\r\n            if (this.form_carga_articulos.get('articulo').value) {\r\n                this.form_carga_articulos.get('articulo').setValue('');\r\n            }\r\n            this.getArticulos();\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('detalle').setValue('');\r\n        }\r\n\r\n        if (input === 'proveedor') {\r\n            this.selectedProveedores = [];\r\n            this.form.get('proveedor').setValue(null);\r\n        }\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var movimiento_articulo Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (movimiento) {\r\n            //Si 'res' no es false | undefined | null, continua con la logica...\r\n            let movimiento_articulo = {\r\n                //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                articulo: movimiento.articulo.idarticulo,\r\n                cantidad: movimiento.cantidad,\r\n                idunidadmedida: movimiento.unidad_medida,\r\n                descripcion_articulo: movimiento.articulo.descripcion,\r\n                descripcion_um: movimiento.unidadmedida_descripcion,\r\n                codigo_interno_articulo: movimiento.articulo.codigo_interno,\r\n                detalle: movimiento.detalle,\r\n            };\r\n            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n            // Actualizar validaciones según el estado de la grilla\r\n            this.updateFormValidators();\r\n\r\n            this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n            this.alert.success('Artículo añadido con éxito');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo\r\n     * array que contiene todos los elementos de la lista original,\r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo\r\n     */\r\n    deleteMovimiento(articulo) {\r\n        this.mov_art_list = this.mov_art_list.filter((item) => {\r\n            return item !== articulo;\r\n        });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('presupuesto').enable();\r\n        }\r\n\r\n        this.alert.success('Artículo eliminado con éxito');\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent, input?: string) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning(\r\n                'Por favor, Ingrese una cantidad mayor a cero'\r\n            );\r\n        }\r\n\r\n        if (\r\n            !this.form_carga_articulos.get('unidadmedida').value ||\r\n            !this.form_carga_articulos.get('articulo').value ||\r\n            !this.form_carga_articulos.get('cantidad').value\r\n        ) {\r\n            return this.alert.warning(\r\n                'Por favor, complete todos los campos de la carga de articulo'\r\n            );\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe seleccionar un artículo');\r\n        } else {\r\n            let existeMovimiento = this.mov_art_list.find(\r\n                (movimiento) =>\r\n                    movimiento.articulo ===\r\n                        this.form_carga_articulos.get('articulo').value\r\n                            .idarticulo &&\r\n                    movimiento.idunidadmedida ===\r\n                        this.form_carga_articulos.get('unidadmedida').value\r\n            );\r\n\r\n            if (existeMovimiento) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                return this.alert.warning(\r\n                    'Ya existe un movimiento de ese articulo con esa unidad de medida'\r\n                );\r\n            }\r\n\r\n            let unidadmedida = this.unidades_de_medida.find(\r\n                (um) =>\r\n                    um.idunidadmedida ===\r\n                    this.form_carga_articulos.get('unidadmedida').value\r\n            ); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n            let movimiento_articulo = {\r\n                articulo: this.form_carga_articulos.get('articulo').value,\r\n                unidad_medida:\r\n                    this.form_carga_articulos.get('unidadmedida').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                detalle: this.form_carga_articulos.get('detalle').value,\r\n                cantidad: this.form_carga_articulos.get('cantidad').value,\r\n            };\r\n\r\n            this.addMovimiento(movimiento_articulo);\r\n        }\r\n\r\n        // Mueve el foco al campo \"articulo\" después de la carga\r\n        this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n        const articuloField = document.querySelector(\r\n            '[formControlName=\"articulo\"]'\r\n        ) as HTMLInputElement;\r\n        articuloField?.focus();\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    /**\r\n     * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n     */\r\n    etiquetaArticulo() {\r\n        this.dialogo\r\n            .open(LectorQrComponent, {\r\n                panelClass: 'ayuda-dialog',\r\n            })\r\n            .componentInstance.sendObject.subscribe((code) => {\r\n                if (!code || code.length === 0) {\r\n                    return this.alert.error('Código QR vacío o inválido');\r\n                }\r\n\r\n                let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n                const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n                this._pedidoDePresupuestoService\r\n                    .getArticulos(idarticulo)\r\n                    .subscribe(\r\n                        (response) => {\r\n                            if (response?.list?.length > 0) {\r\n                                const articulo = response.list[0];\r\n                                this.form_carga_articulos\r\n                                    .get('articulo')\r\n                                    .setValue(articulo);\r\n                            } else {\r\n                                return this.alert.error(\r\n                                    'No hay stock del artículo en el depósito'\r\n                                );\r\n                            }\r\n                        },\r\n                        (error) => {\r\n                            console.error('Error al obtener artículo:', error);\r\n                        }\r\n                    );\r\n            });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(\r\n            this._pedidoDePresupuestoService.getProveedores()\r\n        );\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n            this.filteredProveedores$ = this.form\r\n                .get('proveedor')\r\n                .valueChanges.pipe(\r\n                    startWith(''),\r\n                    map((value) => this._filterProveedores(value))\r\n                );\r\n\r\n            // En caso de edicion...\r\n            if (this.pedido_de_presupuesto) {\r\n                const id_proveedores = this.pedido_de_presupuesto.proveedores\r\n                    .toString()\r\n                    .split(','); // Encapsulo los idproveedor que me envia el servicio en un arreglo de tipo String...\r\n\r\n                // Por cada idproveedor...\r\n                id_proveedores.forEach((idproveedor) => {\r\n                    // Busco el proveedor el cual coincida su 'codigo' y el 'idproveedor' parseado a Entero...\r\n                    let proveedor = this.proveedores.find(\r\n                        (p: IProveedor) => p.Codigo === parseInt(idproveedor)\r\n                    );\r\n\r\n                    // Si no existe el proveedor en arreglo que lista los chips...\r\n                    if (!this.selectedProveedores.includes(proveedor)) {\r\n                        // Lo agrego.\r\n                        this.selectedProveedores.push(proveedor);\r\n                    }\r\n                    // Sino no hace nada...\r\n                });\r\n                // Termina ejecucion...\r\n            }\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getArticulos(idrubro?: number | null) {\r\n        try {\r\n            const articulos = await firstValueFrom(\r\n                this._pedidoDePresupuestoService.getArticulos(\r\n                    null,\r\n                    null,\r\n                    idrubro\r\n                )\r\n            );\r\n\r\n            this.articulos = articulos.list;\r\n            this.articulos_list = this.articulos;\r\n\r\n            this.form_carga_articulos\r\n                .get('articulo')\r\n                .valueChanges.pipe(\r\n                    startWith(''),\r\n                    map((value) => this._filterArticulos(value || ''))\r\n                )\r\n                .subscribe((filtered) => {\r\n                    this.filteredArticulos$.next(filtered);\r\n                });\r\n        } catch (error) {\r\n            console.error('Error al obtener articulos:', error);\r\n            this.filteredArticulos$.next([]);\r\n        }\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(\r\n            this._pedidoDePresupuestoService.getUnidadesDeMedidaArticulos(\r\n                idarticulo\r\n            )\r\n        );\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list\r\n                .sort((a, b) => a.factor - b.factor)\r\n                .map((unidad) => {\r\n                    //Convierto en numero\r\n                    unidad.factor = parseFloat(unidad.factor);\r\n\r\n                    // Almaceno solo la um base de un articulo\r\n                    if (unidad.factor === 1) {\r\n                        um_base = unidad.um.descripcion;\r\n                    }\r\n\r\n                    return {\r\n                        idunidadmedida: unidad.idunidadmedida,\r\n                        descripcion_um: unidad.um.descripcion,\r\n                        factor_um: unidad.factor,\r\n                        um_base: um_base,\r\n                    };\r\n                });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos\r\n                    .get('unidadmedida')\r\n                    .setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({\r\n                    um: this.unidades_de_medida[0].idunidadmedida,\r\n                });\r\n            }\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getItemsPedido(idpedido): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(\r\n                this._pedidoDePresupuestoService.getItemsPedido(idpedido)\r\n            );\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        });\r\n    }\r\n\r\n    async getRubros() {\r\n        try {\r\n            const rubros = await firstValueFrom(\r\n                this._pedidoDePresupuestoService.getRubros()\r\n            );\r\n\r\n            this.rubros = rubros.list;\r\n\r\n            this.form_carga_articulos\r\n                .get('rubro')\r\n                .valueChanges.pipe(\r\n                    startWith(''),\r\n                    map((value) => this._filterSelect(value || '', 'rubros'))\r\n                )\r\n                .subscribe((filtered) => {\r\n                    this.filteredRubros$.next(filtered);\r\n                });\r\n        } catch (error) {\r\n            console.error('Error al obtener articulos:', error);\r\n            this.filteredRubros$.next([]);\r\n        }\r\n    }\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter((proveedor) =>\r\n            proveedor.RazonSocial.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value\r\n     * @returns\r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter((articulo) => {\r\n            const codigo_interno = articulo.codigo_interno\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(filterValue);\r\n            const descripcion = articulo.descripcion\r\n                .toString()\r\n                .toLowerCase()\r\n                .includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param item Valor a buscar\r\n     * @param model Modelo donde se retorna la lista de valores encontrados\r\n     * @returns Valores encontrados en la lista\r\n     */\r\n    private _filterSelect(\r\n        item: ISelectResponse,\r\n        model?: string\r\n    ): ISelectResponse[] {\r\n        const filterValue = item.toString().toLowerCase();\r\n        return this[`${model}`].filter((item) =>\r\n            item.descripcion.toLowerCase().includes(filterValue)\r\n        );\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo\r\n     * @returns\r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo?.idarticulo\r\n            ? `${articulo.codigo_interno} - ${articulo.descripcion}`\r\n            : '';\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n    getTextGenerico(option) {\r\n        if (option.RazonSocial || option.razonSocial)\r\n            return option ? option.RazonSocial || option.razonSocial : '';\r\n\r\n        if (option.descripcion) return option ? option.descripcion : '';\r\n\r\n        if (option.nick)\r\n            return option ? `${option.nombre} ${option.apellido}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n     * Funcion para contar las palabras en las observaciones\r\n     */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n     * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n     */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n     * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n     */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos\r\n                .get('articulo')\r\n                .setValidators(Validators.required);\r\n            this.form_carga_articulos\r\n                .get('unidadmedida')\r\n                .setValidators(Validators.required);\r\n            this.form_carga_articulos\r\n                .get('cantidad')\r\n                .setValidators([Validators.required, Validators.min(1)]);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos\r\n                .get('cantidad')\r\n                .setValidators(Validators.min(1));\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n    }\r\n\r\n    /**\r\n     * Filtro para buscar en la grilla de articulos\r\n     * @param filterValue\r\n     */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}\r\n","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl sm:min-h-[500px] overflow-y-auto shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <div class=\"w-full h-full flex flex-col overflow-y-scroll\">\r\n        <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4\" [formGroup]=\"form\">\r\n            <div class=\"flex flex-col w-full h-full p-4\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\"\r\n                            [min]=\"minDate\" [max]=\"maxDate\" />\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-3/4\">\r\n                        <mat-label>Proveedor</mat-label>\r\n                        <mat-chip-grid #chipgrid aria-label=\"Seleccione Proveedor\">\r\n                            <mat-chip-row *ngFor=\"let proveedor of selectedProveedores\" [value]=\"proveedor\"\r\n                                (removed)=\"removeProveedor(proveedor)\">\r\n                                {{ proveedor.RazonSocial }}\r\n                                <button matChipRemove>\r\n                                    <mat-icon>cancel</mat-icon>\r\n                                </button>\r\n                            </mat-chip-row>\r\n                            <input [placeholder]=\" 'Agregar Proveedor' \" #proveedorInput formControlName=\"proveedor\"\r\n                                [matChipInputFor]=\"chipgrid\" [matAutocomplete]=\"auto\" />\r\n                        </mat-chip-grid>\r\n                        <mat-autocomplete #auto=\"matAutocomplete\"\r\n                            (optionSelected)=\"selectProveedor($event, proveedorInput)\">\r\n                            <mat-option *ngFor=\" let proveedor of filteredProveedores$ | async\" [value]=\"proveedor\" \r\n                            (mouseenter)=\"onHover(true, $event)\"\r\n                            (mouseleave)=\"onHover(false, $event)\"\r\n                            >\r\n                                {{ proveedor.RazonSocial }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                    </mat-form-field>\r\n                </div>\r\n                <form [formGroup]=\"form_carga_articulos\" class=\"flex flex-col\">\r\n                    <div class=\"flex flex-col gap-2 sm:flex-row\">\r\n                        <mat-form-field appearance='outline' class=\"sm:w-2/6 w-full\">\r\n                            <mat-label>Rubro</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"rubro\" [matAutocomplete]=\"art_rubro\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_rubro=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextGenerico\">\r\n                                <mat-option *ngFor=\"let rubro of (filteredRubros$ | async) ?? []\" [value]=\"rubro\" (mouseenter)=\"onHover(true, $event)\"\r\n                                (mouseleave)=\"onHover(false, $event)\">\r\n                                    {{ rubro.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('rubro')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('rubro').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n\r\n                        <div class=\"flex sm:w-4/6 w-full gap-1\">\r\n                            <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                                <mat-label>Artículo</mat-label>\r\n                                <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                    (ngModelChange)=\"seleccionItem($event)\">\r\n                                <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                    [displayWith]=\"getTextArticulo\">\r\n                                    <mat-option *ngFor=\"let articulo of (filteredArticulos$ | async) ?? []\"\r\n                                    (mouseenter)=\"onHover(true, $event)\"\r\n                                    (mouseleave)=\"onHover(false, $event)\"\r\n                                        [value]=\"articulo\">\r\n                                        <span>\r\n                                            <strong>{{ articulo.codigo_interno }}</strong> -\r\n                                            {{ articulo.descripcion }} <i *ngIf=\"articulo.tipo != 2\">({{\r\n                                                articulo.total_stock }})</i>\r\n                                        </span>\r\n                                    </mat-option>\r\n\r\n                                </mat-autocomplete>\r\n                                <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                    *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                    <mat-icon>clear</mat-icon>\r\n                                </button>\r\n                            </mat-form-field>\r\n                            <div class=\"flex\">\r\n                                <button [class]=\"color_primario ? '' : default_color\"\r\n                                    [style.background]=\"color_primario\" [style.color]=\"color_secundario\"\r\n                                    class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                    (click)=\"etiquetaArticulo()\">\r\n                                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path\r\n                                            d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                            fill=\"currentColor\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex gap-2 flex-col sm:flex-row w-full\">\r\n\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-2/6 \">\r\n                            <mat-label>UM</mat-label>\r\n                            <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                                <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\" (mouseenter)=\"onHover(true, $event)\"\r\n                                (mouseleave)=\"onHover(false, $event)\">\r\n                                    {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\"\r\n                                        class=\"font-light\">(x{{um.factor_um}}\r\n                                        {{um.um_base}})</i>\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <div class=\"flex w-full flex-col sm:flex-row sm:w-4/6 gap-2\">\r\n                            <mat-form-field appearance='outline' class=\"w-full sm:w-2/6\"\r\n                                (keydown.enter)=\"seleccionItem($event, 'cambio_de_foco')\">\r\n                                <mat-label>Cantidad</mat-label>\r\n                                <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                            </mat-form-field>\r\n                            <div class=\"flex w-full  sm:w-4/6\">\r\n                                <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                                    (keydown.enter)=\"onCargar($event)\">\r\n                                    <mat-label>Detalle</mat-label>\r\n                                    <input matInput type=\"text\" formControlName=\"detalle\">\r\n                                </mat-form-field>\r\n                                <div class=\"flex\">\r\n                                    <button [class]=\"color_primario ? '' : default_color\"\r\n                                        [style.background]=\"color_primario\" matTooltip='Cargar'\r\n                                        class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                        (click)=\"onCargar()\">\r\n                                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n\r\n                <!-- Barra de busqueda de articulos en la grilla -->\r\n                <app-grid-filter (filterChange)=\"applyFilter($event)\"></app-grid-filter>\r\n\r\n                <!-- Grilla -->\r\n                <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                    <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                        <ng-container matColumnDef='codigointerno'>\r\n                            <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                                [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                                Codigo Interno</th>\r\n                            <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                                {{movimiento_articulo.codigo_interno_articulo}}\r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef='articulo'>\r\n                            <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                                [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                                Articulo</th>\r\n                            <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                                {{movimiento_articulo.descripcion_articulo}}\r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef='cantidad'>\r\n                            <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                                [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                            <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                                {{ movimiento_articulo.cantidad}}\r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef='unidadmedida'>\r\n                            <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                                [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">UM</th>\r\n                            <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                                {{ movimiento_articulo.descripcion_um }}\r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef='detalle'>\r\n                            <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                                [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Detalle</th>\r\n                            <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                                <i>{{ movimiento_articulo.detalle }}</i>\r\n                            </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef='acciones'>\r\n                            <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                                [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                            </th>\r\n                            <td mat-cell *matCellDef='let movimiento'>\r\n                                <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                    <mat-icon color=\"warn\">delete</mat-icon>\r\n                                </button>\r\n                            </td>\r\n                        </ng-container>\r\n                        <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                        <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                    </table>\r\n                    <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                        <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Mostrar el contador de items -->\r\n                <div class=\"flex w-full items-center my-2 px-4\">\r\n                    <span class=\"flex-grow\"></span>\r\n                    <label class=\"text-gray-700 text-sm\">\r\n                        Total de artículos: {{ dataSource.data.length }}\r\n                    </label>\r\n                </div>\r\n\r\n                <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                    <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                        {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n        </form>\r\n        <div *ngIf=\"!mostrarSpinner\" class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n            <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n                [style.background-color]=\"color_primario || '' \"\r\n                class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n                <span class=\"text-white font-medium text-base\">Guardar</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { ICreateCotizacion, IItemPedido, IPedidoDePresupuesto } from '../../models/pedido-de-presupuesto';\r\nimport { PedidoDePresupuestoService } from '../../service/pedidos-de-presupuesto.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { firstValueFrom, Observable, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-ver-cotizacion-pedidos-de-presupuesto',\r\n    templateUrl: './ver-cotizacion.component.html',\r\n    styleUrls: ['./ver-cotizacion.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n\r\n})\r\nexport class VerCotizacionComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    maxPalabras: number = 50;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n\r\n    // Particulares del modulo\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'detalle'];\r\n    form: FormGroup;\r\n    pedido_de_presupuesto: IPedidoDePresupuesto;\r\n    mov_art_list: any[] = [];\r\n    selectedProveedores: IProveedor[] = [];\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    proveedores: IProveedor[];\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _pedidoDePresupuestoService: PedidoDePresupuestoService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        private datePipe: DatePipe,\r\n        public dialogRef: MatDialogRef<VerCotizacionComponent>\r\n    ) {\r\n        this.pedido_de_presupuesto = this.data ? this.data : null;\r\n        this.title = `Pedido De Presupuesto N° ${this.pedido_de_presupuesto.idpedido}`;\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.loadServices();\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.pedido_de_presupuesto.fecha.split('/'); //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.getItemsPedido(this.pedido_de_presupuesto.idpedido).then((res) => {\r\n            this.mov_art_list = res.map((m: IItemPedido) => {\r\n                return {\r\n                    articulo: m.idarticulo,\r\n                    cantidad: m.cantidad,\r\n                    idunidadmedida: m.idunidadmedida,\r\n                    descripcion_articulo: m.articulo_descripcion,\r\n                    descripcion_um: m.um_descripcion,\r\n                    codigo_interno_articulo: m.codigo_interno,\r\n                    detalle: m.detalle\r\n                }\r\n            })\r\n\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n        });\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl({ disabled: true, value: (this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd')) }, [Validators.required]),\r\n            proveedor: new FormControl(''),\r\n            observaciones: new FormControl({ disabled: true, value: (this.pedido_de_presupuesto.observaciones) }, Validators.required),\r\n        });\r\n\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n* Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n*/\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this.getProveedores(), // Método que carga proveedores\r\n        ]).then(() => {\r\n            this.mostrarSpinner = false;\r\n        })\r\n    }\r\n\r\n    async getItemsPedido(idpedido): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._pedidoDePresupuestoService.getItemsPedido(idpedido))\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._pedidoDePresupuestoService.getProveedores());\r\n\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n\r\n            // En caso de edicion...\r\n            if (this.pedido_de_presupuesto) {\r\n                const id_proveedores = this.pedido_de_presupuesto.proveedores.toString().split(\",\"); // Encapsulo los idproveedor que me envia el servicio en un arreglo de tipo String...\r\n\r\n                // Por cada idproveedor...\r\n                id_proveedores.forEach(idproveedor => {\r\n                    // Busco el proveedor el cual coincida su 'codigo' y el 'idproveedor' parseado a Entero...\r\n                    let proveedor = this.proveedores.find((p: IProveedor) => p.Codigo === parseInt(idproveedor));\r\n\r\n                    // Si no existe el proveedor en arreglo que lista los chips...\r\n                    if (!this.selectedProveedores.includes(proveedor)) {\r\n                        // Lo agrego.\r\n                        this.selectedProveedores.push(proveedor);\r\n                    }\r\n                    // Sino no hace nada...\r\n                });\r\n                // Termina ejecucion...\r\n            }\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl overflow-y-auto shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <spinner-component *ngIf=\"mostrarSpinner\" ></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4 overflow-y-auto\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                <mat-label>Proveedor</mat-label>\r\n                <mat-chip-grid disabled #chipgrid aria-label=\"Seleccione Proveedor\">\r\n                    <mat-chip-row [ngClass]=\"'bg-slate-800'\" *ngFor=\"let proveedor of selectedProveedores\"\r\n                        [value]=\"proveedor\">\r\n                        {{ proveedor.RazonSocial }}\r\n                        <button matChipRemove *ngIf=\"!pedido_de_presupuesto\">\r\n                            <mat-icon>cancel</mat-icon>\r\n                        </button>\r\n                    </mat-chip-row>\r\n                    <input readonly [placeholder]=\" 'Agregar Proveedor' \" #proveedorInput formControlName=\"proveedor\"\r\n                        [matChipInputFor]=\"chipgrid\" />\r\n                </mat-chip-grid>\r\n            </mat-form-field>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <app-grid-filter (filterChange)=\"applyFilter($event)\"></app-grid-filter>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[450px] h-[450px] sm:max-h-[200px] sm:h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">UM</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='detalle'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\" rounded-tr-lg text-white w-auto\">Detalle\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            <i>{{ movimiento_articulo.detalle }}</i>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n            \r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div disabled class=\"counter\" ngClass=\"text-gray-400\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { PedidoDePresupuestoComponent } from './components/pedidos-de-presupuesto.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { PedidoDePresupuestoService } from './service/pedidos-de-presupuesto.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { CotizarComponent } from './components/cotizar/cotizar.component';\r\nimport { VerCotizacionComponent } from './components/ver-cotizacion/ver-cotizacion.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { NuevaCotizacionComponent } from './components/nueva-cotizacion/nueva-cotizacion.component';\r\nimport { GenerarOrdenComponent } from './components/generar-orden/generar-orden.component';\r\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\r\nimport { FormateadorService } from '@shared/service/app/formateador.service';\r\nimport { InputFormatDirective } from '@shared/components/input-format/input-format.directive';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PedidoDePresupuestoComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations: [PedidoDePresupuestoComponent, SaveComponent, FilterMenuComponent, CotizarComponent, VerCotizacionComponent, NuevaCotizacionComponent, GenerarOrdenComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        MatChipsModule,\r\n        SharedComponentModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [PedidoDePresupuestoService, JedsMenuService, AppAlertService, DatePipe, FormateadorService]\r\n})\r\nexport class PedidosDePresupuestoModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { map, Observable, Subject } from 'rxjs';\r\nimport { ICotizacion, ICreateCotizacion, ICreateGenerarOC, ICreatePedidoPresupuesto, IItemPedido, IPedidoDePresupuesto, IResponseObservable } from '../models/pedido-de-presupuesto';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IResponse, Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class PedidoDePresupuestoService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los Rubros.\r\n     * @returns Rubros\r\n     */\r\n    getPedidoDePresupuesto(sort?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param pedido_de_presupuesto \r\n     * @returns Crea un item nuevo\r\n     */\r\n    savePedidoDePresupuesto(pedido_de_presupuesto: ICreatePedidoPresupuesto): Observable<IPedidoDePresupuesto> {\r\n        return this.http.post<IPedidoDePresupuesto>(`${environment.compras.compras_pedidos}`, pedido_de_presupuesto);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idpedido\r\n     * @param pedido_de_presupuesto\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updatePedidoDePresupuesto(idpedido: number, pedido_de_presupuesto: ICreatePedidoPresupuesto): Observable<IPedidoDePresupuesto> {\r\n        return this.http.put<IPedidoDePresupuesto>(`${environment.compras.compras_pedidos}` + '/' + idpedido, pedido_de_presupuesto);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idpedido \r\n     * @returns Elimina un item\r\n     */\r\n    deletePedidoDePresupuesto(idpedido: number): Observable<IPedidoDePresupuesto> {\r\n        return this.http.delete<IPedidoDePresupuesto>(`${environment.compras.compras_pedidos}` + '/' + idpedido);\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getRubros(option?) {\r\n        let f = '?sort=descripcion';\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.rubros}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    enviarPedidoDePresupuesto(pedido_de_presupuesto: IPedidoDePresupuesto): Observable<IPedidoDePresupuesto> {\r\n        return this.http.post<IPedidoDePresupuesto>(``, pedido_de_presupuesto);\r\n    }\r\n\r\n    getArticulos(idarticulo?: number, filterLike?: string, idrubro?: number) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        if (idarticulo) {\r\n            f += `&filter[idarticulo]=${idarticulo}`;\r\n        } else if (filterLike) {\r\n            f += `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}`;\r\n        } \r\n\r\n            f += idrubro ? `&filter[idrubro]=${idrubro}` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        let env = environment.stock.view_articulos + '?sort=descripcion&pagination=1&sort=-total_stock&sort=orden';\r\n        this.http.get<any>(`${env}${f}`).pipe(\r\n            map((resp => resp))\r\n        ).subscribe((resp: any) => {\r\n            this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n        });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItemsPedido(idpedido: number): Observable<IItemPedido> {\r\n        let f = `?filter[idpedido]=${idpedido}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.view_compras_pedido_item}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    saveCotizacion(cotizacion: ICreateCotizacion): Observable<IPedidoDePresupuesto> {\r\n        return this.http.post<IPedidoDePresupuesto>(`${environment.compras.compras_cotizacion}`, cotizacion);\r\n    }\r\n\r\n    updateCotizazcion(idcotizacion: number, cotizacion: ICreateCotizacion): Observable<IPedidoDePresupuesto> {\r\n        return this.http.put<IPedidoDePresupuesto>(`${environment.compras.compras_cotizacion}` + '/' + idcotizacion, cotizacion);\r\n    }\r\n\r\n    deleteCotizacion(idcotizacion: number): Observable<ICotizacion> {\r\n        return this.http.delete<IPedidoDePresupuesto>(`${environment.compras.compras_cotizacion}` + '/' + idcotizacion);\r\n    }\r\n\r\n    getCotizacionesPedido(idpedido: number): Observable<IResponseObservable> {\r\n        let f = `?filter[idpedido]=${idpedido}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.view_compras_cotizacion}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItemsCotizacion(idcotizacion: number): Observable<IResponseObservable> {\r\n        let f = `?filter[idcotizacion]=${idcotizacion}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.view_compras_cotizacion_item}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    generarOrdenCompra(payload: ICreateGenerarOC): Observable<any> {\r\n        return this.http.post<ICreateGenerarOC>(`${environment.compras.compras_orden_compra_cotizacion}`, payload);\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idpedido\r\n    * @returns \r\n    */\r\n    reportePedidoDePresupuesto(idpedido: number): Observable<IResponse<any>> {\r\n        return this.http.get<IResponse<any>>(`${environment.compras.generar_reporte_pedido}` + idpedido);\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["EventEmitter","MAT_DIALOG_DATA","finalize","Subject","takeUntil","takeWhile","tap","timer","MatTableDataSource","environment","NuevaCotizacionComponent","TablaDinamicaComponent","GenerarOrdenComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","CotizarComponent","constructor","data","_pedidosDePresupuestosService","confirm","_empresaService","dialogo","alert","dialogRef","default_color","_unsubscribeAll","creadoExitosamente","editadoExitosamente","dataSource","headers","column_params","funcionesObjeto","env","pedido_de_presupuesto","title","idpedido","icono","nombre_boton","functionName","iconoAccion","cotizacion","orden_compra","iconoAccionado","iconoDeshabilitado","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","compras","view_compras_cotizacion","ngOnInit","getEmpresa","subscribeAlert","emitConfig","next","config","appearance","time","onCloseMenu","close","generarAcciones","event","name","params","warning","updateCotizacion","deleteCotizacion","generarOrdenDeCompra","nuevaCotizacion","open","panelClass","autoFocus","componentInstance","success","tabla","renderTabla","error","result","observaciones","proveedor","dismissible","actions","show","color","label","cancel","afterClosed","res","idcotizacion","console","ɵɵdirectiveInject","i1","PedidoDePresupuestoService","i2","FuseConfirmationService","i3","EmpresaService","i4","MatDialog","i5","AppAlertService","MatDialogRef","selectors","viewQuery","CotizarComponent_Query","rf","ctx","ɵɵlistener","CotizarComponent_Template_button_click_5_listener","ɵɵtemplate","CotizarComponent_fuse_alert_8_Template","CotizarComponent_Template_button_click_12_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","CotizarComponent_Template_app_tabla_dinamica_functionEmitter_19_listener","$event","ɵɵclassMap","ɵɵstyleProp","ɵɵtextInterpolate","FormControl","FormGroup","fuseAnimations","firstValueFrom","map","startWith","proveedor_r4","RazonSocial","FilterMenuComponent_mat_form_field_23_mat_option_7_Template","_r2","ctx_r1","getTextProveedor","ɵɵpipeBind1","filteredProveedores","FilterMenuComponent","menuService","_pedidoDePresupuestoService","proveedores","formFilters","cotizado","patchValue","filter","getProveedores","resetFilters","reset","option","_this","_asyncToGenerator","Proveedores","Promise","_ref","resolve","list","get","valueChanges","value","_filterProveedores","_x","apply","arguments","filterValue","toString","toLowerCase","includes","JedsMenuService","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_span_22_Template","FilterMenuComponent_mat_form_field_23_Template","FilterMenuComponent_Template_button_click_25_listener","FilterMenuComponent_Template_button_click_28_listener","getRawValue","Validators","combineLatest","MY_DATE_FORMATS","MAT_DATE_FORMATS","GenerarOrdenComponent_form_10_mat_option_15_Template_mat_option_mouseenter_0_listener","ɵɵrestoreView","_r32","ctx_r31","ɵɵnextContext","ɵɵresetView","onHover","GenerarOrdenComponent_form_10_mat_option_15_Template_mat_option_mouseleave_0_listener","ctx_r33","proveedor_r30","GenerarOrdenComponent_form_10_button_17_Template_button_click_0_listener","_r35","ctx_r34","limpiarCasillero","ctx_r9","row_r36","codigo_interno","ctx_r11","row_r37","articulo_descripcion","ctx_r13","row_r38","cantidad","ctx_r15","row_r39","detalle","ctx_r17","row_r40","cotiza","ctx_r19","row_r41","cantidad_recibida","ctx_r21","row_r42","unitario","ctx_r23","row_r43","subtotal","ctx_r25","row_r44","oc","GenerarOrdenComponent_form_10_button_12_Template","GenerarOrdenComponent_form_10_mat_option_15_Template","GenerarOrdenComponent_form_10_button_17_Template","ɵɵelementContainerStart","GenerarOrdenComponent_form_10_th_26_Template","GenerarOrdenComponent_form_10_td_27_Template","ɵɵelementContainerEnd","GenerarOrdenComponent_form_10_th_29_Template","GenerarOrdenComponent_form_10_td_30_Template","GenerarOrdenComponent_form_10_th_32_Template","GenerarOrdenComponent_form_10_td_33_Template","GenerarOrdenComponent_form_10_th_35_Template","GenerarOrdenComponent_form_10_td_37_Template","GenerarOrdenComponent_form_10_th_39_Template","GenerarOrdenComponent_form_10_td_40_Template","GenerarOrdenComponent_form_10_th_42_Template","GenerarOrdenComponent_form_10_td_43_Template","GenerarOrdenComponent_form_10_th_45_Template","GenerarOrdenComponent_form_10_td_46_Template","GenerarOrdenComponent_form_10_th_48_Template","GenerarOrdenComponent_form_10_td_49_Template","GenerarOrdenComponent_form_10_th_51_Template","GenerarOrdenComponent_form_10_td_52_Template","GenerarOrdenComponent_form_10_tr_53_Template","GenerarOrdenComponent_form_10_tr_54_Template","GenerarOrdenComponent_form_10_div_55_Template","ctx_r2","form","_r4","minDate","maxDate","_r6","isReadOnly","columns","length","ɵɵpureFunction1","_c0","isPalabraMaxLengthReached","ɵɵtextInterpolate2","getPalabrasLength","maxPalabras","GenerarOrdenComponent_div_11_Template_button_click_1_listener","_r47","ctx_r46","onSubmit","ctx_r3","datePipe","mostrarSpinner","mostrar_mensaje","Date","hovering","preventDefault","isHovering","target","span","querySelector","style","setProperty","removeProperty","newForm","loadServices","dia","mes","anio","fecha","split","Codigo","idproveedor","required","transform","total","maxLength","disable","existeOrdenCompra","items_formulario","find","i","payload","generarOrdenCompra","emit","all","existeCotizacion","then","_this2","Items","getItemsCotizacion","codigo_articulo","Number","crearGrillaForm","subtotalObservables","forEach","item","index","items_array","cantidadRecibidaControl","disabled","min","unitarioControl","subtotalControl","updateSubtotal","updateTotal","a","push","subtotales","reduce","sum","current","emitEvent","_this3","proveedores_del_pedido","num","parseInt","p","setValue","cambiarFecha","partes","fh","DatePipe","outputs","features","ɵɵProvidersFeature","provide","useValue","GenerarOrdenComponent_Template","GenerarOrdenComponent_Template_button_click_5_listener","GenerarOrdenComponent_spinner_component_8_Template","GenerarOrdenComponent_fuse_alert_9_Template","GenerarOrdenComponent_form_10_Template","GenerarOrdenComponent_div_11_Template","NuevaCotizacionComponent_form_10_mat_option_15_Template_mat_option_mouseenter_0_listener","NuevaCotizacionComponent_form_10_mat_option_15_Template_mat_option_mouseleave_0_listener","NuevaCotizacionComponent_form_10_button_17_Template_button_click_0_listener","NuevaCotizacionComponent_form_10_th_40_Template_th_click_0_listener","_r41","ctx_r40","seleccionarTodos","ɵɵpureFunction0","NuevaCotizacionComponent_form_10_td_44_Template_input_keydown_enter_1_listener","restoredCtx","_r46","$implicit","ctx_r45","focusNextInput","ɵɵattribute","ctx_r20","indexOf","NuevaCotizacionComponent_form_10_td_47_Template_input_keydown_enter_1_listener","_r50","row_r47","ctx_r49","ctx_r22","NuevaCotizacionComponent_form_10_td_50_Template_input_keydown_enter_1_listener","_r54","row_r51","ctx_r53","ctx_r24","NuevaCotizacionComponent_form_10_th_52_Template_th_click_0_listener","_r56","ctx_r55","row_r57","NuevaCotizacionComponent_form_10_button_12_Template","NuevaCotizacionComponent_form_10_mat_option_15_Template","NuevaCotizacionComponent_form_10_button_17_Template","NuevaCotizacionComponent_form_10_Template_app_grid_filter_filterChange_23_listener","_r60","ctx_r59","applyFilter","NuevaCotizacionComponent_form_10_th_27_Template","NuevaCotizacionComponent_form_10_td_28_Template","NuevaCotizacionComponent_form_10_th_30_Template","NuevaCotizacionComponent_form_10_td_31_Template","NuevaCotizacionComponent_form_10_th_33_Template","NuevaCotizacionComponent_form_10_td_34_Template","NuevaCotizacionComponent_form_10_th_36_Template","NuevaCotizacionComponent_form_10_td_38_Template","NuevaCotizacionComponent_form_10_th_40_Template","NuevaCotizacionComponent_form_10_td_41_Template","NuevaCotizacionComponent_form_10_th_43_Template","NuevaCotizacionComponent_form_10_td_44_Template","NuevaCotizacionComponent_form_10_th_46_Template","NuevaCotizacionComponent_form_10_td_47_Template","NuevaCotizacionComponent_form_10_th_49_Template","NuevaCotizacionComponent_form_10_td_50_Template","NuevaCotizacionComponent_form_10_th_52_Template","NuevaCotizacionComponent_form_10_td_53_Template","NuevaCotizacionComponent_form_10_tr_54_Template","NuevaCotizacionComponent_form_10_tr_55_Template","NuevaCotizacionComponent_form_10_div_56_Template","_c1","NuevaCotizacionComponent_div_11_Template_button_click_1_listener","_r62","ctx_r61","formateador","isAllSelected","valid","fecha_formateada","items_cotizacion","valor_unitario","parseCurrency","idpedidoitem","existe_item_cotizado_con_valor_cero","existe_cantidad_item_mayor_a_la_solicitada","items","updateCotizazcion","saveCotizacion","input","updatePrecioUnitario","sort","b","row","column","nextIndex","selector","nextInput","document","focus","getItemsPedido","e","subtotalFormateado","formatCurrency","unitarioFormateado","control","items_seleccion","trim","i6","FormateadorService","NuevaCotizacionComponent_Template","NuevaCotizacionComponent_Template_button_click_5_listener","NuevaCotizacionComponent_spinner_component_8_Template","NuevaCotizacionComponent_fuse_alert_9_Template","NuevaCotizacionComponent_form_10_Template","NuevaCotizacionComponent_div_11_Template","debounceTime","distinctUntilChanged","SaveComponent","VerCotizacionComponent","EnviarEmailModalComponent","PedidoDePresupuestoComponent","_pedidoDePresupuestosService","_searchService","_menuService","router","_headerTextService","pwaService","accionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","view_compras_pedidos","search","enviadoExitosamente","setTitulo","pedido","visible","showMenu","SearchTextSub$","getSearchText","filters","FilterEventSub$","getFilterEvent","onFilterMenu","getFilterOrigin","origin","_elementRef","updatePedidoDePresupuesto","deletePedidoDePresupuesto","cotizarPedidoDePresupuesto","verPedidoDePresupuesto","reportePedidoDePresupuesto","enviarPedidoDePresupuesto","savePedidoDePresupuesto","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","modal_data","model","_endpointService","compras_pedidos_enviar_presupuesto","permiteAdjunto","ngOnDestroy","unsubscribe","SearchService","i7","i8","Router","i9","HeaderTextService","i10","PwaService","PedidoDePresupuestoComponent_Query","PedidoDePresupuestoComponent_Template_button_click_3_listener","PedidoDePresupuestoComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","BehaviorSubject","catchError","of","switchMap","LectorQrComponent","SaveComponent_form_11_mat_chip_row_13_Template_mat_chip_row_removed_0_listener","_r34","proveedor_r32","removeProveedor","SaveComponent_form_11_mat_option_18_Template_mat_option_mouseenter_0_listener","_r37","ctx_r36","SaveComponent_form_11_mat_option_18_Template_mat_option_mouseleave_0_listener","ctx_r38","proveedor_r35","SaveComponent_form_11_mat_option_28_Template_mat_option_mouseenter_0_listener","SaveComponent_form_11_mat_option_28_Template_mat_option_mouseleave_0_listener","ctx_r42","rubro_r39","descripcion","SaveComponent_form_11_button_30_Template_button_click_0_listener","_r44","ctx_r43","articulo_r45","total_stock","SaveComponent_form_11_mat_option_38_Template_mat_option_mouseenter_0_listener","_r49","ctx_r48","SaveComponent_form_11_mat_option_38_Template_mat_option_mouseleave_0_listener","ctx_r50","SaveComponent_form_11_mat_option_38_i_5_Template","tipo","SaveComponent_form_11_button_40_Template_button_click_0_listener","_r52","ctx_r51","um_r53","factor_um","um_base","SaveComponent_form_11_mat_option_50_Template_mat_option_mouseenter_0_listener","_r57","ctx_r56","SaveComponent_form_11_mat_option_50_Template_mat_option_mouseleave_0_listener","ctx_r58","SaveComponent_form_11_mat_option_50_i_2_Template","idunidadmedida","descripcion_um","movimiento_articulo_r59","codigo_interno_articulo","movimiento_articulo_r60","descripcion_articulo","movimiento_articulo_r61","movimiento_articulo_r62","movimiento_articulo_r63","ctx_r27","SaveComponent_form_11_td_85_Template_button_click_1_listener","_r67","movimiento_r64","ctx_r66","deleteMovimiento","SaveComponent_form_11_mat_chip_row_13_Template","SaveComponent_form_11_Template_mat_autocomplete_optionSelected_16_listener","_r70","_r7","ɵɵreference","ctx_r69","selectProveedor","SaveComponent_form_11_mat_option_18_Template","SaveComponent_form_11_Template_input_ngModelChange_25_listener","ctx_r71","seleccionItem","SaveComponent_form_11_mat_option_28_Template","SaveComponent_form_11_button_30_Template","SaveComponent_form_11_Template_input_ngModelChange_35_listener","ctx_r72","SaveComponent_form_11_mat_option_38_Template","SaveComponent_form_11_button_40_Template","SaveComponent_form_11_Template_button_click_42_listener","ctx_r73","etiquetaArticulo","SaveComponent_form_11_Template_mat_select_ngModelChange_49_listener","ctx_r74","um","SaveComponent_form_11_mat_option_50_Template","SaveComponent_form_11_Template_mat_form_field_keydown_enter_52_listener","ctx_r75","SaveComponent_form_11_Template_mat_form_field_keydown_enter_57_listener","ctx_r76","onCargar","SaveComponent_form_11_Template_button_click_62_listener","ctx_r77","SaveComponent_form_11_Template_app_grid_filter_filterChange_65_listener","ctx_r78","SaveComponent_form_11_th_69_Template","SaveComponent_form_11_td_70_Template","SaveComponent_form_11_th_72_Template","SaveComponent_form_11_td_73_Template","SaveComponent_form_11_th_75_Template","SaveComponent_form_11_td_76_Template","SaveComponent_form_11_th_78_Template","SaveComponent_form_11_td_79_Template","SaveComponent_form_11_th_81_Template","SaveComponent_form_11_td_82_Template","SaveComponent_form_11_th_84_Template","SaveComponent_form_11_td_85_Template","SaveComponent_form_11_tr_86_Template","SaveComponent_form_11_tr_87_Template","SaveComponent_form_11_div_88_Template","selectedProveedores","_r5","_r8","filteredProveedores$","form_carga_articulos","_r10","getTextGenerico","tmp_13_0","filteredRubros$","undefined","_r13","getTextArticulo","tmp_17_0","filteredArticulos$","unidades_de_medida","SaveComponent_div_12_Template_button_click_1_listener","_r80","ctx_r79","mov_art_list","articulos","articulos_list","rubros","idarticulo","filterLike","idrubro","getArticulos","response","getRubros","m","articulo","um_descripcion","rubro","unidadmedida","updateFormValidators","selected","splice","items_pedido","proveedores_id","info","getUnidadesDeMedidaArticulos","setTimeout","cantidadField","articuloField","detalleField","addMovimiento","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","enable","key","existeMovimiento","sendObject","code","decodedText","JSON","parse","id_proveedores","_filterArticulos","filtered","_this4","unidadesDeMedida","_ref2","factor","unidad","parseFloat","_x2","_this5","_ref3","_x3","_this6","_filterSelect","razonSocial","nick","nombre","apellido","setValidators","clearValidators","updateValueAndValidity","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_spinner_component_8_Template","SaveComponent_fuse_alert_9_Template","SaveComponent_form_11_Template","SaveComponent_div_12_Template","VerCotizacionComponent_form_10_mat_chip_row_13_button_2_Template","proveedor_r20","ctx_r5","ctx_r7","movimiento_articulo_r22","movimiento_articulo_r23","movimiento_articulo_r24","movimiento_articulo_r25","movimiento_articulo_r26","VerCotizacionComponent_form_10_mat_chip_row_13_Template","VerCotizacionComponent_form_10_Template_app_grid_filter_filterChange_16_listener","_r29","ctx_r28","VerCotizacionComponent_form_10_th_20_Template","VerCotizacionComponent_form_10_td_21_Template","VerCotizacionComponent_form_10_th_23_Template","VerCotizacionComponent_form_10_td_24_Template","VerCotizacionComponent_form_10_th_26_Template","VerCotizacionComponent_form_10_td_27_Template","VerCotizacionComponent_form_10_th_29_Template","VerCotizacionComponent_form_10_td_30_Template","VerCotizacionComponent_form_10_th_32_Template","VerCotizacionComponent_form_10_td_33_Template","VerCotizacionComponent_form_10_tr_34_Template","VerCotizacionComponent_form_10_tr_35_Template","VerCotizacionComponent_form_10_div_36_Template","_r3","VerCotizacionComponent_Template","VerCotizacionComponent_Template_button_click_5_listener","VerCotizacionComponent_spinner_component_8_Template","VerCotizacionComponent_fuse_alert_9_Template","VerCotizacionComponent_form_10_Template","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","MatChipsModule","SharedComponentModule","routes","component","PedidosDePresupuestoModule","imports","forChild","declarations","exports","http","_authService","getPedidoDePresupuesto","f","subject","administracion","view_clientes","resp","accessToken","token","asObservable","post","compras_pedidos","put","delete","stock","view_articulos","articulo_unidad_medidas","view_compras_pedido_item","compras_cotizacion","getCotizacionesPedido","view_compras_cotizacion_item","compras_orden_compra_cotizacion","generar_reporte_pedido","ɵɵinject","HttpClient","AuthService","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","host","MatToolbar","elementRef","_platform","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","Array","from","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[16]}