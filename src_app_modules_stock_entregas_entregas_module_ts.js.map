{"version":3,"file":"src_app_modules_stock_entregas_entregas_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/entregas/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/entregas/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/entregas/components/entregas.component.ts","./src/app/modules/stock/entregas/components/entregas.component.html","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/entregas/components/save/save.component.ts","./src/app/modules/stock/entregas/components/save/save.component.html","./src/app/modules/stock/entregas/entregas.module.ts","./src/app/modules/stock/entregas/service/entregas.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-entregas',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    ventas: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredVentas: Observable<any>;\r\n    articulos_list = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n\r\n    ) {\r\n        this.title = 'Añadir entrega de articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulosDepositos();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosDepositos() {\r\n        const articulos_um_deposito = await firstValueFrom(this._entregasService.getArticulosDepositos(this.data.deposito_entrega)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n * Esta funcion solicita las unidades de medida que posee un articulo.\r\n * @param idarticulo \r\n */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionArticulo({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.data.esEdicion === false) { //Sí existe minimo un movimiento y es una crecion...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form.get('stock_existente').setValue(stock) //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl((''))\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > articulo.stock) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value/*  && movimiento.idventa === this.form.get('venta').value.idventa */);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('unidadmedida').setValue('');\r\n                        this.form.get('stock_existente').setValue('');\r\n                        return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida asociado a esa venta.');\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= articulo.stock && this.form.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form.get('articulo').value,\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            stock: `${Number(articulo.stock) - this.form.get('cantidad').value}`,\r\n                            cantidad: this.form.get('cantidad').value\r\n                        }\r\n\r\n                        this.onCloseMenu(movimiento_articulo)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                            {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}} {{um.um_base}})</i>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>En stock</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Añadir</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IEntrega } from '../models/entrega';\r\nimport { EntregasService } from '../service/entregas.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n@Component({\r\n    selector: 'app-entregas',\r\n    templateUrl: './entregas.component.html',\r\n    styleUrls: ['./entregas.component.scss']\r\n})\r\nexport class EntregasComponent implements OnInit, OnDestroy {\r\n    entregas: IEntrega[];\r\n    public dataSource: MatTableDataSource<IEntrega> = new MatTableDataSource();\r\n    headers = ['Fecha Precarga', 'Fecha Entrega', 'Responsable', 'Observaciones', 'Deposito', 'Usuario Encargado', 'Estado', 'Acciones'];\r\n    column_params = ['fecha_hora_precarga', 'fecha_hora_entrega', 'nick_usuario', 'observaciones', 'descripcion_deposito', 'nick_usuario_entrega', 'descripcion_estado', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'nick_usuario_entrega', 'numero_venta'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_entregas + '?sort=-fecha_hora';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    orden_servicio: number;\r\n    mostrarTextoOrdenServicio: boolean = true;\r\n    buttonStyleOrdenServicio: string = 'default';\r\n    ordenServicioScaneada = false;\r\n\r\n\r\n    constructor(\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (entrega: IEntrega) => 'jedstion:editar',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (entrega: IEntrega) => 'jedstion:eliminar',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Reporte\",\r\n                functionName: 'reporte',\r\n                iconoAccion: (entrega: IEntrega) => 'jedstion:imprimir',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n            }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    /**\r\n * Se escanea el QR de Orden de Servicio y se toma la idventagenerica.\r\n */\r\n    ordenServicio() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                this.alert.error('Código QR vacío o inválido.');\r\n                return;\r\n            }\r\n\r\n            const idventagenerica = parseInt(code, 10); // ID de la venta\r\n            const venta = `Venta N° ${idventagenerica}`; // Texto que aparecera en la barra de busqueda\r\n            this._searchService.getSearchInput().setValue(venta); // Le seteo el texto a la barra de busqueda\r\n            this.extraParams += `&filter[idventagenerica]=${idventagenerica}`; // Filtro por el ID concreto que recibo del escanner\r\n            this.tabla.filters(this.filtroBusqueda); // Aplico filtro y renderizo la tabla\r\n\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != '' ? \"filter[nick_usuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n                        this.extraParams += this.filter.usuario_encargado != '' ? \"filter[nick_usuario_entrega]=\" + this.filter.usuario_encargado + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateEntrega(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteEntrega(event);\r\n                break;\r\n            case 'reporte':\r\n                this.reporteEntrega(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveEntrega() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateEntrega(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteEntrega(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Entrega: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar la entrega realizada el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._entregasService.deleteEntrega(event.params.data.identrega).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Entrega eliminada con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Esta entrega no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reporteEntrega(event) {\r\n        const idEntrega = event.params.data.identrega;\r\n        this._entregasService.reporteEntrega(idEntrega).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank');\r\n                    }\r\n                } else {\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 flex space-x-4\">\r\n            <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || ''\"\r\n                [style.color]=\"color_primario || ''\"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\"\r\n                (click)=\"ordenServicio()\">\r\n                <div class=\"flex items-center\">\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                            fill=\"currentColor\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5 hidden md:inline\">Buscar OS</span>\r\n                </div>\r\n            </button>\r\n            <button mat-flat-button (click)=\"saveEntrega()\" #save [class]=\"color_primario ? '' : default_color\"\r\n                [style.border]=\"color_primario || ''\" [style.color]=\"color_primario || ''\"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex items-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5 hidden md:inline\">Nueva Entrega</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-entregas',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  filterDeposito: IDeposito[] = [];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuarioResponsable: Observable<IUsuario[]>;\r\n  filteredUsuarioEncargado: Observable<IUsuario[]>;\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IEntrega[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();  \r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _entregasService: EntregasService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl(('')),\r\n      usuario_encargado: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario_responsable: '',\r\n      usuario_encargado: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._entregasService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuarioResponsable = this.formFilters.controls['usuario_responsable'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n    this.filteredUsuarioEncargado = this.formFilters.controls['usuario_encargado'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._entregasService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Responsable\" matInput [matAutocomplete]=\"autoUsuarioResponsable\" formControlName=\"usuario_responsable\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioResponsable=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario_responsable of filteredUsuarioResponsable | async\" [value]=\"usuario_responsable.nick\">\r\n                    {{usuario_responsable.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Encargado -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Encargado</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Encargado\" matInput [matAutocomplete]=\"autoUsuarioEncargado\" formControlName=\"usuario_encargado\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioEncargado=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario_encargado of filteredUsuarioEncargado | async\" [value]=\"usuario_encargado.nick\">\r\n                    {{usuario_encargado.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { FuseAlertType } from '@fuse/components/alert';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-save-entregas',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'acciones'];\r\n    form: FormGroup;\r\n    entrega: IEntrega;\r\n    title: string;\r\n    user: any;\r\n    usuarios: IUsuario[] = [];\r\n    depositos: IDeposito[] = [];\r\n    mov_art_list: any[] = [];\r\n    ventas: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredUsuarios: Observable<IUsuario[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredVentas: Observable<any>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    deposito_default = 0;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        private alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.entrega = this.data ? this.data : null;\r\n        this.title = this.entrega?.identrega ? `Editar Entrega ${this.entrega.fecha_precarga} - ${this.entrega.hora_precarga}` : `Nueva Entrega`;\r\n        /* this`user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.getVentas();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.entrega ? this.entrega.fecha_precarga.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.entrega) {\r\n            Promise.all([/* this.getVentas(),  */this.getItems(this.entrega.identrega)]).then(([/* ventas,  */items]) => {\r\n                // this.ventas = ventas;\r\n                this.mov_art_list = items.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        stock: m.stock_minimo_articulo\r\n                    }\r\n                });\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_entrega').disable();\r\n                } else {\r\n                    this.form.get('deposito_entrega').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.entrega?.fecha_precarga ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.entrega?.hora_precarga ? this.entrega.hora_precarga : this.datePipe.transform(new Date(), 'HH:mm')), Validators.required),\r\n            usuario_entrega: new FormControl((this.entrega?.usuario_entrega ? { codigo: this.entrega.usuario_entrega, nick: this.entrega.nick_usuario_entrega } : '')),\r\n            deposito_entrega: new FormControl((this.entrega ? { descripcion: this.entrega.descripcion_deposito, iddeposito: this.entrega.iddeposito } : ''), Validators.required),\r\n            observaciones: new FormControl((this.entrega ? this.entrega.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n            venta: new FormControl((this.entrega?.idventagenerica ? { idventagenerica: this.entrega.idventagenerica, cliente: this.entrega.cliente_venta, fecha: this.entrega.fecha_venta } : ''), Validators.required),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Obtenemos el cliente y fecha de dicha venta seleccionada.\r\n    * @param venta \r\n    * @returns \r\n    */\r\n    getTextVenta(venta: any): string {\r\n        return venta ? `${venta.cliente} ~ ${venta.fecha}` : '';\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.entrega?.idusuario) {\r\n            this.getUsuarios(true);\r\n        } else {\r\n            this.getUsuarios();\r\n        }\r\n\r\n        if (this.entrega?.identrega) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    async getUsuarios(option?) {\r\n        const Usuarios = await firstValueFrom(this._entregasService.getUsuarios(option));\r\n        new Promise(async (resolve) => {\r\n            this.usuarios = Usuarios.list;\r\n            this.filteredUsuarios = this.form.get('usuario_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterUsuarios(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterUsuarios(usuario: IUsuario): IUsuario[] {\r\n        const filterValue = usuario.toString().toLowerCase();\r\n        return this.usuarios.filter(usuario => usuario.nick.toLowerCase().includes(filterValue) && usuario.codigo !== this.user.id);\r\n    }\r\n\r\n    getTextUsuario(option) {\r\n        if (option.nick) {\r\n            return option.nick;\r\n        }\r\n        if (option.usuario) {\r\n            return option.usuario;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._entregasService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.entrega) {\r\n                this.form.get('deposito_entrega').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n * Funcion que lista las ventas.\r\n*/\r\n    async getVentas(): Promise<any> {\r\n        const ventas = await firstValueFrom(this._entregasService.getVentas());\r\n        this.ventas = ventas.list;\r\n        this.filteredVentas = this.form.get('venta').valueChanges.pipe(\r\n            startWith(''),\r\n            map((value) => this._filterVentas(value)),\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Esta funcion es para filtrar las ventas según el input que se haya ingresado en el buscador de ventas.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterVentas(value: string): any[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.ventas.filter(venta => {\r\n            const cliente = venta.cliente.toString().toLowerCase().includes(filterValue);\r\n            const fecha = venta.fecha.toString().toLowerCase().includes(filterValue);\r\n            return cliente || fecha;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param identrega \r\n     * @returns \r\n     */\r\n    async getItems(identrega): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._entregasService.getItems(identrega));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento() {\r\n        if (this.form.get('deposito_entrega').value != '') {\r\n\r\n            let deposito_entrega_value = this.form.get('deposito_entrega').value.iddeposito;\r\n            if (typeof this.form.get('deposito_entrega').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos.find(d => d.descripcion === this.form.get('deposito_entrega').value);\r\n                deposito_entrega_value = d.iddeposito;\r\n            }\r\n            let esEdicion = this.entrega ? true : false;\r\n\r\n            this.dialogo\r\n                .open(AddArticuloComponent, {\r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        deposito_entrega: deposito_entrega_value,\r\n                        movimientos: this.mov_art_list,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno: res.articulo.codigo_interno,\r\n                                stock: res.stock,    //Stock restante de ese articulo con esa um...\r\n                            }\r\n                            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n                            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                            // Deshabilito el control Deposito\r\n                            if (this.mov_art_list.length != 0) {\r\n                                this.form.get('deposito_entrega').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\")\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        // Habilito el control Deposito si la lista de movimientos está vacía\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_entrega').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo a la orden de entrega')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora_precarga = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                entrega: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora_precarga: fecha_hora_precarga,\r\n                    iddeposito: this.form.get('deposito_entrega').value.iddeposito,\r\n                    usuario_entrega: this.form.get('usuario_entrega').value?.codigo ? this.form.get('usuario_entrega').value.codigo : null,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                    idventagenerica: this.form.get('venta').value?.idventagenerica ? this.form.get('venta').value.idventagenerica : null\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.entrega?.identrega) {\r\n                this._entregasService.updateEntrega(payload, this.entrega.identrega)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._entregasService.saveEntrega(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Usuario Entrega</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"usuario_entrega\" [matAutocomplete]=\"ue\">\r\n                    <mat-autocomplete autoActiveFirstOption #ue=\"matAutocomplete\" [displayWith]=\"getTextUsuario\">\r\n                        <mat-option *ngFor=\"let usuario_encargado of filteredUsuarios | async\"\r\n                            [value]=\"usuario_encargado\">\r\n                            {{ usuario_encargado.nick }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('usuario_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('usuario_entrega').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Venta</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"venta\" [matAutocomplete]=\"vn\">\r\n                    <mat-autocomplete autoActiveFirstOption #vn=\"matAutocomplete\" [displayWith]=\"getTextVenta\">\r\n                        <mat-option [value]=\"{cliente: '', fecha: '', idventa: null}\">\r\n                            -\r\n                        </mat-option>\r\n                        <mat-option *ngFor=\"let venta of filteredVentas | async\" [value]=\"venta\">\r\n                            {{ venta.cliente }} ~ {{ venta.fecha }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('venta')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('venta').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_entrega\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_entrega').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[215px] h-auto shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                            <button class=\"flex items-center justify-center\" (click)=\"addMovimiento()\">\r\n                                <mat-icon class=\"text-inherit text-xl\">add_circle_outline</mat-icon>\r\n                                <span class=\"ml-2\">Añadir Artículo</span>\r\n                            </button>\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || ''\"\r\n            class=\"w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0\" (click)=\"onSubmit()\">\r\n            <span class=\"text-white font-medium text-base\">\r\n                {{ form.get('usuario_entrega').value ? 'Entregar' : 'Precargar' }}\r\n            </span>\r\n        </button>\r\n    </div>\r\n\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntregasComponent } from './components/entregas.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { EntregasService } from './service/entregas.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EntregasComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [EntregasComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [EntregasService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class EntregasModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IEntrega, IEntregaResponse } from '../models/entrega';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class EntregasService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param entregas \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveEntrega(entregas: IEntrega): Observable<IEntrega> {\r\n        return this.http.post<IEntrega>(`${environment.stock.entregas}`, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param entregas\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateEntrega(entregas: IEntrega, identrega: number): Observable<IEntrega> {\r\n        return this.http.put<IEntrega>(`${environment.stock.entregas}` + '/' + identrega, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param identrega \r\n     * @returns Elimina un item\r\n     */\r\n    deleteEntrega(identrega: number): Observable<IEntrega> {\r\n        return this.http.delete<IEntrega>(`${environment.stock.entregas}` + '/' + identrega);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param identrega\r\n     * @returns \r\n     */\r\n    reporteEntrega(identrega: number): Observable<IEntregaResponse> {\r\n        return this.http.get<IEntregaResponse>(`${environment.stock.reporte_entrega}` + identrega);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito: number) {\r\n        let f = `?filter[deposito]=${deposito}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(identrega?: number) {\r\n        let f = `?filter[identrega]=${identrega}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getVentas() {\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.ventas.view_venta_genericas}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(option?) {\r\n        let f = `?sort=asc`;\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idventagenerica \r\n    * @returns Verifica si el QR escaneado de la Orden de Servicio es valido.\r\n    */\r\n    getOrdenServicio(idventagenerica: number): Observable<any> {\r\n        return this.http.get<any>(`${environment.ventas.view_venta_genericas}?filter[idventagenerica]=` + idventagenerica)\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r5","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r8","factor_um","um_base","ɵɵtemplate","AddArticuloComponent_mat_option_25_i_2_Template","idunidadmedida","descripcion_um","AddArticuloComponent","constructor","data","_entregasService","_empresaService","alert","dialogRef","columns","articulos","unidades_de_medida","depositos","ventas","articulos_list","dataSource","default_color","_unsubscribeAll","title","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","newForm","getArticulosDepositos","subscribeAlert","emitConfig","next","config","appearance","time","_this","_asyncToGenerator","articulos_um_deposito","deposito_entrega","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","forEach","item","existeArticulo","find","articulo","idarticulo","push","filterValue","toString","toLowerCase","filter","includes","getTextArticulo","getUnidadesDeMedidaArticulos","_this2","_ref2","a","sort","b","parseFloat","um","stock","length","setValue","seleccionArticulo","_x2","$event","enable","articulo_um","cantidad_existente","existeMovimiento","movimientos","esEdicion","articulos_existentes","ae","Number","cantidad","disable","required","unidadmedida","stock_existente","onSubmit","valid","error","warning","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","EntregasService","i2","EmpresaService","i3","AppAlertService","i4","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_Template_mat_select_ngModelChange_24_listener","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_Template_button_click_35_listener","ɵɵclassMap","ɵɵstyleProp","ɵɵtextInterpolate","_r1","ɵɵpipeBind1","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","FilterMenuComponent","LectorQrComponent","EntregasComponent","confirm","dialogo","_searchService","_menuService","router","_headerTextService","pwaService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","deposito","filtroFechaInicio","filtroFechaFin","extraParams","parametrosActualizados","env","view_stock_entregas","search","mostrarTextoOrdenServicio","buttonStyleOrdenServicio","ordenServicioScaneada","setTitulo","nombre_boton","functionName","iconoAccion","entrega","iconoAccionado","iconoDeshabilitado","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","ordenServicio","open","panelClass","componentInstance","sendObject","code","idventagenerica","parseInt","venta","getSearchInput","origin","_elementRef","getElementosExistentes","afterClosed","usuario_responsable","usuario_encargado","generarAcciones","name","updateEntrega","deleteEntrega","reporteEntrega","saveEntrega","creadoExitosamente","success","params","autoFocus","editadoExitosamente","fecha","hora","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","identrega","renderTabla","console","idEntrega","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","closeAll","FuseConfirmationService","i5","MatDialog","i6","SearchService","i7","JedsMenuService","i8","Router","i9","HeaderTextService","i10","PwaService","viewQuery","EntregasComponent_Query","EntregasComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","EntregasComponent_Template_button_click_9_listener","EntregasComponent_Template_app_tabla_dinamica_functionEmitter_17_listener","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r9","ctx_r8","limpiarFechas","deposito_r10","iddeposito","usuario_responsable_r11","nick","usuario_encargado_r12","datePipe","filterDeposito","usuarios","filterFechas","movimientos_internos_list","formFilters","getDepositos","getUsuarios","patchValue","resetFilters","reset","transform","Usuarios","filteredUsuarioResponsable","controls","_filterUsuaurio","filteredUsuarioEncargado","usuario","stk_list","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_mat_option_49_Template","FilterMenuComponent_Template_button_click_52_listener","FilterMenuComponent_Template_button_click_55_listener","getRawValue","_r4","_r6","usuario_encargado_r24","SaveComponent_button_29_Template_button_click_0_listener","_r26","ctx_r25","venta_r27","cliente","SaveComponent_button_40_Template_button_click_0_listener","_r29","ctx_r28","deposito_r30","SaveComponent_button_49_Template_button_click_0_listener","_r32","ctx_r31","ctx_r11","movimiento_articulo_r33","ctx_r13","movimiento_articulo_r34","descripcion_articulo","ctx_r15","movimiento_articulo_r35","ctx_r17","movimiento_articulo_r36","SaveComponent_th_71_Template_button_click_1_listener","_r38","ctx_r37","addMovimiento","ctx_r19","SaveComponent_td_72_Template_button_click_1_listener","restoredCtx","_r42","movimiento_r39","$implicit","ctx_r41","deleteMovimiento","mov_art_list","maxPalabras","deposito_default","fecha_precarga","hora_precarga","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","getVentas","exist","dia","mes","anio","split","all","getItems","then","items","m","codigo_interno_articulo","stock_minimo_articulo","usuario_entrega","codigo","nick_usuario_entrega","observaciones","maxLength","cliente_venta","fecha_venta","getPalabrasLength","isPalabraMaxLengthReached","getTextVenta","idusuario","option","filteredUsuarios","_filterUsuarios","id","getTextUsuario","Depositos","depositoPorDefecto","filteredDepositos","_filterDepositos","getTextDeposito","_this3","filteredVentas","_filterVentas","_this4","_ref3","_x3","deposito_entrega_value","d","mov","input","objeto","fecha_formateada","fecha_hora_precarga","payload","emit","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_mat_option_38_Template","SaveComponent_button_40_Template","SaveComponent_mat_option_47_Template","SaveComponent_button_49_Template","ɵɵelementContainerStart","SaveComponent_th_59_Template","SaveComponent_td_60_Template","ɵɵelementContainerEnd","SaveComponent_th_62_Template","SaveComponent_td_63_Template","SaveComponent_th_65_Template","SaveComponent_td_66_Template","SaveComponent_th_68_Template","SaveComponent_td_69_Template","SaveComponent_th_71_Template","SaveComponent_td_72_Template","SaveComponent_tr_73_Template","SaveComponent_tr_74_Template","SaveComponent_div_75_Template","SaveComponent_Template_button_click_77_listener","_r2","_r5","ɵɵpureFunction0","_c0","_r8","ɵɵpureFunction1","_c1","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","component","EntregasModule","imports","forChild","declarations","exports","http","_authService","entregas","post","put","delete","reporte_entrega","f","subject","resp","accessToken","token","result","asObservable","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","view_venta_genericas","login","view_usuarios","getOrdenServicio","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}