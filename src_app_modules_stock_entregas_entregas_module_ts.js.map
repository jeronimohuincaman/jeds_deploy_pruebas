{"version":3,"file":"src_app_modules_stock_entregas_entregas_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/entregas/components/entregas.component.ts","./src/app/modules/stock/entregas/components/entregas.component.html","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/entregas/components/save/save.component.ts","./src/app/modules/stock/entregas/components/save/save.component.html","./src/app/modules/stock/entregas/entregas.module.ts","./src/app/modules/stock/entregas/service/entregas.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IEntrega } from '../models/entrega';\r\nimport { EntregasService } from '../service/entregas.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n@Component({\r\n    selector: 'app-entregas',\r\n    templateUrl: './entregas.component.html',\r\n    styleUrls: ['./entregas.component.scss']\r\n})\r\nexport class EntregasComponent implements OnInit, OnDestroy {\r\n    entregas: IEntrega[];\r\n    public dataSource: MatTableDataSource<IEntrega> = new MatTableDataSource();\r\n    headers = ['Fecha Precarga', 'Fecha Entrega', 'Responsable', 'Observaciones', 'Deposito', 'Usuario Encargado', 'Estado', 'Acciones'];\r\n    column_params = ['fecha_hora_precarga', 'fecha_hora_entrega', 'nombre_usuario', 'observaciones', 'descripcion_deposito', 'nombre_usuario_entrega', 'descripcion_estado', 'acciones'];\r\n    funcionesObjeto = null;\r\n    accionesObjeto = null;\r\n    showMenu: any;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'nick_usuario_entrega', 'numero_venta'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.view_stock_entregas + '?sort=-fecha_hora_precarga';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    orden_servicio: number;\r\n    mostrarTextoOrdenServicio: boolean = true;\r\n    buttonStyleOrdenServicio: string = 'default';\r\n    ordenServicioScaneada = false;\r\n    puede_crear: boolean = false;\r\n    asignacion_entrega: number;\r\n\r\n    constructor(\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                iconoAccion: (entrega: IEntrega) => '',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n                visible: (entrega: IEntrega) => false\r\n            }\r\n        ];\r\n\r\n        this.showMenu = (entrega: IEntrega) => true;\r\n\r\n        this.accionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (entrega: IEntrega) => entrega.puede_editar_entrega == 1 ? 'jedstion:editar' : '',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n                visible: (entrega: IEntrega) => true\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (entrega: IEntrega) => entrega.puede_eliminar == 1 ? 'jedstion:eliminar' : '',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n                visible: (entrega: IEntrega) => true\r\n            },\r\n            {\r\n                nombre_boton: \"Reporte\",\r\n                functionName: 'reporte',\r\n                iconoAccion: (entrega: IEntrega) => 'jedstion:imprimir',\r\n                iconoAccionado: (entrega: IEntrega) => '',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',\r\n                visible: (entrega: IEntrega) => true\r\n            },\r\n            {\r\n                nombre_boton: \"Entregar\",\r\n                functionName: 'entregar',\r\n                iconoAccion: (entrega: IEntrega) => entrega.puede_editar_entrega == 1 && !entrega.fecha_hora_entrega ? 'jedstion:lector_qr' : '',\r\n                iconoAccionado: (entrega: IEntrega) => '',//'jedstion:lector_qr_accionado',\r\n                iconoDeshabilitado: (entrega: IEntrega) => '',//'jedstion:lector_qr_disabled',\r\n                visible: (entrega: IEntrega) => true\r\n            }\r\n        ]\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        this.puedeCrearEntrega();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.asignacion_entrega = empresa.asignacion_entrega;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n    async puedeCrearEntrega(): Promise<any> {\r\n        return new Promise<any>((resolve) => {\r\n            this._entregasService.puedeCrearEntrega().subscribe({\r\n                next: (data) => {\r\n                    // Manejar la respuesta exitosa\r\n                    if (data.success) {\r\n                        this.puede_crear = data.result;\r\n                        resolve(data);\r\n                    }\r\n                },\r\n                error: (error) => {\r\n                    // Manejar el error\r\n                    console.log('No se pudo obtener puede_crear.')\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Se escanea el QR de Orden de Servicio y se toma la idordenservicio.\r\n    */\r\n    ordenServicio() {\r\n        let idordenservicio: number;\r\n        let clave_os: string;\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog',\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                this.alert.error('Código QR vacío o inválido.');\r\n                return;\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en json\r\n\r\n            for (const clave in decodedText) {\r\n                clave_os = clave;\r\n                idordenservicio = decodedText[clave];\r\n            }\r\n\r\n            let queryParams = `?filter[${clave_os}]=`;\r\n\r\n            this._entregasService.getOrdenServicioEntregas(idordenservicio, queryParams).subscribe(response => {\r\n                if (response?.result?.length > 0) {\r\n                    const result = response.result[0];\r\n\r\n                    if (this.asignacion_entrega === 0) {\r\n                        this.orden_servicio = result.idventagenerica;\r\n                        this.filter.orden_servicio = { idventagenerica: result.idventagenerica, cliente: result.cliente_venta, fecha: result.fecha_precarga };\r\n                    } else if (this.asignacion_entrega === 1 && clave_os === 'idcomplejo') {\r\n                        this.orden_servicio = result.idcomplejo;\r\n                        this.filter.complejo = { idcomplejo: result.idcomplejo, descripcion_complejo: result.descripcion_complejo };\r\n                    } else if (this.asignacion_entrega === 1 && clave_os === 'idunidadfuncional') {\r\n                        this.orden_servicio = result.idunidadfuncional;\r\n                        this.filter.unidad_funcional = { idunidadfuncional: result.idunidadfuncional, descripcion_complejo_uf: result.descripcion_complejo_uf };\r\n                    }\r\n\r\n                    this.extraParams = `&filter[${clave_os}]=${this.orden_servicio}`;\r\n\r\n                    this.tabla.filters(this.filtroBusqueda); // Aplico filtro y renderizo la tabla\r\n                } else {\r\n                    this.alert.error('No hay items asociados a esa OS.');\r\n                    this.extraParams = this.filtroBusqueda.replace(`&filter[${clave_os}]=${this.orden_servicio}`, \"\"); // Elimino el query params.\r\n                    this.tabla.filters(this.filtroBusqueda); // Aplico filtro y renderizo la tabla\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener venta:', error);\r\n                this.tabla.filters(this.filtroBusqueda); // Aplico filtro y renderizo la tabla\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter?.orden_servicio?.idventagenerica ? \"filter[idventagenerica]=\" + this.filter.orden_servicio?.idventagenerica + '&' : '';\r\n                        this.extraParams += this.filter?.unidad_funcional?.idunidadfuncional ? \"filter[idunidadfuncional]=\" + this.filter.unidad_funcional?.idunidadfuncional + '&' : '';\r\n                        this.extraParams += this.filter?.complejo?.idcomplejo ? \"filter[idcomplejo]=\" + this.filter.complejo?.idcomplejo + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != '' ? \"filter[idusuario]=\" + this.filter.usuario_responsable.codigo + '&' : '';\r\n                        this.extraParams += this.filter.usuario_encargado != '' ? \"filter[usuario_entrega]=\" + this.filter.usuario_encargado.codigo + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha_precarga][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha_precarga][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateEntrega(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteEntrega(event);\r\n                break;\r\n            case 'reporte':\r\n                this.reporteEntrega(event);\r\n                break;\r\n            case 'entregar':\r\n                this.entregarEntrega(event);\r\n                break;\r\n        }\r\n    }\r\n    entregarEntrega(event: { name: string; params: any; }) {\r\n        let idUsuario: number = -1;\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                this.alert.error('Código QR vacío o inválido.');\r\n                return;\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en json\r\n\r\n            const idusuario = parseInt(decodedText['idusuario'], 10);\r\n            idUsuario = idusuario;\r\n            this._entregasService.getUsuarioQR(idusuario).subscribe(response => {\r\n                if (response?.result?.length > 0) {\r\n                    const usuario = response.result[0];\r\n                    this.confirm.open({\r\n                        title: \"Asignar Entrega: \" + event.params.data.fecha_hora_precarga,\r\n                        message: '¿Asignar entrega al usuario ' + usuario.nombre + ' ' + usuario.apellido + '?',\r\n                        dismissible: false,\r\n                        actions: {\r\n                            confirm: {\r\n                                show: true,\r\n                                color: 'warn',\r\n                                label: 'Si',\r\n                            },\r\n                            cancel: {\r\n                                show: true,\r\n                                label: 'No',\r\n                            },\r\n                        },\r\n                    })\r\n                        .afterClosed()\r\n                        .subscribe(res => {\r\n                            if (res === 'confirmed') {\r\n                                let payload = {\r\n                                    \"usuario_entrega\": usuario.codigo\r\n                                };\r\n                                this._entregasService.entregarEntrega(event.params.data.identrega, payload).subscribe({\r\n                                    next: (res) => {\r\n                                        // Manejar la respuesta exitosa\r\n                                        this.alert.success(\"Entrega asignada con éxito.\");\r\n                                        if (res) {\r\n                                            this.tabla.renderTabla()\r\n                                        }\r\n                                    },\r\n                                    error: (error) => {\r\n                                        // Manejar el error\r\n                                        console.error('Error en el servicio:', error);\r\n                                        this.alert.warning(\"Esta entrega no puede asignarse.\");\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                } else {\r\n                    this.alert.error('Usuario no encontrado.');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener usuario:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveEntrega() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateEntrega(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteEntrega(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Entrega: \" + event.params.data.fecha_hora_precarga,\r\n            message: `¿Desea eliminar la entrega realizada el: ${event.params.data.fecha_hora_precarga}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._entregasService.deleteEntrega(event.params.data.identrega).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Entrega eliminada con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Esta entrega no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reporteEntrega(event) {\r\n        const idEntrega = event.params.data.identrega;\r\n        this._entregasService.reporteEntrega(idEntrega).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank');\r\n                    }\r\n                } else {\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"absolute right-10 flex space-x-4\">\r\n            <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || ''\"\r\n                [style.color]=\"color_primario || ''\"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\"\r\n                (click)=\"ordenServicio()\">\r\n                <div class=\"flex items-center\">\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                            fill=\"currentColor\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5 hidden md:inline\">Buscar OS</span>\r\n                </div>\r\n            </button>\r\n            <button *ngIf=\"puede_crear\" mat-flat-button (click)=\"saveEntrega()\" #save [class]=\"color_primario ? '' : default_color\"\r\n                [style.border]=\"color_primario || ''\" [style.color]=\"color_primario || ''\"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex items-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5 hidden md:inline\">Nueva Entrega</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\"\r\n            [acciones]=\"accionesObjeto\" [showMenu]=\"showMenu\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { debounceTime, firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IUnidadFuncional } from 'app/modules/inmuebles/unidades-funcionales/models/unidad-funcional';\r\nimport { IComplejo } from 'app/modules/inmuebles/complejos/models/complejos';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-entregas',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  filterDeposito: IDeposito[] = [];\r\n  filteredVentas: Observable<any>;\r\n  filteredUnidadesFuncionales: Observable<IUnidadFuncional[]>;\r\n  filteredComplejos: Observable<IComplejo[]>;\r\n  unidades_funcionales: IUnidadFuncional[] = [];\r\n  complejos: IComplejo[] = [];\r\n  ventas: any[] = [];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuarioResponsable: Observable<IUsuario[]>;\r\n  filteredUsuarioEncargado: Observable<IUsuario[]>;\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IEntrega[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n  asignacion_entrega: number;\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any,\r\n    private _menuService: JedsMenuService,\r\n    private datePipe: DatePipe,\r\n    private _entregasService: EntregasService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl(('')),\r\n      usuario_encargado: new FormControl(('')),\r\n      deposito: new FormControl((-1))\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n        this.color_primario = empresa.color_primario;\r\n        this.color_secundario = empresa.color_secundario;\r\n        this.asignacion_entrega = empresa.asignacion_entrega;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.getAsignacionEntrega();\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  getAsignacionEntrega() {\r\n    if (this.asignacion_entrega === 0) {\r\n      this.formFilters.addControl('orden_servicio', new FormControl(('')));\r\n      this.getVentas();\r\n    } else if (this.asignacion_entrega === 1) {\r\n      this.formFilters.addControl('unidad_funcional', new FormControl(('')));\r\n      this.formFilters.addControl('complejo', new FormControl(('')));\r\n      this.getUnidadesFuncionales();\r\n      this.getComplejos();\r\n    }\r\n  }\r\n\r\n  resetFilters() {\r\n    if (this.asignacion_entrega === 0) {\r\n      this.formFilters.reset({\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: '',\r\n        usuario_responsable: '',\r\n        usuario_encargado: '',\r\n        deposito: -1,\r\n        orden_servicio: '',\r\n      });\r\n    } else if (this.asignacion_entrega === 1) {\r\n      this.formFilters.reset({\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: '',\r\n        usuario_responsable: '',\r\n        usuario_encargado: '',\r\n        deposito: -1,\r\n        unidad_funcional: '',\r\n        complejo: '',\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._entregasService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuarioResponsable = this.formFilters.controls['usuario_responsable'].valueChanges.pipe(\r\n      debounceTime(400),\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n    this.filteredUsuarioEncargado = this.formFilters.controls['usuario_encargado'].valueChanges.pipe(\r\n      debounceTime(400),\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nombre.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._entregasService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n\r\n  /**\r\n  * Funcion que lista las ventas.\r\n  */\r\n  async getVentas(): Promise<any> {\r\n    const ventas = await firstValueFrom(this._entregasService.getVentas());\r\n    this.ventas = ventas.list;\r\n    this.filteredVentas = this.formFilters.get('orden_servicio').valueChanges.pipe(\r\n      startWith(''),\r\n      map((value) => this._filterVentas(value)),\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Esta funcion es para filtrar las ventas según el input que se haya ingresado en el buscador de ventas.\r\n  * @param value \r\n  * @returns \r\n  */\r\n  private _filterVentas(value: any): any[] {\r\n    const filterValue = value?.idventagenerica ? value.idventagenerica.toString().toLowerCase() : value.toString().toLowerCase(); // PErdon por no ser tan prolijo, es una chanchada esto, no tengo tiempo ;(\r\n    return this.ventas.filter(venta => {\r\n      const cliente = venta.cliente.toString().toLowerCase().includes(filterValue);\r\n      const fecha = venta.fecha.toString().toLowerCase().includes(filterValue);\r\n      return cliente || fecha;\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Obtenemos el cliente y fecha de dicha venta seleccionada.\r\n  * @param venta \r\n  * @returns \r\n  */\r\n  getTextVenta(venta: any): string {\r\n    return venta ? `${venta.cliente} ~ ${venta.fecha}` : '';\r\n  }\r\n\r\n  /**\r\n* Funcion que lista los complejos.\r\n*/\r\n  async getComplejos(): Promise<any> {\r\n    const complejos = await firstValueFrom(this._entregasService.getComplejos());\r\n    this.complejos = complejos.list;\r\n    this.filteredComplejos = this.formFilters.get('complejo').valueChanges.pipe(\r\n      startWith(''),\r\n      map((value) => this._filterTextGenerico(value, this.complejos, 'descripcion_complejo')),\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Funcion que lista las unidades funcionales.\r\n  */\r\n  async getUnidadesFuncionales(): Promise<any> {\r\n    const unidades_funcionales = await firstValueFrom(this._entregasService.getUnidadesFuncionales());\r\n    this.unidades_funcionales = unidades_funcionales.list;\r\n    this.filteredUnidadesFuncionales = this.formFilters.get('unidad_funcional').valueChanges.pipe(\r\n      startWith(''),\r\n      map((value) => this._filterTextGenerico(value, this.unidades_funcionales, 'descripcion_complejo_uf')),\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Obtenemos el cliente y fecha de dicha venta seleccionada.\r\n  * @param uf \r\n  * @returns \r\n  */\r\n  getTextUnidadFuncional(uf: any): string {\r\n    return uf ? uf.descripcion_complejo_uf : '';\r\n  }\r\n\r\n  /**\r\n  * Obtenemos el cliente y fecha de dicha venta seleccionada.\r\n  * @param complejo \r\n  * @returns \r\n  */\r\n  getTextComplejo(complejo: any): string {\r\n    return complejo ? complejo.descripcion_complejo : '';\r\n  }\r\n\r\n  /**\r\n   * Funcion generica para encontrar un item en un arreglo, parametrizable.\r\n   * @param value Valor ingresado por buscador\r\n   * @param array Arreglo donde se compara la busqueda\r\n   * @param param Campo por el que se desea buscar coincidencias\r\n   * @returns Resultado de busqueda\r\n   */\r\n  private _filterTextGenerico(value: string, array: any[], param: string) {\r\n    const filterValue = value.toString().toLowerCase();\r\n    return array.filter(res => {\r\n      const result = res[`${param}`].toString().toLowerCase().includes(filterValue);\r\n      return result;\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Esta funcion obtiene el texto del input que lo utilice en [displayWith]=\"getTextGenerico\"\r\n  * @param option Type: Unidad Funcional\r\n  * @param option Type: Complejo\r\n  * @param option Type: Usuario\r\n  * @param option Type: Venta\r\n  * @returns \r\n */\r\n  getTextGenerico(option) {\r\n    if (option.codigo) {\r\n      return option.apellido ? `${option.nombre} ${option.apellido}` : `${option.nombre}`;\r\n    }\r\n    if (option.usuario) {\r\n      return option.usuario;\r\n    }\r\n    if (option.idunidadfuncional) {\r\n      return option.descripcion_complejo_uf;\r\n    }\r\n    if (option.idcomplejo) {\r\n      return option.descripcion_complejo;\r\n    }\r\n    if (option.idventagenerica) {\r\n      return `${option.cliente} ~ ${option.fecha}`;\r\n    } else if (option.idventagenerica === null) {\r\n      return `Sin Asignación`;\r\n    }\r\n    return option;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"\r\n                *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Orden de servicio -->\r\n        <span *ngIf=\"formFilters.get('orden_servicio')\" class=\"font-semibold text-gray-600 text-base\">Orden de servicio</span>\r\n        <mat-form-field *ngIf=\"formFilters.get('orden_servicio')\" class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Orden de Servicio\" matInput [matAutocomplete]=\"autoOrdenServicio\"\r\n                formControlName=\"orden_servicio\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete autoActiveFirstOption #autoOrdenServicio=\"matAutocomplete\" [displayWith]=\"getTextVenta\">\r\n                <mat-option *ngFor=\"let venta of filteredVentas | async\" [value]=\"venta\">\r\n                    {{ venta.cliente }} ~ {{ venta.fecha }}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Unidad funcional -->\r\n        <span *ngIf=\"formFilters.get('unidad_funcional')\" class=\"font-semibold text-gray-600 text-base\">Unidad funcional</span>\r\n        <mat-form-field *ngIf=\"formFilters.get('unidad_funcional')\" class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Unidad funcional\" matInput [matAutocomplete]=\"autoUnidadFuncional\"\r\n                formControlName=\"unidad_funcional\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete autoActiveFirstOption #autoUnidadFuncional=\"matAutocomplete\"\r\n                [displayWith]=\"getTextUnidadFuncional\">\r\n                <mat-option *ngFor=\"let uf of filteredUnidadesFuncionales | async\" [value]=\"uf\">\r\n                    {{ uf.descripcion_complejo_uf }}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Complejo -->\r\n        <span *ngIf=\"formFilters.get('complejo')\" class=\"font-semibold text-gray-600 text-base\">Complejo</span>\r\n        <mat-form-field *ngIf=\"formFilters.get('complejo')\" class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Complejo\" matInput [matAutocomplete]=\"autoComplejo\"\r\n                formControlName=\"complejo\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete autoActiveFirstOption #autoComplejo=\"matAutocomplete\"\r\n                [displayWith]=\"getTextComplejo\">\r\n                <mat-option *ngFor=\"let complejo of filteredComplejos | async\" [value]=\"complejo\">\r\n                    {{ complejo.descripcion_complejo }}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Responsable\" matInput\r\n                [matAutocomplete]=\"autoUsuarioResponsable\" formControlName=\"usuario_responsable\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioResponsable=\"matAutocomplete\" [displayWith]=\"getTextGenerico\">\r\n                <mat-option *ngFor=\"let usuario_responsable of filteredUsuarioResponsable | async\"\r\n                    [value]=\"usuario_responsable\">\r\n                    {{usuario_responsable.nombre}} {{usuario_responsable.apellido}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Encargado -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Encargado</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Encargado\" matInput\r\n                [matAutocomplete]=\"autoUsuarioEncargado\" formControlName=\"usuario_encargado\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioEncargado=\"matAutocomplete\" [displayWith]=\"getTextGenerico\">\r\n                <mat-option *ngFor=\"let usuario_encargado of filteredUsuarioEncargado | async\"\r\n                    [value]=\"usuario_encargado\">\r\n                    {{usuario_encargado.nombre}} {{usuario_encargado.apellido}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \"\r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { BehaviorSubject, Observable, Subject, catchError, debounceTime, distinctUntilChanged, finalize, firstValueFrom, map, of, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IUnidadFuncional } from 'app/modules/inmuebles/unidades-funcionales/models/unidad-funcional';\r\nimport { IComplejo } from 'app/modules/inmuebles/complejos/models/complejos';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-save-entregas',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    user: any;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_boton: string;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    deposito_default = 0;\r\n    asignacion_entrega = null;\r\n\r\n    // Particulares del modulo\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    entrega: IEntrega;\r\n    articulos: any[] = [];\r\n    articulos_list = [];\r\n    unidades_de_medida: any[] = [];\r\n    usuarios: IUsuario[] = [];\r\n    depositos: IDeposito[] = [];\r\n    mov_art_list: any[] = [];\r\n    ventas: any[] = [];\r\n    unidades_funcionales: IUnidadFuncional[] = [];\r\n    complejos: IComplejo[] = [];\r\n    filteredUsuarios: Observable<IUsuario[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredVentas = new BehaviorSubject<any[]>([]);\r\n    filteredUnidadesFuncionales: Observable<IUnidadFuncional[]>;\r\n    filteredComplejos: Observable<IComplejo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    esEdicion: boolean;\r\n    orden_servicio: number;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        private alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.entrega = this.data ? this.data : null;\r\n        this.esEdicion = this.entrega ? true : false;\r\n        this.title = this.entrega?.identrega ? `Editar Entrega ${this.entrega.fecha_precarga} - ${this.entrega.hora_precarga}` : `Nueva Entrega`;\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n                this.asignacion_entrega = empresa.asignacion_entrega;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.entrega ? this.entrega.fecha_precarga.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.entrega) {\r\n            Promise.all([this.getItems(this.entrega.identrega)]).then(([items]) => {\r\n                this.mov_art_list = items.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        stock: m.stock_minimo_articulo\r\n                    }\r\n                });\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_entrega').disable();\r\n                } else {\r\n                    this.form.get('deposito_entrega').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.entrega?.fecha_precarga ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.entrega?.hora_precarga ? this.entrega.hora_precarga : this.datePipe.transform(new Date(), 'HH:mm:ss')), Validators.required),\r\n            usuario_entrega: new FormControl((this.entrega?.usuario_entrega ? { codigo: this.entrega.usuario_entrega, nombre: this.entrega.nombre_usuario_entrega } : '')),\r\n            deposito_entrega: new FormControl((this.entrega ? { descripcion: this.entrega.descripcion_deposito, iddeposito: this.entrega.iddeposito } : ''), Validators.required),\r\n            observaciones: new FormControl((this.entrega ? this.entrega.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), [Validators.required, Validators.min(1)]),\r\n            stock_existente: new FormControl((''))\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.entrega?.idusuario) {\r\n            this.getUsuarios(true);\r\n        } else if (this.entrega?.identrega) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getUsuarios();\r\n            this.getDepositos();\r\n        }\r\n\r\n        if (this.entrega?.iddeposito) {\r\n            this.getArticulosDepositos(this.entrega.iddeposito) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        if (this.asignacion_entrega === 0) {\r\n            let venta = null;\r\n\r\n            if (this.entrega?.idventagenerica) {\r\n                venta = { idventagenerica: this.entrega.idventagenerica, cliente: this.entrega.cliente_venta, fecha: this.entrega.fecha_venta, numero_venta: this.entrega.idventagenerica };\r\n            } else if (this.entrega?.idventa) {\r\n                venta = { idventa: this.entrega.idventa, cliente: this.entrega.cliente_venta, fecha: this.entrega.fecha_venta, numero_venta: this.entrega.idventa }\r\n            }\r\n\r\n            this.form.addControl('venta', new FormControl((this.entrega ? venta : ''), Validators.required));\r\n            this.getVentas();\r\n\r\n            // Escuchar los cambios en el input y filtrar los resultados\r\n            this.form.get('venta').valueChanges.pipe(\r\n                debounceTime(300),  // Evita demasiadas llamadas consecutivas\r\n                distinctUntilChanged(),\r\n                switchMap(value => {\r\n\r\n                    return this._entregasService.getVentas(value).pipe(\r\n                        catchError(() => of({ list: [] })) // Manejo de errores\r\n                    );\r\n                })\r\n            ).subscribe(response => {\r\n                this.filteredVentas.next(response.list.sort((a, b) => b.numero_venta - a.numero_venta) || []); // Actualizar el BehaviorSubject\r\n            });\r\n\r\n        } else if (this.asignacion_entrega === 1) {\r\n            this.form.addControl('unidad_funcional', new FormControl((this.entrega?.idunidadfuncional ? { idunidadfuncional: this.entrega.idunidadfuncional, descripcion_complejo_uf: this.entrega.descripcion_unidad_funcional, idcomplejo: this.entrega.idcomplejo, descripcion_complejo: this.entrega.descripcion_complejo } : ''),));\r\n            this.form.addControl('complejo', new FormControl((this.entrega?.idcomplejo ? { idcomplejo: this.entrega.idcomplejo, descripcion_complejo: this.entrega.descripcion_complejo } : ''),));\r\n            this.getComplejos();\r\n            this.getUnidadesFuncionales();\r\n        }\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (this.form.get('deposito_entrega').value != '') {\r\n\r\n            let deposito_entrega_value = this.form.get('deposito_entrega').value.iddeposito;\r\n            if (typeof this.form.get('deposito_entrega').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos.find(d => d.descripcion === this.form.get('deposito_entrega').value);\r\n                deposito_entrega_value = d.iddeposito;\r\n            }\r\n\r\n            if (movimiento) {\r\n                let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                    idarticulo: movimiento.articulo.idarticulo,\r\n                    cantidad: movimiento.cantidad,\r\n                    idunidadmedida: movimiento.unidad_medida,\r\n                    descripcion_articulo: movimiento.articulo.descripcion,\r\n                    descripcion_um: movimiento.unidadmedida_descripcion,\r\n                    codigo_interno: movimiento.articulo.codigo_interno,\r\n                    stock: movimiento.stock,    //Stock restante de ese articulo con esa um...\r\n                }\r\n\r\n                this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                // Deshabilito el control Deposito\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_entrega').disable();\r\n                }\r\n\r\n                // Actualizar validaciones según el estado de la grilla\r\n                this.updateFormValidators()\r\n\r\n                this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n                this.alert.success(\"Artículo añadido con éxito\");\r\n            }\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        // Habilito el control Deposito si la lista de movimientos está vacía\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_entrega').enable();\r\n        }\r\n\r\n        // Actualizar validaciones según el estado de la grilla\r\n        this.updateFormValidators();\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Esta funcion maneja las cambios de seleccion que puedan tener los combos.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        if ($event.idcomplejo) {\r\n            this.getUnidadesFuncionales($event.idcomplejo) //...Buscamos las UF que posee ese complejo.\r\n        } else if ($event.idcomplejo === null) {\r\n            this.getUnidadesFuncionales($event.idcomplejo) //...Buscamos las UF que posee ese complejo.\r\n        } else if ($event === 'complejo' && info === 'reset') {\r\n            this.getUnidadesFuncionales() //...Buscamos las UF que posee ese complejo.\r\n        }\r\n\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n\r\n            // Muevo el foco al campo \"cantidad\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"cantidad\".\r\n            setTimeout(() => {\r\n                const cantidadField = document.querySelector('[formControlName=\"cantidad\"]') as HTMLInputElement;\r\n                cantidadField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && a.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.mov_art_list.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.esEdicion === false) { //Sí existe minimo un movimiento y es una crecion...\r\n                let articulos_existentes = this.mov_art_list.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form_carga_articulos.get('stock_existente').setValue(stock) //Lo mostramos.\r\n        }\r\n\r\n        //Al seleccionar un deposito...\r\n        if ($event.iddeposito) {\r\n            this.form_carga_articulos.enable();\r\n            this.getArticulosDepositos($event.iddeposito) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'complejo' && this.form.get('unidad_funcional').value) {\r\n            this.form.get('unidad_funcional').setValue('');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'deposito_entrega') {\r\n            this.form_carga_articulos.disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning('Por favor, Ingrese una cantidad mayor a cero');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe seleccionar un artículo');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value) {\r\n                    if (this.form_carga_articulos.get('cantidad').value > articulo.stock) {\r\n                        this.form_carga_articulos.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente');\r\n                    }\r\n\r\n                    let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value/*  && movimiento.idventa === this.form_carga_articulos.get('venta').value.idventa */);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                        this.form_carga_articulos.get('stock_existente').setValue('');\r\n                        return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida asociado a esa Orden de Servicio');\r\n                    }\r\n\r\n                    if (this.form_carga_articulos.get('cantidad').value <= articulo.stock && this.form_carga_articulos.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form_carga_articulos.get('articulo').value,\r\n                            unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            stock: `${Number(articulo.stock) - this.form_carga_articulos.get('cantidad').value}`,\r\n                            cantidad: this.form_carga_articulos.get('cantidad').value\r\n                        }\r\n\r\n                        this.addMovimiento(movimiento_articulo)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        // Mueve el foco al campo \"articulo\" después de la carga\r\n        this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n        const articuloField = document.querySelector('[formControlName=\"articulo\"]') as HTMLInputElement;\r\n        articuloField?.focus();\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n\r\n            if (this.asignacion_entrega === 1) {\r\n                const existe_complejo_uf = this.form.get('unidad_funcional').value && this.form.get('complejo').value;\r\n\r\n                if (existe_complejo_uf) {\r\n                    const la_uf_no_pertenece_al_complejo = this.form.get('unidad_funcional').value?.idcomplejo != this.form.get('complejo').value?.idcomplejo;\r\n\r\n                    if (la_uf_no_pertenece_al_complejo) {\r\n                        this.form.get('complejo').setValue('');\r\n                        return this.alert.error('La unidad Funcional no pertenece a ese complejo');\r\n                    }\r\n                } else if (!this.form.get('unidad_funcional').value && !this.form.get('complejo').value) {\r\n                    return this.alert.error('Debe elegir una Unidad Funcional y/o Complejo');\r\n                }\r\n            }\r\n\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo a la orden de entrega')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora_precarga = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                entrega: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora_precarga: fecha_hora_precarga,\r\n                    iddeposito: this.form.get('deposito_entrega').value.iddeposito,\r\n                    usuario_entrega: this.form.get('usuario_entrega').value?.codigo ? this.form.get('usuario_entrega').value.codigo : null,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                    idventa: this.form.get('venta')?.value?.idventa ? this.form.get('venta').value.idventa : null,\r\n                    idventagenerica: this.form.get('venta')?.value?.idventagenerica ? this.form.get('venta').value.idventagenerica : null,\r\n                    idcomplejo: this.form.get('complejo')?.value?.idcomplejo ? this.form.get('complejo').value.idcomplejo : null,\r\n                    idunidadfuncional: this.form.get('unidad_funcional')?.value?.idunidadfuncional ? this.form.get('unidad_funcional').value.idunidadfuncional : null,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.entrega?.identrega) {\r\n                this._entregasService.updateEntrega(payload, this.entrega.identrega)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._entregasService.saveEntrega(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n    * Se escanea el QR de la Credencial de Usuario y se toma el idusuario.\r\n    */\r\n    credencialUsuario() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idusuario = parseInt(decodedText['idusuario'], 10);\r\n            this._entregasService.getUsuarioQR(idusuario).subscribe(response => {\r\n                if (response?.result?.length > 0) {\r\n                    const usuario = response.result[0];\r\n                    this.form.get('usuario_entrega').setValue(usuario);\r\n                } else {\r\n                    return this.alert.error('Usuario no encontrado');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener usuario:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n    */\r\n    etiquetaArticulo() {\r\n        let deposito = this.form.get('deposito_entrega').value;\r\n\r\n        if (!deposito) {\r\n            return this.alert.error('Debe seleccionar un depósito');\r\n        }\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._entregasService.getArticulosDepositos(deposito['iddeposito'], idarticulo).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Se escanea el QR de Orden de Servicio y se toma la idordenservicio.\r\n    */\r\n    ordenServicio() {\r\n        let idordenservicio: number;\r\n        let clave_os: string;\r\n        let endpoint: string;\r\n        let queryParams: string;\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en json\r\n\r\n            // Encapsulo los datos que voy a utilizar\r\n            for (const clave in decodedText) {\r\n                clave_os = clave;\r\n                idordenservicio = decodedText[clave];\r\n            }\r\n\r\n            // Defino el endpoint segun cada asignacion\r\n            if (this.asignacion_entrega === 0) {\r\n                endpoint = `${environment.ventas.view_vta_venta_selects}`;\r\n            } else if (this.asignacion_entrega === 1 && clave_os === 'idcomplejo') {\r\n                endpoint = `${environment.inmuebles.complejos.view_inm_complejos}`;\r\n            } else if (this.asignacion_entrega === 1 && clave_os === 'idunidadfuncional') {\r\n                endpoint = `${environment.inmuebles.unidad_funcional.view_inm_unidad_funcional}`;\r\n            } else {\r\n                return this.alert.error('Orden de Servicio no encontrada');\r\n            }\r\n\r\n            queryParams = `?filter[${clave_os}]=`;\r\n\r\n            this._entregasService.getOrdenServicioGenerico(idordenservicio, endpoint, queryParams).subscribe(response => {\r\n                if (response?.result?.length > 0) {\r\n                    const result = response.result[0];\r\n\r\n                    if (this.asignacion_entrega === 0) {\r\n                        this.orden_servicio = result.idventagenerica ?? result.idventa;\r\n                        this.form.get('venta').setValue(result);\r\n                    } else if (this.asignacion_entrega === 1 && clave_os === 'idcomplejo') {\r\n                        this.form.get('complejo').setValue(result);\r\n                        this.orden_servicio = result.idcomplejo;\r\n                    } else if (this.asignacion_entrega === 1 && clave_os === 'idunidadfuncional') {\r\n                        this.form.get('unidad_funcional').setValue(result);\r\n                        this.orden_servicio = result.idunidadfuncional;\r\n                    }\r\n                } else {\r\n                    return this.alert.error('No hay items asociados a esa OS');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener venta:', error);\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getUsuarios(option?) {\r\n        const Usuarios = await firstValueFrom(this._entregasService.getUsuarios(option));\r\n        new Promise(async (resolve) => {\r\n            this.usuarios = Usuarios.list;\r\n            this.filteredUsuarios = this.form.get('usuario_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterUsuarios(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._entregasService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.entrega) {\r\n                this.form.get('deposito_entrega').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterTextGenerico(value, this.depositos, 'descripcion')),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n    * Funcion que lista los complejos.\r\n    */\r\n    async getComplejos(): Promise<any> {\r\n        const complejos = await firstValueFrom(this._entregasService.getComplejos());\r\n        this.complejos = complejos.list;\r\n        this.filteredComplejos = this.form.get('complejo').valueChanges.pipe(\r\n            startWith(''),\r\n            map((value) => this._filterTextGenerico(value, this.complejos, 'descripcion_complejo')),\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista las unidades funcionales.\r\n    */\r\n    async getUnidadesFuncionales(idcomplejo?): Promise<any> {\r\n        const unidades_funcionales = await firstValueFrom(this._entregasService.getUnidadesFuncionales(idcomplejo));\r\n        this.unidades_funcionales = idcomplejo === null ? unidades_funcionales.list.filter(uf => uf.idcomplejo === null) : unidades_funcionales.list;\r\n        this.filteredUnidadesFuncionales = this.form.get('unidad_funcional').valueChanges.pipe(\r\n            startWith(''),\r\n            map((value) => this._filterTextGenerico(value, this.unidades_funcionales, 'descripcion_complejo_uf')),\r\n        );\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista las ventas.\r\n    */\r\n    async getVentas(): Promise<void> {\r\n        try {\r\n            const ventas = await firstValueFrom(this._entregasService.getVentas());\r\n            this.ventas = ventas.list.sort((a, b) => b.numero_venta - a.numero_venta) || [];\r\n            this.filteredVentas.next(this.ventas); // Inicializar con todas las ventas\r\n        } catch (error) {\r\n            console.error('Error obteniendo ventas:', error);\r\n            this.filteredVentas.next([]);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param identrega \r\n     * @returns \r\n     */\r\n    async getItems(identrega): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._entregasService.getItems(identrega));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Esta funcion solicita las unidades de medida que posee un articulo.\r\n    * @param idarticulo \r\n    */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista los articulos que posee un déposito.\r\n    */\r\n    async getArticulosDepositos(iddeposito: number) {\r\n        const articulos_um_deposito = await firstValueFrom(this._entregasService.getArticulosDepositos(iddeposito)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n     * Funcion generica para encontrar un item en un arreglo, parametrizable.\r\n     * @param value Valor ingresado por buscador\r\n     * @param array Arreglo donde se compara la busqueda\r\n     * @param param Campo por el que se desea buscar coincidencias\r\n     * @returns Resultado de busqueda\r\n     */\r\n    private _filterTextGenerico(value: string, array: any[], param: string) {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return array.filter(res => {\r\n            const result = res[`${param}`].toString().toLowerCase().includes(filterValue);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    private _filterUsuarios(usuario: IUsuario): IUsuario[] {\r\n        const filterValue = usuario.toString().toLowerCase();\r\n        return this.usuarios.filter(usuario => (usuario.nombre.toLowerCase().includes(filterValue)));\r\n    }\r\n\r\n    /**\r\n    * Esta funcion es para filtrar las ventas según el input que se haya ingresado en el buscador de ventas.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterVentas(value: string): any[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return (this.ventas || []).filter(venta => {\r\n            const cliente = venta.cliente.toString().toLowerCase().includes(filterValue);\r\n            const fecha = venta.fecha.toString().toLowerCase().includes(filterValue);\r\n            return cliente || fecha;\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    /**\r\n     * Esta funcion obtiene el texto del input que lo utilice en [displayWith]=\"getTextGenerico\"\r\n     * @param option Type: Unidad Funcional\r\n     * @param option Type: Complejo\r\n     * @param option Type: Usuario\r\n     * @param option Type: Venta\r\n     * @returns \r\n     */\r\n    getTextGenerico(option) {\r\n        if (option.codigo) {\r\n            return option.apellido ? `${option.nombre} ${option.apellido}` : `${option.nombre}`;\r\n        }\r\n        if (option.usuario) {\r\n            return option.usuario;\r\n        }\r\n        if (option.idunidadfuncional) {\r\n            return option.descripcion_complejo_uf;\r\n        }\r\n        if (option.idcomplejo) {\r\n            return option.descripcion_complejo;\r\n        }\r\n        if (option.numero_venta) {\r\n            return `N° ${option.numero_venta} | ${option.cliente} ~ ${option.fecha}`;\r\n        }\r\n        if (option.numero_venta === null) {\r\n            return `Sin Asignación`;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo?.idarticulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n\r\n    /**\r\n     * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n     */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.required, Validators.min(1)]);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.min(1)]);\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n\r\n            <!-- Cabecera de entregas -->\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-2/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_entrega\" [matAutocomplete]=\"dep\"\r\n                        (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #dep=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_entrega').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <div class=\"flex w-full gap-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-full sm:w-full\">\r\n                        <mat-label>Usuario Entrega</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"usuario_entrega\" [matAutocomplete]=\"ue\">\r\n                        <mat-autocomplete autoActiveFirstOption #ue=\"matAutocomplete\" [displayWith]=\"getTextGenerico\">\r\n                            <mat-option *ngFor=\"let usuario_encargado of filteredUsuarios | async\"\r\n                                [value]=\"usuario_encargado\">\r\n                                {{ usuario_encargado.nombre }} {{usuario_encargado.apellido}}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <button matSuffix mat-icon-button (click)=\"limpiarCasillero('usuario_entrega')\" class=\"mr-2\"\r\n                            *ngIf=\"form.get('usuario_entrega').value\">\r\n                            <mat-icon>clear</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                    <div class=\"flex\">\r\n                        <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                            [style.color]=\"color_secundario\"\r\n                            class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                            (click)=\"credencialUsuario()\">\r\n                            <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                    fill=\"currentColor\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Carga de orden de servicio -->\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <div class=\"flex w-full gap-1\">\r\n                    <mat-form-field *ngIf=\"form.get('venta')\" appearance='outline' class=\"w-full sm:w-full\">\r\n                        <mat-label>Venta</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"venta\" [matAutocomplete]=\"vn\"\r\n                            [ngClass]=\"{ 'italic': form.get('venta').value?.idventagenerica === null && form.get('venta').value?.idventa === null }\">\r\n                        <mat-autocomplete autoActiveFirstOption #vn=\"matAutocomplete\" [displayWith]=\"getTextGenerico\">\r\n                            <mat-option [value]=\"{cliente: '', fecha: '', idventagenerica: null, idventa: null, numero_venta: null}\">\r\n                                <i>Sin Asignación</i>\r\n                            </mat-option>\r\n                            <mat-option *ngFor=\"let venta of filteredVentas | async\" [value]=\"venta\">\r\n                                N° {{venta.numero_venta}} | {{ venta.cliente }} ~ {{ venta.fecha }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <button matSuffix mat-icon-button (click)=\"limpiarCasillero('venta')\" class=\"mr-2\"\r\n                            *ngIf=\"form.get('venta').value\">\r\n                            <mat-icon>clear</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                    <mat-form-field *ngIf=\"form.get('complejo')\" appearance='outline' class=\"w-full sm:w-full\">\r\n                        <mat-label>Complejos</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"complejo\" [matAutocomplete]=\"cj\"\r\n                            (ngModelChange)=\"seleccionItem($event, 'complejo')\">\r\n                        <mat-autocomplete autoActiveFirstOption #cj=\"matAutocomplete\" [displayWith]=\"getTextGenerico\">\r\n                            <mat-option [value]=\"{idcomplejo: null, descripcion_complejo: 'Sin complejo asociado'}\">\r\n                                <i>Sin complejo asociado</i>\r\n                            </mat-option>\r\n                            <mat-option *ngFor=\"let complejo of filteredComplejos | async\" [value]=\"complejo\">\r\n                                {{ complejo.descripcion_complejo }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <button matSuffix mat-icon-button (click)=\"limpiarCasillero('complejo')\" class=\"mr-2\"\r\n                            *ngIf=\"form.get('complejo').value\">\r\n                            <mat-icon>clear</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                    <mat-form-field *ngIf=\"form.get('unidad_funcional')\" appearance='outline' class=\"w-full sm:w-full\">\r\n                        <mat-label>Unidades Funcionales</mat-label>\r\n                        <input type=\"text\" matInput formControlName=\"unidad_funcional\" [matAutocomplete]=\"uf\">\r\n                        <mat-autocomplete autoActiveFirstOption #uf=\"matAutocomplete\" [displayWith]=\"getTextGenerico\">\r\n                            <mat-option *ngFor=\"let uf of filteredUnidadesFuncionales | async\" [value]=\"uf\">\r\n                                {{ uf.descripcion_complejo_uf }}\r\n                            </mat-option>\r\n                        </mat-autocomplete>\r\n                        <button matSuffix mat-icon-button (click)=\"limpiarCasillero('unidad_funcional')\" class=\"mr-2\"\r\n                            *ngIf=\"form.get('unidad_funcional').value\">\r\n                            <mat-icon>clear</mat-icon>\r\n                        </button>\r\n                    </mat-form-field>\r\n                    <div class=\"flex\">\r\n                        <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                            [style.color]=\"color_secundario\"\r\n                            class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                            (click)=\"ordenServicio()\">\r\n                            <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                    fill=\"currentColor\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Carga de artículos -->\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\" [disabled]=\"!form.get('deposito_entrega')?.value\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>En stock</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Cantidad</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <app-grid-filter (filterChange)=\"applyFilter($event)\"></app-grid-filter>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || ''\"\r\n            class=\"w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0\" (click)=\"onSubmit()\">\r\n            <span class=\"text-white font-medium text-base\">\r\n                {{ form.get('usuario_entrega').value ? 'Entregar' : 'Precargar' }}\r\n            </span>\r\n        </button>\r\n    </div>\r\n\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntregasComponent } from './components/entregas.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { EntregasService } from './service/entregas.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EntregasComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [EntregasComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        SharedComponentModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [EntregasService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class EntregasModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IEntrega, IEntregaResponse } from '../models/entrega';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class EntregasService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param entregas \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveEntrega(entregas: IEntrega): Observable<IEntrega> {\r\n        return this.http.post<IEntrega>(`${environment.stock.entregas}`, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param entregas\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateEntrega(entregas: IEntrega, identrega: number): Observable<IEntrega> {\r\n        return this.http.put<IEntrega>(`${environment.stock.entregas}` + '/' + identrega, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param identrega \r\n     * @returns Elimina un item\r\n     */\r\n    deleteEntrega(identrega: number): Observable<IEntrega> {\r\n        return this.http.delete<IEntrega>(`${environment.stock.entregas}` + '/' + identrega);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param identrega\r\n     * @returns \r\n     */\r\n    reporteEntrega(identrega: number): Observable<IEntregaResponse> {\r\n        return this.http.get<IEntregaResponse>(`${environment.stock.reporte_entrega}` + identrega);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito: number, idarticulo?: number) {\r\n        let f = `?filter[deposito]=${deposito}`;\r\n        f += idarticulo ? `&filter[idarticulo]=${idarticulo}` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(identrega?: number) {\r\n        let f = `?filter[identrega]=${identrega}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getVentas(value?: string) {\r\n        let f = `?&pagination=1&per-page=10&page=1&sort=-fecha`;\r\n        if (value) {\r\n            f += `&filter[descripcion_venta][like]=${value}`;\r\n        }\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.ventas.view_vta_venta_selects}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUnidadesFuncionales(idcomplejo?) {\r\n        let f = idcomplejo ? `?filter[idcomplejo]=${idcomplejo}` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.inmuebles.unidad_funcional.view_inm_unidad_funcional}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getComplejos() {\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.inmuebles.complejos.view_inm_complejos}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(option?) {\r\n        let f = `?sort=asc`;\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idordenservicio\r\n    * @param queryParams \r\n    * @returns Verifica si el QR escaneado de la Orden de Servicio es valido.\r\n    */\r\n    getOrdenServicioEntregas(idordenservicio: number, queryParams: string): Observable<any> {\r\n        return this.http.get<any>(`${environment.stock.view_stock_entregas}${queryParams}` + idordenservicio)\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idordenservicio\r\n    * @param queryParams \r\n    * @returns Verifica si el QR escaneado de la Orden de Servicio es valido.\r\n    */\r\n    getOrdenServicioGenerico(idordenservicio: number, endpoint: string, queryParams: string): Observable<any> {\r\n        return this.http.get<any>(`${endpoint}${queryParams}` + idordenservicio)\r\n    }\r\n\r\n    getUsuarioQR(codigo: number): Observable<any> {\r\n        return this.http.get<any>(`${environment.login.view_usuarios}?filter[codigo]=` + codigo);\r\n    }\r\n\r\n    entregarEntrega(idempresa: number, payload): Observable<any> {\r\n        return this.http.post<IEntrega>(`${environment.stock.entregar}` + idempresa, payload);\r\n    }\r\n    puedeCrearEntrega(): Observable<any> {\r\n        return this.http.post<IEntrega>(`${environment.stock.stk_entrega_puede_crear}`, '');\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["EventEmitter","Subject","debounceTime","distinctUntilChanged","takeUntil","MatTableDataSource","SaveComponent","FormControl","TablaDinamicaComponent","environment","FilterMenuComponent","LectorQrComponent","i0","ɵɵelementStart","ɵɵlistener","EntregasComponent_button_9_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","saveEntrega","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","ɵɵclassMap","ctx_r0","color_primario","default_color","ɵɵstyleProp","EntregasComponent","constructor","_entregasService","_empresaService","confirm","alert","dialogo","_searchService","_menuService","router","_headerTextService","pwaService","dataSource","headers","column_params","funcionesObjeto","accionesObjeto","filtroBusqueda","filtersLike","filter","deposito","filtroFechaInicio","filtroFechaFin","extraParams","parametrosActualizados","env","stock","view_stock_entregas","search","_unsubscribeAll","mostrarTextoOrdenServicio","buttonStyleOrdenServicio","ordenServicioScaneada","puede_crear","setTitulo","iconoAccion","entrega","iconoAccionado","iconoDeshabilitado","visible","showMenu","nombre_boton","functionName","puede_editar_entrega","puede_eliminar","fecha_hora_entrega","ngOnInit","puedeCrearEntrega","empresa$","pipe","subscribe","empresa","color_secundario","asignacion_entrega","getEmpresa","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","_this","_asyncToGenerator","Promise","resolve","next","data","success","result","error","console","log","ordenServicio","idordenservicio","clave_os","open","panelClass","componentInstance","sendObject","code","length","decodedText","JSON","parse","clave","queryParams","getOrdenServicioEntregas","response","orden_servicio","idventagenerica","cliente","cliente_venta","fecha","fecha_precarga","idcomplejo","complejo","descripcion_complejo","idunidadfuncional","unidad_funcional","descripcion_complejo_uf","replace","origin","_elementRef","getElementosExistentes","afterClosed","usuario_responsable","codigo","usuario_encargado","generarAcciones","name","updateEntrega","deleteEntrega","reporteEntrega","entregarEntrega","idUsuario","idusuario","parseInt","getUsuarioQR","usuario","title","params","fecha_hora_precarga","message","nombre","apellido","dismissible","actions","show","color","label","cancel","res","payload","identrega","renderTabla","warning","creadoExitosamente","autoFocus","editadoExitosamente","descripcion_deposito","idEntrega","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","closeAll","ɵɵdirectiveInject","i1","EntregasService","i2","EmpresaService","i3","FuseConfirmationService","i4","AppAlertService","i5","MatDialog","i6","SearchService","i7","JedsMenuService","i8","Router","i9","HeaderTextService","i10","PwaService","selectors","viewQuery","EntregasComponent_Query","rf","ctx","EntregasComponent_Template_button_click_3_listener","ɵɵtemplate","EntregasComponent_button_9_Template","EntregasComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","ɵɵadvance","ɵɵproperty","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","_r1","FilterMenuComponent_button_21_Template_button_click_0_listener","_r15","ctx_r14","limpiarFechas","deposito_r16","iddeposito","ɵɵtextInterpolate","descripcion","venta_r19","ɵɵtextInterpolate2","FilterMenuComponent_mat_form_field_30_mat_option_7_Template","_r17","ctx_r5","getTextVenta","ɵɵpipeBind1","filteredVentas","uf_r22","ɵɵtextInterpolate1","FilterMenuComponent_mat_form_field_32_mat_option_7_Template","_r20","ctx_r7","getTextUnidadFuncional","filteredUnidadesFuncionales","complejo_r25","FilterMenuComponent_mat_form_field_34_mat_option_7_Template","_r23","ctx_r9","getTextComplejo","filteredComplejos","usuario_responsable_r26","usuario_encargado_r27","datePipe","filterDeposito","unidades_funcionales","complejos","ventas","usuarios","filterFechas","movimientos_internos_list","formFilters","getDepositos","getUsuarios","getAsignacionEntrega","patchValue","addControl","getVentas","getUnidadesFuncionales","getComplejos","resetFilters","reset","onCloseMenu","transform","get","close","setValue","Usuarios","list","filteredUsuarioResponsable","controls","valueChanges","_filterUsuaurio","filteredUsuarioEncargado","filterValue","toLowerCase","includes","_this2","stk_list","_this3","_filterVentas","toString","venta","_this4","_filterTextGenerico","_this5","uf","array","param","getTextGenerico","option","DatePipe","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_span_29_Template","FilterMenuComponent_mat_form_field_30_Template","FilterMenuComponent_span_31_Template","FilterMenuComponent_mat_form_field_32_Template","FilterMenuComponent_span_33_Template","FilterMenuComponent_mat_form_field_34_Template","FilterMenuComponent_mat_option_44_Template","FilterMenuComponent_mat_option_55_Template","FilterMenuComponent_Template_button_click_58_listener","FilterMenuComponent_Template_button_click_61_listener","getRawValue","_r10","_r12","Validators","BehaviorSubject","catchError","finalize","of","switchMap","takeWhile","tap","timer","MAT_DIALOG_DATA","_alertConfig","type","showAlert","deposito_r28","SaveComponent_button_29_Template_button_click_0_listener","_r30","ctx_r29","limpiarCasillero","usuario_encargado_r31","SaveComponent_button_39_Template_button_click_0_listener","_r33","ctx_r32","venta_r37","ɵɵtextInterpolate3","numero_venta","SaveComponent_mat_form_field_46_button_11_Template_button_click_0_listener","_r39","ctx_r38","SaveComponent_mat_form_field_46_mat_option_9_Template","SaveComponent_mat_form_field_46_button_11_Template","_r34","ɵɵpureFunction1","_c0","ctx_r8","form","idventa","ɵɵpureFunction0","_c1","complejo_r43","SaveComponent_mat_form_field_47_button_11_Template_button_click_0_listener","_r45","ctx_r44","SaveComponent_mat_form_field_47_Template_input_ngModelChange_3_listener","_r47","ctx_r46","seleccionItem","SaveComponent_mat_form_field_47_mat_option_9_Template","SaveComponent_mat_form_field_47_button_11_Template","_r40","_c2","uf_r51","SaveComponent_mat_form_field_48_button_8_Template_button_click_0_listener","_r53","ctx_r52","SaveComponent_mat_form_field_48_mat_option_6_Template","SaveComponent_mat_form_field_48_button_8_Template","_r48","ctx_r10","articulo_r54","codigo_interno","SaveComponent_button_64_Template_button_click_0_listener","_r56","ctx_r55","um_r57","factor_um","um_base","SaveComponent_mat_option_73_i_2_Template","idunidadmedida","descripcion_um","ctx_r15","movimiento_articulo_r60","ctx_r17","movimiento_articulo_r61","descripcion_articulo","ctx_r19","movimiento_articulo_r62","ctx_r21","movimiento_articulo_r63","cantidad","ctx_r23","SaveComponent_td_104_Template_button_click_1_listener","restoredCtx","_r67","movimiento_r64","$implicit","ctx_r66","deleteMovimiento","dialogRef","maxPalabras","deposito_default","columns","articulos","articulos_list","unidades_de_medida","depositos","mov_art_list","esEdicion","hora_precarga","user","localStorage","getItem","minDate","maxDate","Date","newForm","exist","subscribeAlert","emitConfig","config","appearance","time","dia","mes","anio","split","all","getItems","then","items","m","idarticulo","parseFloat","codigo_interno_articulo","stock_minimo_articulo","disable","enable","required","hora","usuario_entrega","nombre_usuario_entrega","deposito_entrega","observaciones","maxLength","form_carga_articulos","articulo","unidadmedida","min","stock_existente","updateFormValidators","getArticulosDepositos","fecha_venta","sort","a","b","descripcion_unidad_funcional","addMovimiento","movimiento","deposito_entrega_value","d","find","movimiento_articulo","unidad_medida","unidadmedida_descripcion","forEach","mov","Number","item","info","getUnidadesDeMedidaArticulos","setTimeout","cantidadField","document","querySelector","focus","um","articulo_um","cantidad_existente","existeMovimiento","articulos_existentes","ae","input","onCargar","key","preventDefault","valid","articuloField","onSubmit","isPalabraMaxLengthReached","existe_complejo_uf","la_uf_no_pertenece_al_complejo","movimientos","objeto","fecha_formateada","id","emit","credencialUsuario","etiquetaArticulo","endpoint","view_vta_venta_selects","inmuebles","view_inm_complejos","view_inm_unidad_funcional","getOrdenServicioGenerico","_ref","filteredUsuarios","_filterUsuarios","_x","apply","arguments","Depositos","_ref2","depositoPorDefecto","filteredDepositos","_x2","_this6","_ref3","_x3","_this7","_ref4","_x4","_this8","articulos_um_deposito","_ref5","filteredArticulos","_filterArticulos","_x5","existeArticulo","push","getTextDeposito","getTextArticulo","getPalabrasLength","setValidators","clearValidators","updateValueAndValidity","applyFilter","trim","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_ngModelChange_24_listener","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_mat_option_37_Template","SaveComponent_button_39_Template","SaveComponent_Template_button_click_41_listener","SaveComponent_mat_form_field_46_Template","SaveComponent_mat_form_field_47_Template","SaveComponent_mat_form_field_48_Template","SaveComponent_Template_button_click_50_listener","SaveComponent_Template_input_ngModelChange_59_listener","SaveComponent_mat_option_62_Template","SaveComponent_button_64_Template","SaveComponent_Template_button_click_66_listener","SaveComponent_Template_mat_select_ngModelChange_72_listener","SaveComponent_mat_option_73_Template","SaveComponent_Template_mat_form_field_keydown_enter_79_listener","SaveComponent_Template_button_click_84_listener","SaveComponent_Template_app_grid_filter_filterChange_87_listener","ɵɵelementContainerStart","SaveComponent_th_91_Template","SaveComponent_td_92_Template","ɵɵelementContainerEnd","SaveComponent_th_94_Template","SaveComponent_td_95_Template","SaveComponent_th_97_Template","SaveComponent_td_98_Template","SaveComponent_th_100_Template","SaveComponent_td_101_Template","SaveComponent_th_103_Template","SaveComponent_td_104_Template","SaveComponent_tr_105_Template","SaveComponent_tr_106_Template","SaveComponent_div_107_Template","SaveComponent_Template_button_click_119_listener","_r2","_r5","_r11","tmp_34_0","_c3","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","SharedComponentModule","routes","component","EntregasModule","imports","forChild","declarations","exports","http","_authService","entregas","post","put","delete","reporte_entrega","f","subject","resp","accessToken","token","asObservable","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","idempresa","entregar","stk_entrega_puede_crear","ɵɵinject","HttpClient","AuthService","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","Array","from","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}