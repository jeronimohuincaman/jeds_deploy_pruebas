{"version":3,"file":"src_app_modules_stock_entregas_entregas_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/entregas/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/entregas/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/entregas/components/entregas.component.ts","./src/app/modules/stock/entregas/components/entregas.component.html","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/entregas/components/save/save.component.ts","./src/app/modules/stock/entregas/components/save/save.component.html","./src/app/modules/stock/entregas/entregas.module.ts","./src/app/modules/stock/entregas/service/entregas.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-entregas',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    ventas: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredVentas: Observable<any>;\r\n    articulos_list = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n\r\n    ) {\r\n        this.title = 'Añadir entrega de articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulosDepositos();\r\n        this.getVentas();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosDepositos() {\r\n        const articulos_um_deposito = await firstValueFrom(this._entregasService.getArticulosDepositos(this.data.deposito_entrega)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista las ventas.\r\n    */\r\n    async getVentas() {\r\n        const ventas = await firstValueFrom(this._entregasService.getVentas());\r\n        this.ventas = ventas.list;\r\n        this.filteredVentas = this.form.get('venta').valueChanges.pipe(\r\n            startWith(''),\r\n            map((value) => this._filterVentas(value)),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar las ventas según el input que se haya ingresado en el buscador de ventas.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterVentas(value: string): any[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.ventas.filter(venta => {\r\n            const cliente = venta.cliente.toString().toLowerCase().includes(filterValue);\r\n            const fecha = venta.fecha.toString().toLowerCase().includes(filterValue);\r\n            return cliente || fecha;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos el cliente y fecha de dicha venta seleccionada.\r\n     * @param venta \r\n     * @returns \r\n    */\r\n    getTextVenta(venta: any): string {\r\n        return venta ? `${venta.cliente} - ${venta.fecha}` : '';\r\n    }\r\n\r\n    /**\r\n * Esta funcion solicita las unidades de medida que posee un articulo.\r\n * @param idarticulo \r\n */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            });\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.data.esEdicion === false) { //Sí existe minimo un movimiento y es una crecion...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form.get('stock_existente').setValue(stock) //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n            this.form.get('venta').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl(('')),\r\n            venta: new FormControl((''), Validators.required),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > articulo.stock) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value && movimiento.idventa === this.form.get('venta').value.idventa);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('unidadmedida').setValue('');\r\n                        this.form.get('venta').setValue('');\r\n                        this.form.get('stock_existente').setValue('');\r\n                        return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida asociado a esa venta.');\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= articulo.stock && this.form.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form.get('articulo').value,\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            stock: `${Number(articulo.stock) - this.form.get('cantidad').value}`,\r\n                            cantidad: this.form.get('cantidad').value,\r\n                            venta: this.form.get('venta').value,\r\n                        }\r\n\r\n                        this.onCloseMenu(movimiento_articulo)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                            {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}} {{um.um_base}})</i>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>En stock</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Venta</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"venta\" [matAutocomplete]=\"vn\">\r\n                    <mat-autocomplete autoActiveFirstOption #vn=\"matAutocomplete\" [displayWith]=\"getTextVenta\">\r\n                        <mat-option [value]=\"{cliente: '', fecha: '', idventa: null}\">\r\n                            -\r\n                        </mat-option>\r\n                        <mat-option *ngFor=\"let venta of filteredVentas | async\" [value]=\"venta\">\r\n                            {{ venta.cliente }} - {{ venta.fecha }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('venta')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('venta').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Añadir</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IEntrega } from '../models/entrega';\r\nimport { EntregasService } from '../service/entregas.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n@Component({\r\n    selector: 'app-entregas',\r\n    templateUrl: './entregas.component.html',\r\n    styleUrls: ['./entregas.component.scss']\r\n})\r\nexport class EntregasComponent implements OnInit, OnDestroy {\r\n    entregas: IEntrega[];\r\n    public dataSource: MatTableDataSource<IEntrega> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Observaciones', 'Deposito', 'Usuario Encargado', 'Acciones'];\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'observaciones', 'descripcion_deposito', 'nick_usuario_entrega', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'nick_usuario_entrega'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.entregas + '?sort=-fecha_hora';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n\r\n    constructor(\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        },\r\n        {\r\n            icono: 'print',\r\n            nombre_boton: \"Reporte\",\r\n            functionName: 'reporte'\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != '' ? \"filter[nick_usuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n                        this.extraParams += this.filter.usuario_encargado != '' ? \"filter[nick_usuario_entrega]=\" + this.filter.usuario_encargado + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateEntrega(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteEntrega(event);\r\n                break;\r\n            case 'reporte':\r\n                this.reporteEntrega(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveEntrega() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateEntrega(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteEntrega(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Entrega: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar la entrega realizada el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n        .afterClosed()\r\n        .subscribe(res => {\r\n            if (res === 'confirmed') {\r\n                this._entregasService.deleteEntrega(event.params.data.identrega).subscribe({\r\n                    next: (res) => {\r\n                        // Manejar la respuesta exitosa\r\n                        this.alert.success(\"Entrega eliminada con éxito.\");\r\n                        if (res) {\r\n                            this.tabla.renderTabla()\r\n                        }\r\n                    },\r\n                    error: (error) => {\r\n                        // Manejar el error\r\n                        console.error('Error en el servicio:', error);\r\n                        this.alert.warning(\"Esta entrega no puede eliminarse. Tiene elementos asociados.\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reporteEntrega(event) {\r\n        const idEntrega = event.params.data.identrega;\r\n        this._entregasService.reporteEntrega(idEntrega).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                const reportePath = data.path;\r\n                if (this.pwaService.isPwa()) {\r\n                    this.router.navigate(['/reporte', reportePath]);\r\n                } else {\r\n                    const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                    window.open(reporteUrl, '_blank'); \r\n                }\r\n                } else {\r\n                console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveEntrega()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nueva Entrega</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-entregas',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  filterDeposito: IDeposito[] = [];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuarioResponsable: Observable<IUsuario[]>;\r\n  filteredUsuarioEncargado: Observable<IUsuario[]>;\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IEntrega[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();  \r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _entregasService: EntregasService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl(('')),\r\n      usuario_encargado: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario_responsable: '',\r\n      usuario_encargado: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._entregasService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuarioResponsable = this.formFilters.controls['usuario_responsable'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n    this.filteredUsuarioEncargado = this.formFilters.controls['usuario_encargado'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._entregasService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Responsable\" matInput [matAutocomplete]=\"autoUsuarioResponsable\" formControlName=\"usuario_responsable\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioResponsable=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario_responsable of filteredUsuarioResponsable | async\" [value]=\"usuario_responsable.nick\">\r\n                    {{usuario_responsable.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Encargado -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Encargado</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Encargado\" matInput [matAutocomplete]=\"autoUsuarioEncargado\" formControlName=\"usuario_encargado\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioEncargado=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario_encargado of filteredUsuarioEncargado | async\" [value]=\"usuario_encargado.nick\">\r\n                    {{usuario_encargado.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { FuseAlertType } from '@fuse/components/alert';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-save-entregas',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'venta', 'acciones'];\r\n    form: FormGroup;\r\n    entrega: IEntrega;\r\n    title: string;\r\n    user: any;\r\n    usuarios: IUsuario[] = [];\r\n    depositos: IDeposito[] = [];\r\n    mov_art_list: any[] = [];\r\n    ventas: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredUsuarios: Observable<IUsuario[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        private alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.entrega = this.data ? this.data : null;\r\n        this.title = this.entrega?.identrega ? `Editar Entrega ${this.entrega.fecha} - ${this.entrega.hora}` : `Nueva Entrega`;\r\n        /* this`user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.entrega ? this.entrega.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.entrega) {\r\n            Promise.all([this.getVentas(), this.getItems(this.entrega.identrega)]).then(([ventas, items]) => {\r\n                this.ventas = ventas;\r\n                this.mov_art_list = items.map(m => {\r\n                    let venta = this.ventas.find(v => v.idventa === m.idventa);\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        stock: m.stock_minimo_articulo,\r\n                        idventa: m.idventa ? venta.idventa : null,\r\n                        fecha_venta: venta ? venta.fecha : '',\r\n                        cliente_venta: venta ? venta.cliente : ''\r\n                    }\r\n                });\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_entrega').disable();\r\n                } else {\r\n                    this.form.get('deposito_entrega').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.entrega?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.entrega?.hora ? this.entrega.hora : this.datePipe.transform(new Date(), 'HH:mm')), Validators.required),\r\n            usuario_entrega: new FormControl((this.entrega ? this.entrega.nick_usuario_entrega : ''), Validators.required),\r\n            deposito_entrega: new FormControl((this.entrega ? this.entrega.descripcion_deposito : ''), Validators.required),\r\n            observaciones: new FormControl((this.entrega ? this.entrega.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.entrega?.idusuario) {\r\n            this.getUsuarios(true);\r\n        } else {\r\n            this.getUsuarios();\r\n        }\r\n\r\n        if (this.entrega?.identrega) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    async getUsuarios(option?) {\r\n        const Usuarios = await firstValueFrom(this._entregasService.getUsuarios(option));\r\n        new Promise(async (resolve) => {\r\n            this.usuarios = Usuarios.list;\r\n            this.filteredUsuarios = this.form.get('usuario_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterUsuarios(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterUsuarios(usuario: IUsuario): IUsuario[] {\r\n        const filterValue = usuario.toString().toLowerCase();\r\n        return this.usuarios.filter(usuario => usuario.nick.toLowerCase().includes(filterValue) && usuario.codigo !== this.user.id);\r\n    }\r\n\r\n    getTextUsuario(option) {\r\n        if (option.nick) {\r\n            return option.nick;\r\n        }\r\n        if (option.usuario) {\r\n            return option.usuario;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._entregasService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param idventa \r\n     * @returns \r\n     */\r\n    async getVentas(): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const Ventas = await firstValueFrom(this._entregasService.getVentas());\r\n            this.ventas = Ventas.list;\r\n            resolve(this.ventas);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param identrega \r\n     * @returns \r\n     */\r\n    async getItems(identrega): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._entregasService.getItems(identrega));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento() {\r\n        if (this.form.get('deposito_entrega').value != '') {\r\n\r\n            let deposito_entrega_value = this.form.get('deposito_entrega').value.iddeposito;\r\n            if (typeof this.form.get('deposito_entrega').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos.find(d => d.descripcion === this.form.get('deposito_entrega').value);\r\n                deposito_entrega_value = d.iddeposito;\r\n            }\r\n            let esEdicion = this.entrega ? true : false;\r\n\r\n            this.dialogo\r\n                .open(AddArticuloComponent, {\r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        deposito_entrega: deposito_entrega_value,\r\n                        movimientos: this.mov_art_list,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno: res.articulo.codigo_interno,\r\n                                stock: res.stock,    //Stock restante de ese articulo con esa um...\r\n                                idventa: res.venta.idventa ? res.venta.idventa : null,\r\n                                fecha_venta: res.venta ? res.venta.fecha : '',\r\n                                cliente_venta: res.venta ? res.venta.cliente : ''\r\n                            }\r\n                            this.mov_art_list = [...this.mov_art_list, movimiento_articulo];\r\n                            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                            // Deshabilito el control Deposito\r\n                            if (this.mov_art_list.length != 0) {\r\n                                this.form.get('deposito_entrega').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\")\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        // Habilito el control Deposito si la lista de movimientos está vacía\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_entrega').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Verificar si el usuario entrega seleccionado está en la lista de usuarios\r\n            if (!this.entrega || (this.entrega && this.form.get('usuario_entrega').value !== this.entrega.nick_usuario_entrega)) {\r\n                const usuarioSeleccionado = this.form.get('usuario_entrega').value;\r\n                const usuarioExistente = this.usuarios.find(usuario => usuario.codigo === usuarioSeleccionado.codigo);\r\n                if (!usuarioExistente) {\r\n                    return this.alert.error('El usuario de entrega seleccionado no existe. Por favor, seleccione un usuario válido.');\r\n                }\r\n            }\r\n\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n                idventa: objeto.idventa\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo a la orden de entrega')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                entrega: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito_entrega').value.iddeposito,\r\n                    usuario_entrega: this.form.get('usuario_entrega').value.codigo,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.entrega?.identrega) {\r\n                this._entregasService.updateEntrega(payload, this.entrega.identrega)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._entregasService.saveEntrega(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Usuario Entrega</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"usuario_entrega\" [matAutocomplete]=\"ue\">\r\n                    <mat-autocomplete autoActiveFirstOption #ue=\"matAutocomplete\" [displayWith]=\"getTextUsuario\">\r\n                        <mat-option *ngFor=\"let usuario_encargado of filteredUsuarios | async\" [value]=\"usuario_encargado\">\r\n                            {{ usuario_encargado.nick }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('usuario_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('usuario_entrega').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_entrega\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_entrega').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[215px] h-auto shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='venta'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Venta</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{movimiento_articulo.cliente_venta}} - {{movimiento_articulo.fecha_venta}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"rounded-tr-lg text-white w-auto\"> \r\n                        <button class=\"flex items-center justify-center\"\r\n                            (click)=\"addMovimiento()\">\r\n                            <mat-icon class=\"text-inherit text-xl\">add_circle_outline</mat-icon>\r\n                            <span class=\"ml-2\">Añadir Artículo</span>\r\n                        </button>\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntregasComponent } from './components/entregas.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { EntregasService } from './service/entregas.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EntregasComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [EntregasComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [EntregasService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class EntregasModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IEntrega, IEntregaResponse } from '../models/entrega';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class EntregasService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param entregas \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveEntrega(entregas: IEntrega): Observable<IEntrega> {\r\n        return this.http.post<IEntrega>(`${environment.stock.entregas}`, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param entregas\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateEntrega(entregas: IEntrega, identrega: number): Observable<IEntrega> {\r\n        return this.http.put<IEntrega>(`${environment.stock.entregas}` + '/' + identrega, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param identrega \r\n     * @returns Elimina un item\r\n     */\r\n    deleteEntrega(identrega: number): Observable<IEntrega> {\r\n        return this.http.delete<IEntrega>(`${environment.stock.entregas}` + '/' + identrega);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param identrega\r\n     * @returns \r\n     */\r\n    reporteEntrega(identrega: number): Observable<IEntregaResponse> {\r\n        return this.http.get<IEntregaResponse>(`${environment.stock.reporte_entrega}` + identrega);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito: number) {\r\n        let f = `?filter[deposito]=${deposito}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n        .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(identrega?: number) {\r\n        let f = `?filter[identrega]=${identrega}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n        .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getVentas() {\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.ventas.view_venta_selects}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(option?) {\r\n        let f = `?sort=asc`;\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r8","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r11","factor_um","um_base","ɵɵtemplate","AddArticuloComponent_mat_option_25_i_2_Template","idunidadmedida","descripcion_um","venta_r14","cliente","fecha","AddArticuloComponent_button_44_Template_button_click_0_listener","_r16","ctx_r15","AddArticuloComponent","constructor","data","_entregasService","_empresaService","alert","dialogRef","columns","articulos","unidades_de_medida","depositos","ventas","articulos_list","dataSource","default_color","_unsubscribeAll","title","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","newForm","getArticulosDepositos","getVentas","subscribeAlert","emitConfig","next","config","appearance","time","_this","_asyncToGenerator","articulos_um_deposito","deposito_entrega","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","forEach","item","existeArticulo","find","articulo","idarticulo","push","filterValue","toString","toLowerCase","filter","includes","getTextArticulo","_this2","filteredVentas","_filterVentas","venta","getTextVenta","getUnidadesDeMedidaArticulos","_this3","_ref2","a","sort","b","parseFloat","um","stock","_x2","seleccionArticulo","$event","enable","articulo_um","cantidad_existente","existeMovimiento","movimientos","length","esEdicion","articulos_existentes","ae","Number","cantidad","setValue","disable","required","unidadmedida","stock_existente","onSubmit","valid","error","warning","movimiento","idventa","movimiento_articulo","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","EntregasService","i2","EmpresaService","i3","AppAlertService","i4","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_Template_mat_select_ngModelChange_24_listener","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_mat_option_42_Template","AddArticuloComponent_button_44_Template","AddArticuloComponent_Template_button_click_46_listener","ɵɵclassMap","ɵɵstyleProp","ɵɵtextInterpolate","_r1","ɵɵpipeBind1","_r5","ɵɵpureFunction0","_c0","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","FilterMenuComponent","EntregasComponent","confirm","dialogo","_searchService","_menuService","router","_headerTextService","pwaService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","deposito","filtroFechaInicio","filtroFechaFin","extraParams","parametrosActualizados","env","entregas","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","usuario_responsable","usuario_encargado","generarAcciones","name","updateEntrega","deleteEntrega","reporteEntrega","saveEntrega","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","hora","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","identrega","renderTabla","console","idEntrega","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","closeAll","FuseConfirmationService","i5","MatDialog","i6","SearchService","i7","JedsMenuService","i8","Router","i9","HeaderTextService","i10","PwaService","viewQuery","EntregasComponent_Query","EntregasComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","EntregasComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r9","ctx_r8","limpiarFechas","deposito_r10","iddeposito","usuario_responsable_r11","nick","usuario_encargado_r12","datePipe","filterDeposito","usuarios","filterFechas","movimientos_internos_list","formFilters","getDepositos","getUsuarios","patchValue","resetFilters","reset","transform","Usuarios","filteredUsuarioResponsable","controls","_filterUsuaurio","filteredUsuarioEncargado","usuario","stk_list","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_mat_option_49_Template","FilterMenuComponent_Template_button_click_52_listener","FilterMenuComponent_Template_button_click_55_listener","getRawValue","_r4","_r6","usuario_encargado_r23","SaveComponent_button_29_Template_button_click_0_listener","_r25","ctx_r24","deposito_r26","SaveComponent_button_38_Template_button_click_0_listener","_r28","ctx_r27","movimiento_articulo_r29","ctx_r10","movimiento_articulo_r30","descripcion_articulo","ctx_r12","movimiento_articulo_r31","ctx_r14","movimiento_articulo_r32","ctx_r16","movimiento_articulo_r33","cliente_venta","fecha_venta","SaveComponent_th_63_Template_button_click_1_listener","_r35","ctx_r34","addMovimiento","ctx_r18","SaveComponent_td_64_Template_button_click_1_listener","restoredCtx","_r39","movimiento_r36","$implicit","ctx_r38","deleteMovimiento","mov_art_list","maxPalabras","entrega","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","dia","mes","anio","split","all","getItems","then","items","m","v","codigo_interno_articulo","stock_minimo_articulo","usuario_entrega","nick_usuario_entrega","observaciones","maxLength","getPalabrasLength","isPalabraMaxLengthReached","idusuario","option","filteredUsuarios","_filterUsuarios","codigo","id","getTextUsuario","Depositos","filteredDepositos","_filterDepositos","getTextDeposito","_ref3","Ventas","_x3","_this4","_ref4","_x4","deposito_entrega_value","d","mov","input","usuarioSeleccionado","usuarioExistente","objeto","fecha_formateada","fecha_hora","payload","emit","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_mat_option_36_Template","SaveComponent_button_38_Template","ɵɵelementContainerStart","SaveComponent_th_48_Template","SaveComponent_td_49_Template","ɵɵelementContainerEnd","SaveComponent_th_51_Template","SaveComponent_td_52_Template","SaveComponent_th_54_Template","SaveComponent_td_55_Template","SaveComponent_th_57_Template","SaveComponent_td_58_Template","SaveComponent_th_60_Template","SaveComponent_td_61_Template","SaveComponent_th_63_Template","SaveComponent_td_64_Template","SaveComponent_tr_65_Template","SaveComponent_tr_66_Template","SaveComponent_div_67_Template","SaveComponent_Template_button_click_69_listener","_r2","ɵɵpureFunction1","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","component","EntregasModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","reporte_entrega","f","subject","resp","accessToken","token","result","asObservable","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","view_venta_selects","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}