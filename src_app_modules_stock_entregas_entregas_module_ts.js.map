{"version":3,"file":"src_app_modules_stock_entregas_entregas_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEoE;AAGmD;AAC9C;AACf;AACG;AACG;;;;;;;;;;;;;;;;;ICExDgB,4DAAA,qBAMH;IACDA,oDAAA,GACA;IAAAA,0DAAA,EAAa;;;;IANTA,wDAAA,SAAAK,MAAA,CAAAC,YAAA,CAAAC,IAAA,CAA0B,qCAAAF,MAAA,CAAAG,SAAA;IAK9BR,uDAAA,GACA;IADAA,gEAAA,MAAAK,MAAA,CAAAC,YAAA,CAAAK,OAAA,MACA;;;;;IAUoBX,4DAAA,qBAAkF;IAC9EA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAFkDA,wDAAA,UAAAY,WAAA,CAAkB;IAC7EZ,uDAAA,GACJ;IADIA,gEAAA,MAAAY,WAAA,CAAAE,cAAA,SAAAF,WAAA,CAAAG,WAAA,MACJ;;;;;;IAEJf,4DAAA,iBACuC;IADLA,wDAAA,mBAAAiB,gEAAA;MAAAjB,2DAAA,CAAAmB,IAAA;MAAA,MAAAC,MAAA,GAAApB,2DAAA;MAAA,OAASA,yDAAA,CAAAoB,MAAA,CAAAG,gBAAA,CAAiB,UAAU,CAAC;IAAA,EAAC;IAEpEvB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAM1BA,4DAAA,qBAC4B;IAAAA,oDAAA,GAAqB;IAAAA,0DAAA,EAAa;;;;IAA9DA,wDAAA,UAAAwB,MAAA,CAAAC,cAAA,CAA2B;IAACzB,uDAAA,GAAqB;IAArBA,+DAAA,CAAAwB,MAAA,CAAAG,cAAA,CAAqB;;;;;IAkBjD3B,4DAAA,qBAAyE;IACrEA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAF4CA,wDAAA,UAAA4B,SAAA,CAAe;IACpE5B,uDAAA,GACJ;IADIA,gEAAA,MAAA4B,SAAA,CAAAC,OAAA,SAAAD,SAAA,CAAAE,KAAA,MACJ;;;;;;IAEJ9B,4DAAA,iBACoC;IADFA,wDAAA,mBAAA+B,gEAAA;MAAA/B,2DAAA,CAAAgC,IAAA;MAAA,MAAAC,OAAA,GAAAjC,2DAAA;MAAA,OAASA,yDAAA,CAAAiC,OAAA,CAAAV,gBAAA,CAAiB,OAAO,CAAC;IAAA,EAAC;IAEjEvB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;;;;;;ADrDlD,MAMakC,oBAAoB;EAiB7BC,YACoCC,IAAS,EACjCC,gBAAiC,EAClCC,KAAsB,EACtBC,SAA6C;IAHpB,KAAAH,IAAI,GAAJA,IAAI;IAC5B,KAAAC,gBAAgB,GAAhBA,gBAAgB;IACjB,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IApBpB,KAAAC,OAAO,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,CAAC;IAG9D,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,kBAAkB,GAAU,EAAE;IAC9B,KAAAC,SAAS,GAAgB,EAAE;IAC3B,KAAAC,MAAM,GAAU,EAAE;IAIlB,KAAAC,cAAc,GAAG,EAAE;IACZ,KAAAC,UAAU,GAA4B,IAAIhD,uEAAkB,EAAE;IACrE,KAAAU,SAAS,GAAG,KAAK;IAET,KAAAuC,eAAe,GAAiB,IAAI5D,yCAAO,EAAO;IAStD,IAAI,CAAC6D,KAAK,GAAG,4BAA4B;EAC7C;EAEAC,QAAQA,CAAA;IACJ,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACC,cAAc,EAAE;EACzB;EAEA;EACAA,cAAcA,CAAA;IACV,IAAI,CAACf,KAAK,CAACgB,UAAU,CAACC,SAAS,CAAC;MAC9BC,IAAI,EAAGC,MAAoB,IAAI;QAC7B,IAAI,CAACjD,SAAS,GAAG,IAAI;QACrB,IAAI,CAACF,YAAY,GAAG;UAClB,GAAGmD,MAAM;UACTC,UAAU,EAAE;SACb;QACD,IAAIC,IAAI,GAAG,CAAC;QACZhE,2CAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CACbiE,IAAI,CACHxE,8CAAQ,CAAC,MAAK;UACZ,IAAI,CAACoB,SAAS,GAAG,KAAK;UACtB,IAAI,CAACF,YAAY,GAAG,IAAI;QAC1B,CAAC,CAAC,EACFb,gDAAS,CAAC,MAAMkE,IAAI,GAAG,CAAC,CAAC,EACzBnE,gDAAS,CAAC,IAAI,CAACuD,eAAe,CAAC,EAC/BrD,0CAAG,CAAC,MAAOiE,IAAI,IAAI,CAAE,CAAC,CACvB,CACAJ,SAAS,EAAE;MAChB;KACD,CAAC;EACN;EAEA;;;EAGMJ,qBAAqBA,CAAA;IAAA,IAAAU,KAAA;IAAA,OAAAC,qIAAA;MACvB,MAAMC,qBAAqB,SAAS1E,qDAAc,CAACwE,KAAI,CAACxB,gBAAgB,CAACc,qBAAqB,CAACU,KAAI,CAACzB,IAAI,CAAC4B,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAC7H,IAAIC,OAAO;QAAA,IAAAC,IAAA,GAAAJ,qIAAA,CAAC,WAAOK,OAAO,EAAI;UAC1BN,KAAI,CAACpB,SAAS,GAAGsB,qBAAqB,CAACK,IAAI;UAC3CP,KAAI,CAACQ,iBAAiB,GAAGR,KAAI,CAACS,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACC,YAAY,CAACZ,IAAI,CAChErE,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAAEmF,KAAK,IAAKZ,KAAI,CAACa,gBAAgB,CAACD,KAAK,CAAC,CAAC,CAC/C;UACDN,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC;QAAA,iBAAAQ,EAAA;UAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;MAEF;MACAd,qBAAqB,CAACK,IAAI,CAACU,OAAO,CAACC,IAAI,IAAG;QACtC,MAAMC,cAAc,GAAGnB,KAAI,CAAChB,cAAc,CAACoC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,UAAU,KAAKJ,IAAI,CAACI,UAAU,CAAC;QACpG,IAAI,CAACH,cAAc,EAAE;UACjB,IAAIE,QAAQ,GAAG;YAAEC,UAAU,EAAEJ,IAAI,CAACI,UAAU;YAAErE,cAAc,EAAEiE,IAAI,CAACjE,cAAc;YAAEC,WAAW,EAAEgE,IAAI,CAAChE;UAAW,CAAE;UAClH8C,KAAI,CAAChB,cAAc,CAACuC,IAAI,CAACF,QAAQ,CAAC;;QACrC;MACL,CAAC,CAAC;IAAC;EACP;EAEA;;;;;EAKQR,gBAAgBA,CAACD,KAAa;IAClC,MAAMY,WAAW,GAAGZ,KAAK,CAACa,QAAQ,EAAE,CAACC,WAAW,EAAE;IAClD,OAAO,IAAI,CAAC1C,cAAc,CAAC2C,MAAM,CAACN,QAAQ,IAAG;MACzC,MAAMpE,cAAc,GAAGoE,QAAQ,CAACpE,cAAc,CAACwE,QAAQ,EAAE,CAACC,WAAW,EAAE,CAACE,QAAQ,CAACJ,WAAW,CAAC;MAC7F,MAAMtE,WAAW,GAAGmE,QAAQ,CAACnE,WAAW,CAACuE,QAAQ,EAAE,CAACC,WAAW,EAAE,CAACE,QAAQ,CAACJ,WAAW,CAAC;MACvF,OAAOvE,cAAc,IAAIC,WAAW;IACxC,CAAC,CAAC;EACN;EAEA;;;;;EAKA2E,eAAeA,CAACR,QAAmB;IAC/B,OAAOA,QAAQ,GAAG,GAAGA,QAAQ,CAACpE,cAAc,MAAMoE,QAAQ,CAACnE,WAAW,EAAE,GAAG,EAAE;EACjF;EAEA;;;EAGMqC,SAASA,CAAA;IAAA,IAAAuC,MAAA;IAAA,OAAA7B,qIAAA;MACX,MAAMlB,MAAM,SAASvD,qDAAc,CAACsG,MAAI,CAACtD,gBAAgB,CAACe,SAAS,EAAE,CAAC;MACtEuC,MAAI,CAAC/C,MAAM,GAAGA,MAAM,CAACwB,IAAI;MACzBuB,MAAI,CAACC,cAAc,GAAGD,MAAI,CAACrB,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAACC,YAAY,CAACZ,IAAI,CAC1DrE,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAAEmF,KAAK,IAAKkB,MAAI,CAACE,aAAa,CAACpB,KAAK,CAAC,CAAC,CAC5C;IAAC;EACN;EAEA;;;;;EAKQoB,aAAaA,CAACpB,KAAa;IAC/B,MAAMY,WAAW,GAAGZ,KAAK,CAACa,QAAQ,EAAE,CAACC,WAAW,EAAE;IAClD,OAAO,IAAI,CAAC3C,MAAM,CAAC4C,MAAM,CAACM,KAAK,IAAG;MAC9B,MAAMjE,OAAO,GAAGiE,KAAK,CAACjE,OAAO,CAACyD,QAAQ,EAAE,CAACC,WAAW,EAAE,CAACE,QAAQ,CAACJ,WAAW,CAAC;MAC5E,MAAMvD,KAAK,GAAGgE,KAAK,CAAChE,KAAK,CAACwD,QAAQ,EAAE,CAACC,WAAW,EAAE,CAACE,QAAQ,CAACJ,WAAW,CAAC;MACxE,OAAOxD,OAAO,IAAIC,KAAK;IAC3B,CAAC,CAAC;EACN;EAEA;;;;;EAKAiE,YAAYA,CAACD,KAAU;IACnB,OAAOA,KAAK,GAAG,GAAGA,KAAK,CAACjE,OAAO,MAAMiE,KAAK,CAAChE,KAAK,EAAE,GAAG,EAAE;EAC3D;EAEA;;;;EAIAkE,4BAA4BA,CAACb,UAAU;IAAA,IAAAc,MAAA;IACnC,IAAIhC,OAAO;MAAA,IAAAiC,KAAA,GAAApC,qIAAA,CAAC,WAAOK,OAAO,EAAI;QAC1B8B,MAAI,CAACvD,kBAAkB,GAAGuD,MAAI,CAACxD,SAAS,CAAC+C,MAAM,CAACW,CAAC,IAAIA,CAAC,CAAChB,UAAU,KAAKA,UAAU,CAAC,CAAC7F,GAAG,CAAC6G,CAAC,IAAG;UACtF,OAAO;YACHhB,UAAU,EAAEgB,CAAC,CAAChB,UAAU;YACxB1D,cAAc,EAAE0E,CAAC,CAAC1E,cAAc;YAChCE,cAAc,EAAEwE,CAAC,CAACC,EAAE;YACpBC,KAAK,EAAEF,CAAC,CAACE;WACZ;QACL,CAAC,CAAC;QACFlC,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC;MAAA,iBAAAmC,GAAA;QAAA,OAAAJ,KAAA,CAAAtB,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EACN;EAGA;;;;EAIA0B,iBAAiBA,CAACC,MAAM;IACpB;IACA,IAAIA,MAAM,CAACrB,UAAU,EAAE;MACnB,IAAI,CAACb,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAACkC,MAAM,EAAE;MACtC,IAAI,CAACT,4BAA4B,CAACQ,MAAM,CAACrB,UAAU,CAAC,EAAC;;IAGzD;IACA;IACA,IAAIqB,MAAM,CAACJ,EAAE,EAAE;MACX;MACA,IAAIM,WAAW,GAAG,IAAI,CAAChE,kBAAkB,CAACuC,IAAI,CAACkB,CAAC,IAAIA,CAAC,CAAChB,UAAU,KAAK,IAAI,CAACb,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,CAACU,UAAU,IAAIgB,CAAC,CAAC1E,cAAc,KAAK,IAAI,CAAC6C,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAACE,KAAK,CAAC;MAC5K,IAAI4B,KAAK,CAAC,CAAC;MACX,IAAIM,kBAAkB,GAAG,CAAC;MAE1B,IAAIC,gBAAgB,GAAG,IAAI,CAACxE,IAAI,CAACyE,WAAW,CAACC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;MAExE,IAAIF,gBAAgB,IAAI,IAAI,CAACxE,IAAI,CAAC2E,SAAS,KAAK,KAAK,EAAE;QAAE;QACrD,IAAIC,oBAAoB,GAAG,IAAI,CAAC5E,IAAI,CAACyE,WAAW,CAACrB,MAAM,CAACW,CAAC,IAAIA,CAAC,CAAChB,UAAU,KAAKuB,WAAW,CAACvB,UAAU,IAAIgB,CAAC,CAAC1E,cAAc,KAAKiF,WAAW,CAACjF,cAAc,CAAC,CAAC,CAAC;QAC1J;QACAuF,oBAAoB,CAAClC,OAAO,CAACmC,EAAE,IAAG;UAC9BN,kBAAkB,GAAGA,kBAAkB,GAAGO,MAAM,CAACD,EAAE,CAACE,QAAQ,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC;;QACFd,KAAK,GAAG,GAAGa,MAAM,CAACR,WAAW,CAACL,KAAK,CAAC,GAAGM,kBAAkB,EAAE,CAAC,CAAC;OAChE,MAAM;QACHN,KAAK,GAAGK,WAAW,CAACL,KAAK,CAAC,CAAC;;;MAE/B,IAAI,CAAC/B,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC6C,QAAQ,CAACf,KAAK,CAAC,EAAC;;EAEzD;EAEA;;;EAGA9E,gBAAgBA,CAACiF,MAAM;IACnB,IAAIA,MAAM,IAAI,UAAU,EAAE;MACtB,IAAI,CAAClC,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;MACtC,IAAI,CAAC9C,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC8C,OAAO,EAAE;MACvC,IAAI,CAAC/C,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;MAC1C,IAAI,CAAC9C,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;;IAEjD,IAAI,CAAC9C,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;EACvC;EAGAlE,OAAOA,CAAA;IACH,IAAI,CAACoB,IAAI,GAAG,IAAIrF,sDAAS,CAAC;MACtBiG,QAAQ,EAAE,IAAIlG,wDAAW,CAAE,EAAE,EAAGE,gEAAmB,CAAC;MACpDqI,YAAY,EAAE,IAAIvI,wDAAW,CAAE,EAAE,EAAGE,gEAAmB,CAAC;MACxDiI,QAAQ,EAAE,IAAInI,wDAAW,CAAE,EAAE,EAAGE,gEAAmB,CAAC;MACpDsI,eAAe,EAAE,IAAIxI,wDAAW,CAAE,EAAG,CAAC;MACtC8G,KAAK,EAAE,IAAI9G,wDAAW,CAAE,EAAE,EAAGE,gEAAmB;KACnD,CAAC;EACN;EAEAuI,QAAQA,CAAA;IACJ,IAAI,CAAC,IAAI,CAACnD,IAAI,CAACoD,KAAK,EAAE;MAClB,OAAO,IAAI,CAACpF,KAAK,CAACqF,KAAK,CAAC,6BAA6B,CAAC;KACzD,MAAM;MACH,IAAI,CAAClF,SAAS,CAACqC,OAAO,CAACI,QAAQ,IAAG;QAC9B,IAAIA,QAAQ,CAACC,UAAU,KAAK,IAAI,CAACb,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,CAACU,UAAU,IAAID,QAAQ,CAACzD,cAAc,KAAK,IAAI,CAAC6C,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAACE,KAAK,EAAE;UACvI,IAAI,IAAI,CAACH,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,GAAGS,QAAQ,CAACmB,KAAK,EAAE;YAClD,IAAI,CAAC/B,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;YACtC,OAAO,IAAI,CAAC9E,KAAK,CAACsF,OAAO,CAAC,0BAA0B,CAAC;;UAGzD,IAAIhB,gBAAgB,GAAG,IAAI,CAACxE,IAAI,CAACyE,WAAW,CAAC5B,IAAI,CAAC4C,UAAU,IAAIA,UAAU,CAAC1C,UAAU,KAAK,IAAI,CAACb,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,CAACU,UAAU,IAAI0C,UAAU,CAACpG,cAAc,KAAK,IAAI,CAAC6C,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAACE,KAAK,IAAIoD,UAAU,CAACC,OAAO,KAAK,IAAI,CAACxD,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAACE,KAAK,CAACqD,OAAO,CAAC;UAEzQ,IAAIlB,gBAAgB,EAAE;YAClB,IAAI,CAACtC,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC9C,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;YACnC,IAAI,CAAC9C,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;YAC7C,OAAO,IAAI,CAAC9E,KAAK,CAACsF,OAAO,CAAC,wFAAwF,CAAC;;UAGvH,IAAI,IAAI,CAACtD,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,IAAIS,QAAQ,CAACmB,KAAK,IAAI,IAAI,CAAC/B,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,GAAG,CAAC,EAAE;YAC1F,IAAI8C,YAAY,GAAG,IAAI,CAAC7E,kBAAkB,CAACuC,IAAI,CAACmB,EAAE,IAAIA,EAAE,CAAC3E,cAAc,KAAK,IAAI,CAAC6C,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC;YAElH,IAAIsD,mBAAmB,GAAG;cACtB7C,QAAQ,EAAE,IAAI,CAACZ,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK;cACzCuD,aAAa,EAAE,IAAI,CAAC1D,IAAI,CAACC,GAAG,CAAC,cAAc,CAAC,CAACE,KAAK;cAClDwD,wBAAwB,EAAEV,YAAY,CAAC5F,cAAc;cACrD0E,KAAK,EAAE,GAAGa,MAAM,CAAChC,QAAQ,CAACmB,KAAK,CAAC,GAAG,IAAI,CAAC/B,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK,EAAE;cACpE0C,QAAQ,EAAE,IAAI,CAAC7C,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC,CAACE,KAAK;cACzCqB,KAAK,EAAE,IAAI,CAACxB,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAACE;aACjC;YAED,IAAI,CAACyD,WAAW,CAACH,mBAAmB,CAAC;;;MAGjD,CAAC,CAAC;;EAEV;EAEAG,WAAWA,CAAChD,QAAS;IACjB,IAAI,CAAC3C,SAAS,CAAC4F,KAAK,CAACjD,QAAQ,GAAGA,QAAQ,GAAG,KAAK,CAAC;EACrD;;AApQShD,oBAAoB;mBAApBA,oBAAoB,EAAAlC,+DAAA,CAkBjBJ,sEAAe,GAAAI,+DAAA,CAAAqI,sEAAA,GAAArI,+DAAA,CAAAuI,iFAAA,GAAAvI,+DAAA,CAAAyI,mEAAA;AAAA;AAlBlBvG,oBAAoB;QAApBA,oBAAoB;EAAAyG,SAAA;EAAAC,QAAA,GAAA5I,gEAAA,CAFlB,CAAC;IAAE8I,OAAO,EAAEjJ,qEAAgB;IAAEkJ,QAAQ,EAAEhJ,0EAAeA;EAAA,CAAE,CAAC;EAAAiJ,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCjBzErJ,4DAAA,aAC6L;MAE1IA,oDAAA,GAAS;MAAAA,0DAAA,EAAO;MAC3DA,4DAAA,UAAK;MACuBA,wDAAA,mBAAAuJ,sDAAA;QAAA,OAASD,GAAA,CAAApB,WAAA,EAAa;MAAA,EAAC;MAC3ClI,4DAAA,kBAA6B;MAAAA,oDAAA,YAAK;MAAAA,0DAAA,EAAW;MAKrDA,wDAAA,IAAAyJ,0CAAA,wBAQS;MACbzJ,4DAAA,cAA2E;MAKhDA,oDAAA,qBAAQ;MAAAA,0DAAA,EAAY;MAC/BA,4DAAA,gBACgD;MAA5CA,wDAAA,2BAAA0J,8DAAAlD,MAAA;QAAA,OAAiB8C,GAAA,CAAA/C,iBAAA,CAAAC,MAAA,CAAyB;MAAA,EAAC;MAD/CxG,0DAAA,EACgD;MAChDA,4DAAA,gCAA+F;MAC3FA,wDAAA,KAAA2J,2CAAA,yBAEa;;MACjB3J,0DAAA,EAAmB;MACnBA,wDAAA,KAAA4J,uCAAA,qBAGS;MACb5J,0DAAA,EAAiB;MACjBA,4DAAA,yBAAmD;MACpCA,oDAAA,UAAE;MAAAA,0DAAA,EAAY;MACzBA,4DAAA,sBAA6F;MAAlDA,wDAAA,2BAAA6J,mEAAArD,MAAA;QAAA,OAAiB8C,GAAA,CAAA/C,iBAAA;UAAAH,EAAA,EAAAI;QAAA,EAA+B;MAAA,EAAC;MACxFxG,wDAAA,KAAA8J,2CAAA,yBAC8D;MAClE9J,0DAAA,EAAa;MAEjBA,4DAAA,0BAAmD;MACpCA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAY;MAC/BA,uDAAA,iBAAgF;MACpFA,0DAAA,EAAiB;MACjBA,4DAAA,0BAAmD;MACpCA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAY;MAC/BA,uDAAA,iBAAyD;MAC7DA,0DAAA,EAAiB;MACjBA,4DAAA,yBAAmD;MACpCA,oDAAA,aAAK;MAAAA,0DAAA,EAAY;MAC5BA,uDAAA,iBAA2E;MAC3EA,4DAAA,gCAA2F;MAEnFA,oDAAA,WACJ;MAAAA,0DAAA,EAAa;MACbA,wDAAA,KAAAgK,2CAAA,yBAEa;;MACjBhK,0DAAA,EAAmB;MACnBA,wDAAA,KAAAiK,uCAAA,qBAGS;MACbjK,0DAAA,EAAiB;MAI7BA,4DAAA,eAAwD;MAE2BA,wDAAA,mBAAAkK,uDAAA;QAAA,OAASZ,GAAA,CAAA7B,QAAA,EAAU;MAAA,EAAC;MAC/FzH,oDAAA,qBACJ;MAAAA,0DAAA,EAAS;;;;;MAzEkCA,uDAAA,GAAS;MAATA,+DAAA,CAAAsJ,GAAA,CAAAtG,KAAA,CAAS;MAYnDhD,uDAAA,GAAe;MAAfA,wDAAA,SAAAsJ,GAAA,CAAA9I,SAAA,CAAe;MAKoCR,uDAAA,GAAkB;MAAlBA,wDAAA,cAAAsJ,GAAA,CAAAhF,IAAA,CAAkB;MAMHtE,uDAAA,GAAuB;MAAvBA,wDAAA,oBAAAmK,GAAA,CAAuB;MAEfnK,uDAAA,GAA+B;MAA/BA,wDAAA,gBAAAsJ,GAAA,CAAA5D,eAAA,CAA+B;MACzD1F,uDAAA,GAA4B;MAA5BA,wDAAA,YAAAA,yDAAA,SAAAsJ,GAAA,CAAAjF,iBAAA,EAA4B;MAK5DrE,uDAAA,GAAgC;MAAhCA,wDAAA,SAAAsJ,GAAA,CAAAhF,IAAA,CAAAC,GAAA,aAAAE,KAAA,CAAgC;MAONzE,uDAAA,GAAqB;MAArBA,wDAAA,YAAAsJ,GAAA,CAAA5G,kBAAA,CAAqB;MAcA1C,uDAAA,IAAsB;MAAtBA,wDAAA,oBAAAqK,GAAA,CAAsB;MACZrK,uDAAA,GAA4B;MAA5BA,wDAAA,gBAAAsJ,GAAA,CAAAvD,YAAA,CAA4B;MACzE/F,uDAAA,GAAiD;MAAjDA,wDAAA,UAAAA,6DAAA,KAAAuK,GAAA,EAAiD;MAGhCvK,uDAAA,GAAyB;MAAzBA,wDAAA,YAAAA,yDAAA,SAAAsJ,GAAA,CAAA1D,cAAA,EAAyB;MAKtD5F,uDAAA,GAA6B;MAA7BA,wDAAA,SAAAsJ,GAAA,CAAAhF,IAAA,CAAAC,GAAA,UAAAE,KAAA,CAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjE+C;AAGb;AAC5B;AACN;AAGT;AACuD;AAE7C;AAImB;;;;;;;;;;;;;;AAI1E,MAKasG,iBAAiB;EAsB1B5I,YACYE,gBAAiC,EACjC2I,OAAgC,EAChC1I,KAAsB,EACtB2I,OAAkB,EAClBC,cAA6B,EAC7BC,YAA6B,EAC7BC,MAAc,EACfC,kBAAqC;IAPpC,KAAAhJ,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAA2I,OAAO,GAAPA,OAAO;IACP,KAAA1I,KAAK,GAALA,KAAK;IACL,KAAA2I,OAAO,GAAPA,OAAO;IACP,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IACP,KAAAC,kBAAkB,GAAlBA,kBAAkB;IA5BtB,KAAAvI,UAAU,GAAiC,IAAIhD,wEAAkB,EAAE;IAC1E,KAAAwL,OAAO,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,UAAU,EAAE,mBAAmB,EAAE,UAAU,CAAC;IACxG,KAAAC,aAAa,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,UAAU,CAAC;IAC9H,KAAAC,eAAe,GAAG,IAAI;IACtB,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,WAAW,GAAG,CAAC,cAAc,EAAE,sBAAsB,EAAE,sBAAsB,CAAC;IAC9E,KAAAlG,MAAM,GAAY;MACdmG,QAAQ,EAAE,CAAC,CAAC;MACZC,iBAAiB,EAAE,EAAE;MACrBC,cAAc,EAAE;KACnB;IACQ,KAAAC,WAAW,GAAG,EAAE;IACf,KAAAC,sBAAsB,GAAG,IAAIvB,wDAAY,EAAO;IAC1D,KAAAwB,GAAG,GAAGnB,gFAA0B,GAAG,mBAAmB;IACtD,KAAAqB,MAAM,GAAgB,IAAIlN,wDAAW,CAAC,EAAE,CAAC;IAiBrC,IAAI,CAACqM,kBAAkB,CAACc,SAAS,CAAC,IAAI,CAACf,MAAM,CAAC;IAE9C;;;IAGA,IAAI,CAACI,eAAe,GAAG,CAAC;MACpBY,KAAK,EAAE,MAAM;MACbC,YAAY,EAAE,QAAQ;MACtBC,YAAY,EAAE;MACd;KACH,EACD;MACIF,KAAK,EAAE,QAAQ;MACfC,YAAY,EAAE,UAAU;MACxBC,YAAY,EAAE;KACjB,CACA;EACL;EAGArJ,QAAQA,CAAA;IACJ,IAAI,CAACsJ,cAAc,GAAG,IAAI,CAACrB,cAAc,CAACsB,aAAa,EAAE,CAAC5I,IAAI;IAAE;IAC5D6G,mDAAY,CAAC,GAAG,CAAC,EACjBC,2DAAoB,EAAE,CACzB,CACInH,SAAS,CAACkB,KAAK,IAAG;MACf,IAAI,CAACgH,cAAc,GAAGhH,KAAK;MAC3B,IAAI,CAACgI,KAAK,CAACC,OAAO,CAAC,IAAI,CAACjB,cAAc,CAAC;IAC3C,CAAC,CAAC;IAEN,IAAI,CAACkB,eAAe,GAAG,IAAI,CAACzB,cAAc,CAAC0B,cAAc,EAAE,CAACrJ,SAAS,CAACsJ,KAAK,IAAG;MAC1E,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC5B,cAAc,CAAC6B,eAAe,EAAE,CAAC;IAC5D,CAAC,CAAC;EACN;EAEAD,YAAYA,CAACE,MAAiB;IAC1B,IAAI,CAAC7B,YAAY,CACZ8B,IAAI,CAACnC,mFAAmB,EAAEkC,MAAM,CAACE,WAAW,EAAE;MAC3C1H,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBpD,IAAI,EAAE,IAAI,CAACqK,KAAK,CAACU,sBAAsB;KAC1C,CAAC,CACDC,WAAW,EAAE,CACb7J,SAAS,CAAC;MACPC,IAAI,EAAEgC,MAAM,IAAG;QACX,IAAIA,MAAM,EAAE;UACR,IAAI,CAACA,MAAM,GAAGA,MAAM;UACpB,IAAI,CAACsG,WAAW,GAAG,IAAI,CAACtG,MAAM,CAACmG,QAAQ,IAAI,CAAC,CAAC,GAAG,qBAAqB,GAAG,IAAI,CAACnG,MAAM,CAACmG,QAAQ,GAAG,GAAG,GAAG,EAAE;UACvG,IAAI,CAACG,WAAW,IAAI,IAAI,CAACtG,MAAM,CAAC6H,mBAAmB,IAAI,CAAC,CAAC,GAAG,oBAAoB,GAAG,IAAI,CAAC7H,MAAM,CAAC6H,mBAAmB,GAAG,GAAG,GAAG,EAAE;UAC7H,IAAI,CAACvB,WAAW,IAAI,IAAI,CAACtG,MAAM,CAAC8H,iBAAiB,IAAI,CAAC,CAAC,GAAG,0BAA0B,GAAG,IAAI,CAAC9H,MAAM,CAAC8H,iBAAiB,GAAG,GAAG,GAAG,EAAE;UAC/H,IAAI,CAACxB,WAAW,IAAI,IAAI,CAACtG,MAAM,CAACoG,iBAAiB,IAAI,IAAI,GAAG,qBAAqB,GAAG,IAAI,CAACpG,MAAM,CAACoG,iBAAiB,GAAG,GAAG,GAAG,EAAE;UAC5H,IAAI,CAACE,WAAW,IAAI,IAAI,CAACtG,MAAM,CAACqG,cAAc,IAAI,IAAI,GAAG,qBAAqB,GAAG,IAAI,CAACrG,MAAM,CAACqG,cAAc,GAAG,GAAG,GAAG,EAAE;UACtH,IAAI,CAACY,KAAK,CAACC,OAAO,CAAC,IAAI,CAACjB,cAAc,CAAC;UACvC;;MAER;KACH,CAAC;EACV;EAEA;;;;EAIA8B,eAAeA,CAACV,KAAoC;IAChD,QAAQA,KAAK,CAACW,IAAI;MACd,KAAK,QAAQ;QACT,IAAI,CAACC,aAAa,CAACZ,KAAK,CAAC;QACzB;MACJ,KAAK,UAAU;QACX,IAAI,CAACa,aAAa,CAACb,KAAK,CAAC;QACzB;;EAEZ;EAEA;;;EAGAc,WAAWA,CAAA;IACP,IAAI,CAAC1C,OAAO,CACPgC,IAAI,CAACtC,+DAAa,EAAE;MAAEiD,UAAU,EAAE;IAAc,CAAE,CAAC,CACnDC,iBAAiB,CAACC,kBAAkB,CACpCvK,SAAS,CAAC;MACPC,IAAI,EAAEA,CAAA,KAAK;QACP,IAAI,CAAClB,KAAK,CAACyL,OAAO,CAAC,2BAA2B,CAAC;QAC/C,IAAI,CAACtB,KAAK,CAACC,OAAO,CAAC,IAAI,CAACjB,cAAc,CAAC;MAC3C;KACH,CAAC;EACV;EAEA;;;;EAIAgC,aAAaA,CAACZ,KAAK;IACf,IAAI,CAAC5B,OAAO,CACPgC,IAAI,CAACtC,+DAAa,EAAE;MAAEvI,IAAI,EAAEyK,KAAK,CAACmB,MAAM,CAAC5L,IAAI;MAAEwL,UAAU,EAAE,WAAW;MAAEK,SAAS,EAAE;IAAK,CAAE,CAAC,CAC3FJ,iBAAiB,CAACK,mBAAmB,CACrC3K,SAAS,CAAC;MACPC,IAAI,EAAEA,CAAA,KAAK;QACP,IAAI,CAAClB,KAAK,CAACyL,OAAO,CAAC,4BAA4B,CAAC;QAChD,IAAI,CAACtB,KAAK,CAACC,OAAO,CAAC,IAAI,CAACjB,cAAc,CAAC;MAC3C;KACH,CAAC;EACV;EAEA;;;;EAIAiC,aAAaA,CAACb,KAAK;IACf,IAAI,CAAC7B,OAAO,CAACiC,IAAI,CAAC;MACdjK,KAAK,EAAE,oBAAoB,GAAG6J,KAAK,CAACmB,MAAM,CAAC5L,IAAI,CAACN,KAAK;MACrDnB,OAAO,EAAE,4CAA4CkM,KAAK,CAACmB,MAAM,CAAC5L,IAAI,CAACN,KAAK,IAAI+K,KAAK,CAACmB,MAAM,CAAC5L,IAAI,CAAC+L,IAAI,mBAAmBtB,KAAK,CAACmB,MAAM,CAAC5L,IAAI,CAACgM,oBAAoB,IAAI;MACnKC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;QACLtD,OAAO,EAAE;UACLuD,IAAI,EAAE,IAAI;UACVC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;SACV;QACDC,MAAM,EAAE;UACJH,IAAI,EAAE,IAAI;UACVE,KAAK,EAAE;;;KAGlB,CAAC,CACDrB,WAAW,EAAE,CACb7J,SAAS,CAACoL,GAAG,IAAG;MACb,IAAIA,GAAG,KAAK,WAAW,EAAE;QACrB,IAAI,CAACtM,gBAAgB,CAACqL,aAAa,CAACb,KAAK,CAACmB,MAAM,CAAC5L,IAAI,CAACwM,SAAS,CAAC,CAACrL,SAAS,CAAC;UACvEC,IAAI,EAAGmL,GAAG,IAAI;YACV;YACA,IAAI,CAACrM,KAAK,CAACyL,OAAO,CAAC,8BAA8B,CAAC;YAClD,IAAIY,GAAG,EAAE;cACL,IAAI,CAAClC,KAAK,CAACoC,WAAW,EAAE;;UAEhC,CAAC;UACDlH,KAAK,EAAGA,KAAK,IAAI;YACb;YACAmH,OAAO,CAACnH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;YAC7C,IAAI,CAACrF,KAAK,CAACsF,OAAO,CAAC,8DAA8D,CAAC;UACtF;SACH,CAAC;;IAEV,CAAC,CAAC;EACN;EAEAmH,WAAWA,CAAA;IACP,IAAI,CAAC7D,cAAc,CAAC8D,WAAW,EAAE;IACjC,IAAI,CAAC/D,OAAO,CAACgE,QAAQ,EAAE;EAC3B;;AAtLSlE,iBAAiB;mBAAjBA,iBAAiB,EAAA/K,gEAAA,CAAAqI,sEAAA,GAAArI,gEAAA,CAAAuI,gFAAA,GAAAvI,gEAAA,CAAAyI,8EAAA,GAAAzI,gEAAA,CAAAmP,gEAAA,GAAAnP,gEAAA,CAAAqP,kFAAA,GAAArP,gEAAA,CAAAuP,kFAAA,GAAAvP,gEAAA,CAAAyP,oDAAA,GAAAzP,gEAAA,CAAA2P,iGAAA;AAAA;AAAjB5E,iBAAiB;QAAjBA,iBAAiB;EAAApC,SAAA;EAAAkH,SAAA,WAAAC,wBAAAzG,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAoDfuB,8GAAsB;;;;;;;;;;;;;;;;;;MC5ErC5K,6DAAA,aAA4C;MAK5BA,yDAAA,mBAAA+P,mDAAA;QAAA,OAASzG,GAAA,CAAAqE,WAAA,EAAa;MAAA,EAAC;MACvB3N,6DAAA,kBAA6B;MAAAA,qDAAA,UAAG;MAAAA,2DAAA,EAAW;MAIvDA,6DAAA,aAA4B;MAQpBA,yDAAA,6BAAAgQ,yEAAAxJ,MAAA;QAAA,OAAmB8C,GAAA,CAAAiE,eAAA,CAAA/G,MAAA,CAAuB;MAAA,EAAC;MAG/CxG,2DAAA,EAAqB;;;MAT6DA,wDAAA,GAAe;MAAfA,yDAAA,gBAAe,iBAAAsJ,GAAA,CAAAgC,OAAA,wCAAAhC,GAAA,CAAAiC,aAAA,cAAAjC,GAAA,CAAA0C,GAAA,eAAA1C,GAAA,CAAAkC,eAAA,qFAAAlC,GAAA,CAAAoC,WAAA,iBAAApC,GAAA,CAAAwC,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXjD;AAEN;AAKQ;AACM;AAE1B;;;;;;;;;;;;;;;ICa1B9L,4DAAA,iBACkG;IADhEA,wDAAA,mBAAAkQ,+DAAA;MAAAlQ,2DAAA,CAAAmQ,GAAA;MAAA,MAAAC,MAAA,GAAApQ,2DAAA;MAAA,OAASA,yDAAA,CAAAoQ,MAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAEvDrQ,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAS1BA,4DAAA,qBACkC;IAAAA,oDAAA,GAAwB;IAAAA,0DAAA,EAAa;;;;IAAnEA,wDAAA,UAAAsQ,WAAA,CAAAC,UAAA,CAA6B;IAACvQ,uDAAA,GAAwB;IAAxBA,+DAAA,CAAAsQ,WAAA,CAAAvP,WAAA,CAAwB;;;;;IAS1Df,4DAAA,qBAAoG;IAAAA,oDAAA,GACpG;IAAAA,0DAAA,EAAa;;;;IADkDA,wDAAA,UAAAwQ,sBAAA,CAAAC,MAAA,CAAoC;IAACzQ,uDAAA,GACpG;IADoGA,gEAAA,KAAAwQ,sBAAA,CAAAE,IAAA,MACpG;;;;;IASA1Q,4DAAA,qBAAgG;IAAAA,oDAAA,GAChG;IAAAA,0DAAA,EAAa;;;;IADgDA,wDAAA,UAAA2Q,oBAAA,CAAAF,MAAA,CAAkC;IAACzQ,uDAAA,GAChG;IADgGA,gEAAA,KAAA2Q,oBAAA,CAAAD,IAAA,MAChG;;;AD3ChB,MASa5F,mBAAmB;EAS9B3I,YAAwCC,IAAS,EAAU+I,YAA6B,EAAUyF,QAAkB,EAAUvO,gBAAiC;IAAvH,KAAAD,IAAI,GAAJA,IAAI;IAAe,KAAA+I,YAAY,GAAZA,YAAY;IAA2B,KAAAyF,QAAQ,GAARA,QAAQ;IAAoB,KAAAvO,gBAAgB,GAAhBA,gBAAgB;IAN9I,KAAAwO,cAAc,GAAgB,EAAE;IAChC,KAAAC,cAAc,GAAe,EAAE;IAC/B,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,yBAAyB,GAAe,EAAE,CAAC,CAAC;EAGuH;;EAEnK/N,QAAQA,CAAA;IACN,IAAI,CAACgO,WAAW,GAAG,IAAIhS,qDAAS,CAAC;MAC/B2M,iBAAiB,EAAE,IAAI5M,uDAAW,CAAE,EAAG,CAAC;MACxC6M,cAAc,EAAE,IAAI7M,uDAAW,CAAE,EAAG,CAAC;MACrCqO,mBAAmB,EAAE,IAAIrO,uDAAW,CAAE,CAAC,CAAE,CAAC;MAC1CsO,iBAAiB,EAAE,IAAItO,uDAAW,CAAE,CAAC,CAAE,CAAC;MACxC2M,QAAQ,EAAE,IAAI3M,uDAAW,CAAE,CAAC,CAAE;KAC/B,CAAC;IACF,IAAI,CAACkS,YAAY,EAAE;IACnB,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACF,WAAW,CAACG,UAAU,CAAC,IAAI,CAAChP,IAAI,CAACoD,MAAM,CAAC;EAE/C;EAEA6L,YAAYA,CAAA;IACV,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACrB1F,iBAAiB,EAAE,EAAE;MACrBC,cAAc,EAAE,EAAE;MAClBwB,mBAAmB,EAAE,CAAC,CAAC;MACvBC,iBAAiB,EAAE,CAAC,CAAC;MACrB3B,QAAQ,EAAE,CAAC;KACZ,CAAC;EACJ;EAEAzD,WAAWA,CAAC9F,IAAA,GAAY,IAAI;IAC1B,IAAIA,IAAI,EAAE;MACRA,IAAI,CAACwJ,iBAAiB,GAAG,IAAI,CAACgF,QAAQ,CAACW,SAAS,CAAC,IAAI,CAACN,WAAW,CAAC1M,GAAG,CAAC,mBAAmB,CAAC,CAACE,KAAK,EAAE,YAAY,CAAC;MAC/GrC,IAAI,CAACyJ,cAAc,GAAG,IAAI,CAAC+E,QAAQ,CAACW,SAAS,CAAC,IAAI,CAACN,WAAW,CAAC1M,GAAG,CAAC,gBAAgB,CAAC,CAACE,KAAK,EAAE,YAAY,CAAC;;IAE3G,IAAI,CAAC0G,YAAY,CAAChD,KAAK,CAAC/F,IAAI,CAAC;EAC/B;EAEA;;;EAGAiO,aAAaA,CAAA;IACX,IAAI,CAACY,WAAW,CAAC1M,GAAG,CAAC,mBAAmB,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;IACtD,IAAI,CAAC6J,WAAW,CAAC1M,GAAG,CAAC,gBAAgB,CAAC,CAAC6C,QAAQ,CAAC,EAAE,CAAC;EACrD;EAEA;;;EAGM+J,WAAWA,CAAA;IAAA,IAAAtN,KAAA;IAAA,OAAAC,qIAAA;MACf,MAAM0N,QAAQ,SAASnS,oDAAc,CAACwE,KAAI,CAACxB,gBAAgB,CAAC8O,WAAW,EAAE,CAAC;MAC1EtN,KAAI,CAACiN,cAAc,GAAGU,QAAQ,CAACpN,IAAI;IAAC;EACtC;EAEA;;;EAGM8M,YAAYA,CAAA;IAAA,IAAAvL,MAAA;IAAA,OAAA7B,qIAAA;MAChB,MAAM2N,QAAQ,SAASpS,oDAAc,CAACsG,MAAI,CAACtD,gBAAgB,CAAC6O,YAAY,CAAC,IAAI,CAAC,CAAC;MAC/EvL,MAAI,CAACkL,cAAc,GAAGY,QAAQ,CAACrN,IAAI;IAAC;EACtC;;AAjEW0G,mBAAmB;mBAAnBA,mBAAmB,EAAA9K,+DAAA,CASV,WAAW,GAAAA,+DAAA,CAAAqI,kFAAA,GAAArI,+DAAA,CAAAuI,qDAAA,GAAAvI,+DAAA,CAAAyI,sEAAA;AAAA;AATpBqC,mBAAmB;QAAnBA,mBAAmB;EAAAnC,SAAA;EAAAC,QAAA,GAAA5I,gEAAA,CALnB,CACT;IAAE8I,OAAO,EAAEjJ,oEAAgB;IAAEkJ,QAAQ,EAAEhJ,0EAAeA;EAAA,CAAE,CACzD;EAAAiJ,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAwI,6BAAAtI,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCnBHrJ,4DAAA,aACmC;MAEgBA,oDAAA,cAAO;MAAAA,0DAAA,EAAO;MACzDA,4DAAA,UAAK;MACyCA,wDAAA,mBAAA4R,qDAAA;QAAA,OAAStI,GAAA,CAAA+H,YAAA,EAAc;MAAA,EAAC;MAC9DrR,4DAAA,kBAA6B;MAAAA,oDAAA,cAAO;MAAAA,0DAAA,EAAW;MAEnDA,4DAAA,gBAAgD;MAAxBA,wDAAA,mBAAA6R,qDAAA;QAAA,OAASvI,GAAA,CAAApB,WAAA,EAAa;MAAA,EAAC;MAC3ClI,4DAAA,kBAA6B;MAAAA,oDAAA,aAAK;MAAAA,0DAAA,EAAW;MAIzDA,4DAAA,eAAkF;MAGzBA,oDAAA,uBAAe;MAAAA,0DAAA,EAAO;MAC3EA,4DAAA,yBAA4F;MAEpFA,uDAAA,iBAA4E;MAEhFA,0DAAA,EAAuB;MACvBA,uDAAA,iCAA4E;MAE5EA,wDAAA,KAAA8R,sCAAA,qBAGS;MACb9R,0DAAA,EAAiB;MAGjBA,4DAAA,eAAqD;MAAAA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAO;MACpEA,4DAAA,yBAA4F;MAE3DA,oDAAA,aAAK;MAAAA,0DAAA,EAAa;MAC3CA,wDAAA,KAAA+R,0CAAA,yBACuE;MAC3E/R,0DAAA,EAAa;MAIjBA,4DAAA,eAAqD;MAAAA,oDAAA,2BAAmB;MAAAA,0DAAA,EAAO;MAC/EA,4DAAA,yBAA4F;MAE3DA,oDAAA,aAAK;MAAAA,0DAAA,EAAa;MAC3CA,wDAAA,KAAAgS,0CAAA,yBACa;MACjBhS,0DAAA,EAAa;MAIjBA,4DAAA,eAAqD;MAAAA,oDAAA,yBAAiB;MAAAA,0DAAA,EAAO;MAC7EA,4DAAA,yBAA4F;MAE3DA,oDAAA,aAAK;MAAAA,0DAAA,EAAa;MAC3CA,wDAAA,KAAAiS,0CAAA,yBACa;MACjBjS,0DAAA,EAAa;MAGrBA,4DAAA,eAA+D;MAEvDA,wDAAA,mBAAAkS,sDAAA;QAAA,OAAS5I,GAAA,CAAA+H,YAAA,EAAc;MAAA,EAAC;MACxBrR,4DAAA,gBAAsC;MAAAA,oDAAA,eAAO;MAAAA,0DAAA,EAAO;MAExDA,4DAAA,kBACqD;MAAjDA,wDAAA,mBAAAmS,sDAAA;QAAA,OAAS7I,GAAA,CAAApB,WAAA,CAAYoB,GAAA,CAAA2H,WAAA,CAAAmB,WAAA,EAAyB,CAAC;MAAA,EAAC;MAChDpS,4DAAA,gBAAmC;MAAAA,oDAAA,eAAO;MAAAA,0DAAA,EAAO;;;;MAlEzDA,wDAAA,+BAA8B;MAY0BA,uDAAA,IAAyB;MAAzBA,wDAAA,cAAAsJ,GAAA,CAAA2H,WAAA,CAAyB;MAKnDjR,uDAAA,GAAsB;MAAtBA,wDAAA,gBAAAqS,GAAA,CAAsB;MAIPrS,uDAAA,GAAc;MAAdA,wDAAA,QAAAqS,GAAA,CAAc;MAG9CrS,uDAAA,GAA2F;MAA3FA,wDAAA,SAAAsJ,GAAA,CAAA2H,WAAA,CAAA1M,GAAA,sBAAAE,KAAA,IAAA6E,GAAA,CAAA2H,WAAA,CAAA1M,GAAA,mBAAAE,KAAA,CAA2F;MAShFzE,uDAAA,GAAY;MAAZA,wDAAA,aAAY;MACSA,uDAAA,GAAiB;MAAjBA,wDAAA,YAAAsJ,GAAA,CAAAuH,cAAA,CAAiB;MAStC7Q,uDAAA,GAAY;MAAZA,wDAAA,aAAY;MACoBA,uDAAA,GAAiB;MAAjBA,wDAAA,YAAAsJ,GAAA,CAAAwH,cAAA,CAAiB;MASjD9Q,uDAAA,GAAY;MAAZA,wDAAA,aAAY;MACkBA,uDAAA,GAAiB;MAAjBA,wDAAA,YAAAsJ,GAAA,CAAAwH,cAAA,CAAiB;;;;;;eDnC7Db,4DAAcA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBoD;AAGM;AAE+C;AACjD;AAC1B;AACG;AAEG;AAEa;;;;;;;;;;;;;;;;;;;ICFzEjQ,4DAAA,qBAMC;IACDA,oDAAA,GACA;IAAAA,0DAAA,EAAa;;;;IANTA,wDAAA,SAAAK,MAAA,CAAAC,YAAA,CAAAC,IAAA,CAA0B,qCAAAF,MAAA,CAAAG,SAAA;IAK9BR,uDAAA,GACA;IADAA,gEAAA,MAAAK,MAAA,CAAAC,YAAA,CAAAK,OAAA,MACA;;;;;IAiBoBX,4DAAA,qBAAmG;IAC/FA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAF0DA,wDAAA,UAAAsS,qBAAA,CAA2B;IAC9FtS,uDAAA,GACJ;IADIA,gEAAA,MAAAsS,qBAAA,CAAA5B,IAAA,MACJ;;;;;;IAEJ1Q,4DAAA,iBAC8C;IADZA,wDAAA,mBAAAuS,yDAAA;MAAAvS,2DAAA,CAAAwS,IAAA;MAAA,MAAAC,OAAA,GAAAzS,2DAAA;MAAA,OAASA,yDAAA,CAAAyS,OAAA,CAAAlR,gBAAA,CAAiB,iBAAiB,CAAC;IAAA,EAAC;IAE3EvB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAO1BA,4DAAA,qBAAkF;IAC9EA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAFkDA,wDAAA,UAAA0S,YAAA,CAAkB;IAC7E1S,uDAAA,GACJ;IADIA,gEAAA,MAAA0S,YAAA,CAAA3R,WAAA,MACJ;;;;;;IAEJf,4DAAA,iBAC2E;IADzCA,wDAAA,mBAAA2S,yDAAA;MAAA3S,2DAAA,CAAA4S,IAAA;MAAA,MAAAC,OAAA,GAAA7S,2DAAA;MAAA,OAASA,yDAAA,CAAA6S,OAAA,CAAAtR,gBAAA,CAAiB,kBAAkB,CAAC;IAAA,EAAC;IAE5EvB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAkB9BA,4DAAA,aAAsC;IAClCA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAK;;;;;IACjBA,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAA8S,uBAAA,CAAAC,oBAAA,MACJ;;;;;IAGA/S,4DAAA,aAAsC;IAClCA,oDAAA,sBAAc;IAAAA,0DAAA,EAAK;;;;;IACvBA,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAgT,uBAAA,CAAAlS,cAAA,MACJ;;;;;IAGAd,4DAAA,aAAsC;IAAAA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;;;;;IAC3DA,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAiT,uBAAA,CAAAtR,cAAA,MACJ;;;;;IAGA3B,4DAAA,aAAsC;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;;;;;IACnDA,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAkT,uBAAA,CAAA/L,QAAA,MACJ;;;;;IAGAnH,4DAAA,aAAsC;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAK;;;;;IAChDA,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAmT,uBAAA,CAAAC,aAAA,SAAAD,uBAAA,CAAAE,WAAA,MACJ;;;;;;IAGArT,4DAAA,aAAsC;IACoBA,wDAAA,mBAAAsT,qDAAA;MAAAtT,2DAAA,CAAAuT,IAAA;MAAA,MAAAC,OAAA,GAAAxT,2DAAA;MAAA,OAASA,yDAAA,CAAAwT,OAAA,CAAAC,aAAA,EAAe;IAAA,EAAC;IAC3EzT,4DAAA,eAAU;IAAAA,oDAAA,UAAG;IAAAA,0DAAA,EAAW;;;;;;IAEhCA,4DAAA,aAA0C;IACdA,wDAAA,mBAAA0T,qDAAA;MAAA,MAAAC,WAAA,GAAA3T,2DAAA,CAAA4T,IAAA;MAAA,MAAAC,cAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAA/T,2DAAA;MAAA,OAASA,yDAAA,CAAA+T,OAAA,CAAAC,gBAAA,CAAAH,cAAA,CAA4B;IAAA,EAAC;IAC1D7T,4DAAA,mBAAuB;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAW;;;;;IAIpDA,uDAAA,aAAiE;;;;;IACjEA,uDAAA,aAAwD;;;;;;;;ADjGxE,MAMa2K,aAAa;EAuBtBxI,YACoCC,IAAS,EACjCC,gBAAiC,EACjCuO,QAAkB,EAClBtO,KAAsB,EACvBC,SAAsC,EACrC0I,OAAkB;IALM,KAAA7I,IAAI,GAAJA,IAAI;IAC5B,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAuO,QAAQ,GAARA,QAAQ;IACR,KAAAtO,KAAK,GAALA,KAAK;IACN,KAAAC,SAAS,GAATA,SAAS;IACR,KAAA0I,OAAO,GAAPA,OAAO;IA5BnB,KAAAzI,OAAO,GAAG,CAAC,UAAU,EAAE,eAAe,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC;IAKxF,KAAAyR,QAAQ,GAAe,EAAE;IACzB,KAAAtR,SAAS,GAAgB,EAAE;IAC3B,KAAAuR,YAAY,GAAU,EAAE;IACxB,KAAAtR,MAAM,GAAU,EAAE;IAClB,KAAAuR,WAAW,GAAW,EAAE;IAMjB,KAAArR,UAAU,GAA4B,IAAIhD,uEAAkB,EAAE;IACrE,KAAAU,SAAS,GAAG,KAAK;IAET,KAAAuC,eAAe,GAAiB,IAAI5D,yCAAO,EAAO;IACzC,KAAA2O,kBAAkB,GAAuB,IAAItD,uDAAY,EAAQ;IACjE,KAAA0D,mBAAmB,GAAuB,IAAI1D,uDAAY,EAAQ;IAU/E,IAAI,CAAC4J,OAAO,GAAG,IAAI,CAAChS,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI;IAC3C,IAAI,CAACY,KAAK,GAAG,IAAI,CAACoR,OAAO,EAAExF,SAAS,GAAG,kBAAkB,IAAI,CAACwF,OAAO,CAACtS,KAAK,MAAM,IAAI,CAACsS,OAAO,CAACjG,IAAI,EAAE,GAAG,eAAe;IACtH;IACA,IAAI,CAACkG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpD;IACA,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;IACA,IAAI,CAACC,OAAO,GAAG,IAAIC,IAAI,EAAE;EAC7B;EAEA3R,QAAQA,CAAA;IACJ,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAAC2R,KAAK,EAAE;IACZ,IAAI,CAACxR,cAAc,EAAE;EACzB;EAEA;EACAA,cAAcA,CAAA;IACV,IAAI,CAACf,KAAK,CAACgB,UAAU,CAACC,SAAS,CAAC;MAC9BC,IAAI,EAAGC,MAAoB,IAAI;QAC7B,IAAI,CAACjD,SAAS,GAAG,IAAI;QACrB,IAAI,CAACF,YAAY,GAAG;UAClB,GAAGmD,MAAM;UACTC,UAAU,EAAE;SACb;QACD,IAAIC,IAAI,GAAG,CAAC;QACZhE,2CAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CACbiE,IAAI,CACHxE,+CAAQ,CAAC,MAAK;UACZ,IAAI,CAACoB,SAAS,GAAG,KAAK;UACtB,IAAI,CAACF,YAAY,GAAG,IAAI;QAC1B,CAAC,CAAC,EACFb,gDAAS,CAAC,MAAMkE,IAAI,GAAG,CAAC,CAAC,EACzBnE,gDAAS,CAAC,IAAI,CAACuD,eAAe,CAAC,EAC/BrD,0CAAG,CAAC,MAAOiE,IAAI,IAAI,CAAE,CAAC,CACvB,CACAJ,SAAS,EAAE;MAChB;KACD,CAAC;EACN;EAEAL,OAAOA,CAAA;IACH,MAAM,CAAC4R,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAI,CAACZ,OAAO,GAAG,IAAI,CAACA,OAAO,CAACtS,KAAK,CAACmT,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;IAE5E,IAAI,IAAI,CAACb,OAAO,EAAE;MACdnQ,OAAO,CAACiR,GAAG,CAAC,CAAC,IAAI,CAAC9R,SAAS,EAAE,EAAE,IAAI,CAAC+R,QAAQ,CAAC,IAAI,CAACf,OAAO,CAACxF,SAAS,CAAC,CAAC,CAAC,CAACwG,IAAI,CAAC,CAAC,CAACxS,MAAM,EAAEyS,KAAK,CAAC,KAAI;QAC5F,IAAI,CAACzS,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACsR,YAAY,GAAGmB,KAAK,CAAC/V,GAAG,CAACgW,CAAC,IAAG;UAC9B,IAAIxP,KAAK,GAAG,IAAI,CAAClD,MAAM,CAACqC,IAAI,CAACsQ,CAAC,IAAIA,CAAC,CAACzN,OAAO,KAAKwN,CAAC,CAACxN,OAAO,CAAC;UAC1D,OAAO;YACH3C,UAAU,EAAEmQ,CAAC,CAACnQ,UAAU;YACxBgC,QAAQ,EAAEmO,CAAC,CAACnO,QAAQ;YACpB1F,cAAc,EAAE6T,CAAC,CAAC7T,cAAc;YAChCsR,oBAAoB,EAAEuC,CAAC,CAACvC,oBAAoB;YAC5CpR,cAAc,EAAE2T,CAAC,CAAC3T,cAAc;YAChCb,cAAc,EAAEwU,CAAC,CAACE,uBAAuB;YACzCnP,KAAK,EAAEiP,CAAC,CAACG,qBAAqB;YAC9B3N,OAAO,EAAEwN,CAAC,CAACxN,OAAO,GAAGhC,KAAK,CAACgC,OAAO,GAAG,IAAI;YACzCuL,WAAW,EAAEvN,KAAK,GAAGA,KAAK,CAAChE,KAAK,GAAG,EAAE;YACrCsR,aAAa,EAAEtN,KAAK,GAAGA,KAAK,CAACjE,OAAO,GAAG;WAC1C;QACL,CAAC,CAAC;QAEF,IAAI,CAACiB,UAAU,GAAG,IAAIhD,uEAAkB,CAAC,IAAI,CAACoU,YAAY,CAAC;QAE3D,IAAI,IAAI,CAACA,YAAY,CAACpN,MAAM,IAAI,CAAC,EAAE;UAC/B,IAAI,CAACxC,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC8C,OAAO,EAAE;SAC9C,MAAM;UACH,IAAI,CAAC/C,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACkC,MAAM,EAAE;;MAElD,CAAC,CAAC;;IAGN,IAAI,CAACnC,IAAI,GAAG,IAAIrF,sDAAS,CAAC;MACtB6C,KAAK,EAAE,IAAI9C,wDAAW,CAAE,IAAI,CAACoV,OAAO,EAAEtS,KAAK,GAAG,IAAI,CAAC8O,QAAQ,CAACW,SAAS,CAAC,IAAIqD,IAAI,CAAC,GAAGG,GAAG,IAAID,GAAG,IAAIE,IAAI,EAAE,CAAC,EAAE,YAAY,CAAC,GAAG,IAAI,CAACpE,QAAQ,CAACW,SAAS,CAAC,IAAIqD,IAAI,EAAE,EAAE,YAAY,CAAC,EAAG,CAAC1V,gEAAmB,CAAC,CAAC;MACnMiP,IAAI,EAAE,IAAInP,wDAAW,CAAE,IAAI,CAACoV,OAAO,EAAEjG,IAAI,GAAG,IAAI,CAACiG,OAAO,CAACjG,IAAI,GAAG,IAAI,CAACyC,QAAQ,CAACW,SAAS,CAAC,IAAIqD,IAAI,EAAE,EAAE,OAAO,CAAC,EAAG1V,gEAAmB,CAAC;MACnIwW,eAAe,EAAE,IAAI1W,wDAAW,CAAE,IAAI,CAACoV,OAAO,GAAG,IAAI,CAACA,OAAO,CAACuB,oBAAoB,GAAG,EAAE,EAAGzW,gEAAmB,CAAC;MAC9G8E,gBAAgB,EAAE,IAAIhF,wDAAW,CAAE,IAAI,CAACoV,OAAO,GAAG,IAAI,CAACA,OAAO,CAAChG,oBAAoB,GAAG,EAAE,EAAGlP,gEAAmB,CAAC;MAC/G0W,aAAa,EAAE,IAAI5W,wDAAW,CAAE,IAAI,CAACoV,OAAO,GAAG,IAAI,CAACA,OAAO,CAACwB,aAAa,GAAG,EAAE,EAAG,CAAC1W,iEAAoB,CAAC,IAAI,CAACiV,WAAW,CAAC,CAAC;KAC5H,CAAC;EACN;EAEA;;;EAGA2B,iBAAiBA,CAAA;IACb,MAAMF,aAAa,GAAG,IAAI,CAACtR,IAAI,CAACC,GAAG,CAAC,eAAe,CAAC,CAACE,KAAK;IAC1D,OAAOmR,aAAa,GAAGA,aAAa,CAAC9O,MAAM,GAAG,CAAC;EACnD;EAEA;;;EAGAiP,yBAAyBA,CAAA;IACrB,OAAO,IAAI,CAACD,iBAAiB,EAAE,IAAI,IAAI,CAAC3B,WAAW;EACvD;EAEA;;;;;EAKAU,KAAKA,CAAA;IACD,IAAI,IAAI,CAACT,OAAO,EAAE4B,SAAS,EAAE;MACzB,IAAI,CAAC7E,WAAW,CAAC,IAAI,CAAC;KACzB,MAAM;MACH,IAAI,CAACA,WAAW,EAAE;;IAGtB,IAAI,IAAI,CAACiD,OAAO,EAAExF,SAAS,EAAE;MACzB,IAAI,CAACsC,YAAY,CAAC,IAAI,CAAC;KAC1B,MAAM;MACH,IAAI,CAACA,YAAY,EAAE;;EAE3B;EAEMC,WAAWA,CAAC8E,MAAO;IAAA,IAAApS,KAAA;IAAA,OAAAC,qIAAA;MACrB,MAAM0N,QAAQ,SAASnS,qDAAc,CAACwE,KAAI,CAACxB,gBAAgB,CAAC8O,WAAW,CAAC8E,MAAM,CAAC,CAAC;MAChF,IAAIhS,OAAO;QAAA,IAAAC,IAAA,GAAAJ,qIAAA,CAAC,WAAOK,OAAO,EAAI;UAC1BN,KAAI,CAACoQ,QAAQ,GAAGzC,QAAQ,CAACpN,IAAI;UAC7BP,KAAI,CAACqS,gBAAgB,GAAGrS,KAAI,CAACS,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAACC,YAAY,CAACZ,IAAI,CACtErE,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAAEmF,KAAK,IAAKZ,KAAI,CAACsS,eAAe,CAAC1R,KAAK,CAAC,CAAC,CAC9C;UAEDN,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC;QAAA,iBAAAQ,EAAA;UAAA,OAAAT,IAAA,CAAAU,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEQsR,eAAeA,CAACC,OAAiB;IACrC,MAAM/Q,WAAW,GAAG+Q,OAAO,CAAC9Q,QAAQ,EAAE,CAACC,WAAW,EAAE;IACpD,OAAO,IAAI,CAAC0O,QAAQ,CAACzO,MAAM,CAAC4Q,OAAO,IAAIA,OAAO,CAAC1F,IAAI,CAACnL,WAAW,EAAE,CAACE,QAAQ,CAACJ,WAAW,CAAC,IAAI+Q,OAAO,CAAC3F,MAAM,KAAK,IAAI,CAAC4D,IAAI,CAACgC,EAAE,CAAC;EAC/H;EAEAC,cAAcA,CAACL,MAAM;IACjB,IAAIA,MAAM,CAACvF,IAAI,EAAE;MACb,OAAOuF,MAAM,CAACvF,IAAI;;IAEtB,IAAIuF,MAAM,CAACG,OAAO,EAAE;MAChB,OAAOH,MAAM,CAACG,OAAO;;IAEzB,OAAOH,MAAM;EACjB;EAEM/E,YAAYA,CAAC+E,MAAO;IAAA,IAAAtQ,MAAA;IAAA,OAAA7B,qIAAA;MACtB,MAAMyS,SAAS,SAASlX,qDAAc,CAACsG,MAAI,CAACtD,gBAAgB,CAAC6O,YAAY,CAAC+E,MAAM,CAAC,CAAC;MAClF,IAAIhS,OAAO;QAAA,IAAAiC,KAAA,GAAApC,qIAAA,CAAC,WAAOK,OAAO,EAAI;UAC1BwB,MAAI,CAAChD,SAAS,GAAG4T,SAAS,CAACnS,IAAI;UAC/BuB,MAAI,CAAC6Q,iBAAiB,GAAG7Q,MAAI,CAACrB,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACC,YAAY,CAACZ,IAAI,CACxErE,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAAEmF,KAAK,IAAKkB,MAAI,CAAC8Q,gBAAgB,CAAChS,KAAK,CAAC,CAAC,CAC/C;UAEDN,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC;QAAA,iBAAAmC,GAAA;UAAA,OAAAJ,KAAA,CAAAtB,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEQ4R,gBAAgBA,CAAC9K,QAAmB;IACxC,MAAMtG,WAAW,GAAGsG,QAAQ,CAACrG,QAAQ,EAAE,CAACC,WAAW,EAAE;IACrD,OAAO,IAAI,CAAC5C,SAAS,CAAC6C,MAAM,CAACmG,QAAQ,IAAIA,QAAQ,CAAC5K,WAAW,CAACwE,WAAW,EAAE,CAACE,QAAQ,CAACJ,WAAW,CAAC,CAAC;EACtG;EAEAqR,eAAeA,CAACT,MAAM;IAClB,IAAIA,MAAM,CAAClV,WAAW,EAAE;MACpB,OAAOkV,MAAM,CAAClV,WAAW;;IAE7B,IAAIkV,MAAM,CAACtK,QAAQ,EAAE;MACjB,OAAOsK,MAAM,CAACtK,QAAQ;;IAE1B,OAAOsK,MAAM;EACjB;EAEA;;;;;EAKM7S,SAASA,CAAA;IAAA,IAAA6C,MAAA;IAAA,OAAAnC,qIAAA;MACX,OAAO,IAAIG,OAAO;QAAA,IAAA0S,KAAA,GAAA7S,qIAAA,CAAC,WAAOK,OAAO,EAAI;UACjC,MAAMyS,MAAM,SAASvX,qDAAc,CAAC4G,MAAI,CAAC5D,gBAAgB,CAACe,SAAS,EAAE,CAAC;UACtE6C,MAAI,CAACrD,MAAM,GAAGgU,MAAM,CAACxS,IAAI;UACzBD,OAAO,CAAC8B,MAAI,CAACrD,MAAM,CAAC;QACxB,CAAC;QAAA,iBAAAiU,GAAA;UAAA,OAAAF,KAAA,CAAA/R,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEA;;;;;EAKMsQ,QAAQA,CAACvG,SAAS;IAAA,IAAAkI,MAAA;IAAA,OAAAhT,qIAAA;MACpB,OAAO,IAAIG,OAAO;QAAA,IAAA8S,KAAA,GAAAjT,qIAAA,CAAC,WAAOK,OAAO,EAAI;UACjC,MAAMkR,KAAK,SAAShW,qDAAc,CAACyX,MAAI,CAACzU,gBAAgB,CAAC8S,QAAQ,CAACvG,SAAS,CAAC,CAAC;UAC7EkI,MAAI,CAAC5C,YAAY,GAAGmB,KAAK,CAACjR,IAAI;UAC9BD,OAAO,CAAC2S,MAAI,CAAC5C,YAAY,CAAC;QAC9B,CAAC;QAAA,iBAAA8C,GAAA;UAAA,OAAAD,KAAA,CAAAnS,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEA;;;;;;EAMA4O,aAAaA,CAAA;IACT,IAAI,IAAI,CAACnP,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACE,KAAK,IAAI,EAAE,EAAE;MAE/C,IAAIwS,sBAAsB,GAAG,IAAI,CAAC3S,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAAC8L,UAAU;MAC/E,IAAI,OAAO,IAAI,CAACjM,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACE,KAAK,IAAI,QAAQ,EAAE;QAAE;QAC9D,IAAIyS,CAAC,GAAG,IAAI,CAACvU,SAAS,CAACsC,IAAI,CAACiS,CAAC,IAAIA,CAAC,CAACnW,WAAW,KAAK,IAAI,CAACuD,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAAC;QAC3FwS,sBAAsB,GAAGC,CAAC,CAAC3G,UAAU;;MAEzC,IAAIxJ,SAAS,GAAG,IAAI,CAACqN,OAAO,GAAG,IAAI,GAAG,KAAK;MAE3C,IAAI,CAACnJ,OAAO,CACPgC,IAAI,CAAC/K,qFAAoB,EAAE;QACxB0L,UAAU,EAAE,cAAc;QAC1BxL,IAAI,EAAE;UACF4B,gBAAgB,EAAEiT,sBAAsB;UACxCpQ,WAAW,EAAE,IAAI,CAACqN,YAAY;UAC9BnN,SAAS,EAAEA;;OAElB,CAAC,CACDqG,WAAW,EAAE,CACb7J,SAAS,CAAC;QACPC,IAAI,EAAGmL,GAAG,IAAI;UACV,IAAIA,GAAG,EAAE;YACL,IAAI5G,mBAAmB,GAAG;cACtB5C,UAAU,EAAEwJ,GAAG,CAACzJ,QAAQ,CAACC,UAAU;cACnCgC,QAAQ,EAAEwH,GAAG,CAACxH,QAAQ;cACtB1F,cAAc,EAAEkN,GAAG,CAAC3G,aAAa;cACjC+K,oBAAoB,EAAEpE,GAAG,CAACzJ,QAAQ,CAACnE,WAAW;cAC9CY,cAAc,EAAEgN,GAAG,CAAC1G,wBAAwB;cAC5CnH,cAAc,EAAE6N,GAAG,CAACzJ,QAAQ,CAACpE,cAAc;cAC3CuF,KAAK,EAAEsI,GAAG,CAACtI,KAAK;cAChByB,OAAO,EAAE6G,GAAG,CAAC7I,KAAK,CAACgC,OAAO,GAAG6G,GAAG,CAAC7I,KAAK,CAACgC,OAAO,GAAG,IAAI;cACrDuL,WAAW,EAAE1E,GAAG,CAAC7I,KAAK,GAAG6I,GAAG,CAAC7I,KAAK,CAAChE,KAAK,GAAG,EAAE;cAC7CsR,aAAa,EAAEzE,GAAG,CAAC7I,KAAK,GAAG6I,GAAG,CAAC7I,KAAK,CAACjE,OAAO,GAAG;aAClD;YACD,IAAI,CAACqS,YAAY,GAAG,CAAC,GAAG,IAAI,CAACA,YAAY,EAAEnM,mBAAmB,CAAC;YAC/D,IAAI,CAACjF,UAAU,GAAG,IAAIhD,uEAAkB,CAAC,IAAI,CAACoU,YAAY,CAAC,CAAC,CAAC;YAE7D;YACA,IAAI,IAAI,CAACA,YAAY,CAACpN,MAAM,IAAI,CAAC,EAAE;cAC/B,IAAI,CAACxC,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC8C,OAAO,EAAE;;YAG/C,IAAI,CAAC/E,KAAK,CAACyL,OAAO,CAAC,4BAA4B,CAAC;;QAExD;OACH,CAAC;KACT,MAAM;MACH,IAAI,CAACzL,KAAK,CAACsF,OAAO,CAAC,kCAAkC,CAAC;;EAE9D;EAGA;;;;;;EAMAoM,gBAAgBA,CAACjM,mBAAmB;IAChC,IAAI,CAACmM,YAAY,CAACpP,OAAO,CAAEqS,GAAG,IAAI;MAC9B,IAAIA,GAAG,CAAChS,UAAU,IAAI4C,mBAAmB,CAAC5C,UAAU,IAAIgS,GAAG,CAAC1V,cAAc,IAAIsG,mBAAmB,CAACtG,cAAc,EAAE;QAC9G0V,GAAG,CAAC9Q,KAAK,GAAG,GAAGa,MAAM,CAACiQ,GAAG,CAAC9Q,KAAK,CAAC,GAAG8Q,GAAG,CAAChQ,QAAQ,EAAE;;MACpD;IACL,CAAC,CAAC;IAEF,IAAI,CAAC+M,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC1O,MAAM,CAAET,IAAI,IAAI;MAAG,OAAOA,IAAI,KAAKgD,mBAAmB;IAAC,CAAC,CAAC;IAC/F,IAAI,CAACjF,UAAU,GAAG,IAAIhD,uEAAkB,CAAC,IAAI,CAACoU,YAAY,CAAC;IAE3D;IACA,IAAI,IAAI,CAACA,YAAY,CAACpN,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACxC,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACkC,MAAM,EAAE;;IAG9C,IAAI,CAACnE,KAAK,CAACyL,OAAO,CAAC,8BAA8B,CAAC;EACtD;EAEA;;;EAGAxM,gBAAgBA,CAAC6V,KAAK;IAClB,IAAI,CAAC9S,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC,CAAChQ,QAAQ,CAAC,EAAE,CAAC;EACrC;EAEAK,QAAQA,CAAA;IACJ;IACA,IAAI,CAAC,IAAI,CAACsO,yBAAyB,EAAE,EAAE;MACnC,OAAO,IAAI,CAACzT,KAAK,CAACqF,KAAK,CAAC,6CAA6C,IAAI,CAACwM,WAAW,cAAc,CAAC;;IAGxG,IAAI,CAAC,IAAI,CAAC7P,IAAI,CAACoD,KAAK,EAAE;MAClB,OAAO,IAAI,CAACpF,KAAK,CAACqF,KAAK,CAAC,6BAA6B,CAAC;KACzD,MAAM;MACH;MACA,IAAI,CAAC,IAAI,CAACyM,OAAO,IAAK,IAAI,CAACA,OAAO,IAAI,IAAI,CAAC9P,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAACE,KAAK,KAAK,IAAI,CAAC2P,OAAO,CAACuB,oBAAqB,EAAE;QACjH,MAAM0B,mBAAmB,GAAG,IAAI,CAAC/S,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAACE,KAAK;QAClE,MAAM6S,gBAAgB,GAAG,IAAI,CAACrD,QAAQ,CAAChP,IAAI,CAACmR,OAAO,IAAIA,OAAO,CAAC3F,MAAM,KAAK4G,mBAAmB,CAAC5G,MAAM,CAAC;QACrG,IAAI,CAAC6G,gBAAgB,EAAE;UACnB,OAAO,IAAI,CAAChV,KAAK,CAACqF,KAAK,CAAC,wFAAwF,CAAC;;;MAIzH,IAAId,WAAW,GAAG,IAAI,CAACqN,YAAY,CAAC5U,GAAG,CAACiY,MAAM,KAAK;QAC/CpS,UAAU,EAAEoS,MAAM,CAACpS,UAAU;QAC7BgC,QAAQ,EAAEoQ,MAAM,CAACpQ,QAAQ;QACzB1F,cAAc,EAAE8V,MAAM,CAAC9V,cAAc;QACrCqG,OAAO,EAAEyP,MAAM,CAACzP;OACnB,CAAC,CAAC;MAEH,IAAIjB,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;QAC1B,OAAO,IAAI,CAACxE,KAAK,CAACsF,OAAO,CAAC,iDAAiD,CAAC;;MAGhF,MAAM9F,KAAK,GAAG,IAAI,CAACwC,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAACE,KAAK;MAC1C,MAAM0J,IAAI,GAAG,IAAI,CAAC7J,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC,CAACE,KAAK;MAExC;MACA,MAAM+S,gBAAgB,GAAG,IAAI,CAAC5G,QAAQ,CAACW,SAAS,CAACzP,KAAK,EAAE,YAAY,CAAC;MAErE;MACA,MAAM2V,UAAU,GAAG,GAAGD,gBAAgB,IAAIrJ,IAAI,EAAE;MAEhD,MAAMuJ,OAAO,GAAG;QACZtD,OAAO,EAAE;UACL4B,SAAS,EAAE,IAAI,CAAC3B,IAAI,CAACgC,EAAE;UACvBoB,UAAU,EAAEA,UAAU;UACtBlH,UAAU,EAAE,IAAI,CAACjM,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAACE,KAAK,CAAC8L,UAAU;UAC9DmF,eAAe,EAAE,IAAI,CAACpR,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAACE,KAAK,CAACgM,MAAM;UAC9DmF,aAAa,EAAE,IAAI,CAACtR,IAAI,CAACC,GAAG,CAAC,eAAe,CAAC,CAACE;SACjD;QACDoC,WAAW,EAAEA;OAChB;MAED,IAAI,IAAI,CAACuN,OAAO,EAAExF,SAAS,EAAE;QACzB,IAAI,CAACvM,gBAAgB,CAACoL,aAAa,CAACiK,OAAO,EAAE,IAAI,CAACtD,OAAO,CAACxF,SAAS,CAAC,CAC/DrL,SAAS,CAAC;UACPC,IAAI,EAAGpB,IAAI,IAAI;YACX,IAAIA,IAAI,EAAE;cACN,IAAI,CAAC8L,mBAAmB,CAACyJ,IAAI,EAAE;cAC/B,IAAI,CAACpV,SAAS,CAAC4F,KAAK,CAAC/F,IAAI,CAAC;;UAElC;SACH,CAAC;OACT,MAAM;QACH,IAAI,CAACC,gBAAgB,CAACsL,WAAW,CAAC+J,OAAO,CAAC,CACrCnU,SAAS,CAAC;UACPC,IAAI,EAAGpB,IAAI,IAAI;YACX,IAAIA,IAAI,EAAE;cACN,IAAI,CAAC0L,kBAAkB,CAAC6J,IAAI,EAAE;cAC9B,IAAI,CAACpV,SAAS,CAAC4F,KAAK,CAAC/F,IAAI,CAAC;;UAElC;SACH,CAAC;;;EAGlB;EACA8F,WAAWA,CAAA;IACP,IAAI,CAAC3F,SAAS,CAAC4F,KAAK,CAAC,KAAK,CAAC;EAC/B;;AAzYSwC,aAAa;mBAAbA,aAAa,EAAA3K,+DAAA,CAwBVJ,sEAAe,GAAAI,+DAAA,CAAAqI,sEAAA,GAAArI,+DAAA,CAAAuI,sDAAA,GAAAvI,+DAAA,CAAAyI,iFAAA,GAAAzI,+DAAA,CAAAmP,mEAAA,GAAAnP,+DAAA,CAAAmP,gEAAA;AAAA;AAxBlBxE,aAAa;QAAbA,aAAa;EAAAhC,SAAA;EAAAiP,OAAA;IAAA9J,kBAAA;IAAAI,mBAAA;EAAA;EAAAtF,QAAA,GAAA5I,gEAAA,CAFX,CAAC;IAAE8I,OAAO,EAAEjJ,qEAAgB;IAAEkJ,QAAQ,EAAEhJ,0EAAeA;EAAA,CAAE,CAAC;EAAAiJ,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA0O,uBAAAxO,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCtBzErJ,4DAAA,aAA6L;MAE1IA,oDAAA,GAAS;MAAAA,0DAAA,EAAO;MAC3DA,4DAAA,UAAK;MACuBA,wDAAA,mBAAA8X,+CAAA;QAAA,OAASxO,GAAA,CAAApB,WAAA,EAAa;MAAA,EAAC;MAC3ClI,4DAAA,kBAA6B;MAAAA,oDAAA,YAAK;MAAAA,0DAAA,EAAW;MAKzDA,wDAAA,IAAA+X,mCAAA,wBAQa;MACb/X,4DAAA,cAA2E;MAI3DA,uDAAA,iBAAuH;MAG3HA,0DAAA,EAAiB;MACjBA,4DAAA,yBAAmD;MACpCA,oDAAA,YAAI;MAAAA,0DAAA,EAAY;MAC3BA,uDAAA,iBAAqD;MACzDA,0DAAA,EAAiB;MACjBA,4DAAA,0BAAmD;MACpCA,oDAAA,uBAAe;MAAAA,0DAAA,EAAY;MACtCA,uDAAA,iBAAqF;MACrFA,4DAAA,gCAA6F;MACzFA,wDAAA,KAAAgY,oCAAA,yBAEa;;MACjBhY,0DAAA,EAAmB;MACnBA,wDAAA,KAAAiY,gCAAA,qBAGS;MACbjY,0DAAA,EAAiB;MACjBA,4DAAA,0BAAmD;MACpCA,oDAAA,qBAAQ;MAAAA,0DAAA,EAAY;MAC/BA,uDAAA,iBAAuF;MACvFA,4DAAA,gCAA+F;MAC3FA,wDAAA,KAAAkY,oCAAA,yBAEa;;MACjBlY,0DAAA,EAAmB;MACnBA,wDAAA,KAAAmY,gCAAA,qBAGS;MACbnY,0DAAA,EAAiB;MAErBA,4DAAA,WAAK;MAEcA,oDAAA,qBAAa;MAAAA,0DAAA,EAAY;MACpCA,uDAAA,oBAAkF;MAClFA,4DAAA,eAA+E;MAC3EA,oDAAA,IACJ;MAAAA,0DAAA,EAAM;MAKlBA,4DAAA,eAAiG;MAEzFA,qEAAA,QAAsC;MAClCA,wDAAA,KAAAqY,4BAAA,iBACiB;MACjBrY,wDAAA,KAAAsY,4BAAA,iBAEK;MACTtY,mEAAA,EAAe;MACfA,qEAAA,QAA2C;MACvCA,wDAAA,KAAAwY,4BAAA,iBACuB;MACvBxY,wDAAA,KAAAyY,4BAAA,iBAEK;MACTzY,mEAAA,EAAe;MACfA,qEAAA,QAA0C;MACtCA,wDAAA,KAAA0Y,4BAAA,iBAA2D;MAC3D1Y,wDAAA,KAAA2Y,4BAAA,iBAEK;MACT3Y,mEAAA,EAAe;MACfA,qEAAA,QAAsC;MAClCA,wDAAA,KAAA4Y,4BAAA,iBAAmD;MACnD5Y,wDAAA,KAAA6Y,4BAAA,iBAEK;MACT7Y,mEAAA,EAAe;MACfA,qEAAA,QAAmC;MAC/BA,wDAAA,KAAA8Y,4BAAA,iBAAgD;MAChD9Y,wDAAA,KAAA+Y,4BAAA,iBAEK;MACT/Y,mEAAA,EAAe;MACfA,qEAAA,QAAsC;MAClCA,wDAAA,KAAAgZ,4BAAA,iBAGkB;MAClBhZ,wDAAA,KAAAiZ,4BAAA,iBAIK;MACTjZ,mEAAA,EAAe;MACfA,wDAAA,KAAAkZ,4BAAA,iBAAiE;MACjElZ,wDAAA,KAAAmZ,4BAAA,iBAAwD;MAC5DnZ,0DAAA,EAAQ;MAGhBA,4DAAA,eAAwD;MAE2BA,wDAAA,mBAAAoZ,gDAAA;QAAA,OAAS9P,GAAA,CAAA7B,QAAA,EAAU;MAAA,EAAC;MAC/FzH,oDAAA,iBACJ;MAAAA,0DAAA,EAAS;;;;;;MAzHkCA,uDAAA,GAAS;MAATA,+DAAA,CAAAsJ,GAAA,CAAAtG,KAAA,CAAS;MAYnDhD,uDAAA,GAAe;MAAfA,wDAAA,SAAAsJ,GAAA,CAAA9I,SAAA,CAAe;MAKoCR,uDAAA,GAAkB;MAAlBA,wDAAA,cAAAsJ,GAAA,CAAAhF,IAAA,CAAkB;MAI1CtE,uDAAA,GAAwB;MAAxBA,wDAAA,kBAAAmK,GAAA,CAAwB,QAAAb,GAAA,CAAAoL,OAAA,SAAApL,GAAA,CAAAqL,OAAA;MACP3U,uDAAA,GAAc;MAAdA,wDAAA,QAAAmK,GAAA,CAAc;MASenK,uDAAA,IAAsB;MAAtBA,wDAAA,oBAAAqZ,GAAA,CAAsB;MACtBrZ,uDAAA,GAA8B;MAA9BA,wDAAA,gBAAAsJ,GAAA,CAAAgN,cAAA,CAA8B;MAC9CtW,uDAAA,GAA2B;MAA3BA,wDAAA,YAAAA,yDAAA,SAAAsJ,GAAA,CAAA4M,gBAAA,EAA2B;MAKpElW,uDAAA,GAAuC;MAAvCA,wDAAA,SAAAsJ,GAAA,CAAAhF,IAAA,CAAAC,GAAA,oBAAAE,KAAA,CAAuC;MAMmBzE,uDAAA,GAAuB;MAAvBA,wDAAA,oBAAAqK,GAAA,CAAuB;MACvBrK,uDAAA,GAA+B;MAA/BA,wDAAA,gBAAAsJ,GAAA,CAAAoN,eAAA,CAA+B;MACzD1W,uDAAA,GAA4B;MAA5BA,wDAAA,YAAAA,yDAAA,SAAAsJ,GAAA,CAAAkN,iBAAA,EAA4B;MAK5DxW,uDAAA,GAAoE;MAApEA,wDAAA,SAAAsJ,GAAA,CAAAhF,IAAA,CAAAC,GAAA,qBAAAE,KAAA,IAAA6E,GAAA,CAAA4K,YAAA,CAAApN,MAAA,MAAoE;MASpD9G,uDAAA,GAAyD;MAAzDA,wDAAA,YAAAA,6DAAA,KAAAuK,GAAA,GAAAjB,GAAA,CAAAyM,yBAAA,IAAyD;MAC1E/V,uDAAA,GACJ;MADIA,gEAAA,MAAAsJ,GAAA,CAAAwM,iBAAA,SAAAxM,GAAA,CAAA6K,WAAA,MACJ;MAMSnU,uDAAA,GAAyB;MAAzBA,wDAAA,eAAAsJ,GAAA,CAAAxG,UAAA,CAAyB;MA4ClB9C,uDAAA,IAA0B;MAA1BA,wDAAA,oBAAAsJ,GAAA,CAAA9G,OAAA,CAA0B;MACbxC,uDAAA,GAAgB;MAAhBA,wDAAA,qBAAAsJ,GAAA,CAAA9G,OAAA,CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnHV;AACE;AAEG;AACH;AACE;AACA;AACO;AACb;AACI;AACG;AACY;AACjB;AACa;AACP;AACO;AACH;AACJ;AACU;AACR;AACR;AACuC;AACnC;AAC0B;AAClB;AACoB;;;AACvF,MAAMiY,MAAM,GAAW,CACnB;EACIC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE5P,6EAAiBA;CAC/B,CACJ;AACD,MAyBa6P,cAAc;AAAdA,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA;AAAc;AAAdA,cAAc;aAFZ,CAACtS,sEAAe,EAAEkH,kFAAe,EAAEhH,8EAAe,EAAEkJ,sDAAQ,CAAC;EAAAmJ,OAAA,GApBpErB,0DAAY,EACZD,mEAAqB,CAACkB,MAAM,CAAC,EAC7Bf,oEAAc,EACdC,sEAAe,EACfC,sEAAe,EACfC,6EAAkB,EAClBC,gEAAmB,EACnBC,oEAAc,EACdE,kEAAa,EACbD,sEAAkB,EAClBE,wEAAgB,EAChBC,kFAAqB,EACrBV,wEAAgB,EAChBW,0EAAiB,EACjBC,kEAAa,EACbC,wGAAmB,EACnBC,sEAAe,EACfC,8EAAmB,EAEbjB,0DAAY;AAAA;AAGC;;sHAAdqB,cAAc;IAAAG,YAAA,GAxBRhQ,6EAAiB,EAAEJ,0EAAa,EAAEG,8FAAmB,EAAE5I,gGAAoB;IAAA2Y,OAAA,GAEtFrB,0DAAY,EAAAnR,0DAAA,EAEZqR,oEAAc,EACdC,sEAAe,EACfC,sEAAe,EACfC,6EAAkB,EAClBC,gEAAmB,EACnBC,oEAAc,EACdE,kEAAa,EACbD,sEAAkB,EAClBE,wEAAgB,EAChBC,kFAAqB,EACrBV,wEAAgB,EAChBW,0EAAiB,EACjBC,kEAAa,EACbC,wGAAmB,EACnBC,sEAAe,EACfC,8EAAmB;IAAAQ,OAAA,GAEbzB,0DAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;ACpD6B;AACZ;;;;AAM3C,MACajR,eAAe;EACxBnG,YAAoB8Y,IAAgB,EAAUC,YAAyB;IAAnD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;EAAiB;EAC3E;;;;;EAKAvN,WAAWA,CAAC1B,QAAkB;IAC1B,OAAO,IAAI,CAACgP,IAAI,CAACE,IAAI,CAAW,GAAGtQ,gFAA0B,EAAE,EAAEoB,QAAQ,CAAC;EAC9E;EAEA;;;;;EAKAwB,aAAaA,CAACxB,QAAkB,EAAE2C,SAAiB;IAC/C,OAAO,IAAI,CAACqM,IAAI,CAACG,GAAG,CAAW,GAAGvQ,gFAA0B,EAAE,GAAG,GAAG,GAAG+D,SAAS,EAAE3C,QAAQ,CAAC;EAC/F;EAEA;;;;;EAKAyB,aAAaA,CAACkB,SAAiB;IAC3B,OAAO,IAAI,CAACqM,IAAI,CAACI,MAAM,CAAW,GAAGxQ,gFAA0B,EAAE,GAAG,GAAG,GAAG+D,SAAS,CAAC;EACxF;EAEAsC,YAAYA,CAAC+E,MAAO;IAChB,IAAIqF,CAAC,GAAG,GAAG;IACXA,CAAC,IAAI,CAACrF,MAAM,GAAG,kBAAkB,GAAG,EAAE;IACtC,IAAIsF,OAAO,GAAG,IAAIpc,yCAAO,EAAO;IAChC,IAAI,CAAC8b,IAAI,CAAC1W,GAAG,CAAa,GAAGsG,iFAA2B,GAAGyQ,CAAC,EAAE,CAAC,CAC1D/X,SAAS,CAAEiY,IAAS,IAAI;MACrB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK;MAC1CH,OAAO,CAAC/X,IAAI,CAAC;QACTY,IAAI,EAAEoX,IAAI,CAACG;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;EAEAzY,qBAAqBA,CAACwI,QAAgB;IAClC,IAAI2P,CAAC,GAAG,qBAAqB3P,QAAQ,EAAE;IACvC,IAAI4P,OAAO,GAAG,IAAIpc,yCAAO,EAAO;IAChC,IAAI,CAAC8b,IAAI,CAAC1W,GAAG,CAAa,GAAGsG,qGAA+C,GAAGyQ,CAAC,EAAE,CAAC,CAC9E/X,SAAS,CAAEiY,IAAS,IAAI;MACrB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK;MAC1CH,OAAO,CAAC/X,IAAI,CAAC;QACTY,IAAI,EAAEoX,IAAI,CAACG;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;EAEA5V,4BAA4BA,CAACb,UAAU;IACnC,IAAImW,CAAC,GAAG,uBAAuBnW,UAAU,EAAE;IAC3CmW,CAAC,IAAI,YAAY;IACjB,IAAIC,OAAO,GAAG,IAAIpc,yCAAO,EAAO;IAChC,IAAI,CAAC8b,IAAI,CAAC1W,GAAG,CAAa,GAAGsG,+FAAyC,GAAGyQ,CAAC,EAAE,CAAC,CAC5E/X,SAAS,CAAEiY,IAAS,IAAI;MACjB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK;MAC1CH,OAAO,CAAC/X,IAAI,CAAC;QACTY,IAAI,EAAEoX,IAAI,CAACG;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;EAEAzG,QAAQA,CAACvG,SAAkB;IACvB,IAAI0M,CAAC,GAAG,sBAAsB1M,SAAS,EAAE;IACzC,IAAI2M,OAAO,GAAG,IAAIpc,yCAAO,EAAO;IAChC,IAAI,CAAC8b,IAAI,CAAC1W,GAAG,CAAa,GAAGsG,8FAAwC,GAAGyQ,CAAC,EAAE,CAAC,CAC3E/X,SAAS,CAAEiY,IAAS,IAAI;MACjB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK;MAC1CH,OAAO,CAAC/X,IAAI,CAAC;QACTY,IAAI,EAAEoX,IAAI,CAACG;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;EAEAxY,SAASA,CAAA;IACL,IAAImY,OAAO,GAAG,IAAIpc,yCAAO,EAAO;IAChC,IAAI,CAAC8b,IAAI,CAAC1W,GAAG,CAAa,GAAGsG,2FAAqC,EAAE,CAAC,CAChEtH,SAAS,CAAEiY,IAAS,IAAI;MACrBD,OAAO,CAAC/X,IAAI,CAAC;QACTY,IAAI,EAAEoX,IAAI,CAACG;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;EAEAzK,WAAWA,CAAC8E,MAAO;IACf,IAAIqF,CAAC,GAAG,WAAW;IACnBA,CAAC,IAAI,CAACrF,MAAM,GAAG,kBAAkB,GAAG,EAAE;IACtC,IAAIsF,OAAO,GAAG,IAAIpc,yCAAO,EAAO;IAChC,IAAI,CAAC8b,IAAI,CAAC1W,GAAG,CAAa,GAAGsG,qFAA+B,GAAGyQ,CAAC,EAAE,CAAC,CAC9D/X,SAAS,CAAEiY,IAAS,IAAI;MACrB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK;MAC1CH,OAAO,CAAC/X,IAAI,CAAC;QACTY,IAAI,EAAEoX,IAAI,CAACG;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;;AA1GStT,eAAe;mBAAfA,eAAe,EAAAtI,sDAAA,CAAAqI,4DAAA,GAAArI,sDAAA,CAAAuI,gEAAA;AAAA;AAAfD,eAAe;SAAfA,eAAe;EAAAgU,OAAA,EAAfhU,eAAe,CAAAiU;AAAA","sources":["./src/app/modules/stock/entregas/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/entregas/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/entregas/components/entregas.component.ts","./src/app/modules/stock/entregas/components/entregas.component.html","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/entregas/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/entregas/components/save/save.component.ts","./src/app/modules/stock/entregas/components/save/save.component.html","./src/app/modules/stock/entregas/entregas.module.ts","./src/app/modules/stock/entregas/service/entregas.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-entregas',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    ventas: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    filteredVentas: Observable<any>;\r\n    articulos_list = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n\r\n    ) {\r\n        this.title = 'Añadir entrega de articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getArticulosDepositos();\r\n        this.getVentas();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosDepositos() {\r\n        const articulos_um_deposito = await firstValueFrom(this._entregasService.getArticulosDepositos(this.data.deposito_entrega)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista las ventas.\r\n    */\r\n    async getVentas() {\r\n        const ventas = await firstValueFrom(this._entregasService.getVentas());\r\n        this.ventas = ventas.list;\r\n        this.filteredVentas = this.form.get('venta').valueChanges.pipe(\r\n            startWith(''),\r\n            map((value) => this._filterVentas(value)),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar las ventas según el input que se haya ingresado en el buscador de ventas.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterVentas(value: string): any[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.ventas.filter(venta => {\r\n            const cliente = venta.cliente.toString().toLowerCase().includes(filterValue);\r\n            const fecha = venta.fecha.toString().toLowerCase().includes(filterValue);\r\n            return cliente || fecha;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos el cliente y fecha de dicha venta seleccionada.\r\n     * @param venta \r\n     * @returns \r\n    */\r\n    getTextVenta(venta: any): string {\r\n        return venta ? `${venta.cliente} - ${venta.fecha}` : '';\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo.\r\n     * @param idarticulo \r\n     */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo).map(a => {\r\n                return {\r\n                    idarticulo: a.idarticulo,\r\n                    idunidadmedida: a.idunidadmedida,\r\n                    descripcion_um: a.um,\r\n                    stock: a.stock\r\n                }\r\n            });\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.data.esEdicion === false) { //Sí existe minimo un movimiento y es una crecion...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form.get('stock_existente').setValue(stock) //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n        }\r\n        this.form.get('venta').setValue('');\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl(('')),\r\n            venta: new FormControl((''), Validators.required),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > articulo.stock) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value && movimiento.idventa === this.form.get('venta').value.idventa);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('unidadmedida').setValue('');\r\n                        this.form.get('venta').setValue('');\r\n                        this.form.get('stock_existente').setValue('');\r\n                        return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida asociado a esa venta.');\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= articulo.stock && this.form.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form.get('articulo').value,\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            stock: `${Number(articulo.stock) - this.form.get('cantidad').value}`,\r\n                            cantidad: this.form.get('cantidad').value,\r\n                            venta: this.form.get('venta').value,\r\n                        }\r\n                        \r\n                        this.onCloseMenu(movimiento_articulo)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n        <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div>\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                        [value]=\"um.idunidadmedida\">{{um.descripcion_um}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>En stock</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Venta</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"venta\" [matAutocomplete]=\"vn\">\r\n                    <mat-autocomplete autoActiveFirstOption #vn=\"matAutocomplete\" [displayWith]=\"getTextVenta\">\r\n                        <mat-option  [value]=\"{cliente: '', fecha: '', idventa: null}\">\r\n                            -\r\n                        </mat-option>\r\n                        <mat-option *ngFor=\"let venta of filteredVentas | async\" [value]=\"venta\">\r\n                            {{ venta.cliente }} - {{ venta.fecha }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('venta')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('venta').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Añadir\r\n        </button>\r\n    </div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IEntrega } from '../models/entrega';\r\nimport { EntregasService } from '../service/entregas.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-entregas',\r\n    templateUrl: './entregas.component.html',\r\n    styleUrls: ['./entregas.component.scss']\r\n})\r\nexport class EntregasComponent implements OnInit, OnDestroy {\r\n    entregas: IEntrega[];\r\n    public dataSource: MatTableDataSource<IEntrega> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Observaciones', 'Deposito', 'Usuario Encargado', 'Acciones'];\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'observaciones', 'descripcion_deposito', 'nick_usuario_entrega', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'nick_usuario_entrega'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.entregas + '?sort=-fecha_hora';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n\r\n    constructor(\r\n        private _entregasService: EntregasService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != -1 ? \"filter[idusuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n                        this.extraParams += this.filter.usuario_encargado != -1 ? \"filter[usuario_entrega]=\" + this.filter.usuario_encargado + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateEntrega(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteEntrega(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveEntrega() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateEntrega(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Entrega editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteEntrega(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Entrega: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar la entrega realizada el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n        .afterClosed()\r\n        .subscribe(res => {\r\n            if (res === 'confirmed') {\r\n                this._entregasService.deleteEntrega(event.params.data.identrega).subscribe({\r\n                    next: (res) => {\r\n                        // Manejar la respuesta exitosa\r\n                        this.alert.success(\"Entrega eliminada con éxito.\");\r\n                        if (res) {\r\n                            this.tabla.renderTabla()\r\n                        }\r\n                    },\r\n                    error: (error) => {\r\n                        // Manejar el error\r\n                        console.error('Error en el servicio:', error);\r\n                        this.alert.warning(\"Esta entrega no puede eliminarse. Tiene elementos asociados.\");\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Entrega'\r\n                (click)=\"saveEntrega()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-entregas',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: IUsuario[] = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IEntrega[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _entregasService: EntregasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl((-1)),\r\n      usuario_encargado: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario_responsable: -1,\r\n      usuario_encargado: -1,\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._entregasService.getUsuarios());\r\n    this.filterUsuarios = Usuarios.list;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._entregasService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario_responsable\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario_responsable of filterUsuarios\" [value]=\"usuario_responsable.codigo\">{{usuario_responsable.nick}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Encargado -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario Encargado</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario_encargado\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario_encargado of filterUsuarios\" [value]=\"usuario_encargado.codigo\">{{usuario_encargado.nick}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IEntrega } from '../../models/entrega';\r\nimport { EntregasService } from '../../service/entregas.service';\r\nimport { FormControl, FormGroup, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { FuseAlertType } from '@fuse/components/alert';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-save-entregas',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'unidadmedida', 'cantidad', 'venta', 'acciones'];\r\n    form: FormGroup;\r\n    entrega: IEntrega;\r\n    title: string;\r\n    user: any;\r\n    usuarios: IUsuario[] = [];\r\n    depositos: IDeposito[] = [];\r\n    mov_art_list: any[] = [];\r\n    ventas: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredUsuarios: Observable<IUsuario[]>;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasService: EntregasService,\r\n        private datePipe: DatePipe,\r\n        private alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.entrega = this.data ? this.data : null;\r\n        this.title = this.entrega?.identrega ? `Editar Entrega ${this.entrega.fecha} - ${this.entrega.hora}` : `Nueva Entrega`;\r\n        /* this`user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.entrega ? this.entrega.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.entrega) {\r\n            Promise.all([this.getVentas(), this.getItems(this.entrega.identrega)]).then(([ventas, items]) => {\r\n                this.ventas = ventas;\r\n                this.mov_art_list = items.map(m => {\r\n                    let venta = this.ventas.find(v => v.idventa === m.idventa);\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: m.cantidad,\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        stock: m.stock_minimo_articulo,\r\n                        idventa: m.idventa ? venta.idventa : null,\r\n                        fecha_venta: venta ? venta.fecha : '',\r\n                        cliente_venta: venta ? venta.cliente : ''\r\n                    }\r\n                });\r\n        \r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n    \r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_entrega').disable();\r\n                } else {\r\n                    this.form.get('deposito_entrega').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.entrega?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.entrega?.hora ? this.entrega.hora : this.datePipe.transform(new Date(), 'HH:mm')), Validators.required),\r\n            usuario_entrega: new FormControl((this.entrega ? this.entrega.nick_usuario_entrega : ''), Validators.required),\r\n            deposito_entrega: new FormControl((this.entrega ? this.entrega.descripcion_deposito : ''), Validators.required),\r\n            observaciones: new FormControl((this.entrega ? this.entrega.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.entrega?.idusuario) {\r\n            this.getUsuarios(true);\r\n        } else {\r\n            this.getUsuarios();\r\n        }\r\n\r\n        if (this.entrega?.identrega) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    async getUsuarios(option?) {\r\n        const Usuarios = await firstValueFrom(this._entregasService.getUsuarios(option));\r\n        new Promise(async (resolve) => {\r\n            this.usuarios = Usuarios.list;\r\n            this.filteredUsuarios = this.form.get('usuario_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterUsuarios(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterUsuarios(usuario: IUsuario): IUsuario[] {\r\n        const filterValue = usuario.toString().toLowerCase();\r\n        return this.usuarios.filter(usuario => usuario.nick.toLowerCase().includes(filterValue) && usuario.codigo !== this.user.id);\r\n    }\r\n\r\n    getTextUsuario(option) {\r\n        if (option.nick) {\r\n            return option.nick;\r\n        }\r\n        if (option.usuario) {\r\n            return option.usuario;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._entregasService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param idventa \r\n     * @returns \r\n     */\r\n    async getVentas(): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const Ventas = await firstValueFrom(this._entregasService.getVentas());\r\n            this.ventas = Ventas.list;\r\n            resolve(this.ventas);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Listamos los movimientos asociados a este registro\r\n     * @param identrega \r\n     * @returns \r\n     */\r\n    async getItems(identrega): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._entregasService.getItems(identrega));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento() {\r\n        if (this.form.get('deposito_entrega').value != '') {\r\n\r\n            let deposito_entrega_value = this.form.get('deposito_entrega').value.iddeposito;\r\n            if (typeof this.form.get('deposito_entrega').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos.find(d => d.descripcion === this.form.get('deposito_entrega').value);\r\n                deposito_entrega_value = d.iddeposito;\r\n            }\r\n            let esEdicion = this.entrega ? true : false;\r\n\r\n            this.dialogo\r\n                .open(AddArticuloComponent, {\r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        deposito_entrega: deposito_entrega_value,\r\n                        movimientos: this.mov_art_list,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno: res.articulo.codigo_interno,\r\n                                stock: res.stock,    //Stock restante de ese articulo con esa um...\r\n                                idventa: res.venta.idventa ? res.venta.idventa : null,\r\n                                fecha_venta: res.venta ? res.venta.fecha : '',\r\n                                cliente_venta: res.venta ? res.venta.cliente : ''\r\n                            }\r\n                            this.mov_art_list = [...this.mov_art_list, movimiento_articulo];\r\n                            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n                            \r\n                            // Deshabilito el control Deposito\r\n                            if (this.mov_art_list.length != 0) {\r\n                                this.form.get('deposito_entrega').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\")\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        // Habilito el control Deposito si la lista de movimientos está vacía\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_entrega').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Verificar si el usuario entrega seleccionado está en la lista de usuarios\r\n            if (!this.entrega || (this.entrega && this.form.get('usuario_entrega').value !== this.entrega.nick_usuario_entrega)) {\r\n                const usuarioSeleccionado = this.form.get('usuario_entrega').value;\r\n                const usuarioExistente = this.usuarios.find(usuario => usuario.codigo === usuarioSeleccionado.codigo);\r\n                if (!usuarioExistente) {\r\n                    return this.alert.error('El usuario de entrega seleccionado no existe. Por favor, seleccione un usuario válido.');\r\n                }\r\n            }\r\n\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n                idventa: objeto.idventa\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo a la orden de entrega')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                entrega: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito_entrega').value.iddeposito,\r\n                    usuario_entrega: this.form.get('usuario_entrega').value.codigo,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.entrega?.identrega) {\r\n                this._entregasService.updateEntrega(payload, this.entrega.identrega)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._entregasService.saveEntrega(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"shadow-md mb-3\">\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/2\">\r\n                    <mat-label>Usuario Entrega</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"usuario_entrega\" [matAutocomplete]=\"ue\">\r\n                    <mat-autocomplete autoActiveFirstOption #ue=\"matAutocomplete\" [displayWith]=\"getTextUsuario\">\r\n                        <mat-option *ngFor=\"let usuario_encargado of filteredUsuarios | async\" [value]=\"usuario_encargado\">\r\n                            {{ usuario_encargado.nick }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('usuario_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('usuario_entrega').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_entrega\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_entrega')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_entrega').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                    <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                        {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <!-- Grilla -->\r\n        <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                <ng-container matColumnDef='articulo'>\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        Articulo</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{movimiento_articulo.descripcion_articulo}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='codigointerno'>\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        Codigo Interno</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{movimiento_articulo.codigo_interno}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='unidadmedida'>\r\n                    <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{ movimiento_articulo.descripcion_um }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='cantidad'>\r\n                    <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{ movimiento_articulo.cantidad}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='venta'>\r\n                    <th mat-header-cell *matHeaderCellDef>Venta</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{movimiento_articulo.cliente_venta}} - {{movimiento_articulo.fecha_venta}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='acciones'>\r\n                    <th mat-header-cell *matHeaderCellDef> <button mat-mini-fab color=\"primary\" aria-label=\"icon\"\r\n                            class=\"rounded-full\" matTooltip='Añadir Articulo' (click)=\"addMovimiento()\">\r\n                            <mat-icon>add</mat-icon>\r\n                        </button></th>\r\n                    <td mat-cell *matCellDef='let movimiento'>\r\n                        <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                            <mat-icon color=\"warn\">delete</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n            </table>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { EntregasComponent } from './components/entregas.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { EntregasService } from './service/entregas.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EntregasComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [EntregasComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [EntregasService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class EntregasModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IEntrega } from '../models/entrega';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class EntregasService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param entregas \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveEntrega(entregas: IEntrega): Observable<IEntrega> {\r\n        return this.http.post<IEntrega>(`${environment.stock.entregas}`, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param entregas\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateEntrega(entregas: IEntrega, identrega: number): Observable<IEntrega> {\r\n        return this.http.put<IEntrega>(`${environment.stock.entregas}` + '/' + identrega, entregas);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param identrega \r\n     * @returns Elimina un item\r\n     */\r\n    deleteEntrega(identrega: number): Observable<IEntrega> {\r\n        return this.http.delete<IEntrega>(`${environment.stock.entregas}` + '/' + identrega);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito: number) {\r\n        let f = `?filter[deposito]=${deposito}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n        .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(identrega?: number) {\r\n        let f = `?filter[identrega]=${identrega}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n        .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getVentas() {\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.ventas.view_venta_selects}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(option?) {\r\n        let f = `?sort=asc`;\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r8","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r11","idunidadmedida","ɵɵtextInterpolate","descripcion_um","venta_r12","cliente","fecha","AddArticuloComponent_button_44_Template_button_click_0_listener","_r14","ctx_r13","AddArticuloComponent","constructor","data","_entregasService","alert","dialogRef","columns","articulos","unidades_de_medida","depositos","ventas","articulos_list","dataSource","_unsubscribeAll","title","ngOnInit","newForm","getArticulosDepositos","getVentas","subscribeAlert","emitConfig","subscribe","next","config","appearance","time","pipe","_this","_asyncToGenerator","articulos_um_deposito","deposito_entrega","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","forEach","item","existeArticulo","find","articulo","idarticulo","push","filterValue","toString","toLowerCase","filter","includes","getTextArticulo","_this2","filteredVentas","_filterVentas","venta","getTextVenta","getUnidadesDeMedidaArticulos","_this3","_ref2","a","um","stock","_x2","seleccionArticulo","$event","enable","articulo_um","cantidad_existente","existeMovimiento","movimientos","length","esEdicion","articulos_existentes","ae","Number","cantidad","setValue","disable","required","unidadmedida","stock_existente","onSubmit","valid","error","warning","movimiento","idventa","movimiento_articulo","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","EntregasService","i2","AppAlertService","i3","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","ɵɵtemplate","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_Template_mat_select_ngModelChange_24_listener","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_mat_option_42_Template","AddArticuloComponent_button_44_Template","AddArticuloComponent_Template_button_click_46_listener","_r1","ɵɵpipeBind1","_r5","ɵɵpureFunction0","_c0","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","FilterMenuComponent","EntregasComponent","confirm","dialogo","_searchService","_menuService","router","_headerTextService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","deposito","filtroFechaInicio","filtroFechaFin","extraParams","parametrosActualizados","env","entregas","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","usuario_responsable","usuario_encargado","generarAcciones","name","updateEntrega","deleteEntrega","saveEntrega","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","hora","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","identrega","renderTabla","console","ngOnDestroy","unsubscribe","closeAll","FuseConfirmationService","i4","MatDialog","i5","SearchService","i6","JedsMenuService","i7","Router","i8","HeaderTextService","viewQuery","EntregasComponent_Query","EntregasComponent_Template_button_click_3_listener","EntregasComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r6","ctx_r5","limpiarFechas","deposito_r7","iddeposito","usuario_responsable_r8","codigo","nick","usuario_encargado_r9","datePipe","filterDeposito","filterUsuarios","filterFechas","movimientos_internos_list","formFilters","getDepositos","getUsuarios","patchValue","resetFilters","reset","transform","Usuarios","stk_list","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_mat_option_42_Template","FilterMenuComponent_Template_button_click_44_listener","FilterMenuComponent_Template_button_click_47_listener","getRawValue","_r0","usuario_encargado_r22","SaveComponent_button_29_Template_button_click_0_listener","_r24","ctx_r23","deposito_r25","SaveComponent_button_38_Template_button_click_0_listener","_r27","ctx_r26","movimiento_articulo_r28","descripcion_articulo","movimiento_articulo_r29","movimiento_articulo_r30","movimiento_articulo_r31","movimiento_articulo_r32","cliente_venta","fecha_venta","SaveComponent_th_64_Template_button_click_1_listener","_r34","ctx_r33","addMovimiento","SaveComponent_td_65_Template_button_click_1_listener","restoredCtx","_r38","movimiento_r35","$implicit","ctx_r37","deleteMovimiento","usuarios","mov_art_list","maxPalabras","entrega","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","dia","mes","anio","split","all","getItems","then","items","m","v","codigo_interno_articulo","stock_minimo_articulo","usuario_entrega","nick_usuario_entrega","observaciones","maxLength","getPalabrasLength","isPalabraMaxLengthReached","idusuario","option","filteredUsuarios","_filterUsuarios","usuario","id","getTextUsuario","Depositos","filteredDepositos","_filterDepositos","getTextDeposito","_ref3","Ventas","_x3","_this4","_ref4","_x4","deposito_entrega_value","d","mov","input","usuarioSeleccionado","usuarioExistente","objeto","fecha_formateada","fecha_hora","payload","emit","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_mat_option_36_Template","SaveComponent_button_38_Template","ɵɵelementContainerStart","SaveComponent_th_49_Template","SaveComponent_td_50_Template","ɵɵelementContainerEnd","SaveComponent_th_52_Template","SaveComponent_td_53_Template","SaveComponent_th_55_Template","SaveComponent_td_56_Template","SaveComponent_th_58_Template","SaveComponent_td_59_Template","SaveComponent_th_61_Template","SaveComponent_td_62_Template","SaveComponent_th_64_Template","SaveComponent_td_65_Template","SaveComponent_tr_66_Template","SaveComponent_tr_67_Template","SaveComponent_Template_button_click_69_listener","_r2","ɵɵpureFunction1","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","EntregasModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","f","subject","resp","accessToken","token","result","asObservable","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","view_venta_selects","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}