{"version":3,"file":"src_app_modules_stock_remitos_remitos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/remitos/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/remitos/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/remitos/components/remitos.component.ts","./src/app/modules/stock/remitos/components/remitos.component.html","./src/app/modules/stock/remitos/components/save/save.component.ts","./src/app/modules/stock/remitos/components/save/save.component.html","./src/app/modules/stock/remitos/remitos.module.ts","./src/app/modules/stock/remitos/service/remitos.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-remitos',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'unidadmedida', 'cantidad', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    articulos_list = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _remitosService: RemitosService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.title = 'Añadir movimiento de articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getArticulosOrdenCompra();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosOrdenCompra() {\r\n        const articulos_um_oc = await firstValueFrom(this._remitosService.getItemsOcPendiente(this.data.orden_compra)); //solicitamos los aticulos que esten en una OC\r\n        this.articulos = articulos_um_oc.list;\r\n        new Promise(async (resolve) => {\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        this.articulos.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = {\r\n                    idarticulo: item.idarticulo,\r\n                    codigo_interno: item.codigo_interno_articulo,\r\n                    descripcion: item.descripcion_articulo,\r\n                    idordencompraitem: item.iditemordencompra //Atencion!!! Cambio de nombres porque en sus respectibas tablas lo manejas de manera diferente!\r\n                };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextInput(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo.\r\n     * @param idarticulo \r\n     */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo).map(a => {\r\n                return {\r\n                    idarticulo: a.idarticulo,\r\n                    idunidadmedida: a.idunidadmedida,\r\n                    descripcion_um: a.descripcion_um,\r\n                    cantidad_pendiente: a.cantidad_pendiente\r\n                }\r\n            });\r\n\r\n            //Esta fraccion de codigo es para que no haya items repetidos en el input.\r\n            this.unidades_de_medida.forEach(um => {\r\n                let arreglo_auxiliar = [];\r\n                if (!arreglo_auxiliar.some(item => item.idunidadmedida === um.idunidadmedida)) {\r\n                    arreglo_auxiliar.push(um);\r\n                }\r\n                this.unidades_de_medida = arreglo_auxiliar;\r\n            })\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Cantidad Pendiente -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let cantidad_pendiente; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento) { //Sí existe minimo un movimiento...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente += Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                cantidad_pendiente = `${Number(articulo_um.cantidad_pendiente) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                cantidad_pendiente = articulo_um.cantidad_pendiente; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            \r\n            // if (existeMovimiento) { //Sí existe minimo un movimiento...\r\n            //     let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n            //     //Si existen movimientos de articulos con la misma UM...\r\n            //     articulos_existentes.forEach(ae => {\r\n            //         this.data.esEdicion ? cantidad_existente -= Number((ae.cantidad)) : cantidad_existente += Number((ae.cantidad)); //...sumamos la cantidad que equivalen\r\n            //     })\r\n            //     cantidad_pendiente = `${(Number(articulo_um.cantidad_pendiente) + cantidad_existente) - cantidad_existente}`; //...Se le asigna el stock restante... ((cantidad pendiente de entrega + cantidad que se entrego) - cantidad que se entrego)\r\n            // } else if (this.data.movimientos_eliminados.length > 0) {\r\n            //     console.log('first')\r\n            //     let articulos_eliminados = this.data.movimientos_eliminados.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida);\r\n            //     //Si existen movimientos eliminados de articulos con la misma UM...\r\n            //     articulos_eliminados.forEach(ae => {\r\n            //         cantidad_existente += Number((ae.cantidad)); //...sumamos la cantidad que equivalen\r\n            //     })\r\n            //     cantidad_pendiente = `${Number(articulo_um.cantidad_pendiente) + cantidad_existente}`; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            // } else {\r\n            //     cantidad_pendiente = articulo_um.cantidad_pendiente;\r\n            // }\r\n            \r\n            this.form.get('cantidad_pendiente').setValue(cantidad_pendiente) //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad_pendiente').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            cantidad_pendiente: new FormControl(('')),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > articulo.cantidad_pendiente) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('La cantidad ingresada excede la cantidad pendiente en la orden de compra.');\r\n                    }\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('unidadmedida').setValue('');\r\n                        return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida.')\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= articulo.cantidad_pendiente && this.form.get('cantidad').value > 0) {\r\n                        // La cantidad ingresada es valida \r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form.get('articulo').value,\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            cantidad: this.form.get('cantidad').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            cantidad_pendiente: `${Number(articulo.cantidad_pendiente) - this.form.get('cantidad').value}`,\r\n                        }\r\n                        this.onCloseMenu(movimiento_articulo)\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div>\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                        [value]=\"um.idunidadmedida\">{{um.descripcion_um}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Cantidad Pendiente</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad_pendiente\" readonly=\"true\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Añadir\r\n        </button>\r\n    </div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IRemito } from '../../models/remito';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-remitos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  filterUsuarios: IUsuario[] = [];\r\n  filterProveedor: IProveedor[] = [];\r\n  filterDeposito: IDeposito[] = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IRemito[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n\r\n\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _remitosService: RemitosService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl((-1)),\r\n      proveedor: new FormControl((-1)),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.getProveedores();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario_responsable: -1,\r\n      proveedor: -1,\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._remitosService.getUsuarios());\r\n    this.filterUsuarios = Usuarios.list;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n   */\r\n  async getProveedores() {\r\n    const Proveedores = await firstValueFrom(this._remitosService.getProveedores());\r\n    this.filterProveedor = Proveedores.list;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._remitosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"usuario_responsable\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let usuario_responsable of filterUsuarios\" [value]=\"usuario_responsable.codigo\">{{usuario_responsable.nick}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Proveedor -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Proveedor</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"proveedor\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let proveedor of filterProveedor\" [value]=\"proveedor.Codigo\">\r\n                    {{proveedor.RazonSocial}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>               \r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IRemito } from '../models/remito';\r\nimport { RemitosService } from '../service/remitos.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-remitos',\r\n    templateUrl: './remitos.component.html',\r\n    styleUrls: ['./remitos.component.scss']\r\n})\r\nexport class RemitosComponent implements OnInit, OnDestroy {\r\n    remitos: IRemito[];\r\n    public dataSource: MatTableDataSource<IRemito> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Deposito', 'Proveedor', 'Orden compra', 'Acciones'];\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'descripcion_deposito', 'descripcion_proveedor', 'nro_orden_compra', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'descripcion_proveedor'];\r\n    filter: IFilter = {\r\n        proveedor: -1,\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.remitos + '?sort=-idremito';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n\r\n    constructor(\r\n        private _remitoService: RemitosService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != -1 ? \"filter[idusuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n                        this.extraParams += this.filter.proveedor != -1 ? \"filter[idproveedor]=\" + this.filter.proveedor + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateRemito(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteRemito(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveRemito() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Remito creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateRemito(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Remito editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteRemito(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Remito: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el remito realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._remitoService.deleteRemito(event.params.data.idremito).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Remito eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este remito no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Remito'\r\n                (click)=\"saveRemito()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IRemito } from '../../models/remito';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\n\r\n@Component({\r\n    selector: 'app-save-remitos',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'unidadmedida', 'cantidad', 'acciones'];\r\n    form: FormGroup;\r\n    remito: IRemito;\r\n    title: string;\r\n    user: any;\r\n    proveedores: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    orden_compras: any[] = [];\r\n    oc_pendientes: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _remitosService: RemitosService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.remito = this.data ? this.data : null;\r\n        this.title = this.remito?.idremito ? `Editar Remito ${this.remito.fecha} - ${this.remito.hora}` : `Nuevo Remito`;\r\n        /* this`user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.getItemsOrdenDeCompraPendiente().then(() => {\r\n            this.getProveedores();\r\n        });\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.remito ? this.remito.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.remito) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.remito.idremito).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: m.cantidad,\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                // Verifica el estado de habilitacion o deshabilitacion del control OC y Deposito si contiene movimientos o no\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('oc_pendiente').disable();\r\n                    this.form.get('deposito').disable();\r\n                } else {\r\n                    this.form.get('oc_pendiente').enable();\r\n                    this.form.get('deposito').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.remito?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.remito?.hora ? this.remito.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            proveedor: new FormControl((this.remito ? this.remito.descripcion_proveedor : ''), [Validators.required]),\r\n            oc_pendiente: new FormControl((this.remito ? this.remito.idordencompra : ''), [Validators.required]),\r\n            deposito: new FormControl((this.remito ? this.remito.descripcion_deposito : ''), Validators.required),\r\n            observaciones: new FormControl((this.remito ? this.remito.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.remito?.idremito) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._remitosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    async getItemsOrdenDeCompraPendiente(object?: object) {\r\n        const OrdenesDeCompraPendiente = await firstValueFrom(this._remitosService.getItemsOcPendiente(object));\r\n        this.orden_compras = OrdenesDeCompraPendiente.list;\r\n        new Promise(async (resolve) => {\r\n            //Encapsulo solo las propiedades que quiero utilizar.\r\n            this.proveedores = OrdenesDeCompraPendiente.list.map(p => {\r\n                return {\r\n                    Codigo: p.idproveedor,\r\n                    RazonSocial: p.razon_social\r\n                }\r\n            });\r\n\r\n\r\n            //Encapsulo solo las propiedades que quiero utilizar.\r\n            this.oc_pendientes = OrdenesDeCompraPendiente.list.map(ocp => {\r\n                return {\r\n                    idordencompra: ocp.idordencompra,\r\n                    fecha_oc: ocp.fecha_oc,\r\n                    numero_oc: ocp.numero_oc,\r\n                    idproveedor: ocp.idproveedor\r\n                }\r\n            });\r\n\r\n            //Esta fraccion de codigo es para filtrar lo que se escriba en el input.\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion se encarga de que no haya datos repetidos en los [] que almacena los proveedores que tiene ordenes de compra pendientes.\r\n     */\r\n    async getProveedores() {\r\n        new Promise(async (resolve) => {\r\n            //Esta fraccion de codigo es para que no haya items repetidos en el input.\r\n            let arreglo_auxiliar = [];\r\n            this.proveedores.forEach(p => {\r\n                if (!arreglo_auxiliar.some(pe => pe.Codigo === p.Codigo)) {\r\n                    arreglo_auxiliar.push(p);\r\n                }\r\n                this.proveedores = arreglo_auxiliar;\r\n            });\r\n\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es la encargada de obtener los datos de las ordenes de compra\r\n     */\r\n    async getOrdenCompras(idproveedor: number) {\r\n        this.oc_pendientes = this.orden_compras.filter(oc => oc.idproveedor === idproveedor);\r\n\r\n        let arreglo_auxiliar = [];\r\n        this.oc_pendientes.forEach(ocp => {\r\n            if (!arreglo_auxiliar.some(oc => oc.idordencompra === ocp.idordencompra)) {\r\n                arreglo_auxiliar.push(ocp);\r\n            }\r\n            this.oc_pendientes = arreglo_auxiliar;\r\n        })\r\n    }\r\n\r\n    getTextInput(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        if (option.RazonSocial) {\r\n            return option.RazonSocial;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Esta funcion maneja las cambios de seleccion que puedan tener articulos, unidades de medida u ordenes de compra.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event) {\r\n        // Si se ha seleccionado un proveedor explícitamente, actualiza el campo del proveedor\r\n        if ($event.Codigo) {\r\n            this.getOrdenCompras($event.Codigo); // Buscamos las OC que posee ese proveedor.\r\n            // Actualizamos el campo del proveedor\r\n            this.form.get('proveedor').setValue($event);\r\n            // Habilitamos el campo de OC\r\n            this.form.get('oc_pendiente').enable();\r\n        }\r\n    \r\n        // Si se ha seleccionado una OC, actualiza el campo de OC pendiente\r\n        if ($event.oc) {\r\n            let oc = this.oc_pendientes.find(prov => prov.idordencompra === $event.oc);\r\n            this.form.get('oc_pendiente').setValue(oc.idordencompra);\r\n        }\r\n    }\r\n\r\n    async getItems(idremito): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._remitosService.getItems(idremito));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     */\r\n    addMovimiento() {\r\n        if (this.form.get('oc_pendiente').value != '') {\r\n            let orden_compra_value = this.form.get('oc_pendiente').value;\r\n            let esEdicion = this.remito ? true : false;\r\n            this.dialogo\r\n                .open(AddArticuloComponent, {\r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        orden_compra: orden_compra_value,\r\n                        movimientos: this.mov_art_list,\r\n                        movimientos_eliminados: this.mov_art_list_deleted,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let movimiento_articulo = {    //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                cantidad_pendiente: res.cantidad_pendiente,  //Cantidad pendiente restante de ese articulo con esa um...\r\n                                idunidadmedida: res.unidad_medida,\r\n                                idordencompraitem: res.articulo.idordencompraitem,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno: res.articulo.codigo_interno,\r\n                            }\r\n                            this.mov_art_list = [...this.mov_art_list, movimiento_articulo];\r\n                            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                            // Desabilito el campo OC y Deposito\r\n                            if (this.mov_art_list.length != 0) {\r\n                                this.form.get('oc_pendiente').disable();\r\n                                this.form.get('deposito').disable();\r\n                            }\r\n                            \r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione una orden de compra\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los movimientos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo === movimiento_articulo.idarticulo && mov.idunidadmedida === movimiento_articulo.idunidadmedida) {\r\n                mov.cantidad_pendiente = Number(mov.cantidad_pendiente) + Number(mov.cantidad);\r\n            }\r\n        });\r\n\r\n        this.mov_art_list_deleted = this.mov_art_list;\r\n        this.mov_art_list = this.mov_art_list.filter((item) => item !== movimiento_articulo);\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        // Habilito el campo de OC y Deposito si la lista de movimientos está vacía\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('oc_pendiente').enable();\r\n            this.form.get('deposito').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n        if (input == \"proveedor\") {\r\n            this.form.get('oc_pendiente').setValue('');\r\n            this.oc_pendientes = this.orden_compras;\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Validar que se haya seleccionado un proveedor válido solo si se está agregando un nuevo remito o se cambió el proveedor\r\n            if (!this.remito || (this.remito && this.form.get('proveedor').value !== this.remito.descripcion_proveedor)) {\r\n                const proveedorSeleccionado = this.form.get('proveedor').value;\r\n                const proveedorExistente = this.proveedores.find(proveedor => proveedor.Codigo === proveedorSeleccionado.Codigo);\r\n                if (!proveedorExistente) {\r\n                    return this.alert.error('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\r\n                }\r\n            }\r\n\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idordencompraitem: objeto.idordencompraitem,\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al remito')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                remito: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito').value.iddeposito,\r\n                    idordencompra: this.form.get('oc_pendiente').value,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.remito?.idremito) {\r\n                this._remitosService.updateRemito(payload, this.remito.idremito)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._remitosService.saveRemito(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"shadow-md mb-3\">\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/8\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/8\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\" (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>OC</mat-label>\r\n                    <mat-select formControlName=\"oc_pendiente\" (ngModelChange)=\"seleccionItem({oc: $event})\">\r\n                        <mat-option *ngFor=\"let oc of oc_pendientes\" [value]=\"oc.idordencompra\">\r\n                            N° {{oc.numero_oc}} / {{oc.fecha_oc}} \r\n                        </mat-option>\r\n                    </mat-select>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('oc_pendiente')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('oc_pendiente').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                    <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                        {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                    </div>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <!-- Grilla -->\r\n        <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                <ng-container matColumnDef='articulo'>\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        Articulo</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{movimiento_articulo.descripcion_articulo}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='codigointerno'>\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        Codigo Interno</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{movimiento_articulo.codigo_interno}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='unidadmedida'>\r\n                    <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{ movimiento_articulo.descripcion_um }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='cantidad'>\r\n                    <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                    <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                        {{ movimiento_articulo.cantidad}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='acciones'>\r\n                    <th mat-header-cell *matHeaderCellDef> <button mat-mini-fab color=\"primary\" matTooltip='Añadir Articulo' aria-label=\"icon\"\r\n                            class=\"rounded-full\" (click)=\"addMovimiento()\">\r\n                            <mat-icon>add</mat-icon>\r\n                        </button></th>\r\n                    <td mat-cell *matCellDef='let movimiento'>\r\n                        <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                            <mat-icon color=\"warn\">delete</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n            </table>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { RemitosComponent } from './components/remitos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { RemitosService } from './service/remitos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RemitosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [RemitosComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [RemitosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class RemitosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IRemito } from '../models/remito';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class RemitosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param remito \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveRemito(remito: IRemito): Observable<IRemito> {\r\n        return this.http.post<IRemito>(`${environment.stock.remitos}`, remito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param remito\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateRemito(remito: IRemito, idremito: number): Observable<IRemito> {\r\n        return this.http.put<IRemito>(`${environment.stock.remitos}` + '/' + idremito, remito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idremito \r\n     * @returns Elimina un item\r\n     */\r\n    deleteRemito(idremito: number): Observable<IRemito> {\r\n        return this.http.delete<IRemito>(`${environment.stock.remitos}` + '/' + idremito);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulosDepositos(deposito_origen: number) {\r\n        let f = `?filter[deposito]=${deposito_origen}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idremito: number) {\r\n        let f = `?filter[idremito]=${idremito}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios() {\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getItemsOcPendiente(option?) {\r\n        let f = `?`;\r\n        f += option ? `filter[idordencompra]=${option}&` : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_items_oc_pendientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r5","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r8","idunidadmedida","ɵɵtextInterpolate","descripcion_um","AddArticuloComponent","constructor","data","_remitosService","datePipe","alert","dialogRef","dialogo","columns","articulos","unidades_de_medida","depositos","articulos_list","dataSource","_unsubscribeAll","title","ngOnInit","newForm","getArticulosOrdenCompra","subscribeAlert","emitConfig","subscribe","next","config","appearance","time","pipe","_this","_asyncToGenerator","articulos_um_oc","getItemsOcPendiente","orden_compra","list","Promise","_ref","resolve","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","forEach","item","existeArticulo","find","articulo","idarticulo","codigo_interno_articulo","descripcion_articulo","idordencompraitem","iditemordencompra","push","filterValue","toString","toLowerCase","filter","includes","getTextInput","getUnidadesDeMedidaArticulos","_this2","_ref2","a","cantidad_pendiente","um","arreglo_auxiliar","some","_x2","seleccionArticulo","$event","enable","articulo_um","cantidad_existente","existeMovimiento","movimientos","length","articulos_existentes","ae","Number","cantidad","setValue","disable","required","unidadmedida","onSubmit","valid","error","warning","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","RemitosService","i2","DatePipe","i3","AppAlertService","i4","MatDialogRef","MatDialog","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","ɵɵtemplate","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_Template_mat_select_ngModelChange_24_listener","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_Template_button_click_35_listener","_r1","ɵɵpipeBind1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r6","ctx_r5","limpiarFechas","usuario_responsable_r7","codigo","nick","proveedor_r8","Codigo","RazonSocial","deposito_r9","iddeposito","FilterMenuComponent","_menuService","filterUsuarios","filterProveedor","filterDeposito","filterFechas","movimientos_internos_list","formFilters","filtroFechaInicio","filtroFechaFin","usuario_responsable","proveedor","deposito","getDepositos","getUsuarios","getProveedores","patchValue","resetFilters","reset","transform","Usuarios","Proveedores","_this3","stk_list","JedsMenuService","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_mat_option_42_Template","FilterMenuComponent_Template_button_click_44_listener","FilterMenuComponent_Template_button_click_47_listener","getRawValue","_r0","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","RemitosComponent","_remitoService","confirm","_searchService","router","_headerTextService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","remitos","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","generarAcciones","name","updateRemito","deleteRemito","saveRemito","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","fecha","hora","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","idremito","renderTabla","console","ngOnDestroy","unsubscribe","FuseConfirmationService","i5","SearchService","i6","i7","Router","i8","HeaderTextService","viewQuery","RemitosComponent_Query","RemitosComponent_Template_button_click_3_listener","RemitosComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","proveedor_r22","SaveComponent_button_29_Template_button_click_0_listener","_r24","ctx_r23","oc_r25","idordencompra","numero_oc","fecha_oc","SaveComponent_button_35_Template_button_click_0_listener","_r27","ctx_r26","deposito_r28","SaveComponent_button_44_Template_button_click_0_listener","_r30","ctx_r29","movimiento_articulo_r31","movimiento_articulo_r32","movimiento_articulo_r33","movimiento_articulo_r34","SaveComponent_th_67_Template_button_click_1_listener","_r36","ctx_r35","addMovimiento","SaveComponent_td_68_Template_button_click_1_listener","restoredCtx","_r40","movimiento_r37","$implicit","ctx_r39","deleteMovimiento","proveedores","orden_compras","oc_pendientes","mov_art_list","mov_art_list_deleted","maxPalabras","remito","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","getItemsOrdenDeCompraPendiente","then","exist","dia","mes","anio","split","getItems","m","descripcion_proveedor","oc_pendiente","observaciones","maxLength","getPalabrasLength","isPalabraMaxLengthReached","option","Depositos","filteredDepositos","_filterDepositos","_filterProveedores","object","OrdenesDeCompraPendiente","p","idproveedor","razon_social","ocp","filteredProveedores","_ref3","pe","_x3","getOrdenCompras","_this4","oc","seleccionItem","prov","_this5","_ref4","items","_x4","orden_compra_value","esEdicion","movimientos_eliminados","mov","input","proveedorSeleccionado","proveedorExistente","objeto","fecha_formateada","fecha_hora","payload","idusuario","id","emit","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_ngModelChange_24_listener","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_Template_mat_select_ngModelChange_33_listener","SaveComponent_mat_option_34_Template","SaveComponent_button_35_Template","SaveComponent_mat_option_42_Template","SaveComponent_button_44_Template","ɵɵelementContainerStart","SaveComponent_th_55_Template","SaveComponent_td_56_Template","ɵɵelementContainerEnd","SaveComponent_th_58_Template","SaveComponent_td_59_Template","SaveComponent_th_61_Template","SaveComponent_td_62_Template","SaveComponent_th_64_Template","SaveComponent_td_65_Template","SaveComponent_th_67_Template","SaveComponent_td_68_Template","SaveComponent_tr_69_Template","SaveComponent_tr_70_Template","SaveComponent_Template_button_click_72_listener","_r2","ɵɵpureFunction1","_c0","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","RemitosModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","f","subject","resp","result","asObservable","administracion","getArticulosDepositos","deposito_origen","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","view_items_oc_pendientes","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}