{"version":3,"file":"src_app_modules_stock_remitos_remitos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/remitos/components/remitos.component.ts","./src/app/modules/stock/remitos/components/remitos.component.html","./src/app/modules/stock/remitos/components/save/save.component.ts","./src/app/modules/stock/remitos/components/save/save.component.html","./src/app/modules/stock/remitos/remitos.module.ts","./src/app/modules/stock/remitos/service/remitos.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IRemito } from '../../models/remito';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-remitos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuarioResponsable: Observable<IUsuario[]>;\r\n  provedores: IProveedor[] = [];\r\n  filteredProveedor: Observable<IProveedor[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IRemito[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _remitosService: RemitosService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl(('')),\r\n      proveedor: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.getProveedores();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario_responsable: '',\r\n      proveedor: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._remitosService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuarioResponsable = this.formFilters.controls['usuario_responsable'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n   */\r\n  async getProveedores() {\r\n    const Proveedores = await firstValueFrom(this._remitosService.getProveedores());\r\n    this.provedores = Proveedores.list;\r\n    this.filteredProveedor = this.formFilters.controls['proveedor'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProveedor(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterProveedor(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.provedores.filter(provedor =>\r\n      provedor.RazonSocial.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._remitosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Responsable\" matInput [matAutocomplete]=\"autoUsuarioResponsable\" formControlName=\"usuario_responsable\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioResponsable=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario_responsable of filteredUsuarioResponsable | async\" [value]=\"usuario_responsable.nick\">\r\n                    {{usuario_responsable.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Proveedor -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\" formControlName=\"proveedor\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoProveedor=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedor | async\" [value]=\"proveedor.RazonSocial\">\r\n                    {{proveedor.RazonSocial}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>            \r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IRemito } from '../models/remito';\r\nimport { RemitosService } from '../service/remitos.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-remitos',\r\n    templateUrl: './remitos.component.html',\r\n    styleUrls: ['./remitos.component.scss']\r\n})\r\nexport class RemitosComponent implements OnInit, OnDestroy {\r\n    remitos: IRemito[];\r\n    public dataSource: MatTableDataSource<IRemito> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Observaciones', 'Deposito', 'Proveedor', 'Orden compra', 'Acciones'];\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'observaciones', 'descripcion_deposito', 'descripcion_proveedor', 'nro_orden_compra', 'acciones'];\r\n    funcionesObjeto = null;\r\n    accionesObjeto = null;\r\n    showMenu: any;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'descripcion_proveedor'];\r\n    filter: IFilter = {\r\n        proveedor: '',\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.remitos + '?sort=-fecha_hora';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _remitoService: RemitosService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                iconoAccion: (remito: IRemito) => '',\r\n                iconoAccionado: (remito: IRemito) => '',\r\n                iconoDeshabilitado: (remito: IRemito) => '',\r\n                visible: (remito: IRemito) => false\r\n            }\r\n        ];\r\n\r\n        this.showMenu = (remito: IRemito) => true;\r\n\r\n        this.accionesObjeto = [\r\n            {\r\n                icono: \"view\",\r\n                nombre_boton: \"Ver Remito\",\r\n                functionName: 'ver',\r\n                iconoAccion: (remito: IRemito) => 'jedstion:ver',\r\n                iconoAccionado: (remito: IRemito) => '',\r\n                iconoDeshabilitado: (remito: IRemito) => '',\r\n                visible: (remito: IRemito) => true\r\n            },\r\n            {\r\n                icono: \"Editar\",\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (remito: IRemito) => 'jedstion:editar_disabled',\r\n                iconoAccionado: (remito: IRemito) => '',\r\n                iconoDeshabilitado: (remito: IRemito) => '',\r\n                visible: (remito: IRemito) => true\r\n            },\r\n            {\r\n                icono: \"Eliminar\",\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (remito: IRemito) => 'jedstion:eliminar',\r\n                iconoAccionado: (remito: IRemito) => '',\r\n                iconoDeshabilitado: (remito: IRemito) => '',\r\n                visible: (remito: IRemito) => true\r\n            }\r\n        ]\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != '' ? \"filter[nick_usuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n                        this.extraParams += this.filter.proveedor != '' ? \"filter[descripcion_proveedor]=\" + this.filter.proveedor + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'ver':\r\n                this.verRemito(event);\r\n                break;\r\n            case 'editar':\r\n                this.alert.warning('No puedes modificar un remito. Debes eliminar el registro y volverlo a crear.')\r\n                // this.updateRemito(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteRemito(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveRemito() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Remito creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion ve la informacion de un item\r\n     * @param event \r\n     */\r\n    verRemito(event) {\r\n\r\n        const modal_config = {\r\n            model: event.params.data,\r\n            title: `Ver Remito ${event.params.data.fecha} - ${event.params.data.hora}`,\r\n            soloLectura: true\r\n        };\r\n\r\n        this.dialogo\r\n            .open(SaveComponent, { data: modal_config, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Remito editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteRemito(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Remito: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el remito realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._remitoService.deleteRemito(event.params.data.idremito).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Remito eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este remito no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"absolute right-10\">\r\n            <button mat-flat-button (click)='saveRemito()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Remito</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\"\r\n            [acciones]=\"accionesObjeto\" [showMenu]=\"showMenu\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { ICreateRemito, IRemito } from '../../models/remito';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { BehaviorSubject, Observable, Subject, combineLatest, debounceTime, finalize, firstValueFrom, map, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IItemOrdenCompraPendiente } from 'app/modules/compras/ordenes-de-compra/models/orden-de-compra';\r\n\r\n@Component({\r\n    selector: 'app-save-remitos',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 150;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    deposito_default = 0;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    // Particulares del modulo\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad_pedida', 'cantidad_pendiente', 'cantidad_a_recibir'];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredOrdenesDeCompraSubject = new BehaviorSubject<any[]>([]);\r\n    form: FormGroup;\r\n    remito: IRemito;\r\n    user: any;\r\n    items_oc_pendientes_aux: IItemOrdenCompraPendiente[] = [];\r\n    items_oc_pendientes: any[] = [];\r\n    proveedores: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    orden_compras: any[] = [];\r\n    oc_pendientes = new BehaviorSubject<any[]>([]);;\r\n    mov_art_list: any[] = [];\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _remitosService: RemitosService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n    ) {\r\n        this.remito = this.data?.soloLectura === true ? this.data?.model : null;\r\n        this.title = this.data?.soloLectura === true ? this.data.title : `Nuevo Remito`;\r\n\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.loadServices();\r\n\r\n        this.subscribeAlert();\r\n\r\n        this.setupProveedorValueChange();\r\n        this.setupOrdenCompraValueChange();\r\n    }\r\n\r\n    /**\r\n    * Metodo de alertas\r\n    */\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Este metodo inicializa el formulario\r\n     */\r\n    newForm() {\r\n        const [dia, mes, anio] = this.remito ? this.remito.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')) }, [Validators.required]),\r\n            hora: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito?.hora ? this.remito.hora : this.datePipe.transform(new Date(), 'HH:mm')) }, [Validators.required]),\r\n            proveedor: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito ? this.remito.descripcion_proveedor : '') }, [Validators.required]),\r\n            oc_pendiente: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito ? { idordencompra: this.remito.idordencompra, numero: this.remito.nro_orden_compra, fecha: this.remito.fecha_oc } : '') }, [Validators.required]),\r\n            deposito: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito ? this.remito.descripcion_deposito : '') }, Validators.required),\r\n            observaciones: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito ? this.remito.observaciones : '') }, [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n     */\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this.getDepositos(),\r\n            this.getOrdenCompras(),\r\n            this.getItemsOrdenDeCompraPendiente(),\r\n        ]).then(() => {\r\n            this.mostrarSpinner = false;\r\n        })\r\n    }\r\n\r\n    // ############### Llamados a los servicios ###################\r\n\r\n    /**\r\n     * Controlador que obtiene los depósitos\r\n     * @param option \r\n     */\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._remitosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.remito) {\r\n                this.form.get('deposito').setValue(depositoPorDefecto);\r\n            }\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Este metodo obtiene las ordenes de compra pendientes de entrega con sus items\r\n     * @param object \r\n     */\r\n    async getItemsOrdenDeCompraPendiente(object?) {\r\n\r\n        if (this.remito) {\r\n            object = {\r\n                idremito: this.remito.idremito\r\n            }\r\n        }\r\n\r\n        const OrdenesDeCompraPendiente = await firstValueFrom(this._remitosService.getItemsOcPendiente(object));\r\n\r\n        //Encapsulo solo las propiedades que quiero utilizar.\r\n        this.items_oc_pendientes_aux = OrdenesDeCompraPendiente.list.map((item: IItemOrdenCompraPendiente) => {\r\n            return {\r\n                iditemordencompra: item.iditemordencompra,\r\n                idordencompra: item.idordencompra,\r\n                idarticulo: item.idarticulo,\r\n                codigo_interno_articulo: item.codigo_interno_articulo,\r\n                descripcion_articulo: item.descripcion_articulo,\r\n                idunidadmedida: item.idunidadmedida,\r\n                descripcion_um: item.descripcion_um,\r\n                cantidad_entregada: Number(item.cantidad_entregada),\r\n                cantidad_pendiente: Number(item.cantidad_pendiente),\r\n                cantidad_pedida: Number(item.cantidad_pedida),\r\n            }\r\n        });\r\n\r\n        this.items_oc_pendientes = this.items_oc_pendientes_aux;\r\n\r\n        if (this.remito) this.crearGrillaForm(this.items_oc_pendientes);\r\n    }\r\n\r\n    /**\r\n     * Este metodo obtiene los movimientos realizados\r\n     * @param idremito \r\n     * @returns \r\n     */\r\n    async getItems(idremito): Promise<any> {\r\n        const filter = {\r\n            idremito: idremito,\r\n            idordencompra: null\r\n        }\r\n\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._remitosService.getItemsOcPendiente(filter));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Esta funcion es la encargada de obtener los datos de las ordenes de compra y que no se repitan.\r\n    * @param idproveedor Cuando queremos obtener solo las ordenes de compra de un proveedor utilicamos su id para filtrar.\r\n    */\r\n    async getOrdenCompras(event?) {\r\n        let filter = {\r\n            idproveedor: event?.Codigo ? event?.Codigo : null,\r\n            idordencompra: event?.idordencompra ? event?.idordencompra : null\r\n        }\r\n\r\n        const ordenes_de_compra = await firstValueFrom(this._remitosService.getOrdenesDeCompra(filter));\r\n\r\n        this.orden_compras = ordenes_de_compra.result.map(oc => { return { ...oc, idordencompra: oc.codigo } });\r\n\r\n        // Ordenar las ordenes de compra por fecha (en formato 'yyyy-mm-dd')\r\n        this.orden_compras.sort((a, b) => {\r\n            const fechaA = new Date(a.fecha); // Convertimos la cadena de texto en un objeto Date\r\n            const fechaB = new Date(b.fecha); // Convertimos la cadena de texto en un objeto Date\r\n            return fechaB.getTime() - fechaA.getTime(); // Comparamos las marcas de tiempo\r\n        });\r\n\r\n        this.oc_pendientes.next(this.orden_compras);\r\n\r\n        //Encapsulo solo las propiedades que quiero utilizar.\r\n        this.proveedores = this.orden_compras.map(p => {\r\n            return {\r\n                Codigo: p.proveedor,\r\n                RazonSocial: p.proveedor_descripcion\r\n            }\r\n        }).sort((a, b) => {\r\n            return a.RazonSocial.localeCompare(b.RazonSocial); // Ordena alfabéticamente\r\n        });\r\n\r\n        this.proveedores = Array.from(new Map(this.proveedores.map(p => [p.Codigo, p])).values());\r\n\r\n        new Promise(async (resolve) => {\r\n            //Esta fraccion de codigo es para filtrar lo que se escriba en el input.\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Metodo de persistencia de datos\r\n     */\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Validar que se haya seleccionado un proveedor válido solo si se está agregando un nuevo remito o se cambió el proveedor\r\n            if (!this.remito || (this.remito && this.form.get('proveedor').value !== this.remito.descripcion_proveedor)) {\r\n                const proveedorSeleccionado = this.form.get('proveedor').value;\r\n                const proveedorExistente = this.proveedores.find(proveedor => proveedor.Codigo === proveedorSeleccionado.Codigo);\r\n                if (!proveedorExistente) {\r\n                    return this.alert.error('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\r\n                }\r\n            }\r\n\r\n            const existe_cantidad_item_mayor_a_la_solicitada = this.mov_art_list.find((item: IItemOrdenCompraPendiente) => item.cantidad_a_recibir.value > item.cantidad_pedida['value']);\r\n            if (existe_cantidad_item_mayor_a_la_solicitada) {\r\n                return this.alert.error('Error al cargar Remito. No se puede recibir una cantidad mayor a la pedida');\r\n            }\r\n\r\n            let movimientos = this.mov_art_list.map((objeto: IItemOrdenCompraPendiente) => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idordencompraitem: objeto.iditemordencompra,\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad_a_recibir.value,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n            }));\r\n\r\n            // Quito los items con cantiadd cero para no incluirlos en el payload de persistencia\r\n            movimientos = movimientos.filter((movimiento: { idordencompraitem: number, idarticulo: number, cantidad: number, idunidadmedida: number }) => movimiento.cantidad > 0);\r\n\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload: ICreateRemito = {\r\n                remito: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito').value.iddeposito,\r\n                    idordencompra: this.form.get('oc_pendiente').value.idordencompra,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.remito?.idremito) {\r\n                this._remitosService.updateRemito(payload, this.remito.idremito)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._remitosService.saveRemito(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Este metodo cierra el matdialog\r\n    */\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ############### Metodos funcionales ###################\r\n\r\n    /**\r\n    * Metodo que ayuda al autocompletado de un input\r\n    * @param deposito \r\n    * @returns \r\n    */\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n    * Metodo que ayuda al autocompletado de un input\r\n    * @param proveedor \r\n    * @returns \r\n    */\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n        if (input == \"proveedor\") {\r\n            this.form.get('oc_pendiente').setValue('');\r\n            this.getOrdenCompras();\r\n        }\r\n\r\n        this.dataSource = new MatTableDataSource([]);\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n     * Este metodo obtiene el valor de texto del input que lo utilice\r\n     * @param option \r\n     * @returns \r\n     */\r\n    getTextInput(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        if (option.RazonSocial) {\r\n            return option.RazonSocial;\r\n        }\r\n        if (option.idordencompra || option.codigo) {\r\n            return option ? `N°${option.numero} | ${option.fecha}` : ''\r\n        }\r\n\r\n        return option;\r\n    }\r\n\r\n    /**\r\n * Esta funcion maneja las cambios de seleccion que puedan tener articulos, unidades de medida u ordenes de compra.\r\n * @param $event \r\n*/\r\n    seleccionItem($event) {\r\n        // Si se ha seleccionado un proveedor explícitamente, actualiza el campo del proveedor\r\n        if ($event?.Codigo) {\r\n            let filtered = this.orden_compras.filter(oc => oc.proveedor === $event.Codigo); // Buscamos las OC que posee ese proveedor.\r\n            this.oc_pendientes.next(filtered)\r\n            // Actualizamos el campo del proveedor sin emitir eventos\r\n            this.form.get('proveedor').setValue($event, { emitEvent: false });\r\n        }\r\n\r\n        // Si se ha seleccionado una OC, actualiza el campo de OC pendiente\r\n        if ($event?.idordencompra) {\r\n            let proveedor = this.proveedores.find(p => p.Codigo === $event.proveedor); // Busco el proveedor\r\n            this.form.get('proveedor').setValue(proveedor, { emitEvent: false }); // Lo seteo en el campo proveedor\r\n\r\n            let filtered = this.orden_compras.filter(oc => oc.proveedor === proveedor.Codigo);\r\n\r\n            this.oc_pendientes.next(filtered)\r\n\r\n            // Filtro los items de la orden de compra pendiente...\r\n            this.items_oc_pendientes = this.items_oc_pendientes_aux\r\n                .filter(item => item.idordencompra === $event.idordencompra) //...filtro todos los items que tengan la misma orden de compra que se selecciono en el select...\r\n                .map(item => { //... Al devolverlo...\r\n                    return {\r\n                        ...item,\r\n                        cantidad_pedida: Number(item.cantidad_pedida), //... Convierto en numeros estos campos que son strings...\r\n                        cantidad_pendiente: Number(item.cantidad_pendiente),\r\n                        cantidad_entregada: Number(item.cantidad_entregada),\r\n                    }\r\n                });\r\n\r\n            // Creo la grilla editable\r\n            this.crearGrillaForm(this.items_oc_pendientes);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Metodo encargado de crear una grilla dinamica\r\n    * @param Items \r\n    */\r\n    crearGrillaForm(Items) {\r\n        this.mov_art_list = Items;\r\n\r\n        this.mov_art_list.forEach((item, index, items_array) => {\r\n\r\n            // Define los FormControls\r\n            const cantidad_a_recibir_control = new FormControl(\r\n                { value: this.remito?.idremito ? item.cantidad_entregada || null : item.cantidad_pendiente || null, disabled: Number(item.cantidad_pendiente) > 0 ? false : true },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            const cantidad_pendiente_control = new FormControl(\r\n                { value: item.cantidad_pendiente || null, disabled: true },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            const cantidad_pedida_control = new FormControl(\r\n                { value: item.cantidad_pedida || null, disabled: true },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            // Asigna los controles al item\r\n            items_array[index].cantidad_a_recibir = cantidad_a_recibir_control;\r\n            items_array[index].cantidad_pendiente = cantidad_pendiente_control;\r\n            items_array[index].cantidad_pedida = cantidad_pedida_control;\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n    }\r\n\r\n    setupProveedorValueChange() {\r\n        this.form.get('proveedor').valueChanges.pipe(\r\n            debounceTime(750),\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(value => {\r\n            if (value?.Codigo) {\r\n                // Filtra las órdenes de compra por proveedor\r\n                const filtered = this.orden_compras.filter(oc => oc.proveedor === value.Codigo);\r\n                this.oc_pendientes.next(filtered); // Actualiza las órdenes de compra disponibles\r\n            } else {\r\n                this.oc_pendientes.next(this.orden_compras); // Limpia si no hay proveedor seleccionado\r\n            }\r\n        });\r\n    }\r\n\r\n    setupOrdenCompraValueChange() {\r\n        combineLatest([\r\n            this.oc_pendientes.asObservable(),\r\n            this.form.get('oc_pendiente').valueChanges.pipe(debounceTime(750), startWith(''))\r\n        ])\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([ordenes, value]) => {\r\n                const filterValue = value?.toString().toLowerCase() || '';\r\n                const filtered = ordenes.filter(oc =>\r\n                    oc.numero.toString().toLowerCase().includes(filterValue) ||\r\n                    oc.fecha.toString().toLowerCase().includes(filterValue)\r\n                );\r\n                this.filteredOrdenesDeCompraSubject.next(filtered); // Emite las órdenes filtradas\r\n            });\r\n    }\r\n\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl xl:max-h-[700px] xl:min-h-[630px] sm:max-h-[630px] sm:min-h-[500px] overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4 overflow-y-auto\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n\r\n            <!-- Datos de cabecera -->\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\"\r\n                        (optionSelected)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value && !this.data?.soloLectura\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>OC</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"oc_pendiente\" [matAutocomplete]=\"auto_oc\"\r\n                        (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #auto_oc=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let oc of filteredOrdenesDeCompraSubject | async \" [value]=\"oc\">\r\n                            <b> N° {{oc.numero}} </b> | <i> {{oc.fecha}}</i>\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('oc_pendiente')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('oc_pendiente').value && !this.data?.soloLectura\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[175px] h-auto shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \"\r\n                            class=\"rounded-tl-lg text-white text-center w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white text-center w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white text-center w-auto\">Unidad de\r\n                            medida</th>\r\n                        <td mat-cell *matCellDef='let row'>\r\n                            {{ row.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad_pedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white text-center w-auto\">Cant. Pedida\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_pedida\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-200 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad_pendiente'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white text-center w-auto\">Cant.\r\n                            Pendiente</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_pendiente\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-200 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad_a_recibir'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\"\r\n                            class=\" rounded-tr-lg text-white text-center w-auto\">{{!this.remito ? 'Cant. a recibir' :\r\n                            'Cant. Entregada'}}</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_a_recibir\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n    <div *ngIf=\"!this.data?.soloLectura && !mostrarSpinner\"\r\n        class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { RemitosComponent } from './components/remitos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { RemitosService } from './service/remitos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RemitosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [RemitosComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        SharedComponentModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [RemitosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class RemitosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IRemito } from '../models/remito';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IResponse, Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class RemitosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param remito \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveRemito(remito: IRemito): Observable<IRemito> {\r\n        return this.http.post<IRemito>(`${environment.stock.remitos}`, remito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param remito\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateRemito(remito: IRemito, idremito: number): Observable<IRemito> {\r\n        return this.http.put<IRemito>(`${environment.stock.remitos}` + '/' + idremito, remito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idremito \r\n     * @returns Elimina un item\r\n     */\r\n    deleteRemito(idremito: number): Observable<IRemito> {\r\n        return this.http.delete<IRemito>(`${environment.stock.remitos}` + '/' + idremito);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulosDepositos(deposito_origen: number) {\r\n        let f = `?filter[deposito]=${deposito_origen}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idremito: number) {\r\n        let f = `?filter[idremito]=${idremito}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios() {\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getItemsOcPendiente(options?: { idremito?: number, idordencompra?: number}) {\r\n        let f = `?`;\r\n        f += options?.idordencompra === null && options?.idremito === null ? `filter[pendiente_entrega]=1&` : '';\r\n\r\n        f += options?.idordencompra ? `filter[idordencompra]=${options?.idordencompra}` : '';\r\n        f += options?.idremito ? `filter[idremito]=${options?.idremito}&` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_items_oc_pendientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * Funcion en el servicio\r\n    */\r\n    getOrdenesDeCompra(options?: { idproveedor: number, idordencompra?: number }, filterLike?: string): Observable<IResponse<any>> {\r\n        let f = '?filter[estado]=1&';\r\n\r\n        f += options?.idproveedor ? `filter[proveedor]=${options.idproveedor}&` : '';\r\n        f += options?.idordencompra ? `filter[idordencompra]=${options.idordencompra}&` : '';\r\n\r\n        if(filterLike) {\r\n            f += `filter[or][0][numero][like]=${filterLike}&filter[or][1][fecha][like]=${filterLike}`;\r\n        }\r\n\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.compras.view_orden_compras}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'result': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n\r\n        return subject.asObservable();\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","usuario_responsable_r10","nick","ɵɵadvance","ɵɵtextInterpolate1","proveedor_r11","RazonSocial","deposito_r12","iddeposito","ɵɵtextInterpolate","descripcion","FilterMenuComponent","constructor","data","_menuService","datePipe","_remitosService","_empresaService","usuarios","provedores","filterDeposito","filterFechas","movimientos_internos_list","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario_responsable","proveedor","deposito","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","getDepositos","getUsuarios","getProveedores","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","filteredUsuarioResponsable","controls","valueChanges","_filterUsuaurio","filterValue","toLowerCase","usuario","includes","_this2","Proveedores","filteredProveedor","_filterProveedor","provedor","_this3","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","DatePipe","i3","RemitosService","i4","EmpresaService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_31_Template","FilterMenuComponent_mat_option_42_Template","FilterMenuComponent_mat_option_50_Template","FilterMenuComponent_Template_button_click_52_listener","FilterMenuComponent_Template_button_click_55_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r3","ɵɵpipeBind1","_r5","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","RemitosComponent","_remitoService","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","accionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","remitos","search","setTitulo","iconoAccion","remito","iconoAccionado","iconoDeshabilitado","visible","showMenu","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","next","generarAcciones","name","verRemito","warning","deleteRemito","saveRemito","panelClass","componentInstance","creadoExitosamente","success","modal_config","model","params","title","fecha","hora","soloLectura","autoFocus","editadoExitosamente","message","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","idremito","renderTabla","error","console","ngOnDestroy","unsubscribe","closeAll","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","viewQuery","RemitosComponent_Query","RemitosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","RemitosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","BehaviorSubject","combineLatest","finalize","takeWhile","tap","timer","MAT_DIALOG_DATA","ctx_r1","_alertConfig","type","showAlert","proveedor_r29","SaveComponent_form_10_button_20_Template_button_click_0_listener","_r31","ctx_r30","limpiarCasillero","oc_r32","numero","SaveComponent_form_10_button_29_Template_button_click_0_listener","_r34","ctx_r33","deposito_r35","SaveComponent_form_10_button_38_Template_button_click_0_listener","_r37","ctx_r36","ctx_r14","row_r38","codigo_interno_articulo","ctx_r16","row_r39","descripcion_articulo","ctx_r18","row_r40","descripcion_um","ctx_r20","row_r41","cantidad_pedida","ctx_r22","row_r42","cantidad_pendiente","ctx_r24","row_r43","cantidad_a_recibir","SaveComponent_form_10_Template_input_optionSelected_15_listener","_r46","ctx_r45","seleccionItem","SaveComponent_form_10_mat_option_18_Template","SaveComponent_form_10_button_20_Template","SaveComponent_form_10_Template_input_ngModelChange_24_listener","ctx_r47","SaveComponent_form_10_mat_option_27_Template","SaveComponent_form_10_button_29_Template","SaveComponent_form_10_mat_option_36_Template","SaveComponent_form_10_button_38_Template","ɵɵelementContainerStart","SaveComponent_form_10_th_48_Template","SaveComponent_form_10_td_49_Template","ɵɵelementContainerEnd","SaveComponent_form_10_th_51_Template","SaveComponent_form_10_td_52_Template","SaveComponent_form_10_th_54_Template","SaveComponent_form_10_td_55_Template","SaveComponent_form_10_th_57_Template","SaveComponent_form_10_td_58_Template","SaveComponent_form_10_th_60_Template","SaveComponent_form_10_td_61_Template","SaveComponent_form_10_th_63_Template","SaveComponent_form_10_td_64_Template","SaveComponent_form_10_tr_65_Template","SaveComponent_form_10_tr_66_Template","SaveComponent_form_10_div_67_Template","ctx_r2","form","_r4","minDate","maxDate","getTextInput","filteredProveedores","_r8","filteredOrdenesDeCompraSubject","_r11","filteredDepositos","mov_art_list","length","ɵɵpureFunction1","_c0","isPalabraMaxLengthReached","ɵɵtextInterpolate2","getPalabrasLength","maxPalabras","columns","SaveComponent_div_11_Template_button_click_1_listener","_r49","ctx_r48","onSubmit","ctx_r3","dialogRef","deposito_default","mostrarSpinner","mostrar_mensaje","items_oc_pendientes_aux","items_oc_pendientes","proveedores","depositos","orden_compras","oc_pendientes","user","JSON","parse","localStorage","getItem","Date","newForm","loadServices","subscribeAlert","setupProveedorValueChange","setupOrdenCompraValueChange","emitConfig","config","appearance","time","dia","mes","anio","split","disabled","required","descripcion_proveedor","oc_pendiente","idordencompra","nro_orden_compra","fecha_oc","observaciones","maxLength","Promise","all","getOrdenCompras","getItemsOrdenDeCompraPendiente","then","option","Depositos","_ref","resolve","_filterDepositos","depositoPorDefecto","find","_x","apply","arguments","object","OrdenesDeCompraPendiente","getItemsOcPendiente","item","iditemordencompra","idarticulo","idunidadmedida","cantidad_entregada","Number","crearGrillaForm","getItems","_this4","_ref2","items","_x2","_this5","idproveedor","Codigo","ordenes_de_compra","getOrdenesDeCompra","result","oc","codigo","sort","a","b","fechaA","fechaB","getTime","p","proveedor_descripcion","localeCompare","Array","from","Map","values","_ref3","_filterProveedores","_x3","valid","proveedorSeleccionado","proveedorExistente","existe_cantidad_item_mayor_a_la_solicitada","movimientos","objeto","idordencompraitem","cantidad","movimiento","fecha_formateada","fecha_hora","payload","idusuario","id","updateRemito","emit","toString","input","filtered","emitEvent","Items","forEach","index","items_array","cantidad_a_recibir_control","min","cantidad_pendiente_control","cantidad_pedida_control","asObservable","ordenes","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_spinner_component_8_Template","SaveComponent_fuse_alert_9_Template","SaveComponent_form_10_Template","SaveComponent_div_11_Template","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","SharedComponentModule","routes","path","component","RemitosModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","f","subject","resp","accessToken","token","administracion","getArticulosDepositos","deposito_origen","view_stock_articulo_depositos","getUnidadesDeMedidaArticulos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","options","view_items_oc_pendientes","filterLike","compras","view_orden_compras","ɵɵinject","HttpClient","AuthService","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_c1","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}