{"version":3,"file":"src_app_modules_stock_remitos_remitos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/remitos/components/remitos.component.ts","./src/app/modules/stock/remitos/components/remitos.component.html","./src/app/modules/stock/remitos/components/save/save.component.ts","./src/app/modules/stock/remitos/components/save/save.component.html","./src/app/modules/stock/remitos/remitos.module.ts","./src/app/modules/stock/remitos/service/remitos.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { IUsuario } from '@core/user/user.types';\nimport { fuseAnimations } from '@fuse/animations';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\nimport { IRemito } from '../../models/remito';\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\nimport { DatePipe } from '@angular/common';\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\nimport { RemitosService } from '../../service/remitos.service';\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\n\n@Component({\n  selector: 'app-filter-menu-remitos',\n  templateUrl: './filter-menu.component.html',\n  styleUrls: ['./filter-menu.component.scss'],\n  providers: [\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\n  ],\n  animations: fuseAnimations\n})\nexport class FilterMenuComponent implements OnInit {\n  public formFilters: FormGroup;\n  usuarios: IUsuario[] = [];\n  filteredUsuarioResponsable: Observable<IUsuario[]>;\n  provedores: IProveedor[] = [];\n  filteredProveedor: Observable<IProveedor[]>;\n  filterDeposito: IDeposito[] = [];\n  filterFechas: any = [];\n  movimientos_internos_list: IRemito[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\n  color_primario: string;\n  color_secundario: string;\n  default_color: string = 'bg-primary';\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject('MENU_DATA') public data: any, \n    private _menuService: JedsMenuService, \n    private datePipe: DatePipe, \n    private _remitosService: RemitosService,\n    private _empresaService: EmpresaService\n  ) { }\n\n  ngOnInit(): void {\n    this.formFilters = new FormGroup({\n      filtroFechaInicio: new FormControl(('')),\n      filtroFechaFin: new FormControl(('')),\n      usuario_responsable: new FormControl(('')),\n      proveedor: new FormControl(('')),\n      deposito: new FormControl((-1)),\n    });\n    // Subscribe to empresa data\n    this._empresaService.empresa$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(empresa => {\n          this.color_primario = empresa.color_primario;\n          this.color_secundario = empresa.color_secundario;\n      });\n\n    // Load empresa data\n    this._empresaService.getEmpresa();\n    this.getDepositos();\n    this.getUsuarios();\n    this.getProveedores();\n    this.formFilters.patchValue(this.data.filter);\n\n  }\n\n  resetFilters() {\n    this.formFilters.reset({\n      filtroFechaInicio: '',\n      filtroFechaFin: '',\n      usuario_responsable: '',\n      proveedor: '',\n      deposito: -1,\n    });\n  }\n\n  onCloseMenu(data: any = null) {\n    if (data) {\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\n    }\n    this._menuService.close(data);\n  }\n\n  /**\n  * Funcion para limpiar los filtros de rango de fechas\n  */\n  limpiarFechas() {\n    this.formFilters.get('filtroFechaInicio').setValue('');\n    this.formFilters.get('filtroFechaFin').setValue('');\n  }\n\n  /**\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\n   */\n  async getUsuarios() {\n    const Usuarios = await firstValueFrom(this._remitosService.getUsuarios());\n    this.usuarios = Usuarios.list;\n    this.filteredUsuarioResponsable = this.formFilters.controls['usuario_responsable'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterUsuaurio(value))\n    )\n  }\n\n  /**\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\n    * @param value \n    * @returns \n    */\n  private _filterUsuaurio(value: string) {\n    const filterValue = value.toLowerCase();\n    return this.usuarios.filter(usuario =>\n      usuario.nick.toLowerCase().includes(filterValue)\n    );\n  }\n\n  /**\n   * Esta funcion es para listas los proveedores en el filtro de grilla.\n   */\n  async getProveedores() {\n    const Proveedores = await firstValueFrom(this._remitosService.getProveedores());\n    this.provedores = Proveedores.list;\n    this.filteredProveedor = this.formFilters.controls['proveedor'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterProveedor(value))\n    )\n  }\n\n  /**\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\n    * @param value \n    * @returns \n    */\n  private _filterProveedor(value: string) {\n    const filterValue = value.toLowerCase();\n    return this.provedores.filter(provedor =>\n      provedor.RazonSocial.toLowerCase().includes(filterValue)\n    );\n  }\n\n  /**\n   * Esta funcion es para listas los depositos en el filtro de grilla.\n   */\n  async getDepositos() {\n    const stk_list = await firstValueFrom(this._remitosService.getDepositos(true));\n    this.filterDeposito = stk_list.list;\n  }\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\n    [@expandCollapse]=\"'expanded'\">\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\n        <div>\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\n                <mat-icon class=\"text-white\">refresh</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\n\n        <!-- Fecha inicio-->\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <mat-date-range-input [rangePicker]=\"picker\">\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\n            </mat-date-range-input>\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\n                <mat-icon>clear</mat-icon>\n            </button>\n        </mat-form-field>\n\n        <!-- Usuario Responsable -->\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Responsable</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <input type=\"text\" placeholder=\"Seleccione Usuario Responsable\" matInput [matAutocomplete]=\"autoUsuarioResponsable\" formControlName=\"usuario_responsable\">\n            <button mat-icon-button matSuffix>\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n            <mat-autocomplete #autoUsuarioResponsable=\"matAutocomplete\">\n                <mat-option *ngFor=\"let usuario_responsable of filteredUsuarioResponsable | async\" [value]=\"usuario_responsable.nick\">\n                    {{usuario_responsable.nick}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n\n        <!-- Proveedor -->\n        <span class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\" formControlName=\"proveedor\">\n            <button mat-icon-button matSuffix>\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n            <mat-autocomplete #autoProveedor=\"matAutocomplete\">\n                <mat-option *ngFor=\"let proveedor of filteredProveedor | async\" [value]=\"proveedor.RazonSocial\">\n                    {{proveedor.RazonSocial}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>            \n\n        <!-- Deposito -->\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <mat-select formControlName=\"deposito\">\n                <mat-option [value]=\"-1\">Todos</mat-option>\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n    </form>\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \n            [style.border]=\"color_primario || '' \"\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\n            <span class=\"font-medium text-base\">Limpiar</span>\n        </button>\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\n            <span class=\"text-white font-bold\">Filtrar</span>\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { IRemito } from '../models/remito';\nimport { RemitosService } from '../service/remitos.service';\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { SaveComponent } from './save/save.component';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { FormControl } from '@angular/forms';\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from 'environments/environment';\nimport { SearchService } from 'app/layout/common/search/search.service';\nimport { MatButton } from '@angular/material/button';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\nimport { IFilter } from '@shared/models/filter';\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\nimport { Router } from '@angular/router';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\n@Component({\n    selector: 'app-remitos',\n    templateUrl: './remitos.component.html',\n    styleUrls: ['./remitos.component.scss']\n})\nexport class RemitosComponent implements OnInit, OnDestroy {\n    remitos: IRemito[];\n    public dataSource: MatTableDataSource<IRemito> = new MatTableDataSource();\n    headers = ['Fecha', 'Hora', 'Responsable', 'Observaciones', 'Deposito', 'Proveedor', 'Orden compra', 'Acciones'];\n    column_params = ['fecha', 'hora', 'nick_usuario', 'observaciones', 'descripcion_deposito', 'descripcion_proveedor', 'nro_orden_compra', 'acciones'];\n    funcionesObjeto = null;\n    accionesObjeto = null;\n    showMenu: any;\n    filtroBusqueda: string = '';\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'descripcion_proveedor'];\n    filter: IFilter = {\n        proveedor: '',\n        deposito: -1,\n        filtroFechaInicio: '',\n        filtroFechaFin: ''\n    };\n    @Input() extraParams = '';\n    @Output() parametrosActualizados = new EventEmitter<any>();\n    env = environment.stock.view_stock_remitos + '?sort=-fecha_hora';\n    search: FormControl = new FormControl('');\n    sortValue: string;\n    FilterEventSub$: Subscription;\n    SearchTextSub$: Subscription;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'border-primary text-primary';\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n    puedeCrear: boolean = false;\n\n    constructor(\n        private _remitoService: RemitosService,\n        private _empresaService: EmpresaService,\n        private confirm: FuseConfirmationService,\n        private alert: AppAlertService,\n        private dialogo: MatDialog,\n        private _searchService: SearchService,\n        private _menuService: JedsMenuService,\n        private router: Router,\n        public _headerTextService: HeaderTextService,\n\n    ) {\n        this._headerTextService.setTitulo(this.router);\n\n        /**\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\n         */\n        this.funcionesObjeto = [\n            {\n                iconoAccion: (remito: IRemito) => '',\n                iconoAccionado: (remito: IRemito) => '',\n                iconoDeshabilitado: (remito: IRemito) => '',\n                visible: (remito: IRemito) => false\n            }\n        ];\n\n        this.showMenu = (remito: IRemito) => true;\n\n        this.accionesObjeto = [\n            {\n                icono: \"view\",\n                nombre_boton: \"Ver Remito\",\n                functionName: 'ver',\n                iconoAccion: (remito: IRemito) => 'jedstion:ver',\n                iconoAccionado: (remito: IRemito) => '',\n                iconoDeshabilitado: (remito: IRemito) => '',\n                visible: (remito: IRemito) => true\n            },\n            {\n                icono: \"Editar\",\n                nombre_boton: \"Editar\",\n                functionName: 'editar',\n                iconoAccion: (remito: IRemito) => remito.puede_modificar === 1 ? 'jedstion:editar' : 'jedstion:editar_disabled',\n                iconoAccionado: (remito: IRemito) => '',\n                iconoDeshabilitado: (remito: IRemito) => '',\n                visible: (remito: IRemito) => true\n            },\n            {\n                icono: \"Eliminar\",\n                nombre_boton: \"Eliminar\",\n                functionName: 'eliminar',\n                iconoAccion: (remito: IRemito) => remito.puede_eliminar === 1 ? 'jedstion:eliminar' : 'jedstion:eliminar_disabled',\n                iconoAccionado: (remito: IRemito) => '',\n                iconoDeshabilitado: (remito: IRemito) => '',\n                visible: (remito: IRemito) => true\n            }\n        ]\n    }\n\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\n    ngOnInit(): void {\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(empresa => {\n                this.color_primario = empresa.color_primario;\n                this.color_secundario = empresa.color_secundario;\n            });\n\n        // Load empresa data\n        this._empresaService.getEmpresa();\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\n            debounceTime(750),\n            distinctUntilChanged()\n        )\n            .subscribe(value => {\n                this.filtroBusqueda = value;\n                this.tabla.filters(this.filtroBusqueda);\n            });\n\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\n            this.onFilterMenu(this._searchService.getFilterOrigin())\n        });\n    }\n\n    onFilterMenu(origin: MatButton) {\n        this._menuService\n            .open(FilterMenuComponent, origin._elementRef, {\n                filter: this.filter,\n                data: this.tabla.getElementosExistentes()\n            })\n            .afterClosed()\n            .subscribe({\n                next: filter => {\n                    if (filter) {\n                        this.filter = filter;\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\n                        this.extraParams += this.filter.usuario_responsable != '' ? \"filter[nick_usuario]=\" + this.filter.usuario_responsable + '&' : '';\n                        this.extraParams += this.filter.proveedor != '' ? \"filter[descripcion_proveedor]=\" + this.filter.proveedor + '&' : '';\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\n\n                        this.tabla.filters(this.filtroBusqueda);\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\n\n                    }\n                },\n            });\n    }\n\n    /**\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\n * @param event \n */\n    generarAcciones(event: { name: string, params: any }) {\n        switch (event.name) {\n            case 'ver':\n                this.verRemito(event);\n                break;\n            case 'editar':\n                this.updateRemito(event);\n                break;\n            case 'eliminar':\n                if (event.params.data.puede_eliminar === 0) return this.alert.warning('No tiene permiso para eliminar remitos');\n                this.deleteRemito(event);\n                break;\n        }\n    }\n\n    /**\n     * Esta funcion guarda un item\n     */\n    saveRemito() {\n        this.dialogo\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\n            .componentInstance.creadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.alert.success(\"Remito creado con éxito.\");\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n\n    /**\n     * Esta funcion ve la informacion de un item\n     * @param event \n     */\n    updateRemito(event) {\n        const modal_config = {\n            model: event.params.data,\n            title: `Editar Remito ${event.params.data.fecha} - ${event.params.data.hora}`,\n            soloLectura: false\n        };\n\n        this.dialogo\n            .open(SaveComponent, { data: modal_config, panelClass: 'my-dialog', autoFocus: false })\n            .componentInstance.editadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.alert.success(\"Remito editado con éxito.\");\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n    /**\n     * Esta funcion ve la informacion de un item\n     * @param event \n     */\n    verRemito(event) {\n        const modal_config = {\n            model: event.params.data,\n            title: `Ver Remito ${event.params.data.fecha} - ${event.params.data.hora}`,\n            soloLectura: true\n        };\n\n        this.dialogo\n            .open(SaveComponent, { data: modal_config, panelClass: 'my-dialog', autoFocus: false })\n            .componentInstance.editadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n\n    /**\n     * Esta funcion elimina un item\n     * @param event \n     */\n    deleteRemito(event) {\n        this.confirm.open({\n            title: \"Eliminar Remito: \" + event.params.data.fecha,\n            message: `¿Desea eliminar el remito realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\n            dismissible: false,\n            actions: {\n                confirm: {\n                    show: true,\n                    color: 'warn',\n                    label: 'Si',\n                },\n                cancel: {\n                    show: true,\n                    label: 'No',\n                },\n            },\n        })\n            .afterClosed()\n            .subscribe(res => {\n                if (res === 'confirmed') {\n                    this._remitoService.deleteRemito(event.params.data.idremito).subscribe({\n                        next: (res) => {\n                            // Manejar la respuesta exitosa\n                            this.alert.success(\"Remito eliminado con éxito.\");\n                            if (res) {\n                                this.tabla.renderTabla()\n                            }\n                        },\n                        error: (error) => {\n                            // Manejar el error\n                            console.error('Error en el servicio:', error);\n                            this.alert.warning(\"Este remito no puede eliminarse. Tiene elementos asociados.\");\n                        }\n                    });\n                }\n            });\n    }\n\n    habilitarBoton(valor: boolean) {\n        this.puedeCrear = valor;\n    }\n\n    ngOnDestroy(): void {\n        this._searchService.unsubscribe();\n        this.dialogo.closeAll();\n    }\n}","<div class=\"w-full flex flex-col relative \">\n    <div class=\"mb-12 mt-6\">\n        <!-- Contenedor del botón -->\n        <div class=\"absolute right-10\">\n            <button *ngIf=\"puedeCrear\" mat-flat-button (click)='saveRemito()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\n                <div class=\"flex item-center\">\n                    <!-- SVG con fill=\"currentColor\" -->\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\n                    </svg>\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Remito</span>\n                </div>\n            </button>\n        </div>\n    </div>\n    <div class=\"pr-2 pl-2 mt-2\">\n        <!-- Tabla dinámica -->\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\n            (functionEmitter)=\"generarAcciones($event)\" (puedeCrearEmitter)=\"habilitarBoton($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\"\n            [acciones]=\"accionesObjeto\" [showMenu]=\"showMenu\">\n        </app-tabla-dinamica>\n    </div>\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { ICreateRemito, IRemito } from '../../models/remito';\nimport { RemitosService } from '../../service/remitos.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\nimport { BehaviorSubject, Observable, Subject, combineLatest, debounceTime, finalize, firstValueFrom, map, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DatePipe } from '@angular/common';\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\nimport { IAlertConfig } from '@shared/models/alert';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\nimport { IItemOrdenCompraPendiente } from 'app/modules/compras/ordenes-de-compra/models/orden-de-compra';\n\n@Component({\n    selector: 'app-save-remitos',\n    templateUrl: './save.component.html',\n    styleUrls: ['./save.component.scss'],\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\n})\nexport class SaveComponent implements OnInit {\n    // Necesarios para la app\n    title: string;\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\n    showAlert = false;\n    _alertConfig: IAlertConfig;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'bg-primary';\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n    maxPalabras: number = 150;\n    minDate: Date;\n    maxDate: Date;\n    deposito_default = 0;\n    mostrarSpinner = true;\n    mostrar_mensaje: boolean = false;\n\n\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\n\n    // Particulares del modulo\n    soloLectura: boolean;\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad_pedida', 'cantidad_pendiente', 'cantidad_a_recibir'];\n    filteredDepositos: Observable<IDeposito[]>;\n    filteredProveedores: Observable<IProveedor[]>;\n    filteredOrdenesDeCompraSubject = new BehaviorSubject<any[]>([]);\n    form: FormGroup;\n    remito: IRemito;\n    user: any;\n    items_oc_pendientes_aux: IItemOrdenCompraPendiente[] = [];\n    items_oc_pendientes: any[] = [];\n    proveedores: any[] = [];\n    depositos: IDeposito[] = [];\n    orden_compras: any[] = [];\n    oc_pendientes = new BehaviorSubject<any[]>([]);;\n    mov_art_list: any[] = [];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private _remitosService: RemitosService,\n        private _empresaService: EmpresaService,\n        private datePipe: DatePipe,\n        public alert: AppAlertService,\n        public dialogRef: MatDialogRef<SaveComponent>,\n    ) {\n        this.remito = this.data?.model ? this.data?.model : null;\n        this.title = this.data?.model ? this.data.title : `Nuevo Remito`;\n\n        this.soloLectura = this.data?.soloLectura;\n\n        this.user = JSON.parse(localStorage.getItem('user'));\n\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\n        this.minDate = null;\n        // Define maxDate como el dia de hoy\n        this.maxDate = new Date();\n    }\n\n    ngOnInit(): void {\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(empresa => {\n                this.color_primario = empresa.color_primario;\n                this.color_secundario = empresa.color_secundario;\n                this.deposito_default = empresa.deposito_default;\n            });\n\n        // Load empresa data\n        this._empresaService.getEmpresa();\n        this.newForm();\n        this.loadServices();\n\n        this.subscribeAlert();\n\n        this.setupProveedorValueChange();\n        this.setupOrdenCompraValueChange();\n    }\n\n    /**\n    * Metodo de alertas\n    */\n    subscribeAlert() {\n        this.alert.emitConfig.subscribe({\n            next: (config: IAlertConfig) => {\n                this.showAlert = true;\n                this._alertConfig = {\n                    ...config,\n                    appearance: 'border',\n                };\n                let time = 2;\n                timer(100, 1500)\n                    .pipe(\n                        finalize(() => {\n                            this.showAlert = false;\n                            this._alertConfig = null;\n                        }),\n                        takeWhile(() => time > 0),\n                        takeUntil(this._unsubscribeAll),\n                        tap(() => (time -= 1))\n                    )\n                    .subscribe();\n            },\n        });\n    }\n\n    /**\n     * Este metodo inicializa el formulario\n     */\n    newForm() {\n        const [dia, mes, anio] = this.remito ? this.remito.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\n\n        this.form = new FormGroup({\n            fecha: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')) }, [Validators.required]),\n            hora: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito?.hora ? this.remito.hora : this.datePipe.transform(new Date(), 'HH:mm')) }, [Validators.required]),\n            proveedor: new FormControl({ disabled: this.soloLectura || this.remito ? true : false, value: (this.remito ? this.remito.descripcion_proveedor : '') }, [Validators.required]),\n            oc_pendiente: new FormControl({ disabled: this.soloLectura || this.remito ? true : false, value: (this.remito ? { idordencompra: this.remito.idordencompra, numero: this.remito.nro_orden_compra, fecha: this.remito.fecha_oc } : '') }, [Validators.required]),\n            deposito: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito ? { descripcion: this.remito.descripcion_deposito, iddeposito: this.remito.iddeposito } : '') }, Validators.required),\n            observaciones: new FormControl({ disabled: this.data?.soloLectura ? true : false, value: (this.remito ? this.remito.observaciones : '') }, [Validators.maxLength(this.maxPalabras)]),\n        });\n    }\n\n    /**\n     * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\n     */\n    async loadServices() {\n        await Promise.all([\n            this.getDepositos(),\n            this.getOrdenCompras(),\n            this.getItemsOrdenDeCompraPendiente(),\n        ]).then(() => {\n            this.mostrarSpinner = false;\n        })\n    }\n\n    // ############### Llamados a los servicios ###################\n\n    /**\n     * Controlador que obtiene los depósitos\n     * @param option \n     */\n    async getDepositos(option?) {\n        const Depositos = await firstValueFrom(this._remitosService.getDepositos(option));\n        new Promise(async (resolve) => {\n            this.depositos = Depositos.list;\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\n                startWith(''),\n                map((value) => this._filterDepositos(value)),\n            );\n\n            // Filtrar y autoasignar el depósito por defecto\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\n            if (depositoPorDefecto && !this.remito) {\n                this.form.get('deposito').setValue(depositoPorDefecto);\n            }\n            resolve(true);\n        })\n    };\n\n    /**\n     * Este metodo obtiene las ordenes de compra pendientes de entrega con sus items\n     * @param object \n     */\n    async getItemsOrdenDeCompraPendiente(object?) {\n\n        if (this.remito) {\n            object = {\n                idremito: this.remito.idremito\n            }\n        }\n\n        const OrdenesDeCompraPendiente = await firstValueFrom(this._remitosService.getItemsOcPendiente(object));\n\n        //Encapsulo solo las propiedades que quiero utilizar.\n        this.items_oc_pendientes_aux = OrdenesDeCompraPendiente.list.map((item: IItemOrdenCompraPendiente) => {\n            return {\n                iditemordencompra: item.iditemordencompra,\n                idordencompra: item.idordencompra,\n                idarticulo: item.idarticulo,\n                codigo_interno_articulo: item.codigo_interno_articulo,\n                descripcion_articulo: item.descripcion_articulo,\n                idunidadmedida: item.idunidadmedida,\n                descripcion_um: item.descripcion_um,\n                cantidad_entregada: Number(item.cantidad_entregada),\n                cantidad_pendiente: Number(item.cantidad_pendiente),\n                cantidad_pedida: Number(item.cantidad_pedida),\n            }\n        });\n\n        this.items_oc_pendientes = this.items_oc_pendientes_aux;\n\n        if (this.remito) this.crearGrillaForm(this.items_oc_pendientes);\n    }\n\n    /**\n    * Esta funcion es la encargada de obtener los datos de las ordenes de compra y que no se repitan.\n    * @param idproveedor Cuando queremos obtener solo las ordenes de compra de un proveedor utilicamos su id para filtrar.\n    */\n    async getOrdenCompras(event?) {\n        let filter = {\n            idproveedor: event?.Codigo ? event?.Codigo : null,\n            idordencompra: event?.idordencompra ? event?.idordencompra : null\n        }\n\n        const ordenes_de_compra = await firstValueFrom(this._remitosService.getOrdenesDeCompra(filter));\n\n        this.orden_compras = ordenes_de_compra.result.map(oc => { return { ...oc, idordencompra: oc.codigo } });\n\n        // Ordenar las ordenes de compra por fecha (en formato 'yyyy-mm-dd')\n        this.orden_compras.sort((a, b) => {\n            const fechaA = new Date(a.fecha); // Convertimos la cadena de texto en un objeto Date\n            const fechaB = new Date(b.fecha); // Convertimos la cadena de texto en un objeto Date\n            return fechaB.getTime() - fechaA.getTime(); // Comparamos las marcas de tiempo\n        });\n\n        this.oc_pendientes.next(this.orden_compras);\n\n        //Encapsulo solo las propiedades que quiero utilizar.\n        this.proveedores = this.orden_compras.map(p => {\n            return {\n                Codigo: p.proveedor,\n                RazonSocial: p.proveedor_descripcion\n            }\n        }).sort((a, b) => {\n            return a.RazonSocial.localeCompare(b.RazonSocial); // Ordena alfabéticamente\n        });\n\n        this.proveedores = Array.from(new Map(this.proveedores.map(p => [p.Codigo, p])).values());\n\n        new Promise(async (resolve) => {\n            //Esta fraccion de codigo es para filtrar lo que se escriba en el input.\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\n                startWith(''),\n                map((value) => this._filterProveedores(value)),\n            );\n            resolve(true);\n        });\n    }\n\n    /**\n     * Metodo de persistencia de datos\n     */\n    onSubmit() {\n        // Verificar la longitud de las observaciones\n        if (!this.isPalabraMaxLengthReached()) {\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\n        }\n\n        if (!this.form.valid) {\n            return this.alert.error('Revise Los Datos Ingresados');\n        } else {\n            // Validar que se haya seleccionado un proveedor válido solo si se está agregando un nuevo remito o se cambió el proveedor\n            if (!this.remito || (this.remito && this.form.get('proveedor').value !== this.remito.descripcion_proveedor)) {\n                const proveedorSeleccionado = this.form.get('proveedor').value;\n                const proveedorExistente = this.proveedores.find(proveedor => proveedor.Codigo === proveedorSeleccionado.Codigo);\n                if (!proveedorExistente) {\n                    return this.alert.error('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\n                }\n            }\n\n            const existe_cantidad_item_mayor_a_la_solicitada = this.mov_art_list.find((item: IItemOrdenCompraPendiente) => item.cantidad_a_recibir.value > item.cantidad_pedida['value']);\n            if (existe_cantidad_item_mayor_a_la_solicitada) {\n                return this.alert.error('Error al cargar Remito. No se puede recibir una cantidad mayor a la pedida');\n            }\n\n            let movimientos = this.mov_art_list.map((objeto: IItemOrdenCompraPendiente) => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\n                idordencompraitem: objeto.iditemordencompra,\n                idarticulo: objeto.idarticulo,\n                cantidad: objeto.cantidad_a_recibir.value,\n                idunidadmedida: objeto.idunidadmedida,\n            }));\n\n            // Quito los items con cantiadd cero para no incluirlos en el payload de persistencia\n            movimientos = movimientos.filter((movimiento: { idordencompraitem: number, idarticulo: number, cantidad: number, idunidadmedida: number }) => movimiento.cantidad > 0);\n\n            const existen_items_con_cantidad_cero_en_edicion = this.remito && movimientos.length === 0 ? true : false;\n\n            if (existen_items_con_cantidad_cero_en_edicion) return this.alert.error('En edición no puede haber ítems con cantidad igual a cero');\n\n            const fecha = this.form.get('fecha').value;\n            const hora = this.form.get('hora').value;\n\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\n\n            // Se concatena a ambas fecha y hora\n            const fecha_hora = `${fecha_formateada} ${hora}`;\n\n            const payload: ICreateRemito = {\n                remito: {\n                    idusuario: this.user.id,\n                    fecha_hora: fecha_hora,\n                    iddeposito: this.form.get('deposito').value.iddeposito,\n                    idordencompra: this.form.get('oc_pendiente').value.idordencompra,\n                    observaciones: this.form.get('observaciones').value,\n                },\n                movimientos: movimientos\n            };\n\n            if (this.remito?.idremito) {\n                this._remitosService.updateRemito(payload, this.remito.idremito)\n                    .subscribe({\n                        next: (data) => {\n                            if (data) {\n                                this.editadoExitosamente.emit();\n                                this.dialogRef.close(data);\n                            }\n                        }\n                    });\n            } else {\n                this._remitosService.saveRemito(payload)\n                    .subscribe({\n                        next: (data) => {\n                            if (data) {\n                                this.creadoExitosamente.emit();\n                                this.dialogRef.close(data);\n                            }\n                        }\n                    });\n            }\n        }\n    }\n\n    /**\n    * Este metodo cierra el matdialog\n    */\n    onCloseMenu() {\n        this.dialogRef.close(false)\n    }\n\n    // ############### Metodos funcionales ###################\n\n    /**\n    * Metodo que ayuda al autocompletado de un input\n    * @param deposito \n    * @returns \n    */\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\n        const filterValue = deposito.toString().toLowerCase();\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\n    }\n\n    /**\n    * Metodo que ayuda al autocompletado de un input\n    * @param proveedor \n    * @returns \n    */\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\n        const filterValue = proveedor.toString().toLowerCase();\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\n    }\n\n    /**\n    * Funcion para limpiar campos\n    */\n    limpiarCasillero(input) {\n        this.form.get(input).setValue('');\n        if (input == \"proveedor\") {\n            this.form.get('oc_pendiente').setValue('');\n            this.getOrdenCompras();\n        }\n\n        this.dataSource = new MatTableDataSource([]);\n    }\n\n    /**\n    * Funcion para contar las palabras en las observaciones\n    */\n    getPalabrasLength(): number {\n        const observaciones = this.form.get('observaciones').value;\n        return observaciones ? observaciones.length : 0;\n    }\n\n    /**\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\n    */\n    isPalabraMaxLengthReached(): boolean {\n        return this.getPalabrasLength() <= this.maxPalabras;\n    }\n\n    /**\n     * Este metodo obtiene el valor de texto del input que lo utilice\n     * @param option \n     * @returns \n     */\n    getTextInput(option) {\n        if (option.descripcion) {\n            return option.descripcion;\n        }\n        if (option.deposito) {\n            return option.deposito;\n        }\n        if (option.RazonSocial) {\n            return option.RazonSocial;\n        }\n        if (option.idordencompra || option.codigo) {\n            return option ? `N°${option.numero} | ${option.fecha}` : ''\n        }\n\n        return option;\n    }\n\n    /**\n * Esta funcion maneja las cambios de seleccion que puedan tener articulos, unidades de medida u ordenes de compra.\n * @param $event \n*/\n    seleccionItem($event) {\n        // Si se ha seleccionado un proveedor explícitamente, actualiza el campo del proveedor\n        if ($event?.Codigo) {\n            let filtered = this.orden_compras.filter(oc => oc.proveedor === $event.Codigo); // Buscamos las OC que posee ese proveedor.\n            this.oc_pendientes.next(filtered)\n            // Actualizamos el campo del proveedor sin emitir eventos\n            this.form.get('proveedor').setValue($event, { emitEvent: false });\n        }\n\n        // Si se ha seleccionado una OC, actualiza el campo de OC pendiente\n        if ($event?.idordencompra) {\n            let proveedor = this.proveedores.find(p => p.Codigo === $event.proveedor); // Busco el proveedor\n            this.form.get('proveedor').setValue(proveedor, { emitEvent: false }); // Lo seteo en el campo proveedor\n\n            let filtered = this.orden_compras.filter(oc => oc.proveedor === proveedor.Codigo);\n\n            this.oc_pendientes.next(filtered)\n\n            // Filtro los items de la orden de compra pendiente...\n            this.items_oc_pendientes = this.items_oc_pendientes_aux\n                .filter(item => item.idordencompra === $event.idordencompra) //...filtro todos los items que tengan la misma orden de compra que se selecciono en el select...\n                .map(item => { //... Al devolverlo...\n                    return {\n                        ...item,\n                        cantidad_pedida: Number(item.cantidad_pedida), //... Convierto en numeros estos campos que son strings...\n                        cantidad_pendiente: Number(item.cantidad_pendiente),\n                        cantidad_entregada: Number(item.cantidad_entregada),\n                    }\n                });\n\n            // Creo la grilla editable\n            this.crearGrillaForm(this.items_oc_pendientes);\n\n        }\n    }\n\n    /**\n    * Metodo encargado de crear una grilla dinamica\n    * @param Items \n    */\n    crearGrillaForm(Items) {\n        this.mov_art_list = Items;\n\n        this.mov_art_list.forEach((item, index, items_array) => {\n\n            // Define los FormControls\n            const cantidad_a_recibir_control = new FormControl(\n                { value: this.remito?.idremito ? item.cantidad_entregada || null : item.cantidad_pendiente || null, disabled: this.soloLectura },\n                [Validators.required, Validators.min(0)]\n            );\n\n            const cantidad_pendiente_control = new FormControl(\n                { value: item.cantidad_pendiente || null, disabled: true },\n                [Validators.required, Validators.min(0)]\n            );\n\n            const cantidad_pedida_control = new FormControl(\n                { value: item.cantidad_pedida || null, disabled: true },\n                [Validators.required, Validators.min(0)]\n            );\n\n            // Asigna los controles al item\n            items_array[index].cantidad_a_recibir = cantidad_a_recibir_control;\n            items_array[index].cantidad_pendiente = cantidad_pendiente_control;\n            items_array[index].cantidad_pedida = cantidad_pedida_control;\n        });\n\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\n    }\n\n    setupProveedorValueChange() {\n        this.form.get('proveedor').valueChanges.pipe(\n            debounceTime(750),\n            takeUntil(this._unsubscribeAll)\n        ).subscribe(value => {\n            if (value?.Codigo) {\n                // Filtra las órdenes de compra por proveedor\n                const filtered = this.orden_compras.filter(oc => oc.proveedor === value.Codigo);\n                this.oc_pendientes.next(filtered); // Actualiza las órdenes de compra disponibles\n            } else {\n                this.oc_pendientes.next(this.orden_compras); // Limpia si no hay proveedor seleccionado\n            }\n        });\n    }\n\n    setupOrdenCompraValueChange() {\n        combineLatest([\n            this.oc_pendientes.asObservable(),\n            this.form.get('oc_pendiente').valueChanges.pipe(debounceTime(750), startWith(''))\n        ])\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(([ordenes, value]) => {\n                const filterValue = value?.toString().toLowerCase() || '';\n                const filtered = ordenes.filter(oc =>\n                    oc.numero.toString().toLowerCase().includes(filterValue) ||\n                    oc.fecha.toString().toLowerCase().includes(filterValue)\n                );\n                this.filteredOrdenesDeCompraSubject.next(filtered); // Emite las órdenes filtradas\n            });\n    }\n\n    /**\n    * Filtro para buscar en la grilla de articulos\n    * @param filterValue \n    */\n    applyFilter(filterValue: string): void {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n}","<div\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl xl:max-h-[700px] xl:min-h-[630px] sm:max-h-[630px] sm:min-h-[500px] overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\n        <div>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <!-- Spinner -->\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\n\n    <!-- Alert -->\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\n        {{ _alertConfig.message }}\n    </fuse-alert>\n\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4 overflow-y-auto\" [formGroup]=\"form\">\n        <div class=\"flex flex-col w-full h-full p-4\">\n\n            <!-- Datos de cabecera -->\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\n                        [max]=\"maxDate\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\n                    <mat-label>Hora</mat-label>\n                    <input matInput formControlName=\"hora\" type=\"time\" />\n                </mat-form-field>\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\n                    <mat-label>Proveedor</mat-label>\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\"\n                        (optionSelected)=\"seleccionItem($event)\">\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextInput\">\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\n                            {{proveedor.RazonSocial}}\n                        </mat-option>\n                    </mat-autocomplete>\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\n                        *ngIf=\"form.get('proveedor').value && !this.data?.soloLectura && !this.remito\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\n                    <mat-label>OC</mat-label>\n                    <input type=\"text\" matInput formControlName=\"oc_pendiente\" [matAutocomplete]=\"auto_oc\"\n                        (ngModelChange)=\"seleccionItem($event)\">\n                    <mat-autocomplete autoActiveFirstOption #auto_oc=\"matAutocomplete\" [displayWith]=\"getTextInput\">\n                        <mat-option *ngFor=\"let oc of filteredOrdenesDeCompraSubject | async \" [value]=\"oc\">\n                            <b> N° {{oc.numero}} </b> | <i> {{oc.fecha}}</i>\n                        </mat-option>\n                    </mat-autocomplete>\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('oc_pendiente')\" class=\"mr-2\"\n                        *ngIf=\"form.get('oc_pendiente').value && !this.data?.soloLectura && !this.remito\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </mat-form-field>\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\n                    <mat-label>Depósito</mat-label>\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextInput\">\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\n                            {{ deposito.descripcion }}\n                        </mat-option>\n                    </mat-autocomplete>\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\n                        *ngIf=\"form.get('deposito').value && mov_art_list.length == 0\">\n                        <mat-icon>clear</mat-icon>\n                    </button>\n                </mat-form-field>\n            </div>\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\n                <mat-label>Observaciones</mat-label>\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\n                </div>\n            </mat-form-field>\n\n            <!-- Barra de busqueda de articulos en la grilla -->\n            <app-grid-filter (filterChange)=\"applyFilter($event)\"></app-grid-filter>\n\n            <!-- Grilla -->\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\n                    <ng-container matColumnDef='codigointerno'>\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\n                            [style.background]=\"color_primario || '' \"\n                            class=\"rounded-tl-lg text-white text-center w-auto\">\n                            Codigo Interno</th>\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\n                            {{row.codigo_interno_articulo}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef='articulo'>\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\n                            [style.background]=\"color_primario || '' \" class=\"text-white text-center w-auto\">\n                            Articulo</th>\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\n                            {{row.descripcion_articulo}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef='unidadmedida'>\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\n                            [style.background]=\"color_primario || '' \" class=\"text-white text-center w-auto\">Unidad de\n                            medida</th>\n                        <td mat-cell *matCellDef='let row'>\n                            {{ row.descripcion_um }}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef='cantidad_pedida'>\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\n                            [style.background]=\"color_primario || ''\" class=\"text-white text-center w-auto\">Cant. Pedida\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <input matInput [formControl]=\"row.cantidad_pedida\" type=\"number\" min=\"0\" placeholder=\"0\"\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-200 transition duration-150 ease-in-out\" />\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef='cantidad_pendiente'>\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\n                            [style.background]=\"color_primario || ''\" class=\"text-white text-center w-auto\">Cant.\n                            Pendiente</th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <input matInput [formControl]=\"row.cantidad_pendiente\" type=\"number\" min=\"0\" placeholder=\"0\"\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-200 transition duration-150 ease-in-out\" />\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef='cantidad_a_recibir'>\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\n                            [style.background]=\"color_primario || ''\"\n                            class=\" rounded-tr-lg text-white text-center w-auto\">{{!this.remito ? 'Cant. a recibir' :\n                            'Cant. Entregada'}}</th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <input matInput [formControl]=\"row.cantidad_a_recibir\" type=\"number\" min=\"0\" placeholder=\"0\"\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\n                        </td>\n                    </ng-container>\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\n                </table>\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\n                </div>\n            </div>\n\n            <!-- Mostrar el contador de items -->\n            <div class=\"flex w-full items-center my-2 px-4\">\n                <span class=\"flex-grow\"></span>\n                <label class=\"text-gray-700 text-sm\">\n                    Total de artículos: {{ dataSource.data.length }}\n                </label>\n            </div>\n\n        </div>\n    </form>\n    <div *ngIf=\"!this.data?.soloLectura && !mostrarSpinner\"\n        class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\n            [style.background-color]=\"color_primario || '' \"\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\n            <span class=\"text-white font-medium text-base\">Guardar</span>\n        </button>\n    </div>\n</div>","import { RouterModule, Routes } from '@angular/router';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FuseAlertComponent } from '@fuse/components/alert';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RemitosComponent } from './components/remitos.component';\nimport { SaveComponent } from './components/save/save.component';\nimport { RemitosService } from './service/remitos.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSortModule } from '@angular/material/sort';\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\nconst routes: Routes = [\n    {\n        path: '',\n        component: RemitosComponent\n    }\n];\n@NgModule({\n    declarations: [RemitosComponent, SaveComponent, FilterMenuComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MatTableModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatIconModule,\n        FuseAlertComponent,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatToolbarModule,\n        MatCheckboxModule,\n        MatSortModule,\n        TablaDinamicaModule,\n        MatDialogModule,\n        MatDatepickerModule,\n        SharedComponentModule\n    ],\n    exports: [RouterModule],\n    providers: [RemitosService, JedsMenuService, AppAlertService, DatePipe]\n})\nexport class RemitosModule { }","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { Observable, Subject } from 'rxjs';\nimport { IRemito } from '../models/remito';\nimport { AuthService } from '@core/auth/auth.service';\nimport { IResponse, Response } from '@shared/models/response-with-token';\n\n@Injectable()\nexport class RemitosService {\n    constructor(private http: HttpClient, private _authService: AuthService) { }\n    /**\n     * Funcion en el Servicio \n     * @param remito \n     * @returns Crea un item nuevo\n     */\n    saveRemito(remito: IRemito): Observable<IRemito> {\n        return this.http.post<IRemito>(`${environment.stock.remitos}`, remito);\n    }\n\n    /**\n     * Funcion en el servicio\n     * @param remito\n     * @returns Item actualizado actualizado\n     */\n    updateRemito(remito: IRemito, idremito: number): Observable<IRemito> {\n        return this.http.put<IRemito>(`${environment.stock.remitos}` + '/' + idremito, remito);\n    }\n\n    /**\n     * Funcion en el servicio\n     * @param idremito \n     * @returns Elimina un item\n     */\n    deleteRemito(idremito: number): Observable<IRemito> {\n        return this.http.delete<IRemito>(`${environment.stock.remitos}` + '/' + idremito);\n    }\n\n    getDepositos(option?) {\n        let f = '?';\n        f += !option ? 'filter[activo]=1' : '';\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp.result\n                })\n            });\n        return subject.asObservable()\n    }\n\n    getProveedores(option?) {\n        let f = '?sort=RazonSocial';\n        f += !option ? 'filter[activo]=1' : '';\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp\n                })\n            });\n        return subject.asObservable();\n    }\n\n    getArticulosDepositos(deposito_origen: number) {\n        let f = `?filter[deposito]=${deposito_origen}`\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp.result\n                })\n            });\n        return subject.asObservable()\n    }\n\n    getUnidadesDeMedidaArticulos(idarticulo) {\n        let f = `?filter[idarticulo]=${idarticulo}`\n        f += `&expand=um`\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp.result\n                })\n            });\n        return subject.asObservable()\n    }\n\n    getItems(idremito: number) {\n        let f = `?filter[idremito]=${idremito}`;\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp.result\n                })\n            });\n        return subject.asObservable();\n    }\n\n    getUsuarios() {\n        let f = `?sort=asc`;\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp.result\n                })\n            });\n        return subject.asObservable();\n    }\n\n    getItemsOcPendiente(options?: { idremito?: number, idordencompra?: number}) {\n        let f = `?`;\n        f += options?.idordencompra === null && options?.idremito === null ? `filter[pendiente_entrega]=1&` : '';\n\n        f += options?.idordencompra ? `filter[idordencompra]=${options?.idordencompra}` : '';\n        f += options?.idremito ? `filter[idremito]=${options?.idremito}&` : '';\n\n        let subject = new Subject<any>();\n        this.http.get<Response[]>(`${environment.stock.view_items_oc_pendientes}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token;\n                subject.next({\n                    list: resp.result\n                })\n            });\n        return subject.asObservable();\n    }\n\n    /**\n    * Funcion en el servicio\n    */\n    getOrdenesDeCompra(options?: { idproveedor: number, idordencompra?: number }, filterLike?: string): Observable<IResponse<any>> {\n        let f = '?filter[estado]=1&';\n\n        f += options?.idproveedor ? `filter[proveedor]=${options.idproveedor}&` : '';\n        f += options?.idordencompra ? `filter[idordencompra]=${options.idordencompra}&` : '';\n\n        if(filterLike) {\n            f += `filter[or][0][numero][like]=${filterLike}&filter[or][1][fecha][like]=${filterLike}`;\n        }\n\n        let subject = new Subject<any>();\n\n        this.http.get<Response[]>(`${environment.compras.view_orden_compras}${f}`)\n            .subscribe((resp: any) => {\n                this._authService.accessToken = resp.token,\n                    subject.next({\n                        'result': resp.result,\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\n                    })\n            });\n\n        return subject.asObservable();\n    }\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r9","ctx_r8","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","usuario_responsable_r10","nick","ɵɵadvance","ɵɵtextInterpolate1","proveedor_r11","RazonSocial","deposito_r12","iddeposito","ɵɵtextInterpolate","descripcion","FilterMenuComponent","constructor","data","_menuService","datePipe","_remitosService","_empresaService","usuarios","provedores","filterDeposito","filterFechas","movimientos_internos_list","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario_responsable","proveedor","deposito","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","getDepositos","getUsuarios","getProveedores","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","filteredUsuarioResponsable","controls","valueChanges","_filterUsuaurio","filterValue","toLowerCase","usuario","includes","_this2","Proveedores","filteredProveedor","_filterProveedor","provedor","_this3","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","DatePipe","i3","RemitosService","i4","EmpresaService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_31_Template","FilterMenuComponent_mat_option_42_Template","FilterMenuComponent_mat_option_50_Template","FilterMenuComponent_Template_button_click_52_listener","FilterMenuComponent_Template_button_click_55_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r3","ɵɵpipeBind1","_r5","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","RemitosComponent_button_3_Template_button_click_0_listener","ctx_r2","saveRemito","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ctx_r0","RemitosComponent","_remitoService","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","accionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","view_stock_remitos","search","puedeCrear","setTitulo","iconoAccion","remito","iconoAccionado","iconoDeshabilitado","visible","showMenu","icono","nombre_boton","functionName","puede_modificar","puede_eliminar","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","next","generarAcciones","name","verRemito","updateRemito","params","warning","deleteRemito","panelClass","componentInstance","creadoExitosamente","success","modal_config","model","title","fecha","hora","soloLectura","autoFocus","editadoExitosamente","message","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","idremito","renderTabla","error","console","habilitarBoton","valor","ngOnDestroy","unsubscribe","closeAll","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","viewQuery","RemitosComponent_Query","RemitosComponent_button_3_Template","RemitosComponent_Template_app_tabla_dinamica_functionEmitter_5_listener","$event","RemitosComponent_Template_app_tabla_dinamica_puedeCrearEmitter_5_listener","Validators","BehaviorSubject","combineLatest","finalize","takeWhile","tap","timer","MAT_DIALOG_DATA","ctx_r1","_alertConfig","type","showAlert","proveedor_r29","SaveComponent_form_10_button_20_Template_button_click_0_listener","_r31","ctx_r30","limpiarCasillero","oc_r32","numero","SaveComponent_form_10_button_29_Template_button_click_0_listener","_r34","ctx_r33","deposito_r35","SaveComponent_form_10_button_38_Template_button_click_0_listener","_r37","ctx_r36","ctx_r14","row_r38","codigo_interno_articulo","ctx_r16","row_r39","descripcion_articulo","ctx_r18","row_r40","descripcion_um","ctx_r20","row_r41","cantidad_pedida","ctx_r22","row_r42","cantidad_pendiente","ctx_r24","row_r43","cantidad_a_recibir","SaveComponent_form_10_Template_input_optionSelected_15_listener","_r46","ctx_r45","seleccionItem","SaveComponent_form_10_mat_option_18_Template","SaveComponent_form_10_button_20_Template","SaveComponent_form_10_Template_input_ngModelChange_24_listener","ctx_r47","SaveComponent_form_10_mat_option_27_Template","SaveComponent_form_10_button_29_Template","SaveComponent_form_10_mat_option_36_Template","SaveComponent_form_10_button_38_Template","SaveComponent_form_10_Template_app_grid_filter_filterChange_45_listener","ctx_r48","applyFilter","ɵɵelementContainerStart","SaveComponent_form_10_th_49_Template","SaveComponent_form_10_td_50_Template","ɵɵelementContainerEnd","SaveComponent_form_10_th_52_Template","SaveComponent_form_10_td_53_Template","SaveComponent_form_10_th_55_Template","SaveComponent_form_10_td_56_Template","SaveComponent_form_10_th_58_Template","SaveComponent_form_10_td_59_Template","SaveComponent_form_10_th_61_Template","SaveComponent_form_10_td_62_Template","SaveComponent_form_10_th_64_Template","SaveComponent_form_10_td_65_Template","SaveComponent_form_10_tr_66_Template","SaveComponent_form_10_tr_67_Template","SaveComponent_form_10_div_68_Template","form","_r4","minDate","maxDate","getTextInput","filteredProveedores","_r8","filteredOrdenesDeCompraSubject","_r11","filteredDepositos","mov_art_list","length","ɵɵpureFunction1","_c0","isPalabraMaxLengthReached","ɵɵtextInterpolate2","getPalabrasLength","maxPalabras","columns","SaveComponent_div_11_Template_button_click_1_listener","_r50","ctx_r49","onSubmit","ctx_r3","dialogRef","deposito_default","mostrarSpinner","mostrar_mensaje","items_oc_pendientes_aux","items_oc_pendientes","proveedores","depositos","orden_compras","oc_pendientes","user","JSON","parse","localStorage","getItem","Date","newForm","loadServices","subscribeAlert","setupProveedorValueChange","setupOrdenCompraValueChange","emitConfig","config","appearance","time","dia","mes","anio","split","disabled","required","descripcion_proveedor","oc_pendiente","idordencompra","nro_orden_compra","fecha_oc","observaciones","maxLength","Promise","all","getOrdenCompras","getItemsOrdenDeCompraPendiente","then","option","Depositos","_ref","resolve","_filterDepositos","depositoPorDefecto","find","_x","apply","arguments","object","OrdenesDeCompraPendiente","getItemsOcPendiente","item","iditemordencompra","idarticulo","idunidadmedida","cantidad_entregada","Number","crearGrillaForm","_this4","idproveedor","Codigo","ordenes_de_compra","getOrdenesDeCompra","result","oc","codigo","sort","a","b","fechaA","fechaB","getTime","p","proveedor_descripcion","localeCompare","Array","from","Map","values","_ref2","_filterProveedores","_x2","valid","proveedorSeleccionado","proveedorExistente","existe_cantidad_item_mayor_a_la_solicitada","movimientos","objeto","idordencompraitem","cantidad","movimiento","existen_items_con_cantidad_cero_en_edicion","fecha_formateada","fecha_hora","payload","idusuario","id","emit","toString","input","filtered","emitEvent","Items","forEach","index","items_array","cantidad_a_recibir_control","min","cantidad_pendiente_control","cantidad_pedida_control","asObservable","ordenes","trim","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_spinner_component_8_Template","SaveComponent_fuse_alert_9_Template","SaveComponent_form_10_Template","SaveComponent_div_11_Template","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","SharedComponentModule","routes","path","component","RemitosModule","imports","forChild","declarations","exports","http","_authService","post","remitos","put","delete","f","subject","resp","accessToken","token","administracion","getArticulosDepositos","deposito_origen","view_stock_articulo_depositos","getUnidadesDeMedidaArticulos","articulo_unidad_medidas","getItems","view_stock_movimientos","login","view_usuarios","options","view_items_oc_pendientes","filterLike","compras","view_orden_compras","ɵɵinject","HttpClient","AuthService","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_c1","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}