{"version":3,"file":"src_app_modules_stock_remitos_remitos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/remitos/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/remitos/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/remitos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/remitos/components/remitos.component.ts","./src/app/modules/stock/remitos/components/remitos.component.html","./src/app/modules/stock/remitos/components/save/save.component.ts","./src/app/modules/stock/remitos/components/save/save.component.html","./src/app/modules/stock/remitos/remitos.module.ts","./src/app/modules/stock/remitos/service/remitos.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-remitos',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'unidadmedida', 'cantidad', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    articulos_list = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _remitosService: RemitosService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.title = 'Añadir movimiento de articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulosOrdenCompra();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosOrdenCompra() {\r\n        const articulos_um_oc = await firstValueFrom(this._remitosService.getItemsOcPendiente(this.data.orden_compra)); //solicitamos los aticulos que esten en una OC\r\n        this.articulos = articulos_um_oc.list;\r\n        new Promise(async (resolve) => {\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        this.articulos.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = {\r\n                    idarticulo: item.idarticulo,\r\n                    codigo_interno: item.codigo_interno_articulo,\r\n                    descripcion: item.descripcion_articulo,\r\n                    idordencompraitem: item.iditemordencompra //Atencion!!! Cambio de nombres porque en sus respectibas tablas lo manejas de manera diferente!\r\n                };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextInput(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo.\r\n     * @param idarticulo \r\n     */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.descripcion_um;\r\n                }\r\n                return {\r\n                    idarticulo: a.idarticulo,\r\n                    idunidadmedida: a.idunidadmedida,\r\n                    descripcion_um: a.descripcion_um,\r\n                    cantidad_pendiente: a.cantidad_pendiente,\r\n                    idordencompraitem: a.iditemordencompra,\r\n                    factor_um: a.factor_um,\r\n                    um_base: um_base\r\n                }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionArticulo({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Cantidad Pendiente -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let cantidad_pendiente; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n            if (existeMovimiento && this.data.esEdicion === false) { //Sí existe minimo un movimiento...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente += Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                cantidad_pendiente = `${Number(articulo_um.cantidad_pendiente) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n\r\n                if (this.data.movimientos_eliminados) {\r\n                    let articulos_eliminados = this.data.movimientos_eliminados.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida);\r\n                    articulos_eliminados.forEach(ae => {\r\n                        cantidad_existente += Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                    })\r\n                    articulo_um.cantidad_pendiente = Number(articulo_um.cantidad_pendiente) + cantidad_existente;\r\n                }\r\n\r\n                if (existeMovimiento && !this.data.movimientos_eliminados) {\r\n                    let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                    //Si existen movimientos de articulos con la misma UM...\r\n                    articulos_existentes.forEach(ae => {\r\n                        cantidad_existente += Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                    })\r\n                    articulo_um.cantidad_pendiente = Number(articulo_um.cantidad_pendiente) + cantidad_existente;\r\n                }\r\n                cantidad_pendiente = articulo_um.cantidad_pendiente; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n\r\n            this.form.get('cantidad_pendiente').setValue(cantidad_pendiente) //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('cantidad_pendiente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            cantidad_pendiente: new FormControl(('')),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > this.form.get('cantidad_pendiente').value) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('La cantidad ingresada excede la cantidad pendiente en la orden de compra.');\r\n                    }\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('unidadmedida').setValue('');\r\n                        return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida.')\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= this.form.get('cantidad_pendiente').value && this.form.get('cantidad').value > 0) {\r\n                        // La cantidad ingresada es valida \r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value && um.idarticulo === this.form.get('articulo').value.idarticulo); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form.get('articulo').value,\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            cantidad: this.form.get('cantidad').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            idordencompraitem: unidadmedida.idordencompraitem,\r\n                            cantidad_pendiente: `${Number(articulo.cantidad_pendiente) - this.form.get('cantidad').value}`,\r\n                        }\r\n                        this.onCloseMenu(movimiento_articulo)\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                            {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}} {{um.um_base}})</i>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Cantidad Pendiente</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad_pendiente\" readonly=\"true\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Añadir</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IRemito } from '../../models/remito';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-remitos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuarioResponsable: Observable<IUsuario[]>;\r\n  provedores: IProveedor[] = [];\r\n  filteredProveedor: Observable<IProveedor[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IRemito[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _remitosService: RemitosService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario_responsable: new FormControl(('')),\r\n      proveedor: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    this.getProveedores();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario_responsable: '',\r\n      proveedor: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._remitosService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuarioResponsable = this.formFilters.controls['usuario_responsable'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n   */\r\n  async getProveedores() {\r\n    const Proveedores = await firstValueFrom(this._remitosService.getProveedores());\r\n    this.provedores = Proveedores.list;\r\n    this.filteredProveedor = this.formFilters.controls['proveedor'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProveedor(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterProveedor(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.provedores.filter(provedor =>\r\n      provedor.RazonSocial.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._remitosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario Responsable -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario Responsable</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario Responsable\" matInput [matAutocomplete]=\"autoUsuarioResponsable\" formControlName=\"usuario_responsable\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuarioResponsable=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario_responsable of filteredUsuarioResponsable | async\" [value]=\"usuario_responsable.nick\">\r\n                    {{usuario_responsable.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n\r\n        <!-- Proveedor -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\" formControlName=\"proveedor\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoProveedor=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedor | async\" [value]=\"proveedor.RazonSocial\">\r\n                    {{proveedor.RazonSocial}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>            \r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Deposito</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IRemito } from '../models/remito';\r\nimport { RemitosService } from '../service/remitos.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-remitos',\r\n    templateUrl: './remitos.component.html',\r\n    styleUrls: ['./remitos.component.scss']\r\n})\r\nexport class RemitosComponent implements OnInit, OnDestroy {\r\n    remitos: IRemito[];\r\n    public dataSource: MatTableDataSource<IRemito> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora', 'Responsable', 'Observaciones', 'Deposito', 'Proveedor', 'Orden compra', 'Acciones'];\r\n    column_params = ['fecha', 'hora', 'nick_usuario', 'observaciones', 'descripcion_deposito', 'descripcion_proveedor', 'nro_orden_compra', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick_usuario', 'descripcion_deposito', 'descripcion_proveedor'];\r\n    filter: IFilter = {\r\n        proveedor: '',\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.remitos + '?sort=-fecha_hora';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _remitoService: RemitosService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (remito: IRemito ) => 'jedstion:editar',\r\n                iconoAccionado: (remito: IRemito) => '',\r\n                iconoDeshabilitado: (remito: IRemito) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (remito: IRemito) => 'jedstion:eliminar',\r\n                iconoAccionado: (remito: IRemito) => '',\r\n                iconoDeshabilitado: (remito: IRemito) => '',\r\n            }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario_responsable != '' ? \"filter[nick_usuario]=\" + this.filter.usuario_responsable + '&' : '';\r\n                        this.extraParams += this.filter.proveedor != '' ? \"filter[descripcion_proveedor]=\" + this.filter.proveedor + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateRemito(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteRemito(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveRemito() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Remito creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateRemito(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Remito editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteRemito(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Remito: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el remito realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.descripcion_deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._remitoService.deleteRemito(event.params.data.idremito).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Remito eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este remito no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveRemito()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Remito</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { ICreateRemito, IRemito } from '../../models/remito';\r\nimport { RemitosService } from '../../service/remitos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { BehaviorSubject, Observable, Subject, combineLatest, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IItemOrdenCompraPendiente } from 'app/modules/compras/ordenes-de-compra/models/orden-de-compra';\r\n\r\n@Component({\r\n    selector: 'app-save-remitos',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 150;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    deposito_default = 0;\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    // Particulares del modulo\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad_pedida', 'cantidad_pendiente', 'cantidad_a_recibir'];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredOrdenesDeCompraSubject = new BehaviorSubject<any[]>([]);\r\n    form: FormGroup;\r\n    remito: IRemito;\r\n    user: any;\r\n    items_oc_pendientes_aux: IItemOrdenCompraPendiente[] = [];\r\n    items_oc_pendientes: any[] = [];\r\n    proveedores: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    orden_compras: any[] = [];\r\n    oc_pendientes = new BehaviorSubject<any[]>([]);;\r\n    mov_art_list: any[] = [];\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _remitosService: RemitosService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n    ) {\r\n        this.remito = this.data ? this.data : null;\r\n        this.title = this.remito?.idremito ? `Editar Remito ${this.remito.fecha} - ${this.remito.hora}` : `Nuevo Remito`;\r\n        /* this`user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.loadServices();\r\n\r\n        this.subscribeAlert();\r\n\r\n        this.setupProveedorValueChange();\r\n        this.setupOrdenCompraValueChange();\r\n    }\r\n\r\n    /**\r\n    * Metodo de alertas\r\n    */\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Este metodo inicializa el formulario\r\n     */\r\n    newForm() {\r\n        const [dia, mes, anio] = this.remito ? this.remito.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.remito?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.remito?.hora ? this.remito.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            proveedor: new FormControl((this.remito ? this.remito.descripcion_proveedor : ''), [Validators.required]),\r\n            oc_pendiente: new FormControl((this.remito ? { idordencompra: this.remito.idordencompra, numero: this.remito.nro_orden_compra, fecha: this.remito.fecha_oc } : ''), [Validators.required]),\r\n            deposito: new FormControl((this.remito ? this.remito.descripcion_deposito : ''), Validators.required),\r\n            observaciones: new FormControl((this.remito ? this.remito.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n     */\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this.getDepositos(),\r\n            this.getOrdenCompras(),\r\n            this.getItemsOrdenDeCompraPendiente(),\r\n        ])\r\n    }\r\n\r\n    // ############### Llamados a los servicios ###################\r\n\r\n    /**\r\n     * Controlador que obtiene los depósitos\r\n     * @param option \r\n     */\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._remitosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n            this.filteredDepositos = this.form.get('deposito').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.remito) {\r\n                this.form.get('deposito').setValue(depositoPorDefecto);\r\n            }\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Este metodo obtiene las ordenes de compra pendientes de entrega con sus items\r\n     * @param object \r\n     */\r\n    async getItemsOrdenDeCompraPendiente(object?) {\r\n\r\n        if (this.remito) {\r\n            object = {\r\n                idremito: this.remito.idremito\r\n            }\r\n        }\r\n\r\n        const OrdenesDeCompraPendiente = await firstValueFrom(this._remitosService.getItemsOcPendiente(object));\r\n\r\n        //Encapsulo solo las propiedades que quiero utilizar.\r\n        this.items_oc_pendientes_aux = OrdenesDeCompraPendiente.list.map((item: IItemOrdenCompraPendiente) => {\r\n            return {\r\n                iditemordencompra: item.iditemordencompra,\r\n                idordencompra: item.idordencompra,\r\n                idarticulo: item.idarticulo,\r\n                codigo_interno_articulo: item.codigo_interno_articulo,\r\n                descripcion_articulo: item.descripcion_articulo,\r\n                idunidadmedida: item.idunidadmedida,\r\n                descripcion_um: item.descripcion_um,\r\n                cantidad_entregada: Number(item.cantidad_entregada),\r\n                cantidad_pendiente: Number(item.cantidad_pendiente),\r\n                cantidad_pedida: Number(item.cantidad_pedida),\r\n            }\r\n        });\r\n\r\n        this.items_oc_pendientes = this.items_oc_pendientes_aux;\r\n\r\n        if (this.remito) this.crearGrillaForm(this.items_oc_pendientes);\r\n    }\r\n\r\n    /**\r\n     * Este metodo obtiene los movimientos realizados\r\n     * @param idremito \r\n     * @returns \r\n     */\r\n    async getItems(idremito): Promise<any> {\r\n        const filter = {\r\n            idremito: idremito,\r\n            idordencompra: null\r\n        }\r\n\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._remitosService.getItemsOcPendiente(filter));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Esta funcion es la encargada de obtener los datos de las ordenes de compra y que no se repitan.\r\n    * @param idproveedor Cuando queremos obtener solo las ordenes de compra de un proveedor utilicamos su id para filtrar.\r\n    */\r\n    async getOrdenCompras(event?) {\r\n        let filter = {\r\n            idproveedor: event?.Codigo ? event?.Codigo : null,\r\n            idordencompra: event?.idordencompra ? event?.idordencompra : null\r\n        }\r\n\r\n        const ordenes_de_compra = await firstValueFrom(this._remitosService.getOrdenesDeCompra(filter));\r\n\r\n        this.orden_compras = ordenes_de_compra.result.map(oc => { return { ...oc, idordencompra: oc.codigo } });\r\n\r\n        // Ordenar las ordenes de compra por fecha (en formato 'yyyy-mm-dd')\r\n        this.orden_compras.sort((a, b) => {\r\n            const fechaA = new Date(a.fecha); // Convertimos la cadena de texto en un objeto Date\r\n            const fechaB = new Date(b.fecha); // Convertimos la cadena de texto en un objeto Date\r\n            return fechaB.getTime() - fechaA.getTime(); // Comparamos las marcas de tiempo\r\n        });\r\n\r\n        this.oc_pendientes.next(this.orden_compras);\r\n\r\n        //Encapsulo solo las propiedades que quiero utilizar.\r\n        this.proveedores = this.orden_compras.map(p => {\r\n            return {\r\n                Codigo: p.proveedor,\r\n                RazonSocial: p.proveedor_descripcion\r\n            }\r\n        }).sort((a, b) => {\r\n            return a.RazonSocial.localeCompare(b.RazonSocial); // Ordena alfabéticamente\r\n        });\r\n\r\n        this.proveedores = Array.from(new Map(this.proveedores.map(p => [p.Codigo, p])).values());\r\n\r\n        new Promise(async (resolve) => {\r\n            //Esta fraccion de codigo es para filtrar lo que se escriba en el input.\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Metodo de persistencia de datos\r\n     */\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Validar que se haya seleccionado un proveedor válido solo si se está agregando un nuevo remito o se cambió el proveedor\r\n            if (!this.remito || (this.remito && this.form.get('proveedor').value !== this.remito.descripcion_proveedor)) {\r\n                const proveedorSeleccionado = this.form.get('proveedor').value;\r\n                const proveedorExistente = this.proveedores.find(proveedor => proveedor.Codigo === proveedorSeleccionado.Codigo);\r\n                if (!proveedorExistente) {\r\n                    return this.alert.error('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\r\n                }\r\n            }\r\n\r\n            const existe_cantidad_item_mayor_a_la_solicitada = this.mov_art_list.find((item: IItemOrdenCompraPendiente) => item.cantidad_a_recibir.value > item.cantidad_pedida['value']);\r\n            if (existe_cantidad_item_mayor_a_la_solicitada) {\r\n                return this.alert.error('Error al cargar Remito. No se puede recibir una cantidad mayor a la pedida');\r\n            }\r\n\r\n            let movimientos = this.mov_art_list.map((objeto: IItemOrdenCompraPendiente) => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idordencompraitem: objeto.iditemordencompra,\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad_a_recibir.value,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n            }));\r\n\r\n            // Quito los items con cantiadd cero para no incluirlos en el payload de persistencia\r\n            movimientos = movimientos.filter((movimiento: { idordencompraitem: number, idarticulo: number, cantidad: number, idunidadmedida: number }) => movimiento.cantidad > 0);\r\n\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload: ICreateRemito = {\r\n                remito: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito').value.iddeposito,\r\n                    idordencompra: this.form.get('oc_pendiente').value.idordencompra,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.remito?.idremito) {\r\n                this._remitosService.updateRemito(payload, this.remito.idremito)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._remitosService.saveRemito(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Este metodo cierra el matdialog\r\n    */\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ############### Metodos funcionales ###################\r\n\r\n    /**\r\n    * Metodo que ayuda al autocompletado de un input\r\n    * @param deposito \r\n    * @returns \r\n    */\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n    * Metodo que ayuda al autocompletado de un input\r\n    * @param proveedor \r\n    * @returns \r\n    */\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n        if (input == \"proveedor\") {\r\n            this.form.get('oc_pendiente').setValue('');\r\n            this.getOrdenCompras();\r\n        }\r\n\r\n        this.dataSource = new MatTableDataSource([]);\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n     * Este metodo obtiene el valor de texto del input que lo utilice\r\n     * @param option \r\n     * @returns \r\n     */\r\n    getTextInput(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        if (option.RazonSocial) {\r\n            return option.RazonSocial;\r\n        }\r\n        if (option.idordencompra || option.codigo) {\r\n            return option ? `N°${option.numero} | ${option.fecha}` : ''\r\n        }\r\n\r\n        return option;\r\n    }\r\n\r\n    /**\r\n * Esta funcion maneja las cambios de seleccion que puedan tener articulos, unidades de medida u ordenes de compra.\r\n * @param $event \r\n*/\r\n    seleccionItem($event) {\r\n        // Si se ha seleccionado un proveedor explícitamente, actualiza el campo del proveedor\r\n        if ($event?.Codigo) {\r\n            let filtered = this.orden_compras.filter(oc => oc.proveedor === $event.Codigo); // Buscamos las OC que posee ese proveedor.\r\n            this.oc_pendientes.next(filtered)\r\n            // Actualizamos el campo del proveedor sin emitir eventos\r\n            this.form.get('proveedor').setValue($event, { emitEvent: false });\r\n        }\r\n\r\n        // Si se ha seleccionado una OC, actualiza el campo de OC pendiente\r\n        if ($event?.idordencompra) {\r\n            let proveedor = this.proveedores.find(p => p.Codigo === $event.proveedor); // Busco el proveedor\r\n            this.form.get('proveedor').setValue(proveedor, { emitEvent: false }); // Lo seteo en el campo proveedor\r\n\r\n            let filtered = this.orden_compras.filter(oc => oc.proveedor === proveedor.Codigo);\r\n\r\n            this.oc_pendientes.next(filtered)\r\n\r\n            // Filtro los items de la orden de compra pendiente...\r\n            this.items_oc_pendientes = this.items_oc_pendientes_aux\r\n                .filter(item => item.idordencompra === $event.idordencompra) //...filtro todos los items que tengan la misma orden de compra que se selecciono en el select...\r\n                .map(item => { //... Al devolverlo...\r\n                    return {\r\n                        ...item,\r\n                        cantidad_pedida: Number(item.cantidad_pedida), //... Convierto en numeros estos campos que son strings...\r\n                        cantidad_pendiente: Number(item.cantidad_pendiente),\r\n                        cantidad_entregada: Number(item.cantidad_entregada),\r\n                    }\r\n                });\r\n\r\n            // Creo la grilla editable\r\n            this.crearGrillaForm(this.items_oc_pendientes);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Metodo encargado de crear una grilla dinamica\r\n    * @param Items \r\n    */\r\n    crearGrillaForm(Items) {\r\n        this.mov_art_list = Items;\r\n\r\n        this.mov_art_list.forEach((item, index, items_array) => {\r\n\r\n            // Define los FormControls\r\n            const cantidad_a_recibir_control = new FormControl(\r\n                { value: this.remito?.idremito ? item.cantidad_entregada || null : item.cantidad_pendiente || null, disabled: Number(item.cantidad_pendiente) > 0 ? false : true },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            const cantidad_pendiente_control = new FormControl(\r\n                { value: item.cantidad_pendiente || null, disabled: true },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            const cantidad_pedida_control = new FormControl(\r\n                { value: item.cantidad_pedida || null, disabled: true },\r\n                [Validators.required, Validators.min(0)]\r\n            );\r\n\r\n            // Asigna los controles al item\r\n            items_array[index].cantidad_a_recibir = cantidad_a_recibir_control;\r\n            items_array[index].cantidad_pendiente = cantidad_pendiente_control;\r\n            items_array[index].cantidad_pedida = cantidad_pedida_control;\r\n        });\r\n\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n    }\r\n\r\n    setupProveedorValueChange() {\r\n        this.form.get('proveedor').valueChanges.pipe(\r\n            debounceTime(750),\r\n            takeUntil(this._unsubscribeAll)\r\n        ).subscribe(value => {\r\n            if (value?.Codigo) {\r\n                // Filtra las órdenes de compra por proveedor\r\n                const filtered = this.orden_compras.filter(oc => oc.proveedor === value.Codigo);\r\n                this.oc_pendientes.next(filtered); // Actualiza las órdenes de compra disponibles\r\n            } else {\r\n                this.oc_pendientes.next(this.orden_compras); // Limpia si no hay proveedor seleccionado\r\n            }\r\n        });\r\n    }\r\n\r\n    setupOrdenCompraValueChange() {\r\n        combineLatest([\r\n            this.oc_pendientes.asObservable(),\r\n            this.form.get('oc_pendiente').valueChanges.pipe(debounceTime(750), startWith(''))\r\n        ])\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(([ordenes, value]) => {\r\n                const filterValue = value?.toString().toLowerCase() || '';\r\n                const filtered = ordenes.filter(oc =>\r\n                    oc.numero.toString().toLowerCase().includes(filterValue) ||\r\n                    oc.fecha.toString().toLowerCase().includes(filterValue)\r\n                );\r\n                this.filteredOrdenesDeCompraSubject.next(filtered); // Emite las órdenes filtradas\r\n            });\r\n    }\r\n\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\" (optionSelected)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>OC</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"oc_pendiente\" [matAutocomplete]=\"auto_oc\" (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #auto_oc=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let oc of filteredOrdenesDeCompraSubject | async \" [value]=\"oc\">\r\n                            <b> N° {{oc.numero}} </b> | <i> {{oc.fecha}}</i>\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('oc_pendiente')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('oc_pendiente').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Depósito</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextInput\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[215px] h-auto shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \"\r\n                            class=\"rounded-tl-lg text-white text-center w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white text-center w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let row' class=\"w-auto\">\r\n                            {{row.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white text-center w-auto\">Unidad de\r\n                            medida</th>\r\n                        <td mat-cell *matCellDef='let row'>\r\n                            {{ row.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad_pedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white text-center w-auto\">Cant. Pedida\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_pedida\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-200 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad_pendiente'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\" class=\"text-white text-center w-auto\">Cant.\r\n                            Pendiente</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_pendiente\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-200 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad_a_recibir'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || ''\"\r\n                            class=\" rounded-tr-lg text-white text-center w-auto\">{{!this.remito ? 'Cant. a recibir' : 'Cant. Entregada'}}</th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <input matInput [formControl]=\"row.cantidad_a_recibir\" type=\"number\" min=\"0\" placeholder=\"0\"\r\n                                class=\"text-center border border-gray-300 rounded-md p-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-gray-50 transition duration-150 ease-in-out\" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { RemitosComponent } from './components/remitos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { RemitosService } from './service/remitos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RemitosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [RemitosComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [RemitosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class RemitosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IRemito } from '../models/remito';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IResponse, Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class RemitosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param remito \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveRemito(remito: IRemito): Observable<IRemito> {\r\n        return this.http.post<IRemito>(`${environment.stock.remitos}`, remito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param remito\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateRemito(remito: IRemito, idremito: number): Observable<IRemito> {\r\n        return this.http.put<IRemito>(`${environment.stock.remitos}` + '/' + idremito, remito);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idremito \r\n     * @returns Elimina un item\r\n     */\r\n    deleteRemito(idremito: number): Observable<IRemito> {\r\n        return this.http.delete<IRemito>(`${environment.stock.remitos}` + '/' + idremito);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulosDepositos(deposito_origen: number) {\r\n        let f = `?filter[deposito]=${deposito_origen}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idremito: number) {\r\n        let f = `?filter[idremito]=${idremito}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios() {\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getItemsOcPendiente(options?: { idremito?: number, idordencompra?: number}) {\r\n        let f = `?`;\r\n        f += options?.idordencompra === null && options?.idremito === null ? `filter[pendiente_entrega]=1&` : '';\r\n\r\n        f += options?.idordencompra ? `filter[idordencompra]=${options?.idordencompra}` : '';\r\n        f += options?.idremito ? `filter[idremito]=${options?.idremito}&` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_items_oc_pendientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * Funcion en el servicio\r\n    */\r\n    getOrdenesDeCompra(options?: { idproveedor: number, idordencompra?: number }): Observable<IResponse<any>> {\r\n        let f = '?filter[estado]=1&';\r\n\r\n        f += options?.idproveedor ? `filter[proveedor]=${options.idproveedor}` : '';\r\n        f += options?.idordencompra ? `filter[idordencompra]=${options.idordencompra}&` : '';\r\n\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.compras.view_orden_compras}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'result': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r5","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r8","factor_um","um_base","ɵɵtemplate","AddArticuloComponent_mat_option_25_i_2_Template","idunidadmedida","descripcion_um","AddArticuloComponent","constructor","data","_remitosService","_empresaService","datePipe","alert","dialogRef","dialogo","columns","articulos","unidades_de_medida","depositos","articulos_list","dataSource","default_color","_unsubscribeAll","title","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","newForm","getArticulosOrdenCompra","subscribeAlert","emitConfig","next","config","appearance","time","_this","_asyncToGenerator","articulos_um_oc","getItemsOcPendiente","orden_compra","list","Promise","_ref","resolve","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","forEach","item","existeArticulo","find","articulo","idarticulo","codigo_interno_articulo","descripcion_articulo","idordencompraitem","iditemordencompra","push","filterValue","toString","toLowerCase","filter","includes","getTextInput","getUnidadesDeMedidaArticulos","_this2","_ref2","a","sort","b","parseFloat","cantidad_pendiente","length","setValue","seleccionArticulo","um","_x2","$event","enable","articulo_um","cantidad_existente","existeMovimiento","movimientos","esEdicion","articulos_existentes","ae","Number","cantidad","movimientos_eliminados","articulos_eliminados","disable","required","unidadmedida","onSubmit","valid","error","warning","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","RemitosService","i2","EmpresaService","i3","DatePipe","i4","AppAlertService","i5","MatDialogRef","MatDialog","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_Template_mat_select_ngModelChange_24_listener","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_Template_button_click_35_listener","ɵɵclassMap","ɵɵstyleProp","ɵɵtextInterpolate","_r1","ɵɵpipeBind1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r9","ctx_r8","limpiarFechas","usuario_responsable_r10","nick","proveedor_r11","RazonSocial","deposito_r12","iddeposito","FilterMenuComponent","_menuService","usuarios","provedores","filterDeposito","filterFechas","movimientos_internos_list","formFilters","filtroFechaInicio","filtroFechaFin","usuario_responsable","proveedor","deposito","getDepositos","getUsuarios","getProveedores","patchValue","resetFilters","reset","transform","Usuarios","filteredUsuarioResponsable","controls","_filterUsuaurio","usuario","Proveedores","filteredProveedor","_filterProveedor","provedor","_this3","stk_list","JedsMenuService","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_31_Template","FilterMenuComponent_mat_option_42_Template","FilterMenuComponent_mat_option_50_Template","FilterMenuComponent_Template_button_click_52_listener","FilterMenuComponent_Template_button_click_55_listener","getRawValue","_r3","_r5","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","RemitosComponent","_remitoService","confirm","_searchService","router","_headerTextService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","remitos","search","setTitulo","nombre_boton","functionName","iconoAccion","remito","iconoAccionado","iconoDeshabilitado","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","generarAcciones","name","updateRemito","deleteRemito","saveRemito","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","fecha","hora","descripcion_deposito","dismissible","actions","show","color","label","cancel","res","idremito","renderTabla","console","ngOnDestroy","unsubscribe","closeAll","FuseConfirmationService","i6","SearchService","i7","i8","Router","i9","HeaderTextService","viewQuery","RemitosComponent_Query","RemitosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","RemitosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","BehaviorSubject","combineLatest","proveedor_r26","SaveComponent_button_29_Template_button_click_0_listener","_r28","ctx_r27","oc_r29","numero","SaveComponent_button_38_Template_button_click_0_listener","_r31","ctx_r30","deposito_r32","SaveComponent_button_47_Template_button_click_0_listener","_r34","ctx_r33","ctx_r11","row_r35","ctx_r13","row_r36","ctx_r15","row_r37","ctx_r17","row_r38","cantidad_pedida","ctx_r19","row_r39","ctx_r21","row_r40","cantidad_a_recibir","maxPalabras","deposito_default","filteredOrdenesDeCompraSubject","items_oc_pendientes_aux","items_oc_pendientes","proveedores","orden_compras","oc_pendientes","mov_art_list","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","loadServices","setupProveedorValueChange","setupOrdenCompraValueChange","dia","mes","anio","split","descripcion_proveedor","oc_pendiente","idordencompra","nro_orden_compra","fecha_oc","observaciones","maxLength","all","getOrdenCompras","getItemsOrdenDeCompraPendiente","option","Depositos","filteredDepositos","_filterDepositos","depositoPorDefecto","object","OrdenesDeCompraPendiente","cantidad_entregada","crearGrillaForm","getItems","_this4","items","_this5","idproveedor","Codigo","ordenes_de_compra","getOrdenesDeCompra","result","oc","codigo","fechaA","fechaB","getTime","p","proveedor_descripcion","localeCompare","Array","from","Map","values","_ref3","filteredProveedores","_filterProveedores","_x3","isPalabraMaxLengthReached","proveedorSeleccionado","proveedorExistente","existe_cantidad_item_mayor_a_la_solicitada","objeto","fecha_formateada","fecha_hora","payload","idusuario","id","emit","input","getPalabrasLength","seleccionItem","filtered","emitEvent","Items","index","items_array","cantidad_a_recibir_control","disabled","min","cantidad_pendiente_control","cantidad_pedida_control","asObservable","ordenes","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_optionSelected_24_listener","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_Template_input_ngModelChange_33_listener","SaveComponent_mat_option_36_Template","SaveComponent_button_38_Template","SaveComponent_mat_option_45_Template","SaveComponent_button_47_Template","ɵɵelementContainerStart","SaveComponent_th_57_Template","SaveComponent_td_58_Template","ɵɵelementContainerEnd","SaveComponent_th_60_Template","SaveComponent_td_61_Template","SaveComponent_th_63_Template","SaveComponent_td_64_Template","SaveComponent_th_66_Template","SaveComponent_td_67_Template","SaveComponent_th_69_Template","SaveComponent_td_70_Template","SaveComponent_th_72_Template","SaveComponent_td_73_Template","SaveComponent_tr_74_Template","SaveComponent_tr_75_Template","SaveComponent_div_76_Template","SaveComponent_Template_button_click_78_listener","_r2","_r8","ɵɵpureFunction1","_c0","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","RemitosModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","f","subject","resp","accessToken","token","administracion","getArticulosDepositos","deposito_origen","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","options","view_items_oc_pendientes","compras","view_orden_compras","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}