{"version":3,"file":"default-src_app_shared_components_tabla-dinamica_tabla-dinamica_module_ts-node_modules_angula-e4bb72.js","mappings":"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","sources":["./src/app/shared/components/shared-component.module.ts","./src/app/shared/components/tabla-dinamica/services/tabla-dinamica.service.ts","./src/app/shared/components/tabla-dinamica/tabla-dinamica.component.ts","./src/app/shared/components/tabla-dinamica/tabla-dinamica.component.html","./src/app/shared/components/tabla-dinamica/tabla-dinamica.module.ts","./src/app/shared/pipes/activo.pipe.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { OverlayModule } from \"@angular/cdk/overlay\";\r\nimport { PortalModule } from \"@angular/cdk/portal\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { JedsMenuService } from \"@shared/service/app/menu.service\";\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        MatTableModule,\r\n        MatProgressSpinnerModule,\r\n        MatPaginatorModule,\r\n        CommonModule,\r\n        OverlayModule,\r\n        PortalModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatSlideToggleModule,\r\n        MatMenuModule,\r\n        MatDividerModule,\r\n        MatAutocompleteModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        // FuseDrawerModule,\r\n        // FuseScrollbarModule,\r\n        // FuseLoadingBarModule,\r\n        // FuseFullscreenModule,\r\n        // FuseNavigationModule,\r\n        // FuseAlertModule\r\n    ],\r\n    exports: [],\r\n    providers: [ JedsMenuService ],\r\n})\r\nexport class SharedComponentModule { }","import { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TablaDinamicaService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // private _providerbase: string = environment.baseRest + '/' ;\r\n\r\n  /**\r\n   * \r\n   * @param endpoint La url completa del servicio utilizado para obtener datos que se usaran en la tabla.\r\n   * @param filter \r\n   * @returns \r\n   */\r\n  getData(endpoint: string, filter: string): Observable<any> {\r\n    var subject = new Subject<any>();\r\n    this.http.get(`${endpoint}${filter}`, { observe: 'response' }).subscribe(resp => {\r\n      subject.next({\r\n        'data': resp.body,\r\n        'totalPages': resp.headers.get('X-Pagination-Page-Count'),\r\n        'totalCount': resp.headers.get('X-Pagination-Total-Count')\r\n      })\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n\r\n  // getData(endpoint: string, filter: string): Observable<any> {\r\n  //   var subject = new Subject<any>();\r\n  \r\n  //   fetch(this._providerbase + endpoint + filter, {\r\n  //     method: 'GET',\r\n  //     headers: {\r\n  //       'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\r\n  //     }\r\n  //   })\r\n  //     .then(response => {\r\n  //       console.log(response)\r\n  //       response.json().then(body => {\r\n  //         subject.next({\r\n  //           'data': body,\r\n  //           'totalPages': response.headers.get('X-Pagination-Page-Count'),\r\n  //           'totalCount': response.headers.get('X-Pagination-Total-Count')\r\n  //         });\r\n  //       });\r\n  //     });\r\n  //   return subject.asObservable();\r\n  // }\r\n  \r\n\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, Optional, Inject, ViewEncapsulation, OnChanges, AfterViewChecked } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TablaDinamicaService } from './services/tabla-dinamica.service';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { filter, forEach } from 'lodash';\r\nimport { MatButton } from '@angular/material/button';\r\n//import { FiltroComponent } from 'app/modules/rrhh/empleados/components/filtro/filtro.component';\r\n//import { throwDialogContentAlreadyAttachedError } from '@angular/cdk/dialog';\r\nimport { NavigationService } from '@core/navigation/navigation.service';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { UserService } from '@core/user/user.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { ActivoPipe } from '@shared/pipes/activo.pipe';\r\n\r\n@Component({\r\n  selector: 'app-tabla-dinamica',\r\n  templateUrl: './tabla-dinamica.component.html',\r\n  styleUrls: ['./tabla-dinamica.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class TablaDinamicaComponent implements OnInit, AfterViewChecked {\r\n  public filterLikeCache: string = ''\r\n  public PageIndex: number = 0\r\n  public Pagesize: number = 10;\r\n  private filtros_cache\r\n  @Input() cache: boolean = true;\r\n\r\n  private timeoutId: any\r\n\r\n  //------------------------- Filters\r\n  @Input() filterComponent: any = undefined\r\n  public formComponent: any\r\n  /**\r\n   * Filtros concatenados\r\n   */\r\n  public filterLikecomponent: string = '';\r\n\r\n  private filterLike: string = ''\r\n  private filterPaginado: string = '&per-page=10&page=0'\r\n  @Input() FiltersLikes: string[] = [];\r\n  @Input() FilterLikesID: boolean = false\r\n  @Input() extraParams: string = '';\r\n  @Input() renderType: string; // ssp o client , para paginacion o sin paginacion\r\n  private sortSSP: string = ''; // editado y usado solo si es SSP\r\n\r\n  @Input() endpoint: string = null;\r\n\r\n  @Input() functions: any[];\r\n  @Output() functionEmitter = new EventEmitter<{ name: string, params: any }>();\r\n\r\n  @Input() columnsNames: string[] = [];\r\n  @Input() columnsParams: string[] = [];\r\n  @Input() booleanParams: string[] = [];\r\n\r\n  @Input() accionesButtons: string[];\r\n  @Input() accionesFunctions: string[];\r\n  @Input() extraClasses: string = '';\r\n\r\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  private filterDataSource\r\n  user: import(\"../../../core/user/user.types\").IUsuario;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n\r\n  // * para que el padre te diga cuando recargar la tabla\r\n  eventoUpdate() {\r\n    /*\r\n    en el componente padre:\r\n    -declarar @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    -llamar a esta funcion con this.tabla.eventoUpdate();\r\n    */\r\n    this.renderTabla();\r\n  }\r\n\r\n  constructor(\r\n    private jedsMenu: JedsMenuService,\r\n    private service: TablaDinamicaService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private menuService: JedsMenuService, private _userService: UserService) {\r\n    // this.dataSource = new MatTableDataSource<any>(this.parentData);\r\n    // this.paginator.length = this.totalRows;\r\n    // this.user = this._userService.getCurrentUser();\r\n\r\n    // Subscribe to the user service (ESTA ES LA FORMA DE OBTENER EL USUARIO EN ESTE PROYECTO CHEKEAR user.service.ts y auth.service.ts) \r\n    // this._userService.user$\r\n    //   .pipe((takeUntil(this._unsubscribeAll)))\r\n    //   .subscribe((user: User) => {\r\n    //     this.user = user;\r\n    //   });\r\n\r\n    if (data) {\r\n      // * caso en el que los parametros para renderizar no vengan desde una llamada al componente con su etiqueta, sino desde un dialog.\r\n      this.endpoint = data.endpoint;\r\n      this.extraParams = data.extraParams;\r\n      this.renderType = data.renderType;\r\n      this.columnsNames = data.columnsNames;\r\n      this.columnsParams = data.columnsParams;\r\n      this.accionesButtons = data.accionesButtons;\r\n      this.accionesFunctions = data.accionesFunctions;\r\n      this.functions = data.functions;\r\n      this.extraClasses = data.extraClasses;\r\n      this.cache = data.cache;\r\n      this.FiltersLikes = data.FiltersLikes;\r\n    }\r\n\r\n    if (!this.columnsNames) {\r\n      this.columnsNames = this.columnsParams;\r\n    }\r\n  }\r\n\r\n  emitFunction(name: string, params: any, origin: any) {\r\n    this.functionEmitter.emit({ name, params: { data: params, origin: origin } });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /* Reemplazar por get_filtro_global del common */\r\n    /* this.filtros_cache = NavigationService.getPermisos(this.user)?.filtros\r\n    if (this.filtros_cache && this.cache) {\r\n\r\n      this.filterLikecomponent = this.filtros_cache.filtercomponent\r\n\r\n      if (this.filtros_cache.filterPaginado) {\r\n        this.filterPaginado = this.filtros_cache.filterPaginado\r\n        this.PageIndex = this.filtros_cache.data.page\r\n        this.Pagesize = this.filtros_cache.data.perpage\r\n      }\r\n\r\n      if (this.filtros_cache.like) {\r\n        this.filterLikeCache = this.filtros_cache.like\r\n      }\r\n\r\n      if (this.filtros_cache.filterLike) {\r\n        this.filterLike = this.filtros_cache.filterLike\r\n      }\r\n      if (this.filtros_cache.formComponent) {\r\n        this.formComponent = this.filtros_cache.formComponent\r\n      }\r\n\r\n    } */\r\n    this.renderTabla();\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!!this.dataSource) {\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    }\r\n\r\n    this.sort.sortChange.subscribe((sort: Sort) => {\r\n      if (this.renderType == 'ssp') {\r\n        let column = sort.active;\r\n        switch (sort.direction) {\r\n          case \"asc\":\r\n            this.sortSSP = `= ${column}`; //simplemente mando la columna y se ordena ascendente\r\n            break;\r\n          case \"desc\":\r\n            this.sortSSP = `=-${column}`; // mando signo menos (-) y columna, y se ordena descendente\r\n            break;\r\n          default:\r\n            this.sortSSP = '';\r\n            break;\r\n        }\r\n        this.renderTabla();\r\n      }\r\n    });\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  renderTabla(arg?: any) {\r\n    let query = this.sortSSP != '' ? `&sort${this.sortSSP}` : ''; // sortSSP va a ser vacio si el renderType es client. Caso contrario (SSP) puede tener valor\r\n\r\n    if (this.endpoint) {\r\n      if (this.extraParams && this.extraParams != '') {\r\n        let arr_filters = this.extraParams.split('&');\r\n        if (this.extraParams.length != 0 && arr_filters.length > 0) {\r\n          arr_filters.forEach(filter => {\r\n            filter.startsWith('[') ? query += '&filter' + filter + '' : query += '&' + filter + '';\r\n          })\r\n        }\r\n      }\r\n      if (this.filterComponent) {\r\n        query += this.filterLikecomponent\r\n      }\r\n      if (this.filterLike) {\r\n        query += this.filterLike\r\n      }\r\n      if (this.renderType != 'client') {\r\n        query += this.filterPaginado\r\n      }\r\n\r\n      this.service.getData(this.endpoint, query).subscribe(r => {\r\n\r\n        /**\r\n         * En este forEach se parsean los valores booleanos que sean manejados como numeros para mostrar 'si' o 'no' segun corresponda.\r\n         */\r\n        r.data.result.forEach((item) => {\r\n          if(item.activo){\r\n            item.activo = item.activo === 1 ? 'Si' : '';\r\n          }\r\n        })\r\n\r\n        this.filterDataSource = r.data.result;\r\n        this.dataSource = new MatTableDataSource<any>(r.data.result);\r\n        this.paginator.length = r.totalCount;\r\n        this.paginator.pageIndex = this.PageIndex\r\n        if (this.renderType == 'client') {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  agregarEstilos() {\r\n    if (this.extraClasses && this.extraClasses != '') {\r\n      let arr_classes = this.extraClasses.split(',');\r\n      if (this.extraClasses.length != 0 && arr_classes.length > 0) {\r\n        arr_classes.forEach(elem => {\r\n          let itemSearch = elem.split(' ')[0];\r\n          let items = document.querySelectorAll(itemSearch);\r\n          let cssClass = elem.split(' ')[1];\r\n          for (let i = 0; i < items.length; i += 1) {\r\n            items[i].classList.add(cssClass);\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  cambioPagina(event: any) {\r\n    this.PageIndex = event.pageIndex;\r\n    this.Pagesize = event.pageSize\r\n    this.filterPaginado = `&per-page=${this.Pagesize}&page=${this.PageIndex}`\r\n    /* Deberíamos usar set_filtro_global */\r\n    /*  if (this.cache) {\r\n      NavigationService.setFilterModulo({ filterPaginado: this.filterPaginado, data: { perpage: this.Pagesize, page: this.PageIndex } }, this.user)\r\n     } */\r\n    this.renderTabla();\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para el buscador de input, recibe un string y renderiza la tabla\r\n   * @param input \r\n   */\r\n  filters(input: string) {\r\n    this.filterLike = input\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId); //Limpio el temporizador evita multiples llamadas\r\n    }\r\n    this.timeoutId = setTimeout(() => {\r\n      let query = ''\r\n      for (let i = 0; i < this.FiltersLikes.length; i++) {\r\n        const like = this.FiltersLikes[i];\r\n        if (this.FilterLikesID) {\r\n          query += `&filter[${like}]=${this.filterLike}`\r\n        } else {\r\n          query += `&filter[or][${i}][${like}][like]=${this.filterLike}`\r\n        }\r\n      }\r\n\r\n      this.filterLike = query;\r\n      /* Deberíamos usar set_filtro_global */\r\n      /*   if (this.cache) {\r\n          NavigationService.setFilterModulo({ like: input }, this.user)\r\n          NavigationService.setFilterModulo({ filterLike: this.filterLike }, this.user)\r\n        } */\r\n      if (input != '') {\r\n        if (this.renderType == \"client\") {\r\n          this.dataSource.data = this.filterDataSource.filter(r => this.FiltersLikes.some(f => r[f].toLowerCase().includes(input.toLowerCase())))\r\n        }\r\n      } else { //Caso de input vacio\r\n        if (this.renderType == \"client\") {\r\n          this.dataSource.data = this.filterDataSource\r\n        } else {\r\n          this.filterLike = ''\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Se renderiza despues de cualquier acción. \r\n       * Por ejemplo sí se quiere editar un item con el filtro de busqueda activado, \r\n       * renderiza ese item manteniendo el filtro de busqueda.\r\n       */\r\n      this.renderTabla();\r\n\r\n      this.agregarEstilos();\r\n    }, 750);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Funcion para acceder a multi nivel con expands\r\n   * \r\n   * @param element una fila de la respuesta \r\n   * @param column el string de atributo para acceder\r\n   * @returns el parametro en formato de string.\r\n   */\r\n  parse(element: any, column: string): string {\r\n    let colSplit = column.split('.');\r\n    let temp = element\r\n    let err: boolean = false\r\n    for (let i = 0; i < colSplit.length && !err; i++) {\r\n      const propiedad = colSplit[i];\r\n      temp = temp[propiedad]\r\n      if (!temp) {\r\n        err = true\r\n        temp = temp === 0 ? 'No' : '-'; //Parseo valor booleano manejado como numero para que me muestre un 'No'.\r\n      }\r\n    }\r\n    return temp\r\n  }\r\n\r\n  onFilterMenu(documentRef: MatButton | MatIcon) {//filtros\r\n    this.jedsMenu\r\n      .open(this.filterComponent, documentRef._elementRef, this.formComponent)\r\n      .afterClosed()\r\n      .subscribe({\r\n        next: data => {\r\n          if (data) {\r\n            this.filterLikecomponent = data.filter\r\n            this.formComponent = data.form\r\n            this.renderTabla()\r\n            this.agregarEstilos();\r\n            /* Deberíamos usar set_filtro_global */\r\n            /*  if (this.cache) {\r\n              NavigationService.setFilterModulo({ filtercomponent: this.filterLikecomponent, formComponent: this.formComponent }, this.user)\r\n             } */\r\n          }\r\n        },\r\n      });\r\n  }\r\n\r\n  modalUp(documentRef: MatButton) {\r\n    this.menuService\r\n      .open(this.filterComponent, documentRef._elementRef, this.formComponent)\r\n      .afterClosed()\r\n      .subscribe({\r\n        next: data => {\r\n          if (data) {\r\n            this.filterLikecomponent = data.filter\r\n            this.formComponent = data.form\r\n            this.renderTabla()\r\n            this.agregarEstilos();\r\n            /* Deberíamos usar set_filtro_global */\r\n            /*  if (this.cache) {\r\n              NavigationService.setFilterModulo({ filtercomponent: this.filterLikecomponent, formComponent: this.formComponent }, this.user)\r\n             } */\r\n          }\r\n        },\r\n      });\r\n  }\r\n}","<div class=\"w-full cont-with-paginator mat-elevation-z8\">\r\n    <!--clase h-200 para que se arme scroll solo en este componente cuando por ejemplo se use paginado x25 o x50 en vez de x10-->\r\n    <!--  <div *ngIf=\"FiltersLikes&&FiltersLikes.length>0\" class=\"flex w-full justify-end smm:justify-center smm:mb-2\">\r\n        <mat-form-field\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded  min-w-64 md:min-w-54 sm:min-w-30 mdm:min-w-30 smm:w-full\">\r\n            <mat-icon class=\"icon-size-5\" matPrefix svgIcon=\"heroicons_solid:search\">\r\n            </mat-icon>\r\n            <input [value]=\"filterLikeCache\" matInput placeholder=\"Buscar\" autocomplete=\"off\" #buscar\r\n                (keyup)=\"filters(buscar.value)\" />\r\n        </mat-form-field>\r\n        <button *ngIf=\"filterComponent\" #filtro class=\"ml-2 bg-primary dark:text-white \" mat-button type=\"button\"\r\n            (click)=\"onFilterMenu(filtro)\">\r\n            <mat-icon class=\"text-white\" svgIcon=\"heroicons_outline:adjustments\"></mat-icon>\r\n        </button>\r\n    </div> -->\r\n    <div class=\"w-full max-h-[75vh] overflow-y-auto mt-2\">\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"w-full smm:px-0 smm:mt-0 mt-4 small-table-text mb-8 cont-with-paginator\" matSort>\r\n            <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of columnsParams; let i = index\">\r\n                <ng-container *ngIf=\"column != 'acciones' else botones\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsNames[i]}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"mobile-label\">{{columnsNames[i]}}</span>\r\n                        <span class=\"descripcion\"> {{ booleanParams.includes(column) ? (element[column] |\r\n                            activoPipe:column) : parse(element, column) }}</span>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-template #botones>\r\n                    <th mat-header-cell *matHeaderCellDef> {{columnsNames[i]}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> <!-- element es el objeto que se itera desde dataSource -->\r\n                        <div class=\"\">\r\n                            <!-- <button mat-raised-button color=\"accent\"\r\n                                *ngFor=\"let accion of accionesButtons; let x = index\">{{accion}}</button> -->\r\n\r\n                            <button [disabled]=\"accion.disabled && accion.disabled(element)\" #origin\r\n                                [class.mat-icon-button]=\"accion.type !== 'button'\"\r\n                                [class.mat-button]=\"accion.type === 'button'\" color=\"accent\"\r\n                                *ngFor=\"let accion of functions; let x = index\"\r\n                                [ngClass]=\"{'bg-primary text-center':accion.type=='button' }\"\r\n                                (click)=\"emitFunction(accion.functionName, element,origin)\"\r\n                                matTooltip=\"{{accion.extra ? accion.nombre_boton(element) : accion.nombre_boton}}\"\r\n                                matTooltipPosition=\"above\" matTooltipClass=\"tooltip-class\" matTooltipShowDelay=\"100\"\r\n                                matTooltipHideDelay=\"100\" TooltipTouchGestures=\"auto\">\r\n\r\n                                <mat-icon class=\"dark:bg-primary dark:rounded-full\" *ngIf=\"!accion.extra\"\r\n                                    svgIcon=\"{{accion.icono}}\"></mat-icon>\r\n                                <mat-icon\r\n                                    class=\"dark:bg-primary dark:rounded-full text-center justify-center items-center\"\r\n                                    *ngIf=\"accion.extra\" svgIcon=\"{{accion.icono(element)}}\"></mat-icon>\r\n                                {{ accion.type === 'button' ? accion.nombre_boton : '' }}\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </ng-template>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsParams; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columnsParams;\"></tr>\r\n        </table>\r\n    </div>\r\n    <div class=\"bg-slate-800 rounded-b-2xl\">\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 50]\"\r\n            class=\"w-full rounded-b-lg shadow-md mat-paginator-sticky fixed\" [pageIndex]=\"PageIndex\"\r\n            [pageSize]=\"Pagesize\" aria-label=\"Select page of users\" (page)=\"cambioPagina($event)\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TablaDinamicaComponent } from './tabla-dinamica.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { SharedComponentModule } from '../shared-component.module';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { ActivoPipe } from '@shared/pipes/activo.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TablaDinamicaComponent,\r\n        ActivoPipe\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SharedComponentModule,\r\n        MatTooltipModule,\r\n        MatDialogModule\r\n    ],\r\n    exports: [\r\n        TablaDinamicaComponent\r\n    ],\r\n    providers: [\r\n        JedsMenuService,\r\n        { provide: MAT_DIALOG_DATA, useValue: {} },\r\n        { provide: MatDialogRef, useValue: {} },\r\n    ]\r\n})\r\nexport class TablaDinamicaModule { }","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'activoPipe'\r\n})\r\nexport class ActivoPipe implements PipeTransform {\r\n    transform(value: any, column_name: string): any {\r\n        // Lógica para transformar el valor según tus necesidades\r\n        if (value == 1) {\r\n            return 'Si';\r\n        } else if (value == 0) {\r\n            return 'No';\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["OverlayModule","PortalModule","CommonModule","ReactiveFormsModule","MatAutocompleteModule","MatButtonModule","MatDividerModule","MatFormFieldModule","MatIconModule","MatInputModule","MatMenuModule","MatPaginatorModule","MatProgressSpinnerModule","MatSlideToggleModule","MatTableModule","MatTooltipModule","RouterModule","JedsMenuService","SharedComponentModule","imports","Subject","TablaDinamicaService","constructor","http","getData","endpoint","filter","subject","get","observe","subscribe","resp","next","body","headers","asObservable","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","EventEmitter","MatPaginator","MatSort","MatTableDataSource","MAT_DIALOG_DATA","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r8","columnsNames","i_r4","ɵɵtextInterpolate","ctx_r9","booleanParams","includes","column_r3","ɵɵpipeBind2","element_r11","parse","ɵɵelementContainerStart","ɵɵtemplate","TablaDinamicaComponent_ng_container_3_ng_container_1_th_1_Template","TablaDinamicaComponent_ng_container_3_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ctx_r13","ɵɵelement","ɵɵpropertyInterpolate","accion_r18","icono","element_r16","ɵɵlistener","TablaDinamicaComponent_ng_container_3_ng_template_2_td_1_button_2_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r27","$implicit","_r20","ɵɵreference","ɵɵnextContext","ctx_r26","ɵɵresetView","emitFunction","functionName","TablaDinamicaComponent_ng_container_3_ng_template_2_td_1_button_2_mat_icon_2_Template","TablaDinamicaComponent_ng_container_3_ng_template_2_td_1_button_2_mat_icon_3_Template","ɵɵclassProp","type","extra","nombre_boton","ɵɵproperty","disabled","ɵɵpureFunction1","_c0","TablaDinamicaComponent_ng_container_3_ng_template_2_td_1_button_2_Template","ctx_r14","functions","TablaDinamicaComponent_ng_container_3_ng_template_2_th_0_Template","TablaDinamicaComponent_ng_container_3_ng_template_2_td_1_Template","TablaDinamicaComponent_ng_container_3_ng_container_1_Template","TablaDinamicaComponent_ng_container_3_ng_template_2_Template","ɵɵtemplateRefExtractor","_r6","TablaDinamicaComponent","eventoUpdate","renderTabla","jedsMenu","service","data","menuService","_userService","filterLikeCache","PageIndex","Pagesize","cache","filterComponent","undefined","filterLikecomponent","filterLike","filterPaginado","FiltersLikes","FilterLikesID","extraParams","sortSSP","functionEmitter","columnsParams","extraClasses","dataSource","_unsubscribeAll","renderType","accionesButtons","accionesFunctions","name","params","origin","emit","ngAfterViewChecked","agregarEstilos","ngOnInit","ngAfterViewInit","paginator","sort","sortChange","column","active","direction","arg","query","arr_filters","split","length","forEach","startsWith","r","result","item","activo","filterDataSource","totalCount","pageIndex","arr_classes","elem","itemSearch","items","document","querySelectorAll","cssClass","i","classList","add","cambioPagina","event","pageSize","filters","input","timeoutId","clearTimeout","setTimeout","like","some","f","toLowerCase","element","colSplit","temp","err","propiedad","onFilterMenu","documentRef","open","_elementRef","formComponent","afterClosed","form","modalUp","ɵɵdirectiveInject","i2","i3","UserService","selectors","viewQuery","TablaDinamicaComponent_Query","rf","ctx","TablaDinamicaComponent_ng_container_3_Template","TablaDinamicaComponent_tr_4_Template","TablaDinamicaComponent_tr_5_Template","TablaDinamicaComponent_Template_mat_paginator_page_7_listener","$event","ɵɵpureFunction0","_c1","MatSortModule","MatDialogModule","MatDialogRef","ActivoPipe","TablaDinamicaModule","provide","useValue","declarations","exports","transform","value","column_name","pure","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_MatToolbarBase","MatToolbarRow","_class","_class_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","_document","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","Array","from","nativeElement","childNodes","node","contains","nodeType","COMMENT_NODE","textContent","trim","throwToolbarMixedModesError","_class2","_class2_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","_class2_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","_class2_HostBindings","inputs","color","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","_class2_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","decorators","descendants","Error","MatToolbarModule","_class3","_class3_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[6]}