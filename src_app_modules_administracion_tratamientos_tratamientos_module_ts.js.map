{"version":3,"file":"src_app_modules_administracion_tratamientos_tratamientos_module_ts.js","mappings":"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","sources":["./src/app/modules/administracion/tratamientos/components/save/save.component.ts","./src/app/modules/administracion/tratamientos/components/save/save.component.html","./src/app/modules/administracion/tratamientos/components/tratamientos.component.ts","./src/app/modules/administracion/tratamientos/components/tratamientos.component.html","./src/app/modules/administracion/tratamientos/service/tratamientos.service.ts","./src/app/modules/administracion/tratamientos/tratamientos.module.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { ITratamiento } from '../../models/tratamiento';\r\nimport { TratamientosService } from '../../service/tratamientos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\n@Component({\r\n    selector: 'app-save-tratamiento',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    form: FormGroup;\r\n    tratamiento: ITratamiento;\r\n    constructor(\r\n        @Inject('MENU_DATA') public data: any,\r\n        private tratamientosService: TratamientosService,\r\n        public alert: AppAlertService,\r\n        public menu: JedsMenuService\r\n    ) {\r\n        this.tratamiento = this.data ? this.data : null;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            nombre: new FormControl((this.tratamiento ? this.tratamiento.descripcion : ''), Validators.required),\r\n            activo: new FormControl((this.tratamiento ? this.tratamiento.activo : 1)),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.tratamiento = {\r\n                ...this.tratamiento,\r\n                descripcion: this.form.get('nombre').value,\r\n                activo: this.form.get('activo').value,\r\n            }\r\n            if (this.tratamiento.idtratamiento) {\r\n                this.tratamientosService.updateTratamiento(this.tratamiento)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.menu.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this.tratamientosService.saveTratamiento(this.tratamiento)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.menu.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.menu.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Nuevo Tratamiento</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input matInput formControlName='nombre'>\r\n        </mat-form-field>\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Activo</mat-label>\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='rounded-sm' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ITratamiento } from '../models/tratamiento';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatButton } from '@angular/material/button';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { TratamientosService } from '../service/tratamientos.service';\r\n@Component({\r\n    selector: 'app-tratamientos',\r\n    templateUrl: './tratamientos.component.html',\r\n})\r\nexport class TratamientosComponent implements OnInit {\r\n    tratamientos: ITratamiento[];\r\n    public dataSource: MatTableDataSource<ITratamiento> = new MatTableDataSource();\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    sortValue: string;\r\n\r\n    constructor(\r\n        private tratamientosService: TratamientosService,\r\n        private menu: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService\r\n    ) {\r\n    }\r\n    ngOnInit(): void {\r\n        this.getTratamientos();\r\n    }\r\n\r\n/**\r\n * Esta funcion escucha el cambio de orden de la tabla\r\n */\r\n    _sortChange($event?: any) {\r\n        $event ? this.sortValue = $event.direction : '';\r\n        this.getTratamientos(this.sortValue)\r\n    }\r\n\r\n    /**\r\n     *  -Funcion en el componente.-\r\n     * - Funcion que comunica el componente con los servicios.\r\n     * - Espera que se consulten los tratamientos del backend para almacenarlos en una variable.\r\n     * - Teniendo la respuesta del backend en una variable, llama a la funcion 'getDataTratamientos' pasandole por parametro los tratamientos.\r\n     */\r\n    async getTratamientos(filter?:any) {\r\n        const sort = filter;\r\n        const tratamientos = await firstValueFrom(this.tratamientosService.getTratamientos(sort));\r\n        this.getDataTratamientos(tratamientos);\r\n    }\r\n\r\n    /**\r\n     *  -Funcion en el componente-\r\n     * - Esta funcion toma los datos que se la pasan por parametro para crear una tabla con AngularMaterial.\r\n     * @param data Aca se almacenan los tratamientos.\r\n     */\r\n    async getDataTratamientos(data) {\r\n        new Promise(async (resolve) => {\r\n            this.tratamientos = data;\r\n            this.dataSource = new MatTableDataSource(this.tratamientos);\r\n            resolve(true);\r\n        });\r\n    }\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion guarda un tratamiento.\r\n     * @param documentRef \r\n     */\r\n    saveTratamiento(documentRef: MatButton) {\r\n        this.menu\r\n            .open(SaveComponent, documentRef._elementRef, {})\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: response => {\r\n                    if (response) {\r\n                        this._sortChange()\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion actualiza un tratamiento.\r\n     * @param documentRef \r\n     * @param tratamiento \r\n     */\r\n    updateTratamiento(documentRef: MatButton, tratamiento: ITratamiento) {\r\n        this.menu\r\n            .open(SaveComponent, documentRef._elementRef, tratamiento)\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: response => {\r\n                    if (response) {\r\n                        this._sortChange()\r\n                    }\r\n                },\r\n            });\r\n    }\r\n    /**\r\n     * Funcion en el componente\r\n     * - Esta funcion elimina un tratamiento.\r\n     * @param documentRef \r\n     * @param tratamiento \r\n     */\r\n    deleteTratamiento(tratamiento: ITratamiento) {\r\n        this.confirm.open({\r\n            title: `Eliminar tratamiento`,\r\n            message: `¿Desea eliminar el tratamiento: \"${tratamiento.descripcion}\"?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this.tratamientosService.deleteTratamiento(tratamiento.idtratamiento).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"tratamiento eliminado con éxito.\");\r\n                            if (res) {\r\n                                this._sortChange()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este articulo no puede eliminarse. Está asociado a pedidos de materiales.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"w-full\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"_sortChange($event)\" class='w-full mt-1 mb-18 shadow-lg mr-2 ml-2'>\r\n        <ng-container matColumnDef='nombre' class=\"bg-slate-300\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\"Sort by nombre\">Nombre</th>\r\n            <td mat-cell *matCellDef='let tratamiento'>\r\n                {{tratamiento.descripcion}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='activo'>\r\n            <th mat-header-cell *matHeaderCellDef>Activo</th>\r\n            <td mat-cell *matCellDef='let tratamiento'>\r\n                {{ tratamiento.activo ? 'Si' : 'No' }}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='acciones'>\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <button mat-button (click)=\"saveTratamiento(save)\" #save class=\"bg-blue-500 text-white rounded-md\">Create</button>\r\n            </th>\r\n            <td mat-cell *matCellDef='let tratamiento'>\r\n                <button mat-icon-button (click)=\"updateTratamiento(edit, tratamiento)\" #edit>\r\n                    <mat-icon class=\"text-cyan-700\">edit</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"deleteTratamiento(tratamiento)\" #delete>\r\n                    <mat-icon color=\"warn\">delete</mat-icon>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n        <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n    </table>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { ITratamiento } from '../models/tratamiento';\r\n\r\n@Injectable()\r\nexport class TratamientosService {\r\n    constructor(private http: HttpClient) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los tratamientos activos.\r\n     * @returns tratamientos activos\r\n     */\r\n    getTratamientos(filter?: any): Observable<ITratamiento[]> {\r\n        let f = '?';\r\n        f += filter == 'desc' ? 'sort=-descripcion' : 'sort=descripcion'\r\n\r\n        return this.http.get<ITratamiento[]>(`${environment.administracion.tratamientos}${f}`);\r\n    }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param tratamiento \r\n     * @returns Un tratamiento nuevo\r\n     */\r\n    saveTratamiento(tratamiento: ITratamiento): Observable<ITratamiento> {\r\n        return this.http.post<ITratamiento>(`${environment.administracion.tratamientos}`, tratamiento);\r\n    }\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param tratamiento \r\n     * @returns tratamiento actualizado\r\n     */\r\n    updateTratamiento(tratamiento: ITratamiento): Observable<ITratamiento> {\r\n        return this.http.put<ITratamiento>(`${environment.administracion.tratamientos}` + '/' + tratamiento.idtratamiento, tratamiento);\r\n    }\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idtratamiento \r\n     * @returns Elimina el tratamiento\r\n     */\r\n    deleteTratamiento(idtratamiento: number): Observable<ITratamiento> {\r\n        return this.http.delete<ITratamiento>(environment.administracion.tratamientos + '/' + idtratamiento);\r\n    }\r\n\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from  '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { TratamientosComponent } from './components/tratamientos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { TratamientosService } from './service/tratamientos.service';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TratamientosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [TratamientosComponent, SaveComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatDialogModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatSortModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [TratamientosService, JedsMenuService, AppAlertService]\r\n})\r\nexport class TratamientosModule { }","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["FormControl","FormGroup","Validators","SaveComponent","constructor","data","tratamientosService","alert","menu","columns","tratamiento","ngOnInit","newForm","form","nombre","descripcion","required","activo","onSubmit","valid","warning","get","value","idtratamiento","updateTratamiento","subscribe","next","close","saveTratamiento","onCloseMenu","i0","ɵɵdirectiveInject","i1","TratamientosService","i2","AppAlertService","i3","JedsMenuService","selectors","decls","vars","consts","template","SaveComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SaveComponent_Template_button_click_5_listener","ɵɵelement","SaveComponent_Template_button_click_22_listener","ɵɵadvance","ɵɵproperty","firstValueFrom","MatTableDataSource","ɵɵtextInterpolate1","tratamiento_r8","tratamiento_r9","TratamientosComponent_th_9_Template_button_click_1_listener","ɵɵrestoreView","_r12","_r10","ɵɵreference","ctx_r11","ɵɵnextContext","ɵɵresetView","TratamientosComponent_td_10_Template_button_click_1_listener","restoredCtx","_r17","tratamiento_r13","$implicit","_r14","ctx_r16","TratamientosComponent_td_10_Template_button_click_5_listener","ctx_r18","deleteTratamiento","TratamientosComponent","confirm","dataSource","getTratamientos","_sortChange","$event","sortValue","direction","filter","_this","_asyncToGenerator","sort","tratamientos","getDataTratamientos","_this2","Promise","_ref","resolve","_x","apply","arguments","documentRef","open","_elementRef","afterClosed","response","title","message","dismissible","actions","show","color","label","cancel","res","success","error","console","FuseConfirmationService","i4","TratamientosComponent_Template","TratamientosComponent_Template_table_matSortChange_1_listener","ɵɵelementContainerStart","ɵɵtemplate","TratamientosComponent_th_3_Template","TratamientosComponent_td_4_Template","ɵɵelementContainerEnd","TratamientosComponent_th_6_Template","TratamientosComponent_td_7_Template","TratamientosComponent_th_9_Template","TratamientosComponent_td_10_Template","TratamientosComponent_tr_11_Template","TratamientosComponent_tr_12_Template","environment","http","f","administracion","post","put","delete","ɵɵinject","HttpClient","factory","ɵfac","RouterModule","CommonModule","MatTableModule","MatButtonModule","MatDialogModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatSortModule","routes","path","component","TratamientosModule","imports","forChild","declarations","exports","EmptyError","SafeSubscriber","source","config","hasConfig","reject","subscriber","unsubscribe","complete","defaultValue"],"sourceRoot":"webpack:///","x_google_ignoreList":[6,7]}