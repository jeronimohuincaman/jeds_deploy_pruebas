{"version":3,"file":"src_app_modules_compras_ordenes-de-compra_ordenes-de-compra_module_ts.js","mappings":"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","sources":["./src/app/modules/compras/ordenes-de-compra/components/filter-menu/filter-menu.component.ts","./src/app/modules/compras/ordenes-de-compra/components/filter-menu/filter-menu.component.html","./src/app/modules/compras/ordenes-de-compra/components/ordenes-de-compra.component.ts","./src/app/modules/compras/ordenes-de-compra/components/ordenes-de-compra.component.html","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.ts","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.html","./src/app/modules/compras/ordenes-de-compra/ordenes-de-compra.module.ts","./src/app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { OrdenesDeCompraService } from 'app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-ordenes-de-compra',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  provedores: IProveedor[] = [];\r\n  filteredProveedor: Observable<IProveedor[]>;\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService, \r\n    private datePipe: DatePipe, \r\n    private _ordenesDeCompraService: OrdenesDeCompraService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      proveedor: new FormControl(('')),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getProveedores();\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      proveedor: '',\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n   */\r\n  async getProveedores() {\r\n    const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores());\r\n    this.provedores = Proveedores.list;\r\n    this.filteredProveedor = this.formFilters.controls['proveedor'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProveedor(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterProveedor(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.provedores.filter(provedor =>\r\n      provedor.RazonSocial.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <!-- Rango de fechas -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        <!-- Proveedor -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\" formControlName=\"proveedor\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoProveedor=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedor | async\" [value]=\"proveedor.RazonSocial\">\r\n                    {{proveedor.RazonSocial}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../service/ordenes-de-compra.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n@Component({\r\n    selector: 'app-ordenes-de-compra',\r\n    templateUrl: './ordenes-de-compra.component.html',\r\n    styleUrls: ['./ordenes-de-compra.component.scss']\r\n})\r\nexport class OrdenesDeCompraComponent implements OnInit, OnDestroy {\r\n    ordenes_de_compra: IOrdenDeCompra[];\r\n    public dataSource: MatTableDataSource<IOrdenDeCompra> = new MatTableDataSource();\r\n    headers = ['N°','Fecha', 'Observaciones', 'Proveedor', 'Presupuesto', 'Acciones'];\r\n    column_params = ['numero','fecha', 'observaciones', 'proveedor_descripcion', 'presupuesto', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'proveedor_descripcion', 'numero'];\r\n    filter: IFilter = {\r\n        proveedor: '',\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.compras.orden_compra + '?sort=-codigo';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (orden_compra: IOrdenDeCompra) => 'jedstion:editar',\r\n                iconoAccionado: (orden_compra: IOrdenDeCompra) => '',\r\n                iconoDeshabilitado: (orden_compra: IOrdenDeCompra) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (orden_compra: IOrdenDeCompra) => 'jedstion:eliminar',\r\n                iconoAccionado: (orden_compra: IOrdenDeCompra) => '',\r\n                iconoDeshabilitado: (orden_compra: IOrdenDeCompra) => '',\r\n            },\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = '';\r\n                        // Se va a verificar si se ha seleccionado \"Todos\" como proveedor\r\n                        if (this.filter?.proveedor !== '') {\r\n                            // Se aplicara el filtro de proveedor seleccionado\r\n                            this.extraParams += \"filter[proveedor_descripcion][like]=\" + this.filter.proveedor + '&';\r\n                        }\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateOrdenDeCompra(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteOrdenDeCompra(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveOrdenDeCompra() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Orden de compra creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateOrdenDeCompra(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Orden de compra editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteOrdenDeCompra(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar orden de compra N°\" + event.params.data.codigo,\r\n            message: `¿Desea eliminar la orden de compra: N° ${event.params.data.codigo} del proveedor ${event.params.data.proveedor_descripcion} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._ordenesDeCompraService.deleteOrdenDeCompra(event.params.data.codigo).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Orden de compra eliminada con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Esta orden de compra no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveOrdenDeCompra()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nueva Orden de compra</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../../service/ordenes-de-compra.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, map, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-ordenes-de-compra',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'importe', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    orden_de_compra: IOrdenDeCompra;\r\n    title: string;\r\n    user: any;\r\n    articulos: IArticulo[];\r\n    articulos_list = [];\r\n    proveedores: IProveedor[];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,\r\n        private _empresaService: EmpresaService,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.orden_de_compra = this.data ? this.data : null;\r\n        this.title = this.orden_de_compra?.codigo ? 'Editar orden de compra' : 'Nuevo orden de compra';\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n\r\n        // Escuchamos los cambios en el control de 'articulo' para filtrar mientras escribe\r\n        this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n            debounceTime(300),  // Evita demasiadas llamadas consecutivas\r\n            distinctUntilChanged(), // Solo procede si el valor cambia\r\n            switchMap((value) => {\r\n                const idarticulo = typeof value === 'object' ? value.idarticulo : null;\r\n                const filterLike = typeof value === 'string' ? value : null;\r\n                return this._ordenesDeCompraService.getArticulos(idarticulo, filterLike);\r\n            })\r\n        ).subscribe(response => {\r\n            this.filteredArticulos = response.list;\r\n        });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.orden_de_compra ? this.orden_de_compra.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.orden_de_compra) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.orden_de_compra.codigo).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        articulo: m.articulo,\r\n                        cantidad: m.cantidad,\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno_articulo: m.codigo_interno_articulo,\r\n                        importe: m.importe\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n                this.form.get('numero').disable();\r\n\r\n                // Verifica el estado de habilitacion o deshabilitacion del control IVA, Presupuesto y Numero si contiene items o no\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('iva').disable();\r\n                    this.form.get('presupuesto').disable();\r\n                } else {\r\n                    this.form.get('iva').enable();\r\n                    this.form.get('presupuesto').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl((this.orden_de_compra ? this.orden_de_compra.proveedor : ''), Validators.required),\r\n            fecha: new FormControl((this.orden_de_compra?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            observaciones: new FormControl((this.orden_de_compra ? this.orden_de_compra.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n            numero: new FormControl((this.orden_de_compra ? this.orden_de_compra.numero : '')),\r\n            presupuesto: new FormControl((this.orden_de_compra ? this.orden_de_compra.presupuesto : '')),\r\n            iva: new FormControl((this.orden_de_compra ? this.orden_de_compra.iva : ''), Validators.required)\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), [Validators.required, Validators.min(1)]),\r\n            importe: new FormControl((''), Validators.required)\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var movimiento_articulo Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (movimiento) { //Si 'res' no es false | undefined | null, continua con la logica...\r\n            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                articulo: movimiento.articulo.idarticulo,\r\n                cantidad: movimiento.cantidad,\r\n                idunidadmedida: movimiento.unidad_medida,\r\n                descripcion_articulo: movimiento.articulo.descripcion,\r\n                descripcion_um: movimiento.unidadmedida_descripcion,\r\n                codigo_interno_articulo: movimiento.articulo.codigo_interno,\r\n                importe: movimiento.importe\r\n            }\r\n            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n            // Desabilito el campo IVA, Presupuesto y Numero\r\n            if (this.mov_art_list.length != 0) {\r\n                this.form.get('presupuesto').disable();\r\n            }\r\n\r\n            // Actualizar validaciones según el estado de la grilla\r\n            this.updateFormValidators()\r\n\r\n            this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n            this.alert.success(\"Artículo añadido con éxito\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteMovimiento(articulo) {\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('presupuesto').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('importe').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning('Por favor, Ingrese una cantidad mayor a cero');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value || !this.form_carga_articulos.get('importe').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe ingresar un Artículo');\r\n        } else {\r\n            let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.articulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n            if (existeMovimiento) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida.')\r\n            }\r\n\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n            let articulo = {\r\n                articulo: this.form_carga_articulos.get('articulo').value,\r\n                unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                cantidad: this.form_carga_articulos.get('cantidad').value,\r\n                importe: this.form_carga_articulos.get('importe').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um\r\n            }\r\n\r\n            this.addMovimiento(articulo)\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Verificar si el proveedor seleccionado está en la lista de proveedores\r\n            const proveedor_seleccionado = this.form.get('proveedor').value;\r\n            const proveedor_existe = this.proveedores.some(proveedor => proveedor.Codigo === proveedor_seleccionado.Codigo);\r\n\r\n            if (!proveedor_existe) {\r\n                return this.alert.warning('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\r\n            }\r\n\r\n            let items = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                articulo: objeto.articulo,\r\n                cantidad: objeto.cantidad,\r\n                um: objeto.idunidadmedida,\r\n                importe: objeto.importe\r\n            }))\r\n\r\n            if (items.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n            // Convierto el presupuesto que viene como Numero a String\r\n            const presupuesto = this.form.get('presupuesto').value;\r\n            const presupuestoString = presupuesto ? presupuesto.toString() : '';\r\n\r\n            const payload = {\r\n                orden_compra: {\r\n                    fecha: this.form.get('fecha').value,\r\n                    usuario: this.user.id,\r\n                    proveedor: this.form.get('proveedor').value.Codigo,\r\n                    iva: this.form.get('iva').value,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                    presupuesto: presupuestoString\r\n                },\r\n                items: items\r\n            }\r\n\r\n            if (this.orden_de_compra?.codigo) {\r\n                this._ordenesDeCompraService.updateOrdenDeCompra(payload, this.orden_de_compra.codigo)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._ordenesDeCompraService.saveOrdenDeCompra(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n    * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n    */\r\n    etiquetaArticulo() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._ordenesDeCompraService.getArticulos(idarticulo, null).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.orden_de_compra?.codigo) {\r\n            this.getProveedores(true);\r\n        } else {\r\n            this.getProveedores();\r\n        }\r\n    }\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores(option));\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n\r\n            if (this.orden_de_compra && this.proveedores) {\r\n                const proveedor = this.proveedores.filter(provedor => provedor.Codigo == this.orden_de_compra.proveedor);\r\n                this.form.get('proveedor').setValue(proveedor[0]);\r\n            }\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n\r\n    async getItems(idordencompra): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._ordenesDeCompraService.getItems(idordencompra))\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._ordenesDeCompraService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.result;\r\n            this.articulos_list = this.articulos;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._ordenesDeCompraService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list.sort((a, b) => a.factor - b.factor).map(unidad => {\r\n                //Convierto en numero\r\n                unidad.factor = parseFloat(unidad.factor);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (unidad.factor === 1) {\r\n                    um_base = unidad.um.descripcion;\r\n                }\r\n\r\n                return { idunidadmedida: unidad.idunidadmedida, descripcion_um: unidad.um.descripcion, factor_um: unidad.factor, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n    */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.required, Validators.min(1)]);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('importe').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.min(1));\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos.get('importe').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('importe').updateValueAndValidity();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-auto sm:w-min-w-auto sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>IVA %</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"iva\" [matAutocomplete]=\"iva\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('iva').value    \">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #iva=\"matAutocomplete\">\r\n                        <mat-option [value]=\"'10.5'\">10.5%</mat-option>\r\n                        <mat-option [value]=\"'21.0'\">21%</mat-option>\r\n                        <mat-option [value]=\"'27.0'\">27%</mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('iva')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('iva').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' [ngClass]=\"['w-full', orden_de_compra ? 'sm:w-1/4' : 'sm:w-2/4']\">\r\n                    <mat-label>Presupuesto</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"presupuesto\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('presupuesto')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('presupuesto').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\" *ngIf=\"orden_de_compra\">\r\n                    <mat-label>Número OC</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"numero\">\r\n                </mat-form-field>\r\n            </div>\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-full\" (keydown.enter)=\"onCargar($event)\">\r\n                        <mat-label>Cantidad</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Importe</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"importe\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='importe'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">importe</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            ${{ movimiento_articulo.importe}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { OrdenesDeCompraComponent } from './components/ordenes-de-compra.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { OrdenesDeCompraService } from './service/ordenes-de-compra.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: OrdenesDeCompraComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [OrdenesDeCompraComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [OrdenesDeCompraService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class OrdenesDeCompraModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class OrdenesDeCompraService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     */\r\n    getOrdenesDeCompra(sort?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param orden_de_compra \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveOrdenDeCompra(orden_de_compra: any): Observable<any> {\r\n        return this.http.post<any>(`${environment.compras.orden_compra}`, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param orden_de_compra\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateOrdenDeCompra(orden_de_compra: any, idordencompra: number): Observable<any> {\r\n        return this.http.put<any>(`${environment.compras.orden_compra}` + '/' + idordencompra, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param codigo \r\n     * @returns Elimina un item\r\n     */\r\n    deleteOrdenDeCompra(codigo: number): Observable<IOrdenDeCompra> {\r\n        return this.http.delete<IOrdenDeCompra>(`${environment.compras.orden_compra}` + '/' + codigo);\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(idarticulo?: number, filterLike?: string) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        if (idarticulo) {\r\n            f += `&filter[idarticulo]=${idarticulo}`;\r\n        } else if (filterLike) {\r\n            f += `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}`;\r\n        }\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        ).subscribe((resp: any) => {\r\n            this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n        });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idordencompra: number) {\r\n        let f = `?filter[ordenCompra]=${idordencompra}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.orden_compra_items}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","MAT_DATE_FORMATS","fuseAnimations","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","proveedor_r7","RazonSocial","ɵɵadvance","ɵɵtextInterpolate1","FilterMenuComponent","constructor","data","_menuService","_empresaService","datePipe","_ordenesDeCompraService","provedores","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","proveedor","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","getProveedores","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Proveedores","list","filteredProveedor","controls","valueChanges","_filterProveedor","filterValue","toLowerCase","provedor","includes","ɵɵdirectiveInject","i1","JedsMenuService","i2","EmpresaService","i3","DatePipe","i4","OrdenesDeCompraService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_31_Template","FilterMenuComponent_Template_button_click_34_listener","FilterMenuComponent_Template_button_click_37_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r3","ɵɵpipeBind1","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","OrdenesDeCompraComponent","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","compras","orden_compra","search","setTitulo","nombre_boton","functionName","iconoAccion","iconoAccionado","iconoDeshabilitado","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateOrdenDeCompra","deleteOrdenDeCompra","saveOrdenDeCompra","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","title","codigo","message","proveedor_descripcion","dismissible","actions","show","color","label","cancel","res","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","viewQuery","OrdenesDeCompraComponent_Query","OrdenesDeCompraComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","OrdenesDeCompraComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","finalize","switchMap","takeWhile","tap","timer","MAT_DIALOG_DATA","LectorQrComponent","ctx_r0","_alertConfig","type","showAlert","proveedor_r30","SaveComponent_button_26_Template_button_click_0_listener","_r32","ctx_r31","limpiarCasillero","SaveComponent_button_40_Template_button_click_0_listener","_r34","ctx_r33","SaveComponent_button_45_Template_button_click_0_listener","_r36","ctx_r35","articulo_r37","ɵɵtextInterpolate2","codigo_interno","descripcion","SaveComponent_button_57_Template_button_click_0_listener","_r39","ctx_r38","um_r40","factor_um","um_base","SaveComponent_mat_option_66_i_2_Template","idunidadmedida","descripcion_um","ctx_r15","movimiento_articulo_r43","codigo_interno_articulo","ctx_r17","movimiento_articulo_r44","descripcion_articulo","ctx_r19","movimiento_articulo_r45","ctx_r21","movimiento_articulo_r46","cantidad","ctx_r23","movimiento_articulo_r47","importe","ctx_r25","SaveComponent_td_99_Template_button_click_1_listener","restoredCtx","_r51","movimiento_r48","$implicit","ctx_r50","deleteMovimiento","dialogRef","columns","articulos_list","unidades_de_medida","mov_art_list","mov_art_list_deleted","maxPalabras","orden_de_compra","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","newForm","exist","subscribeAlert","form_carga_articulos","idarticulo","filterLike","getArticulos","response","filteredArticulos","emitConfig","config","appearance","time","dia","mes","anio","fecha","split","getItems","then","m","articulo","form","disable","length","enable","required","observaciones","maxLength","numero","presupuesto","iva","unidadmedida","min","updateFormValidators","addMovimiento","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","item","seleccionItem","info","getUnidadesDeMedidaArticulos","input","onCargar","key","preventDefault","valid","existeMovimiento","find","um","onSubmit","isPalabraMaxLengthReached","proveedor_seleccionado","proveedor_existe","proveedores","some","Codigo","items","objeto","presupuestoString","toString","payload","usuario","id","emit","etiquetaArticulo","sendObject","code","decodedText","parseInt","option","Promise","_ref","resolve","filteredProveedores","_filterProveedores","_x","apply","arguments","getTextProveedor","idordencompra","_this2","_ref2","_x2","_this3","articulos","_ref3","result","_filterArticulos","_x3","_this4","unidadesDeMedida","_ref4","sort","a","b","factor","unidad","parseFloat","_x4","getTextArticulo","getPalabrasLength","cambiarFecha","partes","fh","Number","setValidators","clearValidators","updateValueAndValidity","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_button_21_Template","SaveComponent_mat_option_24_Template","SaveComponent_button_26_Template","SaveComponent_button_31_Template","SaveComponent_button_40_Template","SaveComponent_button_45_Template","SaveComponent_mat_form_field_46_Template","SaveComponent_Template_input_ngModelChange_53_listener","SaveComponent_mat_option_56_Template","SaveComponent_button_57_Template","SaveComponent_Template_button_click_59_listener","SaveComponent_Template_mat_select_ngModelChange_65_listener","SaveComponent_mat_option_66_Template","SaveComponent_Template_mat_form_field_keydown_enter_67_listener","SaveComponent_Template_mat_form_field_keydown_enter_72_listener","SaveComponent_Template_button_click_77_listener","ɵɵelementContainerStart","SaveComponent_th_83_Template","SaveComponent_td_84_Template","ɵɵelementContainerEnd","SaveComponent_th_86_Template","SaveComponent_td_87_Template","SaveComponent_th_89_Template","SaveComponent_td_90_Template","SaveComponent_th_92_Template","SaveComponent_td_93_Template","SaveComponent_th_95_Template","SaveComponent_td_96_Template","SaveComponent_th_98_Template","SaveComponent_td_99_Template","SaveComponent_tr_100_Template","SaveComponent_tr_101_Template","SaveComponent_div_102_Template","SaveComponent_Template_button_click_110_listener","ɵɵtextInterpolate","_r7","ɵɵpureFunction1","_c0","_r11","_c1","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","OrdenesDeCompraModule","imports","forChild","declarations","exports","http","_authService","getOrdenesDeCompra","f","subject","administracion","view_clientes","resp","accessToken","token","asObservable","post","put","delete","stock","articulo_unidad_medidas","orden_compra_items","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}