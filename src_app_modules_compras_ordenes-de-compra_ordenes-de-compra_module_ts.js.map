{"version":3,"file":"src_app_modules_compras_ordenes-de-compra_ordenes-de-compra_module_ts.js","mappings":"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","sources":["./src/app/modules/compras/ordenes-de-compra/components/addArticulo/add-articulo.component.ts","./src/app/modules/compras/ordenes-de-compra/components/addArticulo/add-articulo.component.html","./src/app/modules/compras/ordenes-de-compra/components/filter-menu/filter-menu.component.ts","./src/app/modules/compras/ordenes-de-compra/components/filter-menu/filter-menu.component.html","./src/app/modules/compras/ordenes-de-compra/components/ordenes-de-compra.component.ts","./src/app/modules/compras/ordenes-de-compra/components/ordenes-de-compra.component.html","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.ts","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.html","./src/app/modules/compras/ordenes-de-compra/ordenes-de-compra.module.ts","./src/app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { OrdenesDeCompraService } from '../../service/ordenes-de-compra.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, firstValueFrom, map, startWith } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-movimientos-internos',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _stockInicialService: OrdenesDeCompraService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n        private dialogo: MatDialog,\r\n\r\n    ) {\r\n        this.title = 'Añadir articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getArticulos();\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._stockInicialService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos.filter(articulo => articulo.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextArticulo(option: IArticulo): string {\r\n        return option ? option.descripcion : '';\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._stockInicialService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = unidadesDeMedida.list;\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        if ($event.idarticulo) {\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero() {\r\n        this.form.get('articulo').setValue('');\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''),Validators.required),\r\n            unidadmedida: new FormControl((''),Validators.required),\r\n            cantidad: new FormControl((''),Validators.required),\r\n            importe: new FormControl((''),Validators.required),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n            let articulo = {\r\n                articulo: this.form.get('articulo').value,\r\n                unidad_medida: this.form.get('unidadmedida').value,\r\n                cantidad: this.form.get('cantidad').value,\r\n                importe: this.form.get('importe').value,\r\n                unidadmedida_descripcion: unidadmedida.um.descripcion\r\n            }\r\n            this.onCloseMenu(articulo)\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div>\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero()\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                        [value]=\"um.idunidadmedida\">{{um.um.descripcion}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                    <mat-label>Importe</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"importe\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Añadir\r\n        </button>\r\n    </div>","import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { OrdenesDeCompraService } from 'app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service';\r\nimport { Observable, firstValueFrom, map, startWith } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-ordenes-de-compra',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedores: IProveedor[] = [];\r\n  filteredProveedores: Observable<IProveedor[]>;\r\n  constructor(@Inject('MENU_DATA') public data: any, private _menuService: JedsMenuService, private datePipe: DatePipe, private _ordenesDeCompraService: OrdenesDeCompraService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      proveedor: new FormControl(('')),\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n    });\r\n    this.formFilters.patchValue(this.data.filter);\r\n    this.getProveedores();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      proveedor: {Codigo: -1, RazonSocial: ''},\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = {proveedor: -1, filtroFechaInicio: null, filtroFechaFin: null}) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n      if (data.proveedor) {    //Sí existe un proveedor...\r\n        if (data.proveedor.Codigo) { //Sí existe un proveedor con codigo...\r\n          data.proveedor = { Codigo: data.proveedor.Codigo, RazonSocial: data.proveedor.RazonSocial }; //...Encapsulo solo lo que necesito para poder utilizaro en la funcion getText() y para poder filtrar en el servicio.\r\n        }\r\n      } else{ //Sí no existe un proveedor...\r\n        data.proveedor = { Codigo: -1, RazonSocial: '' } //...Encapsulo los datos por defecto\r\n      }\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarCasillero($event?) {\r\n    if (!$event) {\r\n      if (this.formFilters.get('filtroFechaInicio').value) {\r\n        this.formFilters.get('filtroFechaInicio').setValue('');\r\n      }\r\n      if (this.formFilters.get('filtroFechaFin').value) {\r\n        this.formFilters.get('filtroFechaFin').setValue('');\r\n      }\r\n    } else {\r\n      if (this.formFilters.get('proveedor').value) {\r\n        this.formFilters.get('proveedor').setValue(-1);\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProveedores(option?) {\r\n    const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores(option ? option : undefined));\r\n    new Promise(async (resolve) => {\r\n      this.proveedores = Proveedores;\r\n      this.filteredProveedores = this.formFilters.get('proveedor').valueChanges.pipe(\r\n        startWith(''),\r\n        map((value) => this._filterProveedores(value)),\r\n      );\r\n\r\n      if (this.proveedores) {\r\n        const proveedor = this.proveedores.filter(provedor => provedor.Codigo == this.formFilters.get('proveedor').value.Codigo);\r\n        this.formFilters.get('proveedor').setValue(proveedor[0]);\r\n      }\r\n      resolve(true);\r\n    })\r\n  };\r\n\r\n  private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n    const filterValue = proveedor.toString().toLowerCase();\r\n    return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getTextProveedor(option) {\r\n    return option ? option.RazonSocial : '';\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <!-- Rango de fechas -->\r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarCasillero()\" class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        <span class=\"font-bold text-gray-500 text-base\">Proveedores</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n            <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                    {{ proveedor.RazonSocial }}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarCasillero(btn)\" #btn class=\"mr-2\"\r\n                *ngIf=\"formFilters.get('proveedor').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../service/ordenes-de-compra.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-ordenes-de-compra',\r\n    templateUrl: './ordenes-de-compra.component.html',\r\n    styleUrls: ['./ordenes-de-compra.component.scss']\r\n})\r\nexport class OrdenesDeCompraComponent implements OnInit, OnDestroy {\r\n    ordenes_de_compra: IOrdenDeCompra[];\r\n    public dataSource: MatTableDataSource<IOrdenDeCompra> = new MatTableDataSource();\r\n    headers = ['N°','Fecha', 'Observaciones', 'Proveedor', 'Presupuesto', 'Acciones'];\r\n    column_params = ['codigo','fecha', 'observaciones', 'proveedor_descripcion', 'presupuesto', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'proveedor_descripcion'];\r\n    filter: IFilter = {\r\n        proveedor: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.compras.orden_compra + '?sort=-codigo';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.proveedor?.Codigo != -1 ? \"filter[proveedor]=\" + this.filter.proveedor.Codigo + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateOrdenDeCompra(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteOrdenDeCompra(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveOrdenDeCompra() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateOrdenDeCompra(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteOrdenDeCompra(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar orden de compra N°\" + event.params.data.codigo,\r\n            message: `¿Desea eliminar la orden de compra: N° ${event.params.data.codigo} del proveedor ${event.params.data.proveedor} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._ordenesDeCompraService.deleteOrdenDeCompra(event.params.data.codigo).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Orden de compra eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            alert(\"Esta orden de compra no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-4 mt-2 pb-4\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 rounded-full z-99999' matTooltip='Crear Orden'\r\n                (click)=\"saveOrdenDeCompra()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../../service/ordenes-de-compra.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, debounceTime, firstValueFrom, map, startWith } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\n\r\n@Component({\r\n    selector: 'app-save-ordenes-de-compra',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['articulo', 'codigointerno', 'cantidad', 'unidadmedida', 'importe', 'acciones'];\r\n    form: FormGroup;\r\n    orden_de_compra: IOrdenDeCompra;\r\n    title: string;\r\n    user: any;\r\n    articulos: IArticulo[];\r\n    proveedores: IProveedor[];\r\n    unidades_de_medida: any[] = [];\r\n    items_list: any[] = [];\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,    \r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.orden_de_compra = this.data ? this.data : null;\r\n        this.title = this.orden_de_compra?.codigo ? 'Editar orden de compra' : 'Nuevo orden de compra';\r\n        /* this.user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.exist()\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.orden_de_compra ? this.orden_de_compra.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.orden_de_compra) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.orden_de_compra.codigo).then((r) => {\r\n                this.dataSource = new MatTableDataSource(r)\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl((this.orden_de_compra ? this.orden_de_compra.proveedor : ''),Validators.required),\r\n            fecha: new FormControl((this.orden_de_compra?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            observaciones: new FormControl((this.orden_de_compra ? this.orden_de_compra.observaciones : ''), ),\r\n            numero: new FormControl((this.orden_de_compra ? this.orden_de_compra.numero : ''), [Validators.required, Validators.pattern('^[0-9]*$')]),\r\n            presupuesto: new FormControl((this.orden_de_compra ? this.orden_de_compra.presupuesto : ''), [Validators.pattern('^[0-9]*$')]),\r\n            iva: new FormControl((this.orden_de_compra ? this.orden_de_compra.iva : ''), [Validators.required]),\r\n            // contacto: new FormControl((this.orden_de_compra ? this.orden_de_compra.contacto : ''),),\r\n            // pedido: new FormControl((this.orden_de_compra ? this.orden_de_compra.pedido : ''), Validators.required),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.orden_de_compra?.codigo) {\r\n            this.getProveedores(true);\r\n        } else {\r\n            this.getProveedores();\r\n        }\r\n    }\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores(option));\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores;\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n\r\n            if (this.orden_de_compra && this.proveedores) {\r\n                const proveedor = this.proveedores.filter(provedor => provedor.Codigo == this.orden_de_compra.proveedor);\r\n                this.form.get('proveedor').setValue(proveedor[0]);\r\n            }\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n\r\n    async getItems(idordencompra): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._ordenesDeCompraService.getItems(idordencompra))\r\n            this.items_list = items.list;\r\n            resolve(this.items_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n        addArticulo() {\r\n            this.dialogo\r\n            .open(AddArticuloComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: (res) => {    \r\n                    let art_stk_ini = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                        articulo: res.articulo.idarticulo,\r\n                        cantidad: res.cantidad,\r\n                        idunidadmedida: res.unidad_medida,\r\n                        descripcion_articulo: res.articulo.descripcion,\r\n                        descripcion_um: res.unidadmedida_descripcion,\r\n                        codigo_interno_articulo: res.articulo.codigo_interno,\r\n                        importe: res.importe\r\n                    }\r\n                    this.items_list = [...this.items_list, art_stk_ini];\r\n                    this.dataSource = new MatTableDataSource(this.items_list); //Actualizo la tabla\r\n                },\r\n            });\r\n        }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteArticulo(articulo) {\r\n        this.items_list = this.items_list.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.items_list)\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return alert('Revise Los Datos Ingresados');\r\n        } else {\r\n            let items = this.items_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                    articulo: objeto.articulo,\r\n                    cantidad: objeto.cantidad,\r\n                    um: objeto.idunidadmedida,\r\n                    importe: objeto.importe\r\n                }))\r\n\r\n            if (items.length === 0) {\r\n                return alert('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n                const payload = {\r\n                    orden_compra: {\r\n                        fecha: this.form.get('fecha').value,\r\n                        numero: this.form.get('numero').value,\r\n                        usuario: this.user.id,\r\n                        proveedor: this.form.get('proveedor').value.Codigo,\r\n                        iva: this.form.get('iva').value,\r\n                        observaciones: this.form.get('observaciones').value,\r\n                        presupuesto: this.form.get('presupuesto').value\r\n                    },\r\n                    items: items\r\n                }\r\n\r\n            if (this.orden_de_compra?.codigo) {\r\n                this._ordenesDeCompraService.updateOrdenDeCompra(payload, this.orden_de_compra.codigo)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._ordenesDeCompraService.saveOrdenDeCompra(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <div class=\"shadow-md mb-3\">\r\n            <div class=\"flex gap-1\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\"\r\n                        readonly=\"true\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>IVA %</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"iva\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>Presupuesto</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"presupuesto\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-1/4\">\r\n                    <mat-label>Número</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"numero\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                    <mat-label>Observaciones</mat-label>\r\n                    <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                </mat-form-field>\r\n            </div>  \r\n        </div>\r\n        <!-- Grilla -->\r\n        <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-xl pb-10 border-t-2 border-slate-200\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                <ng-container matColumnDef='articulo'>\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        Articulo</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{articulo.descripcion_articulo}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='codigointerno'>\r\n                    <th mat-header-cell *matHeaderCellDef>Código interno</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.codigo_interno_articulo}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='cantidad'>\r\n                    <th mat-header-cell *matHeaderCellDef>Cantidad</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.cantidad}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='unidadmedida'>\r\n                    <th mat-header-cell *matHeaderCellDef>Unidad de medida</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.descripcion_um }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='importe'>\r\n                    <th mat-header-cell *matHeaderCellDef>Importe</th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        {{ articulo.importe}}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef='acciones'>\r\n                    <th mat-header-cell *matHeaderCellDef> <button mat-mini-fab color=\"primary\" aria-label=\"icon\"\r\n                            class=\"rounded-full\" (click)=\"addArticulo()\">\r\n                            <mat-icon>add</mat-icon>\r\n                        </button></th>\r\n                    <td mat-cell *matCellDef='let articulo'>\r\n                        <button mat-icon-button (click)=\"deleteArticulo(articulo)\" #delete>\r\n                            <mat-icon color=\"warn\">delete</mat-icon>\r\n                        </button>\r\n                    </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n            </table>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent'\r\n            class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { OrdenesDeCompraComponent } from './components/ordenes-de-compra.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { OrdenesDeCompraService } from './service/ordenes-de-compra.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: OrdenesDeCompraComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [OrdenesDeCompraComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [OrdenesDeCompraService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class OrdenesDeCompraModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class OrdenesDeCompraService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     */\r\n    getOrdenesDeCompra(sort?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param orden_de_compra \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveOrdenDeCompra(orden_de_compra:any): Observable<any> {\r\n        return this.http.post<any>(`${environment.compras.orden_compra}`, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param orden_de_compra\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateOrdenDeCompra(orden_de_compra: any, idordencompra: number): Observable<any> {\r\n        return this.http.put<any>(`${environment.compras.orden_compra}` + '/' + idordencompra, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param codigo \r\n     * @returns Elimina un item\r\n     */\r\n    deleteOrdenDeCompra(codigo: number): Observable<IOrdenDeCompra> {\r\n        return this.http.delete<IOrdenDeCompra>(`${environment.compras.orden_compra}` + '/' + codigo);\r\n    }\r\n\r\n    getProveedores(option?): Observable<IProveedor[]> {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? '?filter[activo]=1' : '';\r\n        return this.http.get<IProveedor[]>(`${environment.administracion.proveedores}${f}`)\r\n    }\r\n\r\n    getArticulos() {\r\n        let f = '?filter[activo]=1&pagination=1&per-page=10&page=1'\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idordencompra: number) {\r\n        let f = `?filter[ordenCompra]=${idordencompra}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.orden_compra_items}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","firstValueFrom","map","startWith","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","articulo_r4","ɵɵadvance","ɵɵtextInterpolate1","descripcion","ɵɵlistener","AddArticuloComponent_button_19_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r7","idunidadmedida","ɵɵtextInterpolate","um","AddArticuloComponent","constructor","data","_stockInicialService","datePipe","alert","dialogRef","dialogo","columns","unidades_de_medida","dataSource","title","ngOnInit","newForm","getArticulos","_this","_asyncToGenerator","articulos","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","pipe","value","_filterArticulos","_x","apply","arguments","filterValue","toString","toLowerCase","filter","articulo","includes","getTextArticulo","option","getUnidadesDeMedidaArticulos","idarticulo","_this2","unidadesDeMedida","_ref2","_x2","seleccionArticulo","$event","setValue","required","unidadmedida","cantidad","importe","onSubmit","valid","warning","find","unidad_medida","unidadmedida_descripcion","onCloseMenu","close","ɵɵdirectiveInject","i1","OrdenesDeCompraService","i2","DatePipe","i3","AppAlertService","i4","MatDialogRef","MatDialog","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_Template_input_ngModelChange_14_listener","ɵɵtemplate","AddArticuloComponent_mat_option_17_Template","AddArticuloComponent_button_19_Template","ɵɵelement","AddArticuloComponent_mat_option_28_Template","AddArticuloComponent_Template_button_click_34_listener","_r0","ɵɵpipeBind1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","proveedor_r7","RazonSocial","FilterMenuComponent_button_30_Template_button_click_0_listener","_r10","_r8","ɵɵreference","ctx_r9","FilterMenuComponent","_menuService","_ordenesDeCompraService","proveedores","formFilters","proveedor","filtroFechaInicio","filtroFechaFin","patchValue","getProveedores","resetFilters","reset","Codigo","transform","Proveedores","undefined","filteredProveedores","_filterProveedores","provedor","getTextProveedor","JedsMenuService","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_button_30_Template","FilterMenuComponent_Template_button_click_32_listener","FilterMenuComponent_Template_button_click_35_listener","getRawValue","_r2","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","OrdenesDeCompraComponent","confirm","_searchService","router","_headerTextService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","compras","orden_compra","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","subscribe","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateOrdenDeCompra","deleteOrdenDeCompra","saveOrdenDeCompra","panelClass","params","autoFocus","codigo","message","dismissible","actions","show","color","label","cancel","res","success","renderTabla","error","console","ngOnDestroy","unsubscribe","FuseConfirmationService","i5","SearchService","i6","i7","Router","i8","HeaderTextService","viewQuery","OrdenesDeCompraComponent_Query","OrdenesDeCompraComponent_Template_button_click_3_listener","OrdenesDeCompraComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","proveedor_r17","articulo_r18","descripcion_articulo","articulo_r19","codigo_interno_articulo","articulo_r20","articulo_r21","descripcion_um","articulo_r22","SaveComponent_th_59_Template_button_click_1_listener","_r24","ctx_r23","addArticulo","SaveComponent_td_60_Template_button_click_1_listener","restoredCtx","_r28","articulo_r25","$implicit","ctx_r27","deleteArticulo","items_list","orden_de_compra","user","JSON","parse","localStorage","getItem","exist","dia","mes","anio","fecha","split","getItems","then","r","Date","observaciones","numero","pattern","presupuesto","iva","idordencompra","items","art_stk_ini","codigo_interno","item","cambiarFecha","partes","length","fh","Number","objeto","payload","usuario","id","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_mat_option_22_Template","ɵɵelementContainerStart","SaveComponent_th_44_Template","SaveComponent_td_45_Template","ɵɵelementContainerEnd","SaveComponent_th_47_Template","SaveComponent_td_48_Template","SaveComponent_th_50_Template","SaveComponent_td_51_Template","SaveComponent_th_53_Template","SaveComponent_td_54_Template","SaveComponent_th_56_Template","SaveComponent_td_57_Template","SaveComponent_th_59_Template","SaveComponent_td_60_Template","SaveComponent_tr_61_Template","SaveComponent_tr_62_Template","SaveComponent_Template_button_click_64_listener","_r1","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","OrdenesDeCompraModule","imports","forChild","declarations","exports","Subject","http","_authService","getOrdenesDeCompra","sort","f","subject","administracion","view_clientes","resp","accessToken","token","result","asObservable","post","put","delete","stock","articulo_unidad_medidas","orden_compra_items","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}