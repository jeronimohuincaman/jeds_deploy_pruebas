{"version":3,"file":"src_app_modules_compras_ordenes-de-compra_ordenes-de-compra_module_ts.js","mappings":"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","sources":["./src/app/modules/compras/ordenes-de-compra/components/filter-menu/filter-menu.component.ts","./src/app/modules/compras/ordenes-de-compra/components/filter-menu/filter-menu.component.html","./src/app/modules/compras/ordenes-de-compra/components/ordenes-de-compra.component.ts","./src/app/modules/compras/ordenes-de-compra/components/ordenes-de-compra.component.html","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.ts","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.html","./src/app/modules/compras/ordenes-de-compra/ordenes-de-compra.module.ts","./src/app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { OrdenesDeCompraService } from 'app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-ordenes-de-compra',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  provedores: IProveedor[] = [];\r\n  filteredProveedor: Observable<IProveedor[]>;\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService,\r\n    private _empresaService: EmpresaService, \r\n    private datePipe: DatePipe, \r\n    private _ordenesDeCompraService: OrdenesDeCompraService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      proveedor: new FormControl(('')),\r\n      pendiente_entrega: new FormControl(('')),\r\n    });\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.getProveedores();\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      proveedor: '',\r\n      pendiente_entrega: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los proveedores en el filtro de grilla.\r\n   */\r\n  async getProveedores() {\r\n    const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores());\r\n    this.provedores = Proveedores.list;\r\n    this.filteredProveedor = this.formFilters.controls['proveedor'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterProveedor(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterProveedor(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.provedores.filter(provedor =>\r\n      provedor.RazonSocial.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <!-- Pendientes de entrega -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Pendientes de entrega</span>\r\n        <mat-form-field\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"pendiente_entrega\">\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n                <mat-option [value]='0'>No</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <!-- Rango de fechas -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n        <!-- Proveedor -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Proveedor</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Proveedor\" matInput [matAutocomplete]=\"autoProveedor\" formControlName=\"proveedor\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoProveedor=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let proveedor of filteredProveedor | async\" [value]=\"proveedor.RazonSocial\">\r\n                    {{proveedor.RazonSocial}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../service/ordenes-de-compra.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n@Component({\r\n    selector: 'app-ordenes-de-compra',\r\n    templateUrl: './ordenes-de-compra.component.html',\r\n    styleUrls: ['./ordenes-de-compra.component.scss']\r\n})\r\nexport class OrdenesDeCompraComponent implements OnInit, OnDestroy {\r\n    ordenes_de_compra: IOrdenDeCompra[];\r\n    public dataSource: MatTableDataSource<IOrdenDeCompra> = new MatTableDataSource();\r\n    headers = ['N°', 'Fecha', 'Observaciones', 'Proveedor', 'Presupuesto', 'Pendiente de Entrega', 'Acciones'];\r\n    column_params = ['numero', 'fecha', 'observaciones', 'proveedor_descripcion', 'pedido', 'estado', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'proveedor_descripcion', 'numero'];\r\n    filter: IFilter = {\r\n        proveedor: '',\r\n        pendiente_entrega: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.compras.view_orden_compras + '?sort=-codigo&pagination=1';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (orden_compra: IOrdenDeCompra) => orden_compra.editable === 1 ? 'jedstion:editar' : 'jedstion:editar_disabled',\r\n                iconoAccionado: (orden_compra: IOrdenDeCompra) => '',\r\n                iconoDeshabilitado: (orden_compra: IOrdenDeCompra) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (orden_compra: IOrdenDeCompra) => 'jedstion:eliminar',\r\n                iconoAccionado: (orden_compra: IOrdenDeCompra) => '',\r\n                iconoDeshabilitado: (orden_compra: IOrdenDeCompra) => '',\r\n            },\r\n            {\r\n                icono: 'impresora',\r\n                nombre_boton: \"Reporte de OC\",\r\n                functionName: 'reporte_orden_de_compra',\r\n                iconoAccion: (orden_compra: IOrdenDeCompra) => 'jedstion:imprimir',\r\n                iconoAccionado: (orden_compra: IOrdenDeCompra) => '',\r\n                iconoDeshabilitado: (orden_compra: IOrdenDeCompra) => '',\r\n            },\r\n            {\r\n                icono: 'send',\r\n                nombre_boton: \"Enviar Orden De Compra\",\r\n                functionName: 'enviar_orden',\r\n                iconoAccion: (orden_compra: IOrdenDeCompra) => 'jedstion:enviar_disabled',\r\n                iconoAccionado: (orden_compra: IOrdenDeCompra) => '',\r\n                iconoDeshabilitado: (orden_compra: IOrdenDeCompra) => '',\r\n            }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = '';\r\n                        // Se va a verificar si se ha seleccionado \"Todos\" como proveedor\r\n                        if (this.filter?.proveedor !== '') {\r\n                            // Se aplicara el filtro de proveedor seleccionado\r\n                            this.extraParams += \"filter[proveedor_descripcion][like]=\" + this.filter.proveedor + '&';\r\n                        }\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n                        this.extraParams += this.filter.pendiente_entrega != -1 ? \"filter[estado]=\" + this.filter.pendiente_entrega + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                if (event.params.data.editable === 1) {\r\n                    this.updateOrdenDeCompra(event);\r\n                } else {\r\n                    this.alert.warning('No puede editar esta Orden de Compra porque tiene Remitos asociados');\r\n                }\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteOrdenDeCompra(event);\r\n                break;\r\n            case 'reporte_orden_de_compra':\r\n                this.reporteOrdenDeCompra(event);\r\n                break;\r\n            case 'enviar_orden':\r\n                this.alert.info('Esta función estará disponible proximamente');\r\n                // this.enviarOrdenDeCompra(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveOrdenDeCompra() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Orden de compra creada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateOrdenDeCompra(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Orden de compra editada con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteOrdenDeCompra(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar orden de compra N°\" + event.params.data.codigo,\r\n            message: `¿Desea eliminar la orden de compra: N° ${event.params.data.codigo} del proveedor ${event.params.data.proveedor_descripcion} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._ordenesDeCompraService.deleteOrdenDeCompra(event.params.data.codigo).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Orden de compra eliminada con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Esta orden de compra no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n    */\r\n    reporteOrdenDeCompra(event) {\r\n        const idordencompra = event.params.data.codigo;\r\n        this._ordenesDeCompraService.reporteOrdenDeCompra(idordencompra).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank');\r\n                    }\r\n                } else {\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"absolute right-10\">\r\n            <button mat-flat-button (click)='saveOrdenDeCompra()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nueva Orden de compra</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../../service/ordenes-de-compra.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, map, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-ordenes-de-compra',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 150;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    deposito_default = 0;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    // Particulares del modulo\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'importe', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    orden_de_compra: IOrdenDeCompra;\r\n    user: any;\r\n    articulos: IArticulo[];\r\n    articulos_list = [];\r\n    proveedores: IProveedor[];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,\r\n        private _empresaService: EmpresaService,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.orden_de_compra = this.data ? this.data : null;\r\n        this.title = this.orden_de_compra?.codigo ? 'Editar orden de compra' : 'Nuevo orden de compra';\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n\r\n        // Escuchamos los cambios en el control de 'articulo' para filtrar mientras escribe\r\n        this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n            debounceTime(300),  // Evita demasiadas llamadas consecutivas\r\n            distinctUntilChanged(), // Solo procede si el valor cambia\r\n            switchMap((value) => {\r\n                const idarticulo = typeof value === 'object' ? value.idarticulo : null;\r\n                const filterLike = typeof value === 'string' ? value : null;\r\n                return this._ordenesDeCompraService.getArticulos(idarticulo, filterLike);\r\n            })\r\n        ).subscribe(response => {\r\n            this.filteredArticulos = response.list;\r\n        });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.orden_de_compra ? this.orden_de_compra.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.orden_de_compra) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.orden_de_compra.codigo).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        articulo: m.articulo,\r\n                        cantidad: m.cantidad,\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno_articulo: m.codigo_interno_articulo,\r\n                        importe: m.importe\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n                this.form.get('numero').disable();\r\n\r\n                // Verifica el estado de habilitacion o deshabilitacion del control IVA, Presupuesto y Numero si contiene items o no\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('iva').disable();\r\n                    this.form.get('presupuesto').disable();\r\n                } else {\r\n                    this.form.get('iva').enable();\r\n                    this.form.get('presupuesto').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl((this.orden_de_compra ? this.orden_de_compra.proveedor : ''), Validators.required),\r\n            fecha: new FormControl((this.orden_de_compra?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            observaciones: new FormControl((this.orden_de_compra ? this.orden_de_compra.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n            numero: new FormControl((this.orden_de_compra ? this.orden_de_compra.numero : '')),\r\n            presupuesto: new FormControl((this.orden_de_compra ? this.orden_de_compra.presupuesto : '')),\r\n            iva: new FormControl((this.orden_de_compra ? this.orden_de_compra.iva : ''), Validators.required)\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), [Validators.required, Validators.min(1)]),\r\n            importe: new FormControl((''), Validators.required)\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var movimiento_articulo Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (movimiento) { //Si 'res' no es false | undefined | null, continua con la logica...\r\n            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                articulo: movimiento.articulo.idarticulo,\r\n                cantidad: movimiento.cantidad,\r\n                idunidadmedida: movimiento.unidad_medida,\r\n                descripcion_articulo: movimiento.articulo.descripcion,\r\n                descripcion_um: movimiento.unidadmedida_descripcion,\r\n                codigo_interno_articulo: movimiento.articulo.codigo_interno,\r\n                importe: movimiento.importe\r\n            }\r\n            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n            // Desabilito el campo IVA, Presupuesto y Numero\r\n            if (this.mov_art_list.length != 0) {\r\n                this.form.get('presupuesto').disable();\r\n            }\r\n\r\n            // Actualizar validaciones según el estado de la grilla\r\n            this.updateFormValidators()\r\n\r\n            this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n            this.alert.success(\"Artículo añadido con éxito\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteMovimiento(articulo) {\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('presupuesto').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo);\r\n\r\n            // Muevo el foco al campo \"cantidad\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"cantidad\".\r\n            setTimeout(() => {\r\n                const cantidadField = document.querySelector('[formControlName=\"cantidad\"]') as HTMLInputElement;\r\n                cantidadField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        if ($event && info === 'cambio_de_foco') {\r\n            $event.preventDefault();\r\n\r\n            // Muevo el foco al campo \"importe\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"importe\".\r\n            setTimeout(() => {\r\n                const importeField = document.querySelector('[formControlName=\"importe\"]') as HTMLInputElement;\r\n                importeField?.focus();\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('importe').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning('Por favor, Ingrese una cantidad mayor a cero');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value || !this.form_carga_articulos.get('importe').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe ingresar un Artículo');\r\n        } else {\r\n            let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.articulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n            if (existeMovimiento) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida.')\r\n            }\r\n\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n            let articulo = {\r\n                articulo: this.form_carga_articulos.get('articulo').value,\r\n                unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                cantidad: this.form_carga_articulos.get('cantidad').value,\r\n                importe: this.form_carga_articulos.get('importe').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um\r\n            }\r\n\r\n            this.addMovimiento(articulo)\r\n        }\r\n\r\n        // Mueve el foco al campo \"articulo\" después de la carga\r\n        this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n        const articuloField = document.querySelector('[formControlName=\"articulo\"]') as HTMLInputElement;\r\n        articuloField?.focus();\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Verificar si el proveedor seleccionado está en la lista de proveedores\r\n            const proveedor_seleccionado = this.form.get('proveedor').value;\r\n            const proveedor_existe = this.proveedores.some(proveedor => proveedor.Codigo === proveedor_seleccionado.Codigo);\r\n\r\n            if (!proveedor_existe) {\r\n                return this.alert.warning('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\r\n            }\r\n\r\n            let items = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                articulo: objeto.articulo,\r\n                cantidad: objeto.cantidad,\r\n                um: objeto.idunidadmedida,\r\n                importe: objeto.importe\r\n            }))\r\n\r\n            if (items.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n            // Convierto el presupuesto que viene como Numero a String\r\n            const presupuesto = this.form.get('presupuesto').value;\r\n            const presupuestoString = presupuesto ? presupuesto.toString() : '';\r\n\r\n            const payload = {\r\n                orden_compra: {\r\n                    fecha: this.form.get('fecha').value,\r\n                    usuario: this.user.id,\r\n                    proveedor: this.form.get('proveedor').value.Codigo,\r\n                    iva: this.form.get('iva').value,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                    presupuesto: presupuestoString\r\n                },\r\n                items: items\r\n            }\r\n\r\n            if (this.orden_de_compra?.codigo) {\r\n                this._ordenesDeCompraService.updateOrdenDeCompra(payload, this.orden_de_compra.codigo)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._ordenesDeCompraService.saveOrdenDeCompra(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n    * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n    */\r\n    etiquetaArticulo() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._ordenesDeCompraService.getArticulos(idarticulo, null).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.orden_de_compra?.codigo) {\r\n            this.getProveedores(true);\r\n        } else {\r\n            this.getProveedores();\r\n        }\r\n    }\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores(option));\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n\r\n            if (this.orden_de_compra && this.proveedores) {\r\n                const proveedor = this.proveedores.filter(provedor => provedor.Codigo == this.orden_de_compra.proveedor);\r\n                this.form.get('proveedor').setValue(proveedor[0]);\r\n            }\r\n\r\n            // Oculto el spinner\r\n            this.mostrarSpinner = false;\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n\r\n    async getItems(idordencompra): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._ordenesDeCompraService.getItems(idordencompra))\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._ordenesDeCompraService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.result;\r\n            this.articulos_list = this.articulos;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._ordenesDeCompraService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list.sort((a, b) => a.factor - b.factor).map(unidad => {\r\n                //Convierto en numero\r\n                unidad.factor = parseFloat(unidad.factor);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (unidad.factor === 1) {\r\n                    um_base = unidad.um.descripcion;\r\n                }\r\n\r\n                return { idunidadmedida: unidad.idunidadmedida, descripcion_um: unidad.um.descripcion, factor_um: unidad.factor, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo?.idarticulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n    */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.required, Validators.min(1)]);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('importe').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.min(1));\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos.get('importe').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('importe').updateValueAndValidity();\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl xl:max-h-[950px] xl:min-h-[850px] sm:max-h-[630px] sm:min-h-[500px] overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>IVA %</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"iva\" [matAutocomplete]=\"iva\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('iva').value    \">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #iva=\"matAutocomplete\">\r\n                        <mat-option [value]=\"'10.5'\">10.5%</mat-option>\r\n                        <mat-option [value]=\"'21.0'\">21%</mat-option>\r\n                        <mat-option [value]=\"'27.0'\">27%</mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('iva')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('iva').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' [ngClass]=\"['w-full', orden_de_compra ? 'sm:w-1/4' : 'sm:w-2/4']\">\r\n                    <mat-label>Presupuesto</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"presupuesto\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('presupuesto')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('presupuesto').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\" *ngIf=\"orden_de_compra\">\r\n                    <mat-label>Número OC</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"numero\">\r\n                </mat-form-field>\r\n            </div>\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                        (keydown.enter)=\"seleccionItem($event, 'cambio_de_foco')\">\r\n                        <mat-label>Cantidad</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Importe</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"importe\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <div class=\"search-container mt-2 mb-1 flex\">\r\n                <div class=\"relative w-full md:w-1/3\">\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar artículo\"\r\n                        class=\"w-full bg-slate-50 border border-gray-200 rounded-lg shadow-md py-2 px-4 text-sm placeholder-gray-500 text-gray-700 transition duration-300\" />\r\n                    <span class=\"absolute inset-y-0 right-4 flex items-center text-gray-400\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fill-rule=\"evenodd\"\r\n                                d=\"M12.9 14.32a8 8 0 111.42-1.42l4.39 4.4a1 1 0 11-1.42 1.41l-4.4-4.39zM8 14a6 6 0 100-12 6 6 0 000 12z\"\r\n                                clip-rule=\"evenodd\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='importe'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">importe</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            ${{ movimiento_articulo.importe}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div *ngIf=\"!mostrarSpinner\" class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { OrdenesDeCompraComponent } from './components/ordenes-de-compra.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { OrdenesDeCompraService } from './service/ordenes-de-compra.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { SpinnerComponent } from '@shared/components/spinner/spinner.component';\r\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: OrdenesDeCompraComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [OrdenesDeCompraComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        SharedComponentModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [OrdenesDeCompraService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class OrdenesDeCompraModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IResponse, Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class OrdenesDeCompraService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     */\r\n    getOrdenesDeCompra(sort?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param orden_de_compra \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveOrdenDeCompra(orden_de_compra: any): Observable<any> {\r\n        return this.http.post<any>(`${environment.compras.compras_orden_compra}`, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param orden_de_compra\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateOrdenDeCompra(orden_de_compra: any, idordencompra: number): Observable<any> {\r\n        return this.http.put<any>(`${environment.compras.compras_orden_compra}` + '/' + idordencompra, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param codigo \r\n     * @returns Elimina un item\r\n     */\r\n    deleteOrdenDeCompra(codigo: number): Observable<IOrdenDeCompra> {\r\n        return this.http.delete<IOrdenDeCompra>(`${environment.compras.compras_orden_compra}` + '/' + codigo);\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(idarticulo?: number, filterLike?: string) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        if (idarticulo) {\r\n            f += `&filter[idarticulo]=${idarticulo}`;\r\n        } else if (filterLike) {\r\n            f += `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}`;\r\n        }\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        ).subscribe((resp: any) => {\r\n            this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n        });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idordencompra: number) {\r\n        let f = `?filter[ordenCompra]=${idordencompra}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.compras_orden_compra_items}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idordencompra\r\n    * @returns \r\n    */\r\n    reporteOrdenDeCompra(idordencompra: number): Observable<IResponse<any>> {\r\n        return this.http.get<IResponse<any>>(`${environment.compras.generar_reporte_orden_compra}` + idordencompra);\r\n    }\r\n}"],"names":["FormControl","FormGroup","MAT_DATE_FORMATS","fuseAnimations","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_31_Template_button_click_0_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","proveedor_r7","RazonSocial","ɵɵadvance","ɵɵtextInterpolate1","FilterMenuComponent","constructor","data","_menuService","_empresaService","datePipe","_ordenesDeCompraService","provedores","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","proveedor","pendiente_entrega","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","getProveedores","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Proveedores","list","filteredProveedor","controls","valueChanges","_filterProveedor","filterValue","toLowerCase","provedor","includes","ɵɵdirectiveInject","i1","JedsMenuService","i2","EmpresaService","i3","DatePipe","i4","OrdenesDeCompraService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_28_Template","FilterMenuComponent_button_31_Template","FilterMenuComponent_mat_option_41_Template","FilterMenuComponent_Template_button_click_44_listener","FilterMenuComponent_Template_button_click_47_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r3","ɵɵpipeBind1","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","OrdenesDeCompraComponent","confirm","alert","dialogo","_searchService","router","_headerTextService","pwaService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","compras","view_orden_compras","search","setTitulo","nombre_boton","functionName","iconoAccion","orden_compra","editable","iconoAccionado","iconoDeshabilitado","icono","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","params","updateOrdenDeCompra","warning","deleteOrdenDeCompra","reporteOrdenDeCompra","info","saveOrdenDeCompra","panelClass","componentInstance","creadoExitosamente","success","autoFocus","editadoExitosamente","title","codigo","message","proveedor_descripcion","dismissible","actions","show","color","label","cancel","res","renderTabla","error","console","idordencompra","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","i10","PwaService","viewQuery","OrdenesDeCompraComponent_Query","OrdenesDeCompraComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","OrdenesDeCompraComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","finalize","switchMap","takeWhile","tap","timer","MAT_DIALOG_DATA","LectorQrComponent","ctx_r1","_alertConfig","type","showAlert","proveedor_r33","SaveComponent_form_10_button_17_Template_button_click_0_listener","_r35","ctx_r34","limpiarCasillero","SaveComponent_form_10_button_31_Template_button_click_0_listener","_r37","ctx_r36","SaveComponent_form_10_button_36_Template_button_click_0_listener","_r39","ctx_r38","articulo_r40","ɵɵtextInterpolate2","codigo_interno","descripcion","SaveComponent_form_10_button_48_Template_button_click_0_listener","_r42","ctx_r41","um_r43","factor_um","um_base","SaveComponent_form_10_mat_option_57_i_2_Template","idunidadmedida","descripcion_um","ctx_r18","movimiento_articulo_r46","codigo_interno_articulo","ctx_r20","movimiento_articulo_r47","descripcion_articulo","ctx_r22","movimiento_articulo_r48","ctx_r24","movimiento_articulo_r49","cantidad","ctx_r26","movimiento_articulo_r50","importe","ctx_r28","SaveComponent_form_10_td_96_Template_button_click_1_listener","restoredCtx","_r54","movimiento_r51","$implicit","ctx_r53","deleteMovimiento","SaveComponent_form_10_button_12_Template","SaveComponent_form_10_mat_option_15_Template","SaveComponent_form_10_button_17_Template","SaveComponent_form_10_button_22_Template","SaveComponent_form_10_button_31_Template","SaveComponent_form_10_button_36_Template","SaveComponent_form_10_mat_form_field_37_Template","SaveComponent_form_10_Template_input_ngModelChange_44_listener","_r57","ctx_r56","seleccionItem","SaveComponent_form_10_mat_option_47_Template","SaveComponent_form_10_button_48_Template","SaveComponent_form_10_Template_button_click_50_listener","ctx_r58","etiquetaArticulo","SaveComponent_form_10_Template_mat_select_ngModelChange_56_listener","ctx_r59","um","SaveComponent_form_10_mat_option_57_Template","SaveComponent_form_10_Template_mat_form_field_keydown_enter_58_listener","ctx_r60","SaveComponent_form_10_Template_mat_form_field_keydown_enter_63_listener","ctx_r61","onCargar","SaveComponent_form_10_Template_button_click_68_listener","ctx_r62","SaveComponent_form_10_Template_input_keyup_73_listener","ctx_r63","applyFilter","target","ɵɵelementContainerStart","SaveComponent_form_10_th_80_Template","SaveComponent_form_10_td_81_Template","ɵɵelementContainerEnd","SaveComponent_form_10_th_83_Template","SaveComponent_form_10_td_84_Template","SaveComponent_form_10_th_86_Template","SaveComponent_form_10_td_87_Template","SaveComponent_form_10_th_89_Template","SaveComponent_form_10_td_90_Template","SaveComponent_form_10_th_92_Template","SaveComponent_form_10_td_93_Template","SaveComponent_form_10_th_95_Template","SaveComponent_form_10_td_96_Template","SaveComponent_form_10_tr_97_Template","SaveComponent_form_10_tr_98_Template","SaveComponent_form_10_div_99_Template","ctx_r2","form","_r4","minDate","maxDate","getTextProveedor","filteredProveedores","_r10","mov_art_list","length","ɵɵpureFunction1","_c0","orden_de_compra","form_carga_articulos","_r14","getTextArticulo","filteredArticulos","unidades_de_medida","columns","_c1","isPalabraMaxLengthReached","getPalabrasLength","maxPalabras","SaveComponent_div_11_Template_button_click_1_listener","_r65","ctx_r64","onSubmit","ctx_r3","dialogRef","deposito_default","mostrarSpinner","mostrar_mensaje","articulos_list","mov_art_list_deleted","user","JSON","parse","localStorage","getItem","Date","newForm","exist","subscribeAlert","idarticulo","filterLike","getArticulos","response","emitConfig","config","appearance","time","dia","mes","anio","fecha","split","getItems","then","m","articulo","disable","enable","required","observaciones","maxLength","numero","presupuesto","iva","unidadmedida","min","updateFormValidators","addMovimiento","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","item","getUnidadesDeMedidaArticulos","setTimeout","cantidadField","document","querySelector","focus","preventDefault","importeField","input","key","valid","existeMovimiento","find","articuloField","proveedor_seleccionado","proveedor_existe","proveedores","some","Codigo","items","objeto","presupuestoString","toString","payload","usuario","id","emit","sendObject","code","decodedText","parseInt","option","Promise","_ref","resolve","_filterProveedores","_x","apply","arguments","_this2","_ref2","_x2","_this3","articulos","_ref3","result","_filterArticulos","_x3","_this4","unidadesDeMedida","_ref4","sort","a","b","factor","unidad","parseFloat","_x4","cambiarFecha","partes","fh","Number","setValidators","clearValidators","updateValueAndValidity","trim","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_spinner_component_8_Template","SaveComponent_fuse_alert_9_Template","SaveComponent_form_10_Template","SaveComponent_div_11_Template","ɵɵtextInterpolate","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","SharedComponentModule","routes","component","OrdenesDeCompraModule","imports","forChild","declarations","exports","http","_authService","getOrdenesDeCompra","f","subject","administracion","view_clientes","resp","accessToken","token","asObservable","post","compras_orden_compra","put","delete","stock","articulo_unidad_medidas","compras_orden_compra_items","generar_reporte_orden_compra","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}