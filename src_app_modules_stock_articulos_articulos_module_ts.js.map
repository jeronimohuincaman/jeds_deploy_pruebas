{"version":3,"file":"src_app_modules_stock_articulos_articulos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/articulos/articulos.module.ts","./src/app/modules/stock/articulos/components/articulos.component.ts","./src/app/modules/stock/articulos/components/articulos.component.html","./src/app/modules/stock/articulos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/articulos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/articulos/components/modal/modal.component.ts","./src/app/modules/stock/articulos/components/modal/modal.component.html","./src/app/modules/stock/articulos/components/save/save.component.ts","./src/app/modules/stock/articulos/components/save/save.component.html","./src/app/modules/stock/articulos/service/articulos.service.ts"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ArticulosComponent } from './components/articulos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { ArticulosService } from './service/articulos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { ModalComponent } from './components/modal/modal.component';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ArticulosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [ArticulosComponent, SaveComponent, ModalComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [ArticulosService, JedsMenuService, AppAlertService]\r\n})\r\nexport class ArticulosModule { }","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IArticulo } from '../models/articulo';\r\nimport { ArticulosService } from '../service/articulos.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatButton } from '@angular/material/button';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-articulos',\r\n    templateUrl: './articulos.component.html',\r\n    styleUrls: ['./articulos.component.scss']\r\n})\r\nexport class ArticulosComponent implements OnInit, OnDestroy {\r\n    articulos: IArticulo[];\r\n    public dataSource: MatTableDataSource<IArticulo> = new MatTableDataSource();\r\n    column_params = ['codigo_interno', 'descripcion', 'rubro.descripcion', 'stock_minimo', 'activo', 'acciones']\r\n    headers = ['Código Interno', 'Descripción', 'Rubro', 'Stock Mínimo', 'Activo', ''];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion'];\r\n    filter: IFilter = {\r\n        activo: -1,\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.articulos + '?' + 'expand=rubro&pagination=1&per-page=5&page=1';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n    constructor(\r\n        private _articulosService: ArticulosService,\r\n        private _menuService: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'square_foot',\r\n                nombre_boton: \"Unidad de medida\",\r\n                functionName: 'um',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n    * @param origin \r\n    */\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateArticulo(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteArticulo(event);\r\n                break;\r\n            case 'um':\r\n                this.modalUnidadMedidas(event);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveArticulo() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateArticulo(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteArticulo(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Artículo \" + event.params.data.descripcion,\r\n            message: \"¿Desea eliminar la Artículo: \" + event.params.data.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._articulosService.deleteArticulo(event.params.data.idarticulo).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Artículo eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            alert(\"Este Artículo no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n    * Funcion en el componente\r\n    * - Esta funcion abre un modal.\r\n    * @param documentRef\r\n    * @param articulo \r\n    */\r\n        modalUnidadMedidas(event) {\r\n            this.dialogo\r\n                .open(ModalComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: response => {\r\n                        if (response) {\r\n                            this.tabla.renderTabla();\r\n                        }\r\n                    },\r\n                });\r\n        }\r\n\r\n        ngOnDestroy(): void {\r\n            this._searchService.unsubscribe()\r\n        }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-8 mt-2\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 \">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 p-2 rounded-full z-99999' matTooltip='Crear Artículo'\r\n                (click)=\"saveArticulo()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-articulos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  constructor(@Inject('MENU_DATA') public data: any, private menuService: JedsMenuService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      activo: new FormControl(-1)\r\n    });\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      activo: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this.menuService.close(data);\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n       \r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Activo</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='0' class=\"fila-naranja\">No</mat-option>\r\n                <mat-option [value]='1' class=\"fila-amarillo\">Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IArticulo } from '../../models/articulo';\r\nimport { ArticulosService } from '../../service/articulos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { IUnidadDeMedida } from 'app/modules/stock/unidades-de-medida/models/unidad-de-medida';\r\nimport { IArticuloUnidadMedida } from '../../models/articulo-unidad-medida';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n@Component({\r\n    selector: 'app-modal-unidades-medidas',\r\n    templateUrl: './modal.component.html',\r\n    styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n    columns = ['descripcion', 'factor', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulo: IArticulo;\r\n    articulo_um: IArticuloUnidadMedida;\r\n    um: IUnidadDeMedida[]; //Para listar todas las uniades de medida en el selector.\r\n    unidades_de_medida: IUnidadDeMedida[]; //Para listar unidades de medida asociadas a un articulo en la tabla.\r\n    public dataSource: MatTableDataSource<IUnidadDeMedida> = new MatTableDataSource();\r\n    sortValue: string;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private articulosService: ArticulosService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<ModalComponent>,\r\n        private confirm: FuseConfirmationService,\r\n    ) {\r\n        this.articulo = this.data ? this.data : null;\r\n        this.title = `UM de: ${this.articulo.descripcion} `;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getUnidadesDeMedida()\r\n        this.getUnidadesDeMedidaTable();\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            unidad_medida: new FormControl((''), Validators.required),\r\n            factor: new FormControl((''), [Validators.required, Validators.min(1), Validators.pattern('^[0-9]*$')]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion la utilizamos cuando queremos listar elementos en una tabla.\r\n    */\r\n    async getUnidadesDeMedidaTable() {\r\n        const unidades_de_medida = await firstValueFrom(this.articulosService.getUnidadesDeMedidaTable(this.articulo))\r\n        this.getDataUnidadesDeMedidasTable(unidades_de_medida);\r\n    }\r\n\r\n    async getDataUnidadesDeMedidasTable(data) {\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = data.list\r\n            this.dataSource = new MatTableDataSource(this.unidades_de_medida);\r\n            resolve(true)\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Esta funcion la utilizamos cuando queremos listar elementos en un selector.\r\n    */\r\n    async getUnidadesDeMedida() {\r\n        const unidades_de_medida = await firstValueFrom(this.articulosService.getUnidadesDeMedida())\r\n        this.getDataUnidadeDeMedida(unidades_de_medida);\r\n    }\r\n\r\n    async getDataUnidadeDeMedida(data) {\r\n        new Promise(async (resolve) => {\r\n            this.um = data.list\r\n            resolve(true)\r\n        })\r\n    }\r\n\r\n    deleteUnidadDeMedida(unidad_medida: IArticuloUnidadMedida) {\r\n        this.confirm.open({\r\n            title: \"Eliminar UM \" + unidad_medida.um.descripcion,\r\n            message: \"¿Desea eliminar la UM: \" + unidad_medida.um.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this.articulosService.deleteUnidadDeMedida(unidad_medida.idarticulounidadmedida).subscribe({\r\n                        next: (res: any) => {\r\n                            if (res.success == false) {\r\n                                // Manejar el error\r\n                                console.error('No se puede eliminar una UM con factor 1. Elimine las demas UM y vuelva a intentar.');\r\n                                this.alert.error(\"No puede borrarse UM con factor 1. Elimine las demas UM y vuelva a intentar\");\r\n                                alert(\"No puede borrarse UM con factor 1. Elimine las demas UM y vuelva a intentar\");\r\n                            } else {\r\n                                // Manejar la respuesta exitosa\r\n                                this.alert.success(\"Articulo eliminado con éxito.\");\r\n                                this.getUnidadesDeMedidaTable()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Error\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulo_um = {\r\n                ...this.articulo_um,\r\n                idarticulo: this.articulo.idarticulo,\r\n                idunidadmedida: this.form.get('unidad_medida').value,\r\n                factor: this.form.get('factor').value,\r\n            }\r\n            if (!this.articulo_um.idarticulounidadmedida) {\r\n                this.articulosService.saveUnidadDeMedida(this.articulo_um)\r\n                    .subscribe({\r\n                        next: (res: any) => {\r\n                            if (res.success) {\r\n                                this.getUnidadesDeMedidaTable()\r\n                            }else{\r\n                                alert('La primera UM debe ser factor 1 y un articulo no puede tener 2 UM del mismo tipo.')\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:w-140 sm:rounded-2xl overflow-y-auto shadow-lg overflow-hidden bg-white dark:bg-slate-900 \">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 shadow-lg\" [formGroup]=\"form\">\r\n        <div class=\"flex gap-3\">\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Unidad de medida</mat-label>\r\n                <mat-select formControlName=\"unidad_medida\">\r\n                    <mat-option *ngFor=\"let unidad_medida of um\" [value]=\"unidad_medida.idunidadmedida\">\r\n                        {{unidad_medida.descripcion}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Factor</mat-label>\r\n                <input matInput formControlName='factor'>\r\n            </mat-form-field>\r\n            <div class=\"w-1/3 pt-2 text-center\">\r\n                <button mat-raised-button color='accent' class='rounded-full' (click)='onSubmit()'>\r\n                    +\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"px-4 pr-2 pl-2\">\r\n        <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 mb-5 shadow-lg'>\r\n            <ng-container matColumnDef='descripcion'>\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Unidad de Medida</th>\r\n                <td mat-cell *matCellDef='let unidad_medida'>\r\n                    {{unidad_medida.um.descripcion}}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='factor'>\r\n                <th mat-header-cell *matHeaderCellDef>Factor</th>\r\n                <td mat-cell *matCellDef='let unidad_medida'>\r\n                    {{ unidad_medida.factor }}\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef='acciones'>\r\n                <th mat-header-cell *matHeaderCellDef>Acciones</th>\r\n                <td mat-cell *matCellDef='let unidad_medida'>\r\n                    <button mat-icon-button (click)=\"deleteUnidadDeMedida(unidad_medida)\" #delete>\r\n                        <mat-icon color=\"warn\">delete</mat-icon>\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n            <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IArticulo } from '../../models/articulo';\r\nimport { ArticulosService } from '../../service/articulos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IRubro } from 'app/modules/stock/rubros/models/rubro';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n@Component({\r\n    selector: 'app-save-articulos',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigo_interno', 'descripcion', 'rubro', 'stock_minimo', 'activo'];\r\n    form: FormGroup;\r\n    articulo: IArticulo;\r\n    title: string;\r\n    rubros: IRubro[];\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private articulosService: ArticulosService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>\r\n    ) {\r\n        this.articulo = this.data ? this.data : null;\r\n        this.title = this.articulo?.idarticulo ? 'Editar articulo' : 'Nuevo articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.getRubros();\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            codigo_interno: new FormControl((this.articulo ? this.articulo.codigo_interno : ''), Validators.required),\r\n            descripcion: new FormControl((this.articulo ? this.articulo.descripcion : ''), Validators.required),\r\n            rubro: new FormControl((this.articulo ? this.articulo.idrubro : ''), Validators.required),\r\n            stock_minimo: new FormControl((this.articulo ? this.articulo.stock_minimo : ''), [Validators.required, Validators.min(0.0)]),\r\n            activo: new FormControl((this.articulo ? (this.articulo?.activo ? 1 : 0) : ''), Validators.required),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion la utilizamos cuando queremos listar elementos en un selector.\r\n     */\r\n    async getRubros() {\r\n        const rubros = await firstValueFrom(this.articulosService.getRubros())\r\n        this.getDataRubros(rubros);\r\n    }\r\n\r\n    async getDataRubros(data) {\r\n        new Promise(async (resolve) => {\r\n            this.rubros = data.list\r\n            resolve(true)\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulo = {\r\n                ...this.articulo,\r\n                codigo_interno: this.form.get('codigo_interno').value.toUpperCase(),\r\n                descripcion: this.form.get('descripcion').value,\r\n                idrubro: this.form.get('rubro').value,\r\n                stock_minimo: this.form.get('stock_minimo').value,\r\n                activo: this.form.get('activo').value,\r\n            }\r\n            if (this.articulo.idarticulo) {\r\n                this.articulosService.updateArticulo(this.articulo)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this.articulosService.saveArticulo(this.articulo)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-140 sm:w-140 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Descripción</mat-label>\r\n            <input matInput formControlName='descripcion'>\r\n        </mat-form-field>\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Código interno</mat-label>\r\n                <input matInput formControlName='codigo_interno'>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Rubro</mat-label>\r\n                <mat-select formControlName=\"rubro\">\r\n                    <mat-option *ngFor=\"let rubro of rubros\" [value]=\"rubro.idrubro\">{{rubro.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Stock mínimo</mat-label>\r\n                <input matInput type=\"number\" formControlName='stock_minimo'>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Activo</mat-label>\r\n                <mat-select formControlName='activo'>\r\n                    <mat-option [value]='0'>No</mat-option>\r\n                    <mat-option [value]='1'>Si</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IArticulo, Response } from '../models/articulo';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response as rubrosResponse } from '../../rubros/models/rubro';\r\nimport { Response as umResponse } from '../../unidades-de-medida/models/unidad-de-medida';\r\nimport { IArticuloUnidadMedida, ResponseArticuloUm } from '../models/articulo-unidad-medida';\r\n\r\n@Injectable()\r\nexport class ArticulosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los Articulos.\r\n     * @returns Articulos\r\n     */\r\n    getArticulos(sort?: any): Observable<Response[]> {\r\n        let f = '?expand=rubro&';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.stock.articulos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param articulo \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveArticulo(articulo: IArticulo): Observable<IArticulo> {\r\n        return this.http.post<IArticulo>(`${environment.stock.articulos}`, articulo);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param articulo\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateArticulo(articulo: IArticulo): Observable<IArticulo> {\r\n        return this.http.put<IArticulo>(`${environment.stock.articulos}` + '/' + articulo.idarticulo, articulo);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idarticulo \r\n     * @returns Elimina un item\r\n     */\r\n    deleteArticulo(idarticulo: number): Observable<IArticulo> {\r\n        return this.http.delete<IArticulo>(environment.stock.articulos + '/' + idarticulo);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param idarticulounidadmedida \r\n     * @returns Elimina una Unidad de medida\r\n     */\r\n    deleteUnidadDeMedida(idarticulounidadmedida: number){\r\n        return this.http.delete<IArticulo>(environment.stock.articulo_unidad_medidas + '/' + idarticulounidadmedida);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param unidad_de_medida \r\n     * @returns Guarda una unidad de medida asociada al articulo\r\n     */\r\n    saveUnidadDeMedida(unidad_de_medida: IArticuloUnidadMedida){\r\n        return this.http.post<IArticuloUnidadMedida>(`${environment.stock.articulo_unidad_medidas}`,unidad_de_medida)\r\n    }\r\n\r\n    /**\r\n     * Listamos los rubros para el selector del formulario de alta/modificacion\r\n     * @returns Todos los rubros.\r\n     */\r\n    getRubros() {\r\n        let f = '?filter[activo]=1'\r\n        let subject = new Subject<any>();\r\n        this.http.get<rubrosResponse[]>(`${environment.stock.rubros}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    'list': resp.result,\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * Funcion en el servicio\r\n    * - Esta funcion retorna los unidades de medidas que tiene asociada un articulo.\r\n    * @returns Unidades de medidas \r\n    */\r\n    getUnidadesDeMedidaTable(articulo?: IArticulo): Observable<ResponseArticuloUm[]> {\r\n        let f = `?filter[idarticulo]=${articulo.idarticulo}`;\r\n        f += '&expand=um&sort=factor&';\r\n        var subject = new Subject<any>();\r\n        this.http.get<ResponseArticuloUm[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    'list': resp.result,\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Listamos los valores para el selector del formulario de unidades de medida.\r\n     * @returns \r\n     */\r\n    getUnidadesDeMedida() {\r\n        let f = '?filter[activo]=1';\r\n        let subject = new Subject<any>();\r\n        this.http.get<umResponse[]>(`${environment.stock.unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    'list': resp.result,\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","JedsMenuService","MatIconModule","AppAlertService","MatTooltipModule","ArticulosComponent","SaveComponent","ArticulosService","MatAutocompleteModule","MatCheckboxModule","MatSortModule","ModalComponent","FilterMenuComponent","TablaDinamicaModule","routes","path","component","ArticulosModule","imports","forChild","declarations","i1","exports","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","FormControl","environment","TablaDinamicaComponent","constructor","_articulosService","_menuService","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","filter","activo","extraParams","parametrosActualizados","env","stock","articulos","search","setTitulo","icono","nombre_boton","functionName","ngOnInit","SearchTextSub$","getSearchText","pipe","subscribe","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateArticulo","deleteArticulo","modalUnidadMedidas","saveArticulo","panelClass","data","params","autoFocus","title","descripcion","message","dismissible","actions","show","color","label","cancel","res","idarticulo","success","renderTabla","error","console","response","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i2","i3","FuseConfirmationService","i4","i5","MatDialog","i6","SearchService","i7","Router","i8","HeaderTextService","selectors","viewQuery","ArticulosComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","ArticulosComponent_Template_button_click_3_listener","ɵɵtext","ɵɵelementEnd","ArticulosComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","$event","ɵɵadvance","ɵɵproperty","FormGroup","fuseAnimations","menuService","formFilters","patchValue","resetFilters","reset","onCloseMenu","close","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_Template_button_click_23_listener","FilterMenuComponent_Template_button_click_26_listener","getRawValue","Validators","firstValueFrom","MAT_DIALOG_DATA","unidad_medida_r9","idunidadmedida","ɵɵtextInterpolate1","unidad_medida_r10","um","unidad_medida_r11","factor","ModalComponent_td_32_Template_button_click_1_listener","restoredCtx","ɵɵrestoreView","_r15","unidad_medida_r12","$implicit","ctx_r14","ɵɵnextContext","ɵɵresetView","deleteUnidadDeMedida","ɵɵelement","articulosService","dialogRef","columns","articulo","newForm","getUnidadesDeMedida","getUnidadesDeMedidaTable","form","unidad_medida","required","min","pattern","_this","_asyncToGenerator","unidades_de_medida","getDataUnidadesDeMedidasTable","_this2","Promise","_ref","resolve","list","_x","apply","arguments","_this3","getDataUnidadeDeMedida","_this4","_ref2","_x2","idarticulounidadmedida","onSubmit","valid","warning","articulo_um","get","saveUnidadDeMedida","MatDialogRef","ModalComponent_Template","ModalComponent_Template_button_click_5_listener","ɵɵtemplate","ModalComponent_mat_option_14_Template","ModalComponent_Template_button_click_20_listener","ɵɵelementContainerStart","ModalComponent_th_25_Template","ModalComponent_td_26_Template","ɵɵelementContainerEnd","ModalComponent_th_28_Template","ModalComponent_td_29_Template","ModalComponent_th_31_Template","ModalComponent_td_32_Template","ModalComponent_tr_33_Template","ModalComponent_tr_34_Template","ɵɵtextInterpolate","rubro_r1","idrubro","getRubros","codigo_interno","rubro","stock_minimo","rubros","getDataRubros","toUpperCase","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_mat_option_22_Template","SaveComponent_Template_button_click_37_listener","Subject","http","_authService","getArticulos","sort","f","subject","resp","accessToken","token","result","asObservable","post","put","delete","articulo_unidad_medidas","unidad_de_medida","unidad_medidas","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}