{"version":3,"file":"src_app_modules_fondos_movimientos_movimientos_module_ts.js","mappings":"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","sources":["./src/app/modules/fondos/movimientos/components/filter-menu/filter-menu.component.ts","./src/app/modules/fondos/movimientos/components/filter-menu/filter-menu.component.html","./src/app/modules/fondos/movimientos/components/movimientos.component.ts","./src/app/modules/fondos/movimientos/components/movimientos.component.html","./src/app/modules/fondos/movimientos/components/save/save.component.ts","./src/app/modules/fondos/movimientos/components/save/save.component.html","./src/app/modules/fondos/movimientos/movimientos.module.ts","./src/app/modules/fondos/movimientos/service/movimientos.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IFondo } from 'app/modules/fondos/fondos/models/fondo';\r\nimport { ITipoMovimiento } from 'app/modules/fondos/tipo-movimientos/models/tipo-movimiento';\r\nimport { MovimientosService } from '../../service/movimientos.service';\r\nimport { IMovimiento } from '../../models/movimiento';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-movimientos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  tipos_movimientos: ITipoMovimiento[] = [];\r\n  fondos: any;\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  constructor(@Inject('MENU_DATA') public data: any, private menuService: JedsMenuService, private _movimientosService: MovimientosService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getFondos();\r\n    this.getTiposMovimientos();\r\n\r\n    /**\r\n    * Formulario de filtros\r\n    */\r\n    this.formFilters = new FormGroup({\r\n      fecha: new FormControl(('')),\r\n      bonificado: new FormControl(('')),\r\n      idtipo: new FormControl(('')),\r\n      origen: new FormControl(('')),\r\n      destino: new FormControl(('')),\r\n    });\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      bonificado: -1,\r\n      idtipo: -1,\r\n      origen: -1,\r\n      destino: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this.menuService.close(data);\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los fondos de origen y destino en el componente del filtro.\r\n   * @returns fondos de origen y destino\r\n   */\r\n  getFondos() {\r\n    const fondos = this._movimientosService.getFondos(true).subscribe(fondos => { this.fondos = fondos; });\r\n    return fondos;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listar los tipos de movimientos en el filtro de la grilla\r\n   * @returns tipos de movimientos\r\n   */\r\n  getTiposMovimientos() {\r\n    const tipos_movimientos = this._movimientosService.getTiposMovimientos().subscribe(tipos_movimientos => { this.tipos_movimientos = tipos_movimientos; })\r\n    return tipos_movimientos;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n        <span class=\"font-bold text-gray-500 text-base\">Bonificado</span>\r\n        <mat-form-field\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"bonificado\">\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='1'>Bonificado</mat-option>\r\n                <mat-option [value]='0'>No bonificado</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <span class=\"font-bold text-gray-500 text-base\">Tipo de movimiento</span>\r\n        <mat-form-field\r\n            class=\" fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"idtipo\">\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option *ngFor=\"let tipo of tipos_movimientos\"\r\n                    [value]=\"tipo.idtipo\">{{tipo.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <span class=\"font-bold text-gray-500 text-base\">Origen</span>\r\n        <mat-form-field\r\n            class=\" fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"origen\">\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo.idfondo\">{{fondo.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <span class=\"font-bold text-gray-500 text-base\">Destino</span>\r\n        <mat-form-field\r\n            class=\" fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName=\"destino\">\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo.idfondo\">{{fondo.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IMovimiento } from '../models/movimiento';\r\nimport { MovimientosService } from '../service/movimientos.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { environment } from 'environments/environment';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-movimientos',\r\n    templateUrl: './movimientos.component.html',\r\n    styleUrls: ['./movimientos.component.scss']\r\n})\r\nexport class MovimientosComponent implements OnInit, OnDestroy {\r\n    public dataSource: MatTableDataSource<IMovimiento> = new MatTableDataSource();\r\n    movimientos: IMovimiento[];\r\n    column_params = ['fecha', 'tipo', 'origen_descripcion', 'destino_descripcion', 'importe', 'descripcion', 'acciones']\r\n    headers = ['Fecha', 'Tipo de movimiento', 'Origen', 'Destino', 'Importe', 'Descripción'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion'];\r\n    filter: IFilter = {\r\n        bonificado: -1,\r\n        idtipo: -1,\r\n        origen: -1,\r\n        destino: -1\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.fondos.view_movimientos + '?sort=-idmovimiento';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n\r\n    constructor(\r\n        private _movimientosService: MovimientosService,\r\n        private _menuService: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                icono: 'edit',\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            },\r\n            {\r\n                icono: 'delete',\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n            },\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n    * @param origin \r\n    */\r\n        onFilterMenu(origin: MatButton) {\r\n            let elementos_existentes = this.tabla.getElementosExistentes();\r\n            this._menuService\r\n                .open(FilterMenuComponent, origin._elementRef, {\r\n                    filter: this.filter,\r\n                    elementos_existentes\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: filter => {\r\n                        if (filter) {\r\n                            this.filter = filter;\r\n                            this.extraParams = this.filter?.bonificado != -1 ? \"filter[bonificado]=\" + this.filter.bonificado + '&': '';\r\n                            this.extraParams += this.filter?.idtipo != -1 ? \"filter[idtipo]=\" + this.filter.idtipo + '&': '';\r\n                            this.extraParams += this.filter?.origen != -1 ? \"filter[origen]=\" + this.filter.origen + '&': '';\r\n                            this.extraParams += this.filter?.destino != -1 ? \"filter[destino]=\" + this.filter.destino + '&': '';\r\n                            this.tabla.filters(this.filtroBusqueda);\r\n                            // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                        }\r\n                    },\r\n                });\r\n        }\r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateMovimiento(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteMovimiento(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveMovimiento() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateMovimiento(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteMovimiento(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Movimiento \" + event.params.data.descripcion,\r\n            message: \"¿Desea eliminar la Movimiento: \" + event.params.data.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._movimientosService.deleteMovimiento(event.params.data.idmovimiento).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Movimiento eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error(error);\r\n                            this.alert.warning(\"Este Movimiento no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-8 mt-2\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 \">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 p-2 rounded-full z-99999' matTooltip='Crear Movimiento'\r\n                (click)=\"saveMovimiento()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div class=\"w-full\">\r\n    Filtro\r\n    <div class=\"bg-slate-100 w-full p-2 \">\r\n        <form [formGroup]=\"form\" class=\"bg-white shadow-md w-full px-4 py-4 rounded-lg flex justify-center items-center\">\r\n            Buscador por descripción \r\n            <mat-form-field appearance=\"outline\" class=\" w-2/5 ml-2\">\r\n                <mat-label class=\"text-gray-700\"> Descripción</mat-label>\r\n                <input matInput [formControl]=\"search_descripcion\" class=\"text-black w-full\" placeholder=\"Buscar\"\r\n                    autocomplete=\"off\" #buscar_descripcion>\r\n            </mat-form-field>\r\n\r\n            Bonificado\r\n            <mat-form-field appearance='outline' class=\" w-1/5 ml-2\">\r\n                <mat-label>Bonificado</mat-label>\r\n                <mat-select formControlName=\"filtroBonificado\">\r\n                    <mat-option>Todos</mat-option>\r\n                    <mat-option value=1>Bonificado</mat-option>\r\n                    <mat-option value=0>No bonificado</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            Tipo\r\n            <mat-form-field appearance='outline' class=\" w-1/5 ml-2\">\r\n                <mat-label>Tipo</mat-label>\r\n                <mat-select formControlName=\"filtroTipoMovimiento\">\r\n                    <mat-option>Todos</mat-option>\r\n                    <mat-option *ngFor=\"let tipo of tipos_movimientos\"\r\n                        [value]=\"tipo.idtipo\">{{tipo.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            Origen\r\n            <mat-form-field appearance='outline' class=\" w-1/5 ml-2\">\r\n                <mat-label>Origen</mat-label>\r\n                <mat-select formControlName=\"filtroOrigen\">\r\n                    <mat-option>Todos</mat-option>\r\n                    <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo.idfondo\">{{ fondo.descripcion\r\n                        }}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            Destino\r\n            <mat-form-field appearance='outline' class=\" w-1/5 ml-2\">\r\n                <mat-label>Destino</mat-label>\r\n                <mat-select formControlName=\"filtroDestino\" >\r\n                    <mat-option>Todos</mat-option>\r\n                    <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo.idfondo\">{{fondo.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </form>\r\n    </div> -->\r\n    <!-- Grilla -->\r\n    <!-- <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"_filterMovimientos($event)\" class='w-full mt-1 mb-18 shadow-lg mr-2 ml-2'>\r\n        <ng-container matColumnDef='fecha'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\" mat-sort-header sortActionDescription=\"Sort by fecha\">Fecha</th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                {{movimiento.fecha | date: 'dd/MM/yyyy'}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='tipo'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\">Tipo</th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                {{movimiento.tipo}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='origen'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\">Origen</th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                {{movimiento.origen_descripcion}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='destino'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\">Destino</th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                {{movimiento.destino_descripcion}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='importe'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\">Importe</th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                ${{movimiento.importe | number : '1.2-2'}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='descripcion'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\">Descripción</th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                {{movimiento.descripcion}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef='acciones'>\r\n            <th mat-header-cell *matHeaderCellDef class=\"bg-slate-300\">\r\n                <button mat-header-cell mat-button (click)=\"saveMovimiento(save)\" #save\r\n                    class=\" bg-blue-500  text-white rounded-md\">Crear</button>\r\n            </th>\r\n            <td mat-cell *matCellDef='let movimiento'>\r\n                <button mat-icon-button (click)=\"updateMovimiento(edit, movimiento)\" #edit>\r\n                    <mat-icon class=\"text-cyan-700\">edit</mat-icon>\r\n                </button>\r\n                <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                    <mat-icon color=\"warn\">delete</mat-icon>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n        <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n    </table>\r\n\r\n    <mat-paginator #paginator [length]=\"totalRows\" [pageIndex]=\"currentPage\" [pageSize]=\"pageSize\"\r\n        [pageSizeOptions]=\"pageSizeOptions\" (page)=\"actualizarPagina($event)\" aria-label=\"Select page\"\r\n        class=\"fixed bottom-0  w-full z-50\">\r\n    </mat-paginator> \r\n</div>-->","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { IMovimiento } from '../../models/movimiento';\r\nimport { MovimientosService } from '../../service/movimientos.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { ITipoMovimiento } from 'app/modules/fondos/tipo-movimientos/models/tipo-movimiento';\r\nimport { IFondo } from 'app/modules/fondos/fondos/models/fondo';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n    selector: 'app-save-movimiento',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [\r\n        { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n    ]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['fecha', 'tipo', 'origen', 'destino', 'importe', 'descripcion', 'bonificado']\r\n    form: FormGroup;\r\n    movimiento: IMovimiento;\r\n    title: string;\r\n\r\n    fondos: IFondo[] = [];\r\n    tipos_movimientos: ITipoMovimiento[] = [];\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private movimientosService: MovimientosService,\r\n        public alert: AppAlertService,\r\n        public menu: JedsMenuService,\r\n        public fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<SaveComponent>\r\n    ) {\r\n        this.movimiento = this.data ? this.data : null;\r\n        this.title = this.movimiento?.idmovimiento ? 'Editar Movimiento' : 'Nuevo Movimiento';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.exist()\r\n    }\r\n\r\n    newForm() {\r\n        this.form = this.fb.group({\r\n            fecha: new FormControl((this.movimiento ? this.movimiento.fecha : ''), [Validators.required]),\r\n            bonificado: new FormControl((this.movimiento ? this.movimiento.bonificado : '')),\r\n            tipo: new FormControl((this.movimiento ? this.movimiento.idtipo : ''), [Validators.required]),\r\n            origen: new FormControl((this.movimiento ? this.movimiento.origen : ''),),\r\n            destino: new FormControl((this.movimiento ? this.movimiento.destino : '')),\r\n            importe: new FormControl((this.movimiento ? this.movimiento.importe : ''), [Validators.required]),\r\n            descripcion: new FormControl((this.movimiento ? this.movimiento.descripcion : ''), [Validators.required]),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Si existe un movimiento le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n     * Caso contrario, si se va a crear un movimiento, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n     * le envio un paramtro a los tipos de movimientos para que me traiga los activos.\r\n     */\r\n    exist(){\r\n        if(this.movimiento?.idmovimiento){\r\n            this.getFondos(true);\r\n            this.getTiposMovimientos()\r\n        }else{\r\n            this.getFondos();\r\n            this.getTiposMovimientos(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion la utilizamos cuando necesitamos listar los fondos de origen y destino en el formulario\r\n     */\r\n    getFondos(option?) {\r\n        const fondos = this.movimientosService.getFondos(option).subscribe(fondos => { this.fondos = fondos; })\r\n        return fondos;\r\n    }\r\n\r\n    /**\r\n     * Esta funcion la utilizamos cuando necesitamos listar los tipos de movimientos en el formulario \r\n     */\r\n    getTiposMovimientos(option?) {\r\n        const tipos_movimientos = this.movimientosService.getTiposMovimientos(option).subscribe(tipos_movimientos => { this.tipos_movimientos = tipos_movimientos; })\r\n        return tipos_movimientos;\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.movimiento = {\r\n                ...this.movimiento,\r\n                fecha: this.form.get('fecha').value,\r\n                bonificado: this.form.get('bonificado').value ? 1 : 0,\r\n                idtipo: this.form.get('tipo').value,\r\n                origen: this.form.get('origen').value,\r\n                destino: this.form.get('destino').value,\r\n                importe: this.form.get('importe').value,\r\n                descripcion: this.form.get('descripcion').value,\r\n            }\r\n            if (this.movimiento.idmovimiento) {\r\n                this.movimientosService.updateMovimiento(this.movimiento)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this.movimientosService.saveMovimiento(this.movimiento)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 bg-white dark:bg-slate-900 shadow-lg overflow-hidden overflow-y-auto sm:rounded-2xl md:min-w-[50rem] sm:w-90 sm:min-w-90 flex-col flex sm:inset-auto max-h-screen sm:static\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        \r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-1/3\">\r\n                <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" />\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <mat-form-field appearance='outline' class=\"w-2/3\">\r\n                <mat-label>Tipo</mat-label>\r\n                <mat-select formControlName=\"tipo\">\r\n                    <mat-option *ngFor=\"let tipo of tipos_movimientos\" [value]=\"tipo.idtipo\">{{tipo.descripcion}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Origen</mat-label>\r\n                <mat-select formControlName=\"origen\" >\r\n                    <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo.idfondo\">{{ fondo.descripcion }}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        \r\n            <mat-form-field appearance='outline' class=\"w-1/2\">\r\n                <mat-label>Destino</mat-label>\r\n                <mat-select formControlName=\"destino\" >\r\n                    <mat-option *ngFor=\"let fondo of fondos\" [value]=\"fondo.idfondo\">{{ fondo.descripcion }}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"flex gap-1\">\r\n            <mat-form-field appearance='outline' class=\"w-1/3\">\r\n                <mat-label>Importe</mat-label>\r\n                <input matInput formControlName='importe'>\r\n            </mat-form-field>\r\n    \r\n            <mat-form-field appearance='outline' class=\"w-full\">\r\n                <mat-label>Descripción</mat-label>\r\n                <input matInput formControlName='descripcion'>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-checkbox formControlName=\"bonificado\" class=\"w-full pb-5 justify-center\">Bonificado</mat-checkbox>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MovimientosComponent } from './components/movimientos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MovimientosService } from './service/movimientos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MovimientosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [MovimientosComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [MovimientosService, JedsMenuService, AppAlertService]\r\n})\r\nexport class MovimientosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IMovimiento } from '../models/movimiento';\r\nimport { ITipoMovimiento } from '../../tipo-movimientos/models/tipo-movimiento';\r\nimport { IFondo } from '../../fondos/models/fondo';\r\n\r\n@Injectable()\r\nexport class MovimientosService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los movimientos.\r\n     * - Configura los filtros para el paginado. \r\n     * @param filter \r\n     * @returns movimientos\r\n     */\r\n    getMovimientos(filter?: any): Observable<IMovimiento[]> {\r\n        //Se aplican filtro, o no, para el paginado.\r\n        let f = '?';\r\n        f += filter?.filter?.sort == 'asc' ? 'sort=idmovimiento' : 'sort=-idmovimiento';\r\n        f += filter?.paginado?.pagination ? '&pagination=1&' : '';\r\n        f += filter?.paginado?.perpage ? 'per-page=' + filter.paginado.perpage + '&' : '';\r\n        f += filter?.paginado?.currentPage ? 'page=' + filter.paginado.currentPage + '&' : '';\r\n        f += filter?.filter?.descripcion? `&filter[descripcion][like]=${filter.filter.descripcion}` : '';\r\n        f += filter?.filter?.bonificado? `&filter[bonificado]=${filter.filter.bonificado}` : '';\r\n        f += filter?.filter?.tipo_mov? `&filter[idtipo]=${filter.filter.tipo_mov}` : '';\r\n        f += filter?.filter?.origen? `&filter[origen]=${filter.filter.origen}` : '';\r\n        f += filter?.filter?.destino? `&filter[destino]=${filter.filter.destino}` : '';\r\n        \r\n        var subject = new Subject<any>();\r\n\r\n        this.http.get<IMovimiento[]>(`${environment.fondos.view_movimientos}${f}`, { observe: 'response' })\r\n            .subscribe((resp: any) => {\r\n                subject.next({\r\n                    'list': resp.body,\r\n                    'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                    'totalCount': resp.headers.get('x-pagination-total-count')\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param movimiento \r\n     * @returns Un movimiento nuevo nuevo\r\n     */\r\n    saveMovimiento(movimiento: IMovimiento): Observable<IMovimiento> {\r\n        return this.http.post<IMovimiento>(`${environment.fondos.movimientos}`, movimiento);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param movimiento\r\n     * @returns movimiento actualizado\r\n     */\r\n    updateMovimiento(movimiento: IMovimiento): Observable<IMovimiento> {\r\n        return this.http.put<IMovimiento>(`${environment.fondos.movimientos}` + '/' + movimiento.idmovimiento, movimiento);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idmovimiento \r\n     * @returns Elimina el movimiento\r\n    */\r\n    deleteMovimiento(idmovimiento: number): Observable<IMovimiento> {\r\n        return this.http.delete<IMovimiento>(environment.fondos.movimientos + '/' + idmovimiento);\r\n    }\r\n\r\n    /**\r\n    * Funcion en el servicio\r\n    * - Esta funcion retorna los Tipos de movimientos.\r\n    * @param option Sí es true me devuelve los Tipos de movimientos activos.\r\n    * @returns Tipos de movimientos\r\n    */\r\n    getTiposMovimientos(option?): Observable<ITipoMovimiento[]> {\r\n        let f = '?';\r\n        f += option ? 'filter[activo]=1' : '';\r\n        return this.http.get<ITipoMovimiento[]>(`${environment.fondos.fondos_tipo}${f}`);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param option Si es una edicion me trae 'true' para mostrarme todos los fondos. Sino me muestra solo los fondos activos.\r\n     * @returns \r\n     */\r\n    getFondos(option?): Observable<IFondo[]> {\r\n        let f = '?';\r\n        f += !option  ? 'filter[activo]=1' : '';\r\n        return this.http.get<IFondo[]>(`${environment.fondos.fondos}${f}`);\r\n    }\r\n}"],"names":["FormControl","FormGroup","fuseAnimations","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","tipo_r3","idtipo","ɵɵadvance","ɵɵtextInterpolate","descripcion","fondo_r4","idfondo","fondo_r5","FilterMenuComponent","constructor","data","menuService","_movimientosService","tipos_movimientos","ngOnInit","getFondos","getTiposMovimientos","formFilters","fecha","bonificado","origen","destino","patchValue","filter","resetFilters","reset","onCloseMenu","close","fondos","subscribe","ɵɵdirectiveInject","i1","JedsMenuService","i2","MovimientosService","selectors","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","ɵɵlistener","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_35_Template","FilterMenuComponent_mat_option_42_Template","FilterMenuComponent_Template_button_click_44_listener","FilterMenuComponent_Template_button_click_47_listener","getRawValue","EventEmitter","MatTableDataSource","debounceTime","distinctUntilChanged","SaveComponent","environment","TablaDinamicaComponent","MovimientosComponent","_menuService","confirm","alert","dialogo","_searchService","router","_headerTextService","dataSource","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","view_movimientos","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","pipe","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","elementos_existentes","getElementosExistentes","open","_elementRef","afterClosed","next","generarAcciones","name","updateMovimiento","deleteMovimiento","saveMovimiento","panelClass","params","autoFocus","title","message","dismissible","actions","show","color","label","cancel","res","idmovimiento","success","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","i3","FuseConfirmationService","i4","AppAlertService","i5","MatDialog","i6","SearchService","i7","Router","i8","HeaderTextService","viewQuery","MovimientosComponent_Query","MovimientosComponent_Template_button_click_3_listener","MovimientosComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","$event","Validators","MAT_DATE_FORMATS","MY_DATE_FORMATS","MAT_DIALOG_DATA","tipo_r4","fondo_r6","movimientosService","menu","fb","dialogRef","columns","movimiento","newForm","exist","form","group","required","tipo","importe","option","onSubmit","valid","get","FormBuilder","MatDialogRef","features","ɵɵProvidersFeature","provide","useValue","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","ɵɵelement","SaveComponent_mat_option_19_Template","SaveComponent_mat_option_25_Template","SaveComponent_mat_option_30_Template","SaveComponent_Template_button_click_43_listener","_r0","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatDatepickerModule","MatPaginatorModule","MatSortModule","TablaDinamicaModule","routes","path","component","MovimientosModule","imports","forChild","declarations","exports","Subject","http","getMovimientos","f","sort","paginado","pagination","perpage","currentPage","tipo_mov","subject","observe","resp","body","asObservable","post","movimientos","put","delete","fondos_tipo","ɵɵinject","HttpClient","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}