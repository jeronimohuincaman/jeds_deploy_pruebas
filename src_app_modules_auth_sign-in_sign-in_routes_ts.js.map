{"version":3,"file":"src_app_modules_auth_sign-in_sign-in_routes_ts.js","mappings":"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","sources":["./src/app/modules/auth/sign-in/sign-in.component.ts","./src/app/modules/auth/sign-in/sign-in.component.html","./src/app/modules/auth/sign-in/sign-in.routes.ts"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, NgForm, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\n\n@Component({\n    selector: 'auth-sign-in',\n    templateUrl: './sign-in.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations: fuseAnimations,\n    standalone: true,\n    imports: [RouterLink, FuseAlertComponent, NgIf, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatIconModule, MatCheckboxModule, MatProgressSpinnerModule],\n})\nexport class AuthSignInComponent implements OnInit {\n    @ViewChild('signInNgForm') signInNgForm: NgForm;\n\n    alert: { type: FuseAlertType; message: string } = {\n        type: 'success',\n        message: '',\n    };\n    signInForm: UntypedFormGroup;\n    showAlert: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _authService: AuthService,\n        private _formBuilder: UntypedFormBuilder,\n        private _router: Router,\n    ) {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        // Create the form\n        this.signInForm = this._formBuilder.group({\n            user: ['', [Validators.required]],\n            pass: ['', Validators.required]\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Sign in\n     */\n    signIn(): void {\n        // Return if the form is invalid\n        if (this.signInForm.invalid) {\n            return;\n        }\n\n        // Disable the form\n        this.signInForm.disable();\n        // Hide the alert\n        this.showAlert = false;\n\n        // Sign in\n        this._authService.signIn(this.signInForm.value).subscribe({\n            next: response => {\n                // Set the redirect url.\n                // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n                // to the correct page after a successful sign in. This way, that url can be set via\n                // routing file and we don't have to touch here.\n               // const redirectURL = this._activatedRoute.snapshot.queryParamMap.get('redirectURL') || '/signed-in-redirect';\n                // Navigate to the redirect url\n               // this._router.navigateByUrl(redirectURL);\n               let url = response.usuario.acceso_directo ? response.usuario.acceso_directo : '/';\n               //console.log(response.usuario.acceso_directo, 'acceso_directo');\n               this._router.navigate([url]);\n\n            },\n            error: response => {\n                // Re-enable the form\n                this.signInForm.enable();\n                // Reset the form\n                this.signInNgForm.resetForm();\n                // Set the alert\n                this.alert = {\n                    type: 'error',\n                    message: 'Usuario o Contrase√±a Incorrecta',\n                };\n                // Show the alert\n                this.showAlert = true;\n            }\n        });\n    }\n}\n","<div class=\"flex flex-col sm:flex-row items-center md:items-start sm:justify-center md:justify-start flex-auto min-w-0\">\n    <div\n        class=\"relative hidden md:flex flex-auto items-center justify-center w-1/2 h-full p-16 lg:px-28 overflow-hidden bg-gray-800 dark:border-l\">\n        <!-- Background - @formatter:off -->\n        <!-- Rings -->\n        <svg class=\"absolute inset-0 pointer-events-none\" viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\"\n            preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n                <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n                <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n            </g>\n        </svg>\n        <!-- Dots -->\n        <svg class=\"absolute -top-16 -right-16 text-gray-700\" viewBox=\"0 0 220 192\" width=\"220\" height=\"192\"\n            fill=\"none\">\n            <defs>\n                <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\"\n                    patternUnits=\"userSpaceOnUse\">\n                    <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\n                </pattern>\n            </defs>\n            <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\n        </svg>\n        <!-- @formatter:on -->\n    </div>\n\n    <div class=\"md:flex md:items-center md:justify-center w-full sm:w-auto md:h-full md:w-1/2 py-8 px-4 sm:p-12 md:p-16 sm:rounded-2xl md:rounded-none sm:shadow md:shadow-none sm:bg-card\">\n        <div class=\"w-full max-w-80 sm:w-80 mx-auto sm:mx-0\">\n            <!-- Logo -->\n            <div class=\"w-full flex justify-center\">\n                <img src=\"assets/images/logo/logo_jeds.svg\" class=\"w-60\">\n            </div>\n\n            <!-- Title -->\n            <div class=\"mt-8 text-4xl font-extrabold tracking-tight leading-tight\">Inicio de Sesi√≥n</div>\n            <!-- <div class=\"flex items-baseline mt-0.5 font-medium\">\n                <div>¬øNo tienes una cuenta?</div>\n                <a class=\"ml-1 text-primary-500 hover:underline\" [routerLink]=\"['/sign-up']\">Reg√≠strate\n                </a>\n            </div> -->\n\n            <!-- Alert -->\n            <fuse-alert class=\"mt-8\" *ngIf=\"showAlert\" [appearance]=\"'outline'\" [showIcon]=\"false\" [type]=\"alert.type\"\n                [@shake]=\"alert.type === 'error'\">\n                {{alert.message}}\n            </fuse-alert>\n\n            <!-- Sign in form -->\n            <form class=\"mt-8\" [formGroup]=\"signInForm\" #signInNgForm=\"ngForm\">\n\n                <!-- User field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Usuario</mat-label>\n                    <input id=\"username\" matInput [formControlName]=\"'user'\">\n                    <mat-error *ngIf=\"signInForm.get('user')\">\n                        username address is required\n                    </mat-error>\n                    <mat-error *ngIf=\"signInForm.get('user').hasError('user')\">\n                        Please enter a valid username address\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Password field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Contrase√±a</mat-label>\n                    <input id=\"password\" matInput type=\"password\" [formControlName]=\"'pass'\" #passwordField>\n                    <button mat-icon-button type=\"button\"\n                        (click)=\"passwordField.type === 'password' ? passwordField.type = 'text' : passwordField.type = 'password'\"\n                        matSuffix>\n                        <mat-icon class=\"icon-size-5\" *ngIf=\"passwordField.type === 'password'\"\n                            [svgIcon]=\"'heroicons_solid:eye'\"></mat-icon>\n                        <mat-icon class=\"icon-size-5\" *ngIf=\"passwordField.type === 'text'\"\n                            [svgIcon]=\"'heroicons_solid:eye-slash'\"></mat-icon>\n                    </button>\n                    <mat-error>\n                        Contrase√±a requerida\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Actions -->\n                <!-- <div class=\"inline-flex items-center justify-between w-full mt-1.5\"> \n                    <mat-checkbox class=\"-ml-2\" [color]=\"'primary'\" [formControlName]=\"'rememberMe'\">\n                        Recordar mi usuario\n                    </mat-checkbox>\n                    <a class=\"text-md font-medium text-primary-500 hover:underline \"\n                        [routerLink]=\"['/forgot-password']\">¬øOlvidaste tu contrase√±a?\n                    </a>\n                </div>-->\n\n                <!-- Submit button -->\n                <button class=\"fuse-mat-button-large w-full mt-6\" mat-flat-button [color]=\"'primary'\"\n                    [disabled]=\"signInForm.disabled\" (click)=\"signIn()\">\n                    <span *ngIf=\"!signInForm.disabled\">\n                        Acceder\n                    </span>\n                    <mat-progress-spinner *ngIf=\"signInForm.disabled\" [diameter]=\"24\"\n                        [mode]=\"'indeterminate'\"></mat-progress-spinner>\n                </button>\n            </form>\n        </div>\n    </div>\n\n</div>","import { Routes } from '@angular/router';\nimport { AuthSignInComponent } from 'app/modules/auth/sign-in/sign-in.component';\n\nexport default [\n    {\n        path     : '',\n        component: AuthSignInComponent,\n    },\n] as Routes;\n"],"names":["NgIf","FormsModule","ReactiveFormsModule","Validators","MatButtonModule","MatCheckboxModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","fuseAnimations","FuseAlertComponent","i0","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µproperty","ctx_r0","alert","type","…µ…µadvance","…µ…µtextInterpolate1","message","…µ…µelement","AuthSignInComponent","constructor","_activatedRoute","_authService","_formBuilder","_router","showAlert","ngOnInit","signInForm","group","user","required","pass","signIn","invalid","disable","value","subscribe","next","response","url","usuario","acceso_directo","navigate","error","enable","signInNgForm","resetForm","…µ…µdirectiveInject","i1","ActivatedRoute","i2","AuthService","i3","UntypedFormBuilder","Router","selectors","viewQuery","AuthSignInComponent_Query","rf","ctx","…µ…µnamespaceSVG","…µ…µnamespaceHTML","…µ…µtemplate","AuthSignInComponent_fuse_alert_17_Template","AuthSignInComponent_mat_error_24_Template","AuthSignInComponent_mat_error_25_Template","…µ…µlistener","AuthSignInComponent_Template_button_click_31_listener","…µ…µrestoreView","_r9","_r4","…µ…µreference","…µ…µresetView","AuthSignInComponent_mat_icon_32_Template","AuthSignInComponent_mat_icon_33_Template","AuthSignInComponent_Template_button_click_36_listener","AuthSignInComponent_span_37_Template","AuthSignInComponent_mat_progress_spinner_38_Template","get","hasError","disabled","…µNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i4","MatFormField","MatLabel","MatError","MatSuffix","i5","MatInput","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatProgressSpinner","encapsulation","data","animation","path","component"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}