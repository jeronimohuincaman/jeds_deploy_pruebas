{"version":3,"file":"default-src_app_modules_compras_ordenes-de-compra_components_save_save_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAgF;AAGZ;AAEkG;AAClF;AAC1B;AACG;AAEG;AAKqB;;;;;;;;;;;;;;;;;;;;;;ICFjFqB,uDAAA,wBAA8D;;;;;IAG9DA,4DAAA,oBACgG;IAC5FA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAFTA,wDAAA,SAAAM,MAAA,CAAAC,YAAA,CAAAC,IAAA,CAA0B,qCAAAF,MAAA,CAAAG,SAAA;IAC1BT,uDAAA,GACJ;IADIA,gEAAA,MAAAM,MAAA,CAAAC,YAAA,CAAAK,OAAA,MACJ;;;;;IAgBgBZ,4DAAA,iBAAkG;IACpFA,oDAAA,sBAAe;IAAAA,0DAAA,EAAW;;;;;IAGpCA,4DAAA,qBAAsF;IAClFA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAFqDA,wDAAA,UAAAa,aAAA,CAAmB;IACjFb,uDAAA,GACJ;IADIA,gEAAA,MAAAa,aAAA,CAAAC,WAAA,MACJ;;;;;;IAEJd,4DAAA,iBACwD;IADtBA,wDAAA,mBAAAgB,iEAAA;MAAAhB,2DAAA,CAAAkB,IAAA;MAAA,MAAAC,OAAA,GAAAnB,2DAAA;MAAA,OAASA,yDAAA,CAAAmB,OAAA,CAAAG,gBAAA,CAAiB,WAAW,CAAC;IAAA,EAAC;IAErEtB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAM9BA,4DAAA,iBAA4F;IAC9EA,oDAAA,sBAAe;IAAAA,0DAAA,EAAW;;;;;;IAOxCA,4DAAA,iBAC8D;IAD5BA,wDAAA,mBAAAuB,iEAAA;MAAAvB,2DAAA,CAAAwB,IAAA;MAAA,MAAAC,OAAA,GAAAzB,2DAAA;MAAA,OAASA,yDAAA,CAAAyB,OAAA,CAAAH,gBAAA,CAAiB,KAAK,CAAC;IAAA,EAAC;IAE/DtB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;;IAM9BA,4DAAA,iBACsE;IADpCA,wDAAA,mBAAA0B,iEAAA;MAAA1B,2DAAA,CAAA2B,IAAA;MAAA,MAAAC,OAAA,GAAA5B,2DAAA;MAAA,OAASA,yDAAA,CAAA4B,OAAA,CAAAN,gBAAA,CAAiB,aAAa,CAAC;IAAA,EAAC;IAEvEtB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAGlCA,4DAAA,yBAAqF;IACtEA,oDAAA,qBAAS;IAAAA,0DAAA,EAAY;IAChCA,uDAAA,gBAAuD;IAC3DA,0DAAA,EAAiB;;;;;IAaDA,4DAAA,qBAA0E;IACtEA,oDAAA,GACJ;IAAAA,0DAAA,EAAa;;;;IAF0CA,wDAAA,UAAA6B,YAAA,CAAkB;IACrE7B,uDAAA,GACJ;IADIA,gEAAA,MAAA6B,YAAA,CAAAE,cAAA,SAAAF,YAAA,CAAAG,WAAA,MACJ;;;;;;IAEJhC,4DAAA,iBACuD;IADrBA,wDAAA,mBAAAiC,yEAAA;MAAAjC,2DAAA,CAAAkC,IAAA;MAAA,MAAAC,OAAA,GAAAnC,2DAAA;MAAA,OAASA,yDAAA,CAAAmC,OAAA,CAAAb,gBAAA,CAAiB,UAAU,CAAC;IAAA,EAAC;IAEpEtB,4DAAA,eAAU;IAAAA,oDAAA,YAAK;IAAAA,0DAAA,EAAW;;;;;IAqBJA,4DAAA,YAAgD;IAAAA,oDAAA,GACnD;IAAAA,0DAAA,EAAI;;;;IAD+CA,uDAAA,GACnD;IADmDA,gEAAA,OAAAoC,MAAA,CAAAC,SAAA,OAAAD,MAAA,CAAAE,OAAA,MACnD;;;;;IAFvBtC,4DAAA,qBAA8E;IAC1EA,oDAAA,GAAsB;IAAAA,wDAAA,IAAAwC,wDAAA,gBACC;IAC3BxC,0DAAA,EAAa;;;;IAHqCA,wDAAA,UAAAoC,MAAA,CAAAK,cAAA,CAA2B;IACzEzC,uDAAA,GAAsB;IAAtBA,gEAAA,MAAAoC,MAAA,CAAAM,cAAA,MAAsB;IAAI1C,uDAAA,GAAuB;IAAvBA,wDAAA,SAAAoC,MAAA,CAAAC,SAAA,MAAuB;;;;;;IApCrErC,4DAAA,eAA8D;IAInCA,oDAAA,oBAAQ;IAAAA,0DAAA,EAAY;IAC/BA,4DAAA,gBAC4C;IAAxCA,wDAAA,2BAAA2C,sEAAAC,MAAA;MAAA5C,2DAAA,CAAA6C,IAAA;MAAA,MAAAC,OAAA,GAAA9C,2DAAA;MAAA,OAAiBA,yDAAA,CAAA8C,OAAA,CAAAC,aAAA,CAAAH,MAAA,CAAqB;IAAA,EAAC;IAD3C5C,0DAAA,EAC4C;IAC5CA,4DAAA,+BACoC;IAChCA,wDAAA,IAAAgD,mDAAA,yBAEa;IACjBhD,0DAAA,EAAmB;IACnBA,wDAAA,KAAAiD,gDAAA,qBAGS;IACbjD,0DAAA,EAAiB;IACjBA,4DAAA,eAAkB;IAIVA,wDAAA,mBAAAkD,gEAAA;MAAAlD,2DAAA,CAAA6C,IAAA;MAAA,MAAAM,OAAA,GAAAnD,2DAAA;MAAA,OAASA,yDAAA,CAAAmD,OAAA,CAAAC,gBAAA,EAAkB;IAAA,EAAC;IAC5BpD,4DAAA,EACuC;IADvCA,4DAAA,eACuC;IACnCA,uDAAA,gBAE0B;IAC9BA,0DAAA,EAAM;IAIlBA,6DAAA,EAA6D;IAA7DA,4DAAA,0BAA6D;IAC9CA,oDAAA,UAAE;IAAAA,0DAAA,EAAY;IACzBA,4DAAA,sBAAyF;IAA9CA,wDAAA,2BAAAuD,4EAAAX,MAAA;MAAA5C,2DAAA,CAAA6C,IAAA;MAAA,MAAAW,OAAA,GAAAxD,2DAAA;MAAA,OAAiBA,yDAAA,CAAAwD,OAAA,CAAAT,aAAA;QAAAU,EAAA,EAAAb;MAAA,EAA2B;IAAA,EAAC;IACpF5C,wDAAA,KAAA0D,oDAAA,yBAGa;IACjB1D,0DAAA,EAAa;IAEjBA,4DAAA,0BAC8D;IAA1DA,wDAAA,2BAAA2D,gFAAAf,MAAA;MAAA5C,2DAAA,CAAA6C,IAAA;MAAA,MAAAe,OAAA,GAAA5D,2DAAA;MAAA,OAAiBA,yDAAA,CAAA4D,OAAA,CAAAb,aAAA,CAAAH,MAAA,EAAsB,gBAAgB,CAAC;IAAA,EAAC;IACzD5C,4DAAA,iBAAW;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAY;IAC/BA,uDAAA,iBAAyD;IAC7DA,0DAAA,EAAiB;IACjBA,4DAAA,eAAkC;IAE1BA,wDAAA,2BAAA6D,gFAAAjB,MAAA;MAAA5C,2DAAA,CAAA6C,IAAA;MAAA,MAAAiB,OAAA,GAAA9D,2DAAA;MAAA,OAAiBA,yDAAA,CAAA8D,OAAA,CAAAC,QAAA,CAAAnB,MAAA,CAAgB;IAAA,EAAC;IAClC5C,4DAAA,iBAAW;IAAAA,oDAAA,eAAO;IAAAA,0DAAA,EAAY;IAC9BA,uDAAA,iBAAwD;IAC5DA,0DAAA,EAAiB;IACjBA,4DAAA,eAAkB;IAIVA,wDAAA,mBAAAgE,gEAAA;MAAAhE,2DAAA,CAAA6C,IAAA;MAAA,MAAAoB,OAAA,GAAAjE,2DAAA;MAAA,OAASA,yDAAA,CAAAiE,OAAA,CAAAF,QAAA,EAAU;IAAA,EAAC;IACpB/D,4DAAA,EACuC;IADvCA,4DAAA,eACuC;IACnCA,uDAAA,gBAA+D;IACnEA,0DAAA,EAAM;;;;;IA5DCA,wDAAA,cAAAkE,OAAA,CAAAC,oBAAA,CAAkC;IAKUnE,uDAAA,GAA6B;IAA7BA,wDAAA,oBAAAoE,IAAA,CAA6B;IAGhFpE,uDAAA,GAA+B;IAA/BA,wDAAA,gBAAAkE,OAAA,CAAAG,eAAA,CAA+B;IACErE,uDAAA,GAAoB;IAApBA,wDAAA,YAAAkE,OAAA,CAAAI,iBAAA,CAAoB;IAKpDtE,uDAAA,GAAgD;IAAhDA,wDAAA,SAAAkE,OAAA,CAAAC,oBAAA,CAAAI,GAAA,aAAAC,KAAA,CAAgD;IAK7CxE,uDAAA,GAA6C;IAA7CA,wDAAA,CAAAkE,OAAA,CAAAQ,cAAA,QAAAR,OAAA,CAAAS,aAAA,CAA6C;IAAC3E,yDAAA,eAAAkE,OAAA,CAAAQ,cAAA,CAAmC,UAAAR,OAAA,CAAAW,gBAAA;IAgB9D7E,uDAAA,GAAqB;IAArBA,wDAAA,YAAAkE,OAAA,CAAAY,kBAAA,CAAqB;IAkBxC9E,uDAAA,IAA6C;IAA7CA,wDAAA,CAAAkE,OAAA,CAAAQ,cAAA,QAAAR,OAAA,CAAAS,aAAA,CAA6C;IAAC3E,yDAAA,eAAAkE,OAAA,CAAAQ,cAAA,CAAmC;;;;;IAiC7F1E,4DAAA,aACuF;IACnFA,oDAAA,sBAAc;IAAAA,0DAAA,EAAK;;;;IAFeA,wDAAA,CAAA+E,OAAA,CAAAL,cAAA,QAAAK,OAAA,CAAAJ,aAAA,CAA6C;IAC/E3E,yDAAA,eAAA+E,OAAA,CAAAL,cAAA,OAA0C;;;;;IAE9C1E,4DAAA,aAAkE;IAC9DA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAgF,uBAAA,CAAAC,uBAAA,MACJ;;;;;IAGAjF,4DAAA,aACyE;IACrEA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAK;;;;IAFqBA,wDAAA,CAAAkF,OAAA,CAAAR,cAAA,QAAAQ,OAAA,CAAAP,aAAA,CAA6C;IAC/E3E,yDAAA,eAAAkF,OAAA,CAAAR,cAAA,OAA0C;;;;;IAE9C1E,4DAAA,aAAkE;IAC9DA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAmF,uBAAA,CAAAC,oBAAA,MACJ;;;;;IAGApF,4DAAA,aACyE;IAAAA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAK;;;;IADxDA,wDAAA,CAAAqF,OAAA,CAAAX,cAAA,QAAAW,OAAA,CAAAV,aAAA,CAA6C;IAC/E3E,yDAAA,eAAAqF,OAAA,CAAAX,cAAA,OAA0C;;;;;IAC9C1E,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAsF,uBAAA,CAAA5C,cAAA,MACJ;;;;;IAGA1C,4DAAA,aACyE;IAAAA,oDAAA,eAAQ;IAAAA,0DAAA,EAAK;;;;IADhDA,wDAAA,CAAAuF,OAAA,CAAAb,cAAA,QAAAa,OAAA,CAAAZ,aAAA,CAA6C;IAC/E3E,yDAAA,eAAAuF,OAAA,CAAAb,cAAA,OAA0C;;;;;IAC9C1E,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,MAAAwF,uBAAA,CAAAC,QAAA,MACJ;;;;;IAGAzF,4DAAA,aACyE;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAK;;;;IAD/CA,wDAAA,CAAA0F,OAAA,CAAAhB,cAAA,QAAAgB,OAAA,CAAAf,aAAA,CAA6C;IAC/E3E,yDAAA,eAAA0F,OAAA,CAAAhB,cAAA,OAA0C;;;;;IAC9C1E,4DAAA,aAAmD;IAC/CA,oDAAA,GACJ;IAAAA,0DAAA,EAAK;;;;IADDA,uDAAA,GACJ;IADIA,gEAAA,OAAA2F,uBAAA,CAAAC,OAAA,MACJ;;;;;IAGA5F,uDAAA,aAEK;;;;IAFiCA,wDAAA,CAAA6F,OAAA,CAAAnB,cAAA,QAAAmB,OAAA,CAAAlB,aAAA,CAA6C;IAC/E3E,yDAAA,eAAA6F,OAAA,CAAAnB,cAAA,OAA0C;;;;;;IAG1C1E,4DAAA,oBAA4F;IAA/CA,wDAAA,mBAAA8F,sEAAA;MAAA9F,2DAAA,CAAA+F,IAAA;MAAA,MAAAC,cAAA,GAAAhG,2DAAA,GAAAiG,SAAA;MAAA,MAAAC,OAAA,GAAAlG,2DAAA;MAAA,OAASA,yDAAA,CAAAkG,OAAA,CAAAC,gBAAA,CAAAH,cAAA,CAA4B;IAAA,EAAC;IAC/EhG,4DAAA,mBAAuB;IAAAA,oDAAA,aAAM;IAAAA,0DAAA,EAAW;;;;;IAFhDA,4DAAA,aAA0C;IACtCA,wDAAA,IAAAoG,6CAAA,qBAES;IACbpG,0DAAA,EAAK;;;;IAHQA,uDAAA,GAAkB;IAAlBA,wDAAA,UAAAqG,OAAA,CAAAC,WAAA,CAAkB;;;;;IAKnCtG,uDAAA,aAAiE;;;;;IACjEA,uDAAA,aAAwD;;;;;IAE5DA,4DAAA,cAAwF;IACnDA,oDAAA,sCAA0B;IAAAA,0DAAA,EAAI;;;;;;;;;;;;;;IAlM/EA,4DAAA,eAAuE;IAMvDA,uDAAA,gBACsB;IAG1BA,0DAAA,EAAiB;IACjBA,4DAAA,yBAA6D;IAC9CA,oDAAA,iBAAS;IAAAA,0DAAA,EAAY;IAChCA,uDAAA,iBAAiF;IACjFA,wDAAA,KAAAuG,wCAAA,qBAES;IACTvG,4DAAA,gCAAiG;IAC7FA,wDAAA,KAAAwG,4CAAA,yBAEa;;IACjBxG,0DAAA,EAAmB;IACnBA,wDAAA,KAAAyG,wCAAA,qBAGS;IACbzG,0DAAA,EAAiB;IACjBA,4DAAA,0BAA6D;IAC9CA,oDAAA,aAAK;IAAAA,0DAAA,EAAY;IAC5BA,uDAAA,iBAA0E;IAC1EA,wDAAA,KAAA0G,wCAAA,qBAES;IACT1G,4DAAA,gCAA+D;IAC9BA,oDAAA,aAAK;IAAAA,0DAAA,EAAa;IAC/CA,4DAAA,sBAA6B;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAa;IAC7CA,4DAAA,sBAA6B;IAAAA,oDAAA,WAAG;IAAAA,0DAAA,EAAa;IAEjDA,wDAAA,KAAA2G,wCAAA,qBAGS;IACb3G,0DAAA,EAAiB;IACjBA,4DAAA,0BAAuG;IACxFA,oDAAA,mBAAW;IAAAA,0DAAA,EAAY;IAClCA,uDAAA,iBAA4D;IAC5DA,wDAAA,KAAA4G,wCAAA,qBAGS;IACb5G,0DAAA,EAAiB;IACjBA,wDAAA,KAAA6G,gDAAA,6BAGiB;IACrB7G,0DAAA,EAAM;IAGNA,wDAAA,KAAA8G,sCAAA,qBAiEO;IAGP9G,4DAAA,eAA6C;IAErBA,wDAAA,mBAAA+G,uDAAAnE,MAAA;MAAA5C,2DAAA,CAAAgH,IAAA;MAAA,MAAAC,OAAA,GAAAjH,2DAAA;MAAA,OAASA,yDAAA,CAAAiH,OAAA,CAAAC,WAAA,CAAAtE,MAAA,CAAAuE,MAAA,CAAA3C,KAAA,CAAgC;IAAA,EAAC;IAA1DxE,0DAAA,EAC0J;IAC1JA,4DAAA,gBAAyE;IACrEA,4DAAA,EAAgG;IAAhGA,4DAAA,eAAgG;IAC5FA,uDAAA,gBAE0B;IAC9BA,0DAAA,EAAM;IAMlBA,6DAAA,EAA0E;IAA1EA,4DAAA,eAA0E;IAElEA,qEAAA,QAA2C;IACvCA,wDAAA,KAAAqH,oCAAA,iBAEuB;IACvBrH,wDAAA,KAAAsH,oCAAA,iBAEK;IACTtH,mEAAA,EAAe;IACfA,qEAAA,QAAsC;IAClCA,wDAAA,KAAAwH,oCAAA,iBAEiB;IACjBxH,wDAAA,KAAAyH,oCAAA,iBAEK;IACTzH,mEAAA,EAAe;IACfA,qEAAA,QAA0C;IACtCA,wDAAA,KAAA0H,oCAAA,iBAC8F;IAC9F1H,wDAAA,KAAA2H,oCAAA,iBAEK;IACT3H,mEAAA,EAAe;IACfA,qEAAA,QAAsC;IAClCA,wDAAA,KAAA4H,oCAAA,iBACsF;IACtF5H,wDAAA,KAAA6H,oCAAA,iBAEK;IACT7H,mEAAA,EAAe;IACfA,qEAAA,QAAqC;IACjCA,wDAAA,KAAA8H,oCAAA,iBACqF;IACrF9H,wDAAA,KAAA+H,oCAAA,iBAEK;IACT/H,mEAAA,EAAe;IACfA,qEAAA,QAAsC;IAClCA,wDAAA,KAAAgI,oCAAA,iBAEK;IACLhI,wDAAA,KAAAiI,oCAAA,iBAIK;IACTjI,mEAAA,EAAe;IACfA,wDAAA,KAAAkI,oCAAA,iBAAiE;IACjElI,wDAAA,KAAAmI,oCAAA,iBAAwD;IAC5DnI,0DAAA,EAAQ;IACRA,wDAAA,KAAAoI,qCAAA,kBAEM;IACVpI,0DAAA,EAAM;IAGNA,4DAAA,eAAgD;IAC5CA,uDAAA,gBAA+B;IAC/BA,4DAAA,iBAAqC;IACjCA,oDAAA,IACJ;IAAAA,0DAAA,EAAQ;IAGZA,4DAAA,0BAAyD;IAC1CA,oDAAA,qBAAa;IAAAA,0DAAA,EAAY;IACpCA,uDAAA,oBAAkF;IAClFA,4DAAA,eAA+E;IAC3EA,oDAAA,IACJ;IAAAA,0DAAA,EAAM;;;;;;;IAnNkCA,wDAAA,cAAAqI,MAAA,CAAAC,IAAA,CAAkB;IAMtCtI,uDAAA,GAAwB;IAAxBA,wDAAA,kBAAAuI,GAAA,CAAwB,QAAAF,MAAA,CAAAG,OAAA,SAAAH,MAAA,CAAAI,OAAA;IAEPzI,uDAAA,GAAc;IAAdA,wDAAA,QAAAuI,GAAA,CAAc;IAKSvI,uDAAA,GAAwB;IAAxBA,wDAAA,oBAAA0I,GAAA,CAAwB;IAClB1I,uDAAA,GAAkC;IAAlCA,wDAAA,UAAAqI,MAAA,CAAAC,IAAA,CAAA/D,GAAA,cAAAC,KAAA,CAAkC;IAGhCxE,uDAAA,GAAgC;IAAhCA,wDAAA,gBAAAqI,MAAA,CAAAM,gBAAA,CAAgC;IAC1D3I,uDAAA,GAA8B;IAA9BA,wDAAA,YAAAA,yDAAA,SAAAqI,MAAA,CAAAQ,mBAAA,EAA8B;IAK/D7I,uDAAA,GAAiD;IAAjDA,wDAAA,SAAAqI,MAAA,CAAAC,IAAA,CAAA/D,GAAA,cAAAC,KAAA,KAAA6D,MAAA,CAAA/B,WAAA,CAAiD;IAMJtG,uDAAA,GAAuB;IAAvBA,wDAAA,oBAAA8I,IAAA,CAAuB;IACX9I,uDAAA,GAA4B;IAA5BA,wDAAA,UAAAqI,MAAA,CAAAC,IAAA,CAAA/D,GAAA,QAAAC,KAAA,CAA4B;IAI1ExE,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IAChBA,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IAChBA,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IAG3BA,uDAAA,GAAuD;IAAvDA,wDAAA,SAAAqI,MAAA,CAAAC,IAAA,CAAA/D,GAAA,QAAAC,KAAA,IAAA6D,MAAA,CAAAU,YAAA,CAAAC,MAAA,MAAuD;IAI3BhJ,uDAAA,GAAiE;IAAjEA,wDAAA,YAAAA,6DAAA,KAAAkJ,GAAA,EAAAb,MAAA,CAAAc,eAAA,4BAAiE;IAI7FnJ,uDAAA,GAA+D;IAA/DA,wDAAA,SAAAqI,MAAA,CAAAC,IAAA,CAAA/D,GAAA,gBAAAC,KAAA,IAAA6D,MAAA,CAAAU,YAAA,CAAAC,MAAA,MAA+D;IAIVhJ,uDAAA,GAAqB;IAArBA,wDAAA,SAAAqI,MAAA,CAAAc,eAAA,CAAqB;IAOhFnJ,uDAAA,GAAkB;IAAlBA,wDAAA,UAAAqI,MAAA,CAAA/B,WAAA,CAAkB;IAoFJtG,uDAAA,GAAyB;IAAzBA,wDAAA,eAAAqI,MAAA,CAAAe,UAAA,CAAyB;IAgDlBpJ,uDAAA,IAA0B;IAA1BA,wDAAA,oBAAAqI,MAAA,CAAAgB,OAAA,CAA0B;IACbrJ,uDAAA,GAAgB;IAAhBA,wDAAA,qBAAAqI,MAAA,CAAAgB,OAAA,CAAgB;IAE/CrJ,uDAAA,GAAkC;IAAlCA,wDAAA,SAAAqI,MAAA,CAAAe,UAAA,CAAAE,IAAA,CAAAN,MAAA,OAAkC;IASpChJ,uDAAA,GACJ;IADIA,gEAAA,+BAAAqI,MAAA,CAAAe,UAAA,CAAAE,IAAA,CAAAN,MAAA,MACJ;IAMqBhJ,uDAAA,GAAyD;IAAzDA,wDAAA,YAAAA,6DAAA,KAAAuJ,GAAA,GAAAlB,MAAA,CAAAmB,yBAAA,IAAyD;IAC1ExJ,uDAAA,GACJ;IADIA,gEAAA,MAAAqI,MAAA,CAAAoB,iBAAA,SAAApB,MAAA,CAAAqB,WAAA,MACJ;;;;;;IAIZ1J,4DAAA,cACqE;IAGEA,wDAAA,mBAAA2J,sDAAA;MAAA3J,2DAAA,CAAA4J,IAAA;MAAA,MAAAC,OAAA,GAAA7J,2DAAA;MAAA,OAASA,yDAAA,CAAA6J,OAAA,CAAAC,QAAA,EAAU;IAAA,EAAC;IACnF9J,4DAAA,eAA+C;IAAAA,oDAAA,cAAO;IAAAA,0DAAA,EAAO;;;;IAHvCA,uDAAA,GAA6C;IAA7CA,wDAAA,CAAA+J,MAAA,CAAArF,cAAA,QAAAqF,MAAA,CAAApF,aAAA,CAA6C;IACnE3E,yDAAA,qBAAA+J,MAAA,CAAArF,cAAA,OAAgD;;;AD9N5D,MAMasF,aAAa;EAsCtBC,YACYC,uBAA+C,EAC/CC,eAA+B,EACPb,IAAS,EACjCc,QAAkB,EACnBC,KAAsB,EACtBC,SAAsC,EACrCC,OAAkB;IANlB,KAAAL,uBAAuB,GAAvBA,uBAAuB;IACvB,KAAAC,eAAe,GAAfA,eAAe;IACS,KAAAb,IAAI,GAAJA,IAAI;IAC5B,KAAAc,QAAQ,GAARA,QAAQ;IACT,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,SAAS,GAATA,SAAS;IACR,KAAAC,OAAO,GAAPA,OAAO;IA1CZ,KAAAnB,UAAU,GAA4B,IAAIvJ,uEAAkB,EAAE;IACrE,KAAAY,SAAS,GAAG,KAAK;IAIjB,KAAAkE,aAAa,GAAW,YAAY;IAC5B,KAAA6F,eAAe,GAAiB,IAAIzL,0CAAO,EAAO;IAC1D,KAAA2K,WAAW,GAAW,GAAG;IAGzB,KAAAe,gBAAgB,GAAG,CAAC;IACpB,KAAAC,cAAc,GAAG,IAAI;IACrB,KAAAC,eAAe,GAAY,KAAK;IAGf,KAAAC,kBAAkB,GAAuB,IAAIjM,uDAAY,EAAQ;IACjE,KAAAkM,mBAAmB,GAAuB,IAAIlM,uDAAY,EAAQ;IAInF,KAAA0K,OAAO,GAAG,CAAC,eAAe,EAAE,UAAU,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC;IAM1F,KAAAyB,cAAc,GAAG,EAAE;IAEnB,KAAAhG,kBAAkB,GAAU,EAAE;IAC9B,KAAAiE,YAAY,GAAU,EAAE;IACxB,KAAAgC,oBAAoB,GAAU,EAAE;IAc5B,IAAI,CAACzE,WAAW,GAAG,IAAI,CAACgD,IAAI,EAAEhD,WAAW,IAAI,KAAK;IAElD,IAAI,IAAI,CAACgD,IAAI,CAAC0B,KAAK,EAAE;MACjB,IAAI,CAAC7B,eAAe,GAAG,IAAI,CAACG,IAAI,CAAC0B,KAAK;MACtC,IAAI,CAACC,KAAK,GAAG,IAAI,CAAC3B,IAAI,CAAC2B,KAAK;KAC/B,MAAM,IAAI,IAAI,CAAC3B,IAAI,EAAE;MAClB,IAAI,CAACH,eAAe,GAAG,IAAI,CAACG,IAAI;MAChC,IAAI,CAAC2B,KAAK,GAAG,wBAAwB;KACxC,MAAM;MACH,IAAI,CAAC9B,eAAe,GAAG,IAAI;MAC3B,IAAI,CAAC8B,KAAK,GAAG,uBAAuB;;IAGxC,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpD;IACA,IAAI,CAAC9C,OAAO,GAAG,IAAI;IACnB;IACA,IAAI,CAACC,OAAO,GAAG,IAAI8C,IAAI,EAAE;IACzB;IACA,IAAI,CAACpB,eAAe,CAACqB,QAAQ,CACxBC,IAAI,CAAClM,gDAAS,CAAC,IAAI,CAACiL,eAAe,CAAC,CAAC,CACrCkB,SAAS,CAACC,OAAO,IAAG;MACjB,IAAI,CAACjH,cAAc,GAAGiH,OAAO,CAACjH,cAAc;MAC5C,IAAI,CAACG,gBAAgB,GAAG8G,OAAO,CAAC9G,gBAAgB;IACpD,CAAC,CAAC;EACV;EAEA+G,QAAQA,CAAA;IACJ;IACA,IAAI,CAACzB,eAAe,CAAC0B,UAAU,EAAE;IACjC,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,KAAK,EAAE;IACZ,IAAI,CAACC,cAAc,EAAE;IAErB;IACA,IAAI,CAAC7H,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC0H,YAAY,CAACR,IAAI,CACvDzM,mDAAY,CAAC,GAAG,CAAC;IAAG;IACpBC,2DAAoB,EAAE;IAAE;IACxBK,gDAAS,CAAEkF,KAAK,IAAI;MAChB,MAAM0H,UAAU,GAAG,OAAO1H,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAAC0H,UAAU,GAAG,IAAI;MACtE,MAAMC,UAAU,GAAG,OAAO3H,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,IAAI;MAC3D,OAAO,IAAI,CAAC0F,uBAAuB,CAACkC,YAAY,CAACF,UAAU,EAAEC,UAAU,CAAC;IAC5E,CAAC,CAAC,CACL,CAACT,SAAS,CAACW,QAAQ,IAAG;MACnB,IAAI,CAAC/H,iBAAiB,GAAG+H,QAAQ,CAACC,IAAI;IAC1C,CAAC,CAAC;EACN;EAEA;EACAN,cAAcA,CAAA;IACV,IAAI,CAAC3B,KAAK,CAACkC,UAAU,CAACb,SAAS,CAAC;MAC5Bc,IAAI,EAAGC,MAAoB,IAAI;QAC3B,IAAI,CAAChM,SAAS,GAAG,IAAI;QACrB,IAAI,CAACF,YAAY,GAAG;UAChB,GAAGkM,MAAM;UACTC,UAAU,EAAE;SACf;QACD,IAAIC,IAAI,GAAG,CAAC;QACZjN,4CAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CACX+L,IAAI,CACDvM,+CAAQ,CAAC,MAAK;UACV,IAAI,CAACuB,SAAS,GAAG,KAAK;UACtB,IAAI,CAACF,YAAY,GAAG,IAAI;QAC5B,CAAC,CAAC,EACFf,gDAAS,CAAC,MAAMmN,IAAI,GAAG,CAAC,CAAC,EACzBpN,gDAAS,CAAC,IAAI,CAACiL,eAAe,CAAC,EAC/B/K,0CAAG,CAAC,MAAOkN,IAAI,IAAI,CAAE,CAAC,CACzB,CACAjB,SAAS,EAAE;MACpB;KACH,CAAC;EACN;EAEAI,OAAOA,CAAA;IAEH,MAAM,CAACc,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAI,CAAC3D,eAAe,GAAG,IAAI,CAACA,eAAe,EAAE4D,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;IAE7F,IAAI,IAAI,CAAC7D,eAAe,EAAE;MAAE;MACxB,IAAI,CAAC8D,QAAQ,CAAC,IAAI,CAAC9D,eAAe,CAAC+D,MAAM,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAI;QACpD,IAAI,CAACrE,YAAY,GAAGqE,GAAG,CAAChO,GAAG,CAACiO,CAAC,IAAG;UAC5B,OAAO;YACHC,QAAQ,EAAED,CAAC,CAACC,QAAQ;YACpB7H,QAAQ,EAAE4H,CAAC,CAAC5H,QAAQ;YACpBhD,cAAc,EAAE4K,CAAC,CAAC5K,cAAc;YAChC2C,oBAAoB,EAAEiI,CAAC,CAACjI,oBAAoB;YAC5C1C,cAAc,EAAE2K,CAAC,CAAC3K,cAAc;YAChCuC,uBAAuB,EAAEoI,CAAC,CAACpI,uBAAuB;YAClDW,OAAO,EAAEyH,CAAC,CAACzH;WACd;QACL,CAAC,CAAC;QAEF,IAAI,CAACwD,UAAU,GAAG,IAAIvJ,uEAAkB,CAAC,IAAI,CAACkJ,YAAY,CAAC;QAE3D,IAAI,CAACT,IAAI,CAAC/D,GAAG,CAAC,QAAQ,CAAC,CAACgJ,OAAO,EAAE;QAEjC,IAAG,IAAI,CAACjH,WAAW,EAAE;UACjB,IAAI,CAACgC,IAAI,CAAC/D,GAAG,CAAC,WAAW,CAAC,CAACgJ,OAAO,EAAE;UACpC,IAAI,CAACjF,IAAI,CAAC/D,GAAG,CAAC,eAAe,CAAC,CAACgJ,OAAO,EAAE;UACxC,IAAI,CAACjF,IAAI,CAAC/D,GAAG,CAAC,OAAO,CAAC,CAACgJ,OAAO,EAAE;;QAGpC;QACA,IAAI,IAAI,CAACxE,YAAY,CAACC,MAAM,IAAI,CAAC,EAAE;UAC/B,IAAI,CAACV,IAAI,CAAC/D,GAAG,CAAC,KAAK,CAAC,CAACgJ,OAAO,EAAE;UAC9B,IAAI,CAACjF,IAAI,CAAC/D,GAAG,CAAC,aAAa,CAAC,CAACgJ,OAAO,EAAE;SACzC,MAAM;UACH,IAAI,CAACjF,IAAI,CAAC/D,GAAG,CAAC,KAAK,CAAC,CAACiJ,MAAM,EAAE;UAC7B,IAAI,CAAClF,IAAI,CAAC/D,GAAG,CAAC,aAAa,CAAC,CAACiJ,MAAM,EAAE;;MAE7C,CAAC,CAAC;;IAGN,IAAI,CAAClF,IAAI,GAAG,IAAIzJ,sDAAS,CAAC;MACtB4O,SAAS,EAAE,IAAI7O,wDAAW,CAAE,IAAI,CAACuK,eAAe,GAAG,IAAI,CAACA,eAAe,CAACsE,SAAS,GAAG,EAAE,EAAG3O,gEAAmB,CAAC;MAC7GiO,KAAK,EAAE,IAAInO,wDAAW,CAAE,IAAI,CAACuK,eAAe,EAAE4D,KAAK,GAAG,IAAI,CAAC3C,QAAQ,CAACuD,SAAS,CAAC,IAAIpC,IAAI,CAAC,GAAGsB,GAAG,IAAID,GAAG,IAAIE,IAAI,EAAE,CAAC,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC1C,QAAQ,CAACuD,SAAS,CAAC,IAAIpC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAG,CAACzM,gEAAmB,CAAC,CAAC;MAC3M8O,aAAa,EAAE,IAAIhP,wDAAW,CAAE,IAAI,CAACuK,eAAe,GAAG,IAAI,CAACA,eAAe,CAACyE,aAAa,GAAG,EAAE,EAAG,CAAC9O,iEAAoB,CAAC,IAAI,CAAC4K,WAAW,CAAC,CAAC,CAAC;MAC1IoE,MAAM,EAAE,IAAIlP,wDAAW,CAAE,IAAI,CAACuK,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC2E,MAAM,GAAG,EAAG,CAAC;MAClFC,WAAW,EAAE,IAAInP,wDAAW,CAAE,IAAI,CAACuK,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC6E,MAAM,GAAG,EAAG,CAAC;MACvFC,GAAG,EAAE,IAAIrP,wDAAW,CAAE,IAAI,CAACuK,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC8E,GAAG,GAAG,EAAE,EAAGnP,gEAAmB;KACnG,CAAC;IAEF,IAAI,CAACqF,oBAAoB,GAAG,IAAItF,sDAAS,CAAC;MACtCyO,QAAQ,EAAE,IAAI1O,wDAAW,CAAE,EAAE,EAAGE,gEAAmB,CAAC;MACpDoP,YAAY,EAAE,IAAItP,wDAAW,CAAE,EAAE,EAAGE,gEAAmB,CAAC;MACxD2G,QAAQ,EAAE,IAAI7G,wDAAW,CAAE,EAAE,EAAG,CAACE,gEAAmB,EAAEA,2DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;MACzE8G,OAAO,EAAE,IAAIhH,wDAAW,CAAE,EAAE,EAAGE,gEAAmB;KACrD,CAAC;IAEF,IAAI,CAACsP,oBAAoB,EAAE;EAC/B;EAEA;EAEA;;;;EAIAC,aAAaA,CAACC,UAAU;IACpB,IAAIA,UAAU,EAAE;MAAE;MACd,IAAIC,mBAAmB,GAAG;QACtBjB,QAAQ,EAAEgB,UAAU,CAAChB,QAAQ,CAACpB,UAAU;QACxCzG,QAAQ,EAAE6I,UAAU,CAAC7I,QAAQ;QAC7BhD,cAAc,EAAE6L,UAAU,CAACE,aAAa;QACxCpJ,oBAAoB,EAAEkJ,UAAU,CAAChB,QAAQ,CAACtL,WAAW;QACrDU,cAAc,EAAE4L,UAAU,CAACG,wBAAwB;QACnDxJ,uBAAuB,EAAEqJ,UAAU,CAAChB,QAAQ,CAACvL,cAAc;QAC3D6D,OAAO,EAAE0I,UAAU,CAAC1I;OACvB;MACD,IAAI,CAACmD,YAAY,GAAG,CAACwF,mBAAmB,EAAE,GAAG,IAAI,CAACxF,YAAY,CAAC,CAAC,CAAC;MACjE,IAAI,CAACK,UAAU,GAAG,IAAIvJ,uEAAkB,CAAC,IAAI,CAACkJ,YAAY,CAAC,CAAC,CAAC;MAE7D;MACA,IAAI,IAAI,CAACA,YAAY,CAACC,MAAM,IAAI,CAAC,EAAE;QAC/B,IAAI,CAACV,IAAI,CAAC/D,GAAG,CAAC,aAAa,CAAC,CAACgJ,OAAO,EAAE;;MAG1C;MACA,IAAI,CAACa,oBAAoB,EAAE;MAE3B,IAAI,CAAC9M,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC;MACxC,IAAI,CAAC+I,KAAK,CAACqE,OAAO,CAAC,4BAA4B,CAAC;;EAExD;EAEA;;;;;;EAMAvI,gBAAgBA,CAACmH,QAAQ;IACrB,IAAI,CAACvE,YAAY,GAAG,IAAI,CAACA,YAAY,CAAC4F,MAAM,CAAEC,IAAI,IAAI;MAAG,OAAOA,IAAI,KAAKtB,QAAQ;IAAC,CAAC,CAAC;IACpF,IAAI,CAAClE,UAAU,GAAG,IAAIvJ,uEAAkB,CAAC,IAAI,CAACkJ,YAAY,CAAC;IAE3D,IAAI,IAAI,CAACA,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;MAChC,IAAI,CAACV,IAAI,CAAC/D,GAAG,CAAC,aAAa,CAAC,CAACiJ,MAAM,EAAE;;IAGzC,IAAI,CAACnD,KAAK,CAACqE,OAAO,CAAC,8BAA8B,CAAC;EACtD;EAEA;;;;EAIA3L,aAAaA,CAACH,MAAM,EAAEiM,IAAK;IACvB,IAAIjM,MAAM,CAACsJ,UAAU,EAAE;MACnB,IAAI,CAAC/H,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACiJ,MAAM,EAAE;MACtD,IAAI,CAACsB,4BAA4B,CAAClM,MAAM,CAACsJ,UAAU,CAAC;MAEpD;MACA;MACA6C,UAAU,CAAC,MAAK;QACZ,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,8BAA8B,CAAqB;QAChGF,aAAa,EAAEG,KAAK,EAAE;MAC1B,CAAC,EAAE,CAAC,CAAC;;IAGT,IAAIvM,MAAM,IAAIiM,IAAI,KAAK,gBAAgB,EAAE;MACrCjM,MAAM,CAACwM,cAAc,EAAE;MAEvB;MACA;MACAL,UAAU,CAAC,MAAK;QACZ,MAAMM,YAAY,GAAGJ,QAAQ,CAACC,aAAa,CAAC,6BAA6B,CAAqB;QAC9FG,YAAY,EAAEF,KAAK,EAAE;MACzB,CAAC,EAAE,CAAC,CAAC;;EAEb;EAEA;;;EAGA7N,gBAAgBA,CAACgO,KAAK;IAElB,IAAI,IAAI,CAAChH,IAAI,CAAC/D,GAAG,CAAC+K,KAAK,CAAC,EAAE;MACtB,IAAI,CAAChH,IAAI,CAAC/D,GAAG,CAAC+K,KAAK,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;MACjC,IAAI,CAACxM,aAAa,CAACuM,KAAK,EAAE,OAAO,CAAC;;IAGtC,IAAIA,KAAK,KAAK,UAAU,EAAE;MACtB,IAAI,CAACnL,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACgJ,OAAO,EAAE;MACvD,IAAI,CAACpJ,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;MAC1D,IAAI,CAACpL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;MACtD,IAAI,CAACpL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;;IAG1D,IAAID,KAAK,KAAK,eAAe,EAAE;MAC3B,IAAI,CAACnL,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;MAC1D,IAAI,CAACpL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;MACtD,IAAI,CAACpL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;MACtD,IAAI,CAACpL,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;;EAE7D;EAEAxL,QAAQA,CAACnB,MAAsB;IAC3B,IAAIA,MAAM,EAAE4M,GAAG,KAAK,OAAO,EAAE;MACzB5M,MAAM,CAACwM,cAAc,EAAE;;IAG3B,IAAI,IAAI,CAACjL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK,IAAI,CAAC,EAAE;MACtD,OAAO,IAAI,CAAC6F,KAAK,CAACoF,OAAO,CAAC,8CAA8C,CAAC;;IAG7E,IAAI,CAAC,IAAI,CAACtL,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACC,KAAK,IAAI,CAAC,IAAI,CAACL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK,IAAI,CAAC,IAAI,CAACL,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK,IAAI,CAAC,IAAI,CAACL,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,CAACC,KAAK,EAAE;MACjN,OAAO,IAAI,CAAC6F,KAAK,CAACoF,OAAO,CAAC,8DAA8D,CAAC;;IAG7F,IAAI,CAAC,IAAI,CAACtL,oBAAoB,CAACuL,KAAK,EAAE;MAClC,OAAO,IAAI,CAACrF,KAAK,CAACsF,KAAK,CAAC,2BAA2B,CAAC;KACvD,MAAM;MACH,IAAIC,gBAAgB,GAAG,IAAI,CAAC7G,YAAY,CAAC8G,IAAI,CAACvB,UAAU,IAAIA,UAAU,CAAChB,QAAQ,KAAK,IAAI,CAACnJ,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK,CAAC0H,UAAU,IAAIoC,UAAU,CAAC7L,cAAc,KAAK,IAAI,CAAC0B,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACC,KAAK,CAAC;MACpO,IAAIoL,gBAAgB,EAAE;QAClB,IAAI,CAACzL,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACgL,QAAQ,CAAC,EAAE,CAAC;QAC1D,OAAO,IAAI,CAAClF,KAAK,CAACoF,OAAO,CAAC,mEAAmE,CAAC;;MAGlG,IAAIvB,YAAY,GAAG,IAAI,CAACpJ,kBAAkB,CAAC+K,IAAI,CAACpM,EAAE,IAAIA,EAAE,CAAChB,cAAc,KAAK,IAAI,CAAC0B,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;MAElI,IAAI8I,QAAQ,GAAG;QACXA,QAAQ,EAAE,IAAI,CAACnJ,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;QACzDgK,aAAa,EAAE,IAAI,CAACrK,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACC,KAAK;QAClEiB,QAAQ,EAAE,IAAI,CAACtB,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACC,KAAK;QACzDoB,OAAO,EAAE,IAAI,CAACzB,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,CAACC,KAAK;QACvDiK,wBAAwB,EAAEP,YAAY,CAACxL;OAC1C;MAED,IAAI,CAAC2L,aAAa,CAACf,QAAQ,CAAC;;IAGhC;IACA,IAAI,CAACnJ,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACuL,KAAK,CAAC;MAAEtL,KAAK,EAAE;IAAE,CAAE,CAAC;IAC9D,MAAMuL,aAAa,GAAGd,QAAQ,CAACC,aAAa,CAAC,8BAA8B,CAAqB;IAChGa,aAAa,EAAEZ,KAAK,EAAE;EAC1B;EAEArF,QAAQA,CAAA;IACJ;IACA,IAAI,CAAC,IAAI,CAACN,yBAAyB,EAAE,EAAE;MACnC,OAAO,IAAI,CAACa,KAAK,CAACsF,KAAK,CAAC,6CAA6C,IAAI,CAACjG,WAAW,cAAc,CAAC;;IAGxG,IAAI,CAAC,IAAI,CAACpB,IAAI,CAACoH,KAAK,EAAE;MAClB,OAAO,IAAI,CAACrF,KAAK,CAACsF,KAAK,CAAC,6BAA6B,CAAC;KACzD,MAAM;MACH;MACA,MAAMK,sBAAsB,GAAG,IAAI,CAAC1H,IAAI,CAAC/D,GAAG,CAAC,WAAW,CAAC,CAACC,KAAK;MAC/D,MAAMyL,gBAAgB,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC1C,SAAS,IAAIA,SAAS,CAAC2C,MAAM,KAAKJ,sBAAsB,CAACI,MAAM,CAAC;MAE/G,IAAI,CAACH,gBAAgB,EAAE;QACnB,OAAO,IAAI,CAAC5F,KAAK,CAACoF,OAAO,CAAC,iFAAiF,CAAC;;MAGhH,IAAIY,KAAK,GAAG,IAAI,CAACtH,YAAY,CAAC3J,GAAG,CAACkR,MAAM,KAAK;QACzChD,QAAQ,EAAEgD,MAAM,CAAChD,QAAQ;QACzB7H,QAAQ,EAAE6K,MAAM,CAAC7K,QAAQ;QACzBhC,EAAE,EAAE6M,MAAM,CAAC7N,cAAc;QACzBmD,OAAO,EAAE0K,MAAM,CAAC1K;OACnB,CAAC,CAAC;MAEH,IAAIyK,KAAK,CAACrH,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,IAAI,CAACqB,KAAK,CAACoF,OAAO,CAAC,8CAA8C,CAAC;;MAG7E;MACA,MAAM1B,WAAW,GAAG,IAAI,CAACzF,IAAI,CAAC/D,GAAG,CAAC,aAAa,CAAC,CAACC,KAAK;MACtD,MAAM+L,iBAAiB,GAAGxC,WAAW,GAAGA,WAAW,CAACyC,QAAQ,EAAE,GAAG,EAAE;MAEnE,MAAMC,OAAO,GAAG;QACZC,YAAY,EAAE;UACV3D,KAAK,EAAE,IAAI,CAACzE,IAAI,CAAC/D,GAAG,CAAC,OAAO,CAAC,CAACC,KAAK;UACnCmM,OAAO,EAAE,IAAI,CAACzF,IAAI,CAAC0F,EAAE;UACrBnD,SAAS,EAAE,IAAI,CAACnF,IAAI,CAAC/D,GAAG,CAAC,WAAW,CAAC,CAACC,KAAK,CAAC4L,MAAM;UAClDnC,GAAG,EAAE,IAAI,CAAC3F,IAAI,CAAC/D,GAAG,CAAC,KAAK,CAAC,CAACC,KAAK;UAC/BoJ,aAAa,EAAE,IAAI,CAACtF,IAAI,CAAC/D,GAAG,CAAC,eAAe,CAAC,CAACC,KAAK;UACnDuJ,WAAW,EAAEwC;SAChB;QACDF,KAAK,EAAEA;OACV;MAED,IAAI,IAAI,CAAClH,eAAe,EAAE+D,MAAM,EAAE;QAC9B,IAAI,CAAChD,uBAAuB,CAAC2G,mBAAmB,CAACJ,OAAO,EAAE,IAAI,CAACtH,eAAe,CAAC+D,MAAM,CAAC,CACjFxB,SAAS,CAAC;UACPc,IAAI,EAAGlD,IAAI,IAAI;YACX,IAAIA,IAAI,EAAE;cACN,IAAI,CAACuB,mBAAmB,CAACiG,IAAI,EAAE;cAC/B,IAAI,CAACxG,SAAS,CAACyG,KAAK,CAACzH,IAAI,CAAC;;UAElC;SACH,CAAC;OACT,MAAM;QACH,IAAI,CAACY,uBAAuB,CAAC8G,iBAAiB,CAACP,OAAO,CAAC,CAClD/E,SAAS,CAAC;UACPc,IAAI,EAAGlD,IAAI,IAAI;YACX,IAAIA,IAAI,EAAE;cACN,IAAI,CAACsB,kBAAkB,CAACkG,IAAI,EAAE;cAC9B,IAAI,CAACxG,SAAS,CAACyG,KAAK,CAACzH,IAAI,CAAC;;UAElC;SACH,CAAC;;;EAGlB;EAEA2H,WAAWA,CAAA;IACP,IAAI,CAAC3G,SAAS,CAACyG,KAAK,CAAC,KAAK,CAAC;EAC/B;EAEA;EAEA;;;EAGA3N,gBAAgBA,CAAA;IACZ,IAAI,CAACmH,OAAO,CAAC2G,IAAI,CAACnR,+FAAiB,EAAE;MACjCoR,UAAU,EAAE;KACf,CAAC,CAACC,iBAAiB,CAACC,UAAU,CAAC3F,SAAS,CAAE4F,IAAI,IAAI;MAE/C,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACtI,MAAM,KAAK,CAAC,EAAE;QAC5B,OAAO,IAAI,CAACqB,KAAK,CAACsF,KAAK,CAAC,4BAA4B,CAAC;;MAGzD,IAAI4B,WAAW,GAAGpG,IAAI,CAACC,KAAK,CAACkG,IAAI,CAAC,CAAC,CAAC;MAEpC,MAAMpF,UAAU,GAAGsF,QAAQ,CAACD,WAAW,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC;MAC1D,IAAI,CAACrH,uBAAuB,CAACkC,YAAY,CAACF,UAAU,EAAE,IAAI,CAAC,CAACR,SAAS,CAACW,QAAQ,IAAG;QAC7E,IAAIA,QAAQ,EAAEC,IAAI,EAAEtD,MAAM,GAAG,CAAC,EAAE;UAC5B,MAAMsE,QAAQ,GAAGjB,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;UACjC,IAAI,CAACnI,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAACgL,QAAQ,CAACjC,QAAQ,CAAC;SAC/D,MAAM;UACH,OAAO,IAAI,CAACjD,KAAK,CAACsF,KAAK,CAAC,0CAA0C,CAAC;;MAE3E,CAAC,EAAEA,KAAK,IAAG;QACP8B,OAAO,CAAC9B,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEA;EAEA;;;;;EAKA5D,KAAKA,CAAA;IACD,IAAI,IAAI,CAAC5C,eAAe,EAAE+D,MAAM,EAAE;MAC9B,IAAI,CAACwE,cAAc,CAAC,IAAI,CAAC;KAC5B,MAAM;MACH,IAAI,CAACA,cAAc,EAAE;;EAE7B;EAEMA,cAAcA,CAACC,MAAO;IAAA,IAAAC,KAAA;IAAA,OAAAC,kIAAA;MACxB,MAAMC,WAAW,SAAS3S,qDAAc,CAACyS,KAAI,CAAC1H,uBAAuB,CAACwH,cAAc,CAACC,MAAM,CAAC,CAAC;MAC7F,IAAII,OAAO;QAAA,IAAAC,IAAA,GAAAH,kIAAA,CAAC,WAAOI,OAAO,EAAI;UAC1BL,KAAI,CAAC1B,WAAW,GAAG4B,WAAW,CAACxF,IAAI;UACnCsF,KAAI,CAAC/I,mBAAmB,GAAG+I,KAAI,CAACtJ,IAAI,CAAC/D,GAAG,CAAC,WAAW,CAAC,CAAC0H,YAAY,CAACR,IAAI,CACnEpM,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAAEoF,KAAK,IAAKoN,KAAI,CAACM,kBAAkB,CAAC1N,KAAK,CAAC,CAAC,CACjD;UAED,IAAIoN,KAAI,CAACzI,eAAe,IAAIyI,KAAI,CAAC1B,WAAW,EAAE;YAC1C,MAAMzC,SAAS,GAAGmE,KAAI,CAAC1B,WAAW,CAACvB,MAAM,CAACwD,QAAQ,IAAIA,QAAQ,CAAC/B,MAAM,IAAIwB,KAAI,CAACzI,eAAe,CAACsE,SAAS,CAAC;YACxGmE,KAAI,CAACtJ,IAAI,CAAC/D,GAAG,CAAC,WAAW,CAAC,CAACgL,QAAQ,CAAC9B,SAAS,CAAC,CAAC,CAAC,CAAC;;UAGrD;UACAmE,KAAI,CAAClH,cAAc,GAAG,KAAK;UAC3BuH,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC;QAAA,iBAAAG,EAAA;UAAA,OAAAJ,IAAA,CAAAK,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEQJ,kBAAkBA,CAACzE,SAAqB;IAC5C,MAAM8E,WAAW,GAAG9E,SAAS,CAAC+C,QAAQ,EAAE,CAACgC,WAAW,EAAE;IACtD,OAAO,IAAI,CAACtC,WAAW,CAACvB,MAAM,CAAClB,SAAS,IAAIA,SAAS,CAAC3M,WAAW,CAAC0R,WAAW,EAAE,CAACC,QAAQ,CAACF,WAAW,CAAC,CAAC;EAC1G;EAEA5J,gBAAgBA,CAACgJ,MAAM;IACnB,OAAOA,MAAM,GAAGA,MAAM,CAAC7Q,WAAW,GAAG,EAAE;EAC3C;EAGMmM,QAAQA,CAACyF,aAAa;IAAA,IAAAC,MAAA;IAAA,OAAAd,kIAAA;MACxB,OAAO,IAAIE,OAAO;QAAA,IAAAa,KAAA,GAAAf,kIAAA,CAAC,WAAOI,OAAO,EAAI;UACjC,MAAM5B,KAAK,SAASlR,qDAAc,CAACwT,MAAI,CAACzI,uBAAuB,CAAC+C,QAAQ,CAACyF,aAAa,CAAC,CAAC;UACxFC,MAAI,CAAC5J,YAAY,GAAGsH,KAAK,CAAC/D,IAAI;UAC9B2F,OAAO,CAACU,MAAI,CAAC5J,YAAY,CAAC;QAC9B,CAAC;QAAA,iBAAA8J,GAAA;UAAA,OAAAD,KAAA,CAAAP,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEMlG,YAAYA,CAAA;IAAA,IAAA0G,MAAA;IAAA,OAAAjB,kIAAA;MACd,MAAMkB,SAAS,SAAS5T,qDAAc,CAAC2T,MAAI,CAAC5I,uBAAuB,CAACkC,YAAY,EAAE,CAAC;MACnF,IAAI2F,OAAO;QAAA,IAAAiB,KAAA,GAAAnB,kIAAA,CAAC,WAAOI,OAAO,EAAI;UAC1Ba,MAAI,CAACC,SAAS,GAAGA,SAAS,CAACE,MAAM;UACjCH,MAAI,CAAChI,cAAc,GAAGgI,MAAI,CAACC,SAAS;UACpCD,MAAI,CAACxO,iBAAiB,GAAGwO,MAAI,CAAC3O,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC0H,YAAY,CAACR,IAAI,CAChFpM,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAAEoF,KAAK,IAAKsO,MAAI,CAACI,gBAAgB,CAAC1O,KAAK,CAAC,CAAC,CAC/C;UACDyN,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC;QAAA,iBAAAkB,GAAA;UAAA,OAAAH,KAAA,CAAAX,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAC;EACP;EAEMxD,4BAA4BA,CAAC5C,UAAU;IAAA,IAAAkH,MAAA;IAAA,OAAAvB,kIAAA;MACzC,MAAMwB,gBAAgB,SAASlU,qDAAc,CAACiU,MAAI,CAAClJ,uBAAuB,CAAC4E,4BAA4B,CAAC5C,UAAU,CAAC,CAAC;MACpH,IAAI6F,OAAO;QAAA,IAAAuB,KAAA,GAAAzB,kIAAA,CAAC,WAAOI,OAAO,EAAI;UAC1B,IAAI3P,OAAO,CAAC,CAAC;UACb8Q,MAAI,CAACtO,kBAAkB,GAAGuO,gBAAgB,CAAC/G,IAAI,CAACiH,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,MAAM,GAAGD,CAAC,CAACC,MAAM,CAAC,CAACtU,GAAG,CAACuU,MAAM,IAAG;YAC7F;YACAA,MAAM,CAACD,MAAM,GAAGE,UAAU,CAACD,MAAM,CAACD,MAAM,CAAC;YAEzC;YACA,IAAIC,MAAM,CAACD,MAAM,KAAK,CAAC,EAAE;cACrBpR,OAAO,GAAGqR,MAAM,CAAClQ,EAAE,CAACzB,WAAW;;YAGnC,OAAO;cAAES,cAAc,EAAEkR,MAAM,CAAClR,cAAc;cAAEC,cAAc,EAAEiR,MAAM,CAAClQ,EAAE,CAACzB,WAAW;cAAEK,SAAS,EAAEsR,MAAM,CAACD,MAAM;cAAEpR,OAAO,EAAEA;YAAO,CAAE;UACvI,CAAC,CAAC;UAEF;UACA,IAAI8Q,MAAI,CAACtO,kBAAkB,CAACkE,MAAM,GAAG,CAAC,EAAE;YACpCoK,MAAI,CAACjP,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAACgL,QAAQ,CAAC6D,MAAI,CAACtO,kBAAkB,CAAC,CAAC,CAAC,CAACrC,cAAc,CAAC;YACjG2Q,MAAI,CAACrQ,aAAa,CAAC;cAAEU,EAAE,EAAE2P,MAAI,CAACtO,kBAAkB,CAAC,CAAC,CAAC,CAACrC;YAAc,CAAE,CAAC;;UAEzEwP,OAAO,CAAC,IAAI,CAAC;QACjB,CAAC;QAAA,iBAAA4B,GAAA;UAAA,OAAAP,KAAA,CAAAjB,KAAA,OAAAC,SAAA;QAAA;MAAA,IAAC;IAAA;EACN;EAEA;EAEA;;;;;EAKQY,gBAAgBA,CAAC1O,KAAa;IAClC,MAAM+N,WAAW,GAAG/N,KAAK,CAACgM,QAAQ,EAAE,CAACgC,WAAW,EAAE;IAClD,OAAO,IAAI,CAAC1H,cAAc,CAAC6D,MAAM,CAACrB,QAAQ,IAAG;MACzC,MAAMvL,cAAc,GAAGuL,QAAQ,CAACvL,cAAc,CAACyO,QAAQ,EAAE,CAACgC,WAAW,EAAE,CAACC,QAAQ,CAACF,WAAW,CAAC;MAC7F,MAAMvQ,WAAW,GAAGsL,QAAQ,CAACtL,WAAW,CAACwO,QAAQ,EAAE,CAACgC,WAAW,EAAE,CAACC,QAAQ,CAACF,WAAW,CAAC;MACvF,OAAOxQ,cAAc,IAAIC,WAAW;IACxC,CAAC,CAAC;EACN;EAEA;EAEA;;;;;EAKAqC,eAAeA,CAACiJ,QAAmB;IAC/B,OAAOA,QAAQ,EAAEpB,UAAU,GAAG,GAAGoB,QAAQ,CAACvL,cAAc,MAAMuL,QAAQ,CAACtL,WAAW,EAAE,GAAG,EAAE;EAC7F;EAEA;EAEA;;;EAGAyH,iBAAiBA,CAAA;IACb,MAAMmE,aAAa,GAAG,IAAI,CAACtF,IAAI,CAAC/D,GAAG,CAAC,eAAe,CAAC,CAACC,KAAK;IAC1D,OAAOoJ,aAAa,GAAGA,aAAa,CAAC5E,MAAM,GAAG,CAAC;EACnD;EAEA;;;EAGAQ,yBAAyBA,CAAA;IACrB,OAAO,IAAI,CAACC,iBAAiB,EAAE,IAAI,IAAI,CAACC,WAAW;EACvD;EAEAoK,YAAYA,CAAC/G,KAAa;IACtB;IACA,MAAMgH,MAAM,GAAGhH,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAC/B,IAAI+G,MAAM,CAAC/K,MAAM,KAAK,CAAC,EAAE;MACrB,MAAM8D,IAAI,GAAGiH,MAAM,CAAC,CAAC,CAAC;MACtB,MAAMlH,GAAG,GAAGkH,MAAM,CAAC,CAAC,CAAC;MACrB,MAAMnH,GAAG,GAAGmH,MAAM,CAAC,CAAC,CAAC;MACrB,MAAMC,EAAE,GAAG,IAAIzI,IAAI,CAAC0I,MAAM,CAACnH,IAAI,CAAC,EAAEmH,MAAM,CAACpH,GAAG,CAAC,EAAEoH,MAAM,CAACrH,GAAG,CAAC,CAAC;MAC3D,OAAOoH,EAAE;KACZ,MAAM;MACH;MACA,OAAO,gBAAgB;;EAE/B;EAEA;;;EAGA5F,oBAAoBA,CAAA;IAChB,IAAI,IAAI,CAACrF,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;MAChC;MACA,IAAI,CAAC7E,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC2P,aAAa,CAACpV,gEAAmB,CAAC;MAC5E,IAAI,CAACqF,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC2P,aAAa,CAAC,CAACpV,gEAAmB,EAAEA,2DAAc,CAAC,CAAC,CAAC,CAAC,CAAC;MACjG,IAAI,CAACqF,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAAC2P,aAAa,CAACpV,gEAAmB,CAAC;MAChF,IAAI,CAACqF,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,CAAC2P,aAAa,CAACpV,gEAAmB,CAAC;KAC9E,MAAM;MACH;MACA,IAAI,CAACqF,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC4P,eAAe,EAAE;MAC3D,IAAI,CAAChQ,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC2P,aAAa,CAACpV,2DAAc,CAAC,CAAC,CAAC,CAAC;MAC1E,IAAI,CAACqF,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAAC4P,eAAe,EAAE;MAC/D,IAAI,CAAChQ,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,CAAC4P,eAAe,EAAE;;IAG9D;IACA,IAAI,CAAChQ,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC6P,sBAAsB,EAAE;IAClE,IAAI,CAACjQ,oBAAoB,CAACI,GAAG,CAAC,UAAU,CAAC,CAAC6P,sBAAsB,EAAE;IAClE,IAAI,CAACjQ,oBAAoB,CAACI,GAAG,CAAC,cAAc,CAAC,CAAC6P,sBAAsB,EAAE;IACtE,IAAI,CAACjQ,oBAAoB,CAACI,GAAG,CAAC,SAAS,CAAC,CAAC6P,sBAAsB,EAAE;EACrE;EAEA;;;;EAIAlN,WAAWA,CAACqL,WAAmB;IAC3B,IAAI,CAACnJ,UAAU,CAACuF,MAAM,GAAG4D,WAAW,CAAC8B,IAAI,EAAE,CAAC7B,WAAW,EAAE;EAC7D;;AA9lBSxI,aAAa;mBAAbA,aAAa,EAAAhK,+DAAA,CAAAuU,sFAAA,GAAAvU,+DAAA,CAAAyU,+EAAA,GAAAzU,+DAAA,CAyCVL,sEAAe,GAAAK,+DAAA,CAAA2U,sDAAA,GAAA3U,+DAAA,CAAA6U,iFAAA,GAAA7U,+DAAA,CAAA+U,mEAAA,GAAA/U,+DAAA,CAAA+U,gEAAA;AAAA;AAzClB/K,aAAa;QAAbA,aAAa;EAAAkL,SAAA;EAAAC,OAAA;IAAAvK,kBAAA;IAAAC,mBAAA;EAAA;EAAAuK,QAAA,GAAApV,gEAAA,CAFX,CAAC;IAAEsV,OAAO,EAAE1V,qEAAgB;IAAE2V,QAAQ,EAAEzV,0EAAeA;EAAA,CAAE,CAAC;EAAA0V,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCrBzE7V,4DAAA,aACyT;MAGtQA,oDAAA,GAAS;MAAAA,0DAAA,EAAO;MAC3DA,4DAAA,UAAK;MACuBA,wDAAA,mBAAA+V,+CAAA;QAAA,OAASD,GAAA,CAAA7E,WAAA,EAAa;MAAA,EAAC;MAC3CjR,4DAAA,kBAA6B;MAAAA,oDAAA,YAAK;MAAAA,0DAAA,EAAW;MAMzDA,wDAAA,IAAAgW,0CAAA,+BAA8D;MAG9DhW,wDAAA,IAAAiW,mCAAA,wBAGa;MAEbjW,wDAAA,KAAAkW,8BAAA,oBAsNO;MACPlW,wDAAA,KAAAmW,6BAAA,iBAOM;MACVnW,0DAAA,EAAM;;;MAlPGA,uDAAA,GAA6C;MAA7CA,wDAAA,CAAA8V,GAAA,CAAApR,cAAA,QAAAoR,GAAA,CAAAnR,aAAA,CAA6C;MAAC3E,yDAAA,qBAAA8V,GAAA,CAAApR,cAAA,OAAgD;MAEpD1E,uDAAA,GAAS;MAATA,+DAAA,CAAA8V,GAAA,CAAA7K,KAAA,CAAS;MASpCjL,uDAAA,GAAoB;MAApBA,wDAAA,SAAA8V,GAAA,CAAApL,cAAA,CAAoB;MAIiB1K,uDAAA,GAAe;MAAfA,wDAAA,SAAA8V,GAAA,CAAArV,SAAA,CAAe;MAIjET,uDAAA,GAAqB;MAArBA,wDAAA,UAAA8V,GAAA,CAAApL,cAAA,CAAqB;MAuNtB1K,uDAAA,GAAgD;MAAhDA,wDAAA,WAAA8V,GAAA,CAAAxM,IAAA,kBAAAwM,GAAA,CAAAxM,IAAA,CAAAhD,WAAA,MAAAwP,GAAA,CAAApL,cAAA,CAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;AC1OH;AACP;;;;AAKhD,MACa8J,sBAAsB;EAC/BvK,YAAoBqM,IAAgB,EAAUC,YAAyB;IAAnD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;EAAiB;EAC3E;;;EAGAC,kBAAkBA,CAACjD,IAAU;IACzB,IAAIkD,CAAC,GAAG,GAAG;IACXA,CAAC,IAAIlD,IAAI,IAAI,MAAM,GAAG,mBAAmB,GAAG,kBAAkB;IAC9D,IAAImD,OAAO,GAAG,IAAI3X,yCAAO,EAAO;IAEhC,IAAI,CAACuX,IAAI,CAAC/R,GAAG,CAAa,GAAG8R,8FAAwC,GAAGI,CAAC,EAAE,CAAC,CACvE/K,SAAS,CAAEmL,IAAS,IAAI;MACrB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK,EACtCL,OAAO,CAAClK,IAAI,CAAC;QACT,MAAM,EAAEqK,IAAI,CAAC5D;QACb;QACA;OACH,CAAC;IACV,CAAC,CAAC;;IACN,OAAOyD,OAAO,CAACM,YAAY,EAAE;EACjC;EAEA;;;;;EAKAhG,iBAAiBA,CAAC7H,eAAoB;IAClC,OAAO,IAAI,CAACmN,IAAI,CAACW,IAAI,CAAM,GAAGZ,8FAAwC,EAAE,EAAElN,eAAe,CAAC;EAC9F;EAEA;;;;;EAKA0H,mBAAmBA,CAAC1H,eAAoB,EAAEuJ,aAAqB;IAC3D,OAAO,IAAI,CAAC4D,IAAI,CAACc,GAAG,CAAM,GAAGf,8FAAwC,EAAE,GAAG,GAAG,GAAG3D,aAAa,EAAEvJ,eAAe,CAAC;EACnH;EAEA;;;;;EAKAkO,mBAAmBA,CAACnK,MAAc;IAC9B,OAAO,IAAI,CAACoJ,IAAI,CAACgB,MAAM,CAAiB,GAAGjB,8FAAwC,EAAE,GAAG,GAAG,GAAGnJ,MAAM,CAAC;EACzG;EAEAwE,cAAcA,CAACC,MAAO;IAClB,IAAI8E,CAAC,GAAG,mBAAmB;IAC3BA,CAAC,IAAI,CAAC9E,MAAM,GAAG,mBAAmB,GAAG,EAAE;IACvC,IAAI+E,OAAO,GAAG,IAAI3X,yCAAO,EAAO;IAChC,IAAI,CAACuX,IAAI,CAAC/R,GAAG,CAAa,GAAG8R,4FAAsC,GAAGI,CAAC,EAAE,CAAC,CACrE/K,SAAS,CAAEmL,IAAS,IAAI;MACrB;MACAH,OAAO,CAAClK,IAAI,CAAC;QACTF,IAAI,EAAEuK;OACT,CAAC;IACN,CAAC,CAAC;IACN,OAAOH,OAAO,CAACM,YAAY,EAAE;EACjC;EAEA5K,YAAYA,CAACF,UAAmB,EAAEC,UAAmB;IACjD,IAAIsK,CAAC,GAAG,mDAAmD;IAC3D,IAAIvK,UAAU,EAAE;MACZuK,CAAC,IAAI,uBAAuBvK,UAAU,EAAE;KAC3C,MAAM,IAAIC,UAAU,EAAE;MACnBsK,CAAC,IAAI,wCAAwCtK,UAAU,qCAAqCA,UAAU,EAAE;;IAG5G,IAAIuK,OAAO,GAAG,IAAI3X,yCAAO,EAAO;IAChC,IAAI,CAACuX,IAAI,CAAC/R,GAAG,CAAM,GAAG8R,iFAA2B,GAAGI,CAAC,EAAE,CAAC,CAAChL,IAAI,CACzDrM,yCAAG,CAAEyX,IAAI,IAAIA,IAAK,CAAC,CACtB,CAACnL,SAAS,CAAEmL,IAAS,IAAI;MACtB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK,EACtCL,OAAO,CAAClK,IAAI,CAAC;QACTF,IAAI,EAAEuK,IAAI,CAAC5D;OACd,CAAC;IACV,CAAC,CAAC;IACF,OAAOyD,OAAO,CAACM,YAAY,EAAE;EACjC;EAEAlI,4BAA4BA,CAAC5C,UAAU;IACnC,IAAIuK,CAAC,GAAG,uBAAuBvK,UAAU,EAAE;IAC3CuK,CAAC,IAAI,YAAY;IACjB,IAAIC,OAAO,GAAG,IAAI3X,yCAAO,EAAO;IAChC,IAAI,CAACuX,IAAI,CAAC/R,GAAG,CAAa,GAAG8R,+FAAyC,GAAGI,CAAC,EAAE,CAAC,CACxE/K,SAAS,CAAEmL,IAAS,IAAI;MACrB;MACAH,OAAO,CAAClK,IAAI,CAAC;QACTF,IAAI,EAAEuK,IAAI,CAAC5D;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOyD,OAAO,CAACM,YAAY,EAAE;EACjC;EAEA/J,QAAQA,CAACyF,aAAqB;IAC1B,IAAI+D,CAAC,GAAG,wBAAwB/D,aAAa,EAAE;IAC/C,IAAIgE,OAAO,GAAG,IAAI3X,yCAAO,EAAO;IAChC,IAAI,CAACuX,IAAI,CAAC/R,GAAG,CAAa,GAAG8R,oGAA8C,GAAGI,CAAC,EAAE,CAAC,CAC7E/K,SAAS,CAAEmL,IAAS,IAAI;MACrB,IAAI,CAACN,YAAY,CAACO,WAAW,GAAGD,IAAI,CAACE,KAAK;MAC1CL,OAAO,CAAClK,IAAI,CAAC;QACTF,IAAI,EAAEuK,IAAI,CAAC5D;OACd,CAAC;IACN,CAAC,CAAC;IACN,OAAOyD,OAAO,CAACM,YAAY,EAAE;EACjC;EAEA;;;;;EAKAU,oBAAoBA,CAAChF,aAAqB;IACtC,OAAO,IAAI,CAAC4D,IAAI,CAAC/R,GAAG,CAAiB,GAAG8R,sGAAgD,EAAE,GAAG3D,aAAa,CAAC;EAC/G;;AArHS8B,sBAAsB;mBAAtBA,sBAAsB,EAAAxU,sDAAA,CAAAuU,4DAAA,GAAAvU,sDAAA,CAAAyU,gEAAA;AAAA;AAAtBD,sBAAsB;SAAtBA,sBAAsB;EAAAuD,OAAA,EAAtBvD,sBAAsB,CAAAwD;AAAA","sources":["./src/app/modules/compras/ordenes-de-compra/components/save/save.component.ts","./src/app/modules/compras/ordenes-de-compra/components/save/save.component.html","./src/app/modules/compras/ordenes-de-compra/service/ordenes-de-compra.service.ts"],"sourcesContent":["import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IOrdenDeCompra } from '../../models/orden-de-compra';\r\nimport { OrdenesDeCompraService } from '../../service/ordenes-de-compra.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, distinctUntilChanged, finalize, firstValueFrom, map, startWith, switchMap, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-ordenes-de-compra',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    maxPalabras: number = 150;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    deposito_default = 0;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    // Particulares del modulo\r\n    soloLectura: boolean;\r\n    columns = ['codigointerno', 'articulo', 'unidadmedida', 'cantidad', 'importe', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    orden_de_compra: IOrdenDeCompra;\r\n    user: any;\r\n    articulos: IArticulo[];\r\n    articulos_list = [];\r\n    proveedores: IProveedor[];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    mov_art_list_deleted: any[] = [];\r\n    filteredProveedores: Observable<IProveedor[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n\r\n\r\n    constructor(\r\n        private _ordenesDeCompraService: OrdenesDeCompraService,\r\n        private _empresaService: EmpresaService,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.soloLectura = this.data?.soloLectura ?? false;\r\n        \r\n        if (this.data.model) {\r\n            this.orden_de_compra = this.data.model;\r\n            this.title = this.data.title;\r\n        } else if (this.data) {\r\n            this.orden_de_compra = this.data;\r\n            this.title = 'Editar orden de compra';\r\n        } else {\r\n            this.orden_de_compra = null;\r\n            this.title = 'Nuevo orden de compra';\r\n        }\r\n\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n\r\n        // Escuchamos los cambios en el control de 'articulo' para filtrar mientras escribe\r\n        this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n            debounceTime(300),  // Evita demasiadas llamadas consecutivas\r\n            distinctUntilChanged(), // Solo procede si el valor cambia\r\n            switchMap((value) => {\r\n                const idarticulo = typeof value === 'object' ? value.idarticulo : null;\r\n                const filterLike = typeof value === 'string' ? value : null;\r\n                return this._ordenesDeCompraService.getArticulos(idarticulo, filterLike);\r\n            })\r\n        ).subscribe(response => {\r\n            this.filteredArticulos = response.list;\r\n        });\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n\r\n        const [dia, mes, anio] = this.orden_de_compra ? this.orden_de_compra?.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.orden_de_compra) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.orden_de_compra.codigo).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        articulo: m.articulo,\r\n                        cantidad: m.cantidad,\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno_articulo: m.codigo_interno_articulo,\r\n                        importe: m.importe\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n                this.form.get('numero').disable();\r\n\r\n                if(this.soloLectura) {\r\n                    this.form.get('proveedor').disable();\r\n                    this.form.get('observaciones').disable();\r\n                    this.form.get('fecha').disable();\r\n                }\r\n\r\n                // Verifica el estado de habilitacion o deshabilitacion del control IVA, Presupuesto y Numero si contiene items o no\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('iva').disable();\r\n                    this.form.get('presupuesto').disable();\r\n                } else {\r\n                    this.form.get('iva').enable();\r\n                    this.form.get('presupuesto').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            proveedor: new FormControl((this.orden_de_compra ? this.orden_de_compra.proveedor : ''), Validators.required),\r\n            fecha: new FormControl((this.orden_de_compra?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            observaciones: new FormControl((this.orden_de_compra ? this.orden_de_compra.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n            numero: new FormControl((this.orden_de_compra ? this.orden_de_compra.numero : '')),\r\n            presupuesto: new FormControl((this.orden_de_compra ? this.orden_de_compra.pedido : '')),\r\n            iva: new FormControl((this.orden_de_compra ? this.orden_de_compra.iva : ''), Validators.required)\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), [Validators.required, Validators.min(1)]),\r\n            importe: new FormControl((''), Validators.required)\r\n        });\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var movimiento_articulo Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento(movimiento) {\r\n        if (movimiento) { //Si 'res' no es false | undefined | null, continua con la logica...\r\n            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                articulo: movimiento.articulo.idarticulo,\r\n                cantidad: movimiento.cantidad,\r\n                idunidadmedida: movimiento.unidad_medida,\r\n                descripcion_articulo: movimiento.articulo.descripcion,\r\n                descripcion_um: movimiento.unidadmedida_descripcion,\r\n                codigo_interno_articulo: movimiento.articulo.codigo_interno,\r\n                importe: movimiento.importe\r\n            }\r\n            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n            // Desabilito el campo IVA, Presupuesto y Numero\r\n            if (this.mov_art_list.length != 0) {\r\n                this.form.get('presupuesto').disable();\r\n            }\r\n\r\n            // Actualizar validaciones según el estado de la grilla\r\n            this.updateFormValidators()\r\n\r\n            this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n            this.alert.success(\"Artículo añadido con éxito\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param articulo \r\n     */\r\n    deleteMovimiento(articulo) {\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list)\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('presupuesto').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Esta funcion carga solamente las unidades de medida asociadas a un articulo en particular.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo);\r\n\r\n            // Muevo el foco al campo \"cantidad\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"cantidad\".\r\n            setTimeout(() => {\r\n                const cantidadField = document.querySelector('[formControlName=\"cantidad\"]') as HTMLInputElement;\r\n                cantidadField?.focus();\r\n            }, 1);\r\n        }\r\n\r\n        if ($event && info === 'cambio_de_foco') {\r\n            $event.preventDefault();\r\n\r\n            // Muevo el foco al campo \"importe\" luego de un pequeño retraso.\r\n            // Lo encapsulo dentro de `setTimeout` porque espero a que el DOM renderice el input \"importe\".\r\n            setTimeout(() => {\r\n                const importeField = document.querySelector('[formControlName=\"importe\"]') as HTMLInputElement;\r\n                importeField?.focus();\r\n            }, 1)\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('importe').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (this.form_carga_articulos.get('cantidad').value <= 0) {\r\n            return this.alert.warning('Por favor, Ingrese una cantidad mayor a cero');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value || !this.form_carga_articulos.get('importe').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Debe ingresar un Artículo');\r\n        } else {\r\n            let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.articulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n            if (existeMovimiento) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue('');\r\n                return this.alert.warning('Ya existe un movimiento de ese articulo con esa unidad de medida.')\r\n            }\r\n\r\n            let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n            let articulo = {\r\n                articulo: this.form_carga_articulos.get('articulo').value,\r\n                unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                cantidad: this.form_carga_articulos.get('cantidad').value,\r\n                importe: this.form_carga_articulos.get('importe').value,\r\n                unidadmedida_descripcion: unidadmedida.descripcion_um\r\n            }\r\n\r\n            this.addMovimiento(articulo)\r\n        }\r\n\r\n        // Mueve el foco al campo \"articulo\" después de la carga\r\n        this.form_carga_articulos.get('articulo').reset({ value: '' });\r\n        const articuloField = document.querySelector('[formControlName=\"articulo\"]') as HTMLInputElement;\r\n        articuloField?.focus();\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            // Verificar si el proveedor seleccionado está en la lista de proveedores\r\n            const proveedor_seleccionado = this.form.get('proveedor').value;\r\n            const proveedor_existe = this.proveedores.some(proveedor => proveedor.Codigo === proveedor_seleccionado.Codigo);\r\n\r\n            if (!proveedor_existe) {\r\n                return this.alert.warning('El proveedor seleccionado no existe. Por favor, seleccione un proveedor válido.');\r\n            }\r\n\r\n            let items = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                articulo: objeto.articulo,\r\n                cantidad: objeto.cantidad,\r\n                um: objeto.idunidadmedida,\r\n                importe: objeto.importe\r\n            }))\r\n\r\n            if (items.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n            // Convierto el presupuesto que viene como Numero a String\r\n            const presupuesto = this.form.get('presupuesto').value;\r\n            const presupuestoString = presupuesto ? presupuesto.toString() : '';\r\n\r\n            const payload = {\r\n                orden_compra: {\r\n                    fecha: this.form.get('fecha').value,\r\n                    usuario: this.user.id,\r\n                    proveedor: this.form.get('proveedor').value.Codigo,\r\n                    iva: this.form.get('iva').value,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                    presupuesto: presupuestoString\r\n                },\r\n                items: items\r\n            }\r\n\r\n            if (this.orden_de_compra?.codigo) {\r\n                this._ordenesDeCompraService.updateOrdenDeCompra(payload, this.orden_de_compra.codigo)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._ordenesDeCompraService.saveOrdenDeCompra(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n    * Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n    */\r\n    etiquetaArticulo() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._ordenesDeCompraService.getArticulos(idarticulo, null).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.orden_de_compra?.codigo) {\r\n            this.getProveedores(true);\r\n        } else {\r\n            this.getProveedores();\r\n        }\r\n    }\r\n\r\n    async getProveedores(option?) {\r\n        const Proveedores = await firstValueFrom(this._ordenesDeCompraService.getProveedores(option));\r\n        new Promise(async (resolve) => {\r\n            this.proveedores = Proveedores.list;\r\n            this.filteredProveedores = this.form.get('proveedor').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterProveedores(value)),\r\n            );\r\n\r\n            if (this.orden_de_compra && this.proveedores) {\r\n                const proveedor = this.proveedores.filter(provedor => provedor.Codigo == this.orden_de_compra.proveedor);\r\n                this.form.get('proveedor').setValue(proveedor[0]);\r\n            }\r\n\r\n            // Oculto el spinner\r\n            this.mostrarSpinner = false;\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterProveedores(proveedor: IProveedor): IProveedor[] {\r\n        const filterValue = proveedor.toString().toLowerCase();\r\n        return this.proveedores.filter(proveedor => proveedor.RazonSocial.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextProveedor(option) {\r\n        return option ? option.RazonSocial : '';\r\n    }\r\n\r\n\r\n    async getItems(idordencompra): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._ordenesDeCompraService.getItems(idordencompra))\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    async getArticulos() {\r\n        const articulos = await firstValueFrom(this._ordenesDeCompraService.getArticulos());\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos.result;\r\n            this.articulos_list = this.articulos;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    async getUnidadesDeMedidaArticulos(idarticulo) {\r\n        const unidadesDeMedida = await firstValueFrom(this._ordenesDeCompraService.getUnidadesDeMedidaArticulos(idarticulo));\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = unidadesDeMedida.list.sort((a, b) => a.factor - b.factor).map(unidad => {\r\n                //Convierto en numero\r\n                unidad.factor = parseFloat(unidad.factor);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (unidad.factor === 1) {\r\n                    um_base = unidad.um.descripcion;\r\n                }\r\n\r\n                return { idunidadmedida: unidad.idunidadmedida, descripcion_um: unidad.um.descripcion, factor_um: unidad.factor, um_base: um_base }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    // ################# Metodos para obtener textos de input #################\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo?.idarticulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    cambiarFecha(fecha: string) {\r\n        // Supongamos que la fecha está en el formato 'DD-MM-YYYY'\r\n        const partes = fecha.split('/');\r\n        if (partes.length === 3) {\r\n            const anio = partes[0];\r\n            const mes = partes[1];\r\n            const dia = partes[2];\r\n            const fh = new Date(Number(anio), Number(mes), Number(dia))\r\n            return fh;\r\n        } else {\r\n            // Manejar el caso en que la cadena no tiene el formato esperado\r\n            return 'Fecha inválida';\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n    */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators([Validators.required, Validators.min(1)]);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('importe').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.min(1));\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos.get('importe').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('importe').updateValueAndValidity();\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl xl:max-h-[950px] xl:min-h-[850px] sm:max-h-[630px] sm:min-h-[500px] overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n\r\n            <!-- Datos de cabecera -->\r\n            <div class=\"flex gap-4 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\"\r\n                        [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Proveedor</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"proveedor\" [matAutocomplete]=\"auto\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('proveedor').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getTextProveedor\">\r\n                        <mat-option *ngFor=\"let proveedor of filteredProveedores | async\" [value]=\"proveedor\">\r\n                            {{ proveedor.RazonSocial}}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('proveedor')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('proveedor').value && !soloLectura\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\">\r\n                    <mat-label>IVA %</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"iva\" [matAutocomplete]=\"iva\">\r\n                    <button mat-icon-button matSuffix type=\"button\" class=\"mr-2\" *ngIf=\"!form.get('iva').value\">\r\n                        <mat-icon>arrow_drop_down</mat-icon>\r\n                    </button>\r\n                    <mat-autocomplete autoActiveFirstOption #iva=\"matAutocomplete\">\r\n                        <mat-option [value]=\"'10.5'\">10.5%</mat-option>\r\n                        <mat-option [value]=\"'21.0'\">21%</mat-option>\r\n                        <mat-option [value]=\"'27.0'\">27%</mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('iva')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('iva').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' [ngClass]=\"['w-full', orden_de_compra ? 'sm:w-1/4' : 'sm:w-2/4']\">\r\n                    <mat-label>Presupuesto</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"presupuesto\">\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('presupuesto')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('presupuesto').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/4\" *ngIf=\"orden_de_compra\">\r\n                    <mat-label>Número OC</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"numero\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Carga de articulos -->\r\n            <form *ngIf=\"!soloLectura\" [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                        (keydown.enter)=\"seleccionItem($event, 'cambio_de_foco')\">\r\n                        <mat-label>Cantidad</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Importe</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"importe\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <div class=\"search-container mt-2 mb-1 flex\">\r\n                <div class=\"relative w-full md:w-1/3\">\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar artículo\"\r\n                        class=\"w-full bg-slate-50 border border-gray-200 rounded-lg shadow-md py-2 px-4 text-sm placeholder-gray-500 text-gray-700 transition duration-300\" />\r\n                    <span class=\"absolute inset-y-0 right-4 flex items-center text-gray-400\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fill-rule=\"evenodd\"\r\n                                d=\"M12.9 14.32a8 8 0 111.42-1.42l4.39 4.4a1 1 0 11-1.42 1.41l-4.4-4.39zM8 14a6 6 0 100-12 6 6 0 000 12z\"\r\n                                clip-rule=\"evenodd\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='importe'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">importe</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            ${{ movimiento_articulo.importe}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button *ngIf=\"!soloLectura\" mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div *ngIf=\"!this.data?.soloLectura && !mostrarSpinner\"\r\n        class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject, map } from 'rxjs';\r\nimport { IOrdenDeCompra } from '../models/orden-de-compra';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IResponse, Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class OrdenesDeCompraService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     */\r\n    getOrdenesDeCompra(sort?: any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token,\r\n                    subject.next({\r\n                        'list': resp.result,\r\n                        // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                        // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n                    })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param orden_de_compra \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveOrdenDeCompra(orden_de_compra: any): Observable<any> {\r\n        return this.http.post<any>(`${environment.compras.compras_orden_compra}`, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param orden_de_compra\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateOrdenDeCompra(orden_de_compra: any, idordencompra: number): Observable<any> {\r\n        return this.http.put<any>(`${environment.compras.compras_orden_compra}` + '/' + idordencompra, orden_de_compra);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param codigo \r\n     * @returns Elimina un item\r\n     */\r\n    deleteOrdenDeCompra(codigo: number): Observable<IOrdenDeCompra> {\r\n        return this.http.delete<IOrdenDeCompra>(`${environment.compras.compras_orden_compra}` + '/' + codigo);\r\n    }\r\n\r\n    getProveedores(option?) {\r\n        let f = '?sort=RazonSocial';\r\n        f += !option ? '&filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.administracion.proveedores}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getArticulos(idarticulo?: number, filterLike?: string) {\r\n        let f = `?filter[activo]=1&pagination=1&per-page=10&page=1`;\r\n        if (idarticulo) {\r\n            f += `&filter[idarticulo]=${idarticulo}`;\r\n        } else if (filterLike) {\r\n            f += `&filter[or][0][codigo_interno][like]=${filterLike}&filter[or][1][descripcion][like]=${filterLike}`;\r\n        }\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<any>(`${environment.stock.articulos}${f}`).pipe(\r\n            map((resp => resp))\r\n        ).subscribe((resp: any) => {\r\n            this._authService.accessToken = resp.token,\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n        });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                // this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idordencompra: number) {\r\n        let f = `?filter[ordenCompra]=${idordencompra}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.compras.compras_orden_compra_items}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idordencompra\r\n    * @returns \r\n    */\r\n    reporteOrdenDeCompra(idordencompra: number): Observable<IResponse<any>> {\r\n        return this.http.get<IResponse<any>>(`${environment.compras.generar_reporte_orden_compra}` + idordencompra);\r\n    }\r\n}"],"names":["EventEmitter","FormControl","FormGroup","Validators","Subject","debounceTime","distinctUntilChanged","finalize","firstValueFrom","map","startWith","switchMap","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","LectorQrComponent","i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r1","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","proveedor_r30","RazonSocial","ɵɵlistener","SaveComponent_form_10_button_17_Template_button_click_0_listener","ɵɵrestoreView","_r32","ctx_r31","ɵɵnextContext","ɵɵresetView","limpiarCasillero","SaveComponent_form_10_button_31_Template_button_click_0_listener","_r34","ctx_r33","SaveComponent_form_10_button_36_Template_button_click_0_listener","_r36","ctx_r35","articulo_r41","ɵɵtextInterpolate2","codigo_interno","descripcion","SaveComponent_form_10_form_38_button_10_Template_button_click_0_listener","_r43","ctx_r42","um_r44","factor_um","um_base","ɵɵtemplate","SaveComponent_form_10_form_38_mat_option_19_i_2_Template","idunidadmedida","descripcion_um","SaveComponent_form_10_form_38_Template_input_ngModelChange_6_listener","$event","_r48","ctx_r47","seleccionItem","SaveComponent_form_10_form_38_mat_option_9_Template","SaveComponent_form_10_form_38_button_10_Template","SaveComponent_form_10_form_38_Template_button_click_12_listener","ctx_r49","etiquetaArticulo","ɵɵnamespaceSVG","ɵɵnamespaceHTML","SaveComponent_form_10_form_38_Template_mat_select_ngModelChange_18_listener","ctx_r50","um","SaveComponent_form_10_form_38_mat_option_19_Template","SaveComponent_form_10_form_38_Template_mat_form_field_keydown_enter_20_listener","ctx_r51","SaveComponent_form_10_form_38_Template_mat_form_field_keydown_enter_25_listener","ctx_r52","onCargar","SaveComponent_form_10_form_38_Template_button_click_30_listener","ctx_r53","ctx_r14","form_carga_articulos","_r37","getTextArticulo","filteredArticulos","get","value","ɵɵclassMap","color_primario","default_color","ɵɵstyleProp","color_secundario","unidades_de_medida","ctx_r15","movimiento_articulo_r54","codigo_interno_articulo","ctx_r17","movimiento_articulo_r55","descripcion_articulo","ctx_r19","movimiento_articulo_r56","ctx_r21","movimiento_articulo_r57","cantidad","ctx_r23","movimiento_articulo_r58","importe","ctx_r25","SaveComponent_form_10_td_64_button_1_Template_button_click_0_listener","_r64","movimiento_r59","$implicit","ctx_r62","deleteMovimiento","SaveComponent_form_10_td_64_button_1_Template","ctx_r26","soloLectura","SaveComponent_form_10_button_12_Template","SaveComponent_form_10_mat_option_15_Template","SaveComponent_form_10_button_17_Template","SaveComponent_form_10_button_22_Template","SaveComponent_form_10_button_31_Template","SaveComponent_form_10_button_36_Template","SaveComponent_form_10_mat_form_field_37_Template","SaveComponent_form_10_form_38_Template","SaveComponent_form_10_Template_input_keyup_41_listener","_r67","ctx_r66","applyFilter","target","ɵɵelementContainerStart","SaveComponent_form_10_th_48_Template","SaveComponent_form_10_td_49_Template","ɵɵelementContainerEnd","SaveComponent_form_10_th_51_Template","SaveComponent_form_10_td_52_Template","SaveComponent_form_10_th_54_Template","SaveComponent_form_10_td_55_Template","SaveComponent_form_10_th_57_Template","SaveComponent_form_10_td_58_Template","SaveComponent_form_10_th_60_Template","SaveComponent_form_10_td_61_Template","SaveComponent_form_10_th_63_Template","SaveComponent_form_10_td_64_Template","SaveComponent_form_10_tr_65_Template","SaveComponent_form_10_tr_66_Template","SaveComponent_form_10_div_67_Template","ctx_r2","form","_r4","minDate","maxDate","_r6","getTextProveedor","ɵɵpipeBind1","filteredProveedores","_r10","mov_art_list","length","ɵɵpureFunction1","_c0","orden_de_compra","dataSource","columns","data","_c1","isPalabraMaxLengthReached","getPalabrasLength","maxPalabras","SaveComponent_div_11_Template_button_click_1_listener","_r69","ctx_r68","onSubmit","ctx_r3","SaveComponent","constructor","_ordenesDeCompraService","_empresaService","datePipe","alert","dialogRef","dialogo","_unsubscribeAll","deposito_default","mostrarSpinner","mostrar_mensaje","creadoExitosamente","editadoExitosamente","articulos_list","mov_art_list_deleted","model","title","user","JSON","parse","localStorage","getItem","Date","empresa$","pipe","subscribe","empresa","ngOnInit","getEmpresa","newForm","exist","subscribeAlert","valueChanges","idarticulo","filterLike","getArticulos","response","list","emitConfig","next","config","appearance","time","dia","mes","anio","fecha","split","getItems","codigo","then","res","m","articulo","disable","enable","proveedor","required","transform","observaciones","maxLength","numero","presupuesto","pedido","iva","unidadmedida","min","updateFormValidators","addMovimiento","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","success","filter","item","info","getUnidadesDeMedidaArticulos","setTimeout","cantidadField","document","querySelector","focus","preventDefault","importeField","input","setValue","key","warning","valid","error","existeMovimiento","find","reset","articuloField","proveedor_seleccionado","proveedor_existe","proveedores","some","Codigo","items","objeto","presupuestoString","toString","payload","orden_compra","usuario","id","updateOrdenDeCompra","emit","close","saveOrdenDeCompra","onCloseMenu","open","panelClass","componentInstance","sendObject","code","decodedText","parseInt","console","getProveedores","option","_this","_asyncToGenerator","Proveedores","Promise","_ref","resolve","_filterProveedores","provedor","_x","apply","arguments","filterValue","toLowerCase","includes","idordencompra","_this2","_ref2","_x2","_this3","articulos","_ref3","result","_filterArticulos","_x3","_this4","unidadesDeMedida","_ref4","sort","a","b","factor","unidad","parseFloat","_x4","cambiarFecha","partes","fh","Number","setValidators","clearValidators","updateValueAndValidity","trim","ɵɵdirectiveInject","i1","OrdenesDeCompraService","i2","EmpresaService","i3","DatePipe","i4","AppAlertService","i5","MatDialogRef","MatDialog","selectors","outputs","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","SaveComponent_Template","rf","ctx","SaveComponent_Template_button_click_5_listener","SaveComponent_spinner_component_8_Template","SaveComponent_fuse_alert_9_Template","SaveComponent_form_10_Template","SaveComponent_div_11_Template","ɵɵtextInterpolate","environment","http","_authService","getOrdenesDeCompra","f","subject","administracion","view_clientes","resp","accessToken","token","asObservable","post","compras","compras_orden_compra","put","deleteOrdenDeCompra","delete","stock","articulo_unidad_medidas","compras_orden_compra_items","reporteOrdenDeCompra","generar_reporte_orden_compra","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}