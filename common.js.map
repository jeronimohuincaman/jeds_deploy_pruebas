{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/modules/ventas/cobranzas/services/cobranzas.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Injectable()\r\nexport class CobranzasService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) {}\r\n\r\n    getItemEdicion(token, params) {\r\n        return this.http.get(environment.ventas.get_datos + params, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    getMetodosCobro(token) {\r\n        return this.http.get(environment.ventas.vta_cobro_tipo, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    calcularImporte(token, payload) {\r\n        return this.http.post(environment.ventas.calcular_importe, payload, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    calcularInteres(token, payload) {\r\n        return this.http.post(environment.ventas.calcular_interes, payload, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    cargarItemCobroCalculadora(token, payload) {\r\n        return this.http.post(\r\n            environment.ventas.cargar_item_cobro_calculadora,\r\n            payload,\r\n            {\r\n                headers: token,\r\n            }\r\n        );\r\n    }\r\n\r\n    cargarItemCobro(token, payload) {\r\n        return this.http.post(environment.ventas.cargar_item_cobro, payload, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    cargarItemFormaCobro(token, payload) {\r\n        return this.http.post(environment.ventas.cargar_forma_cobro, payload, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    nuevaCobranza(token, payload) {\r\n        return this.http.post(environment.ventas.vta_cobros, payload, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    editarCobranza(token, idcobro, payload){\r\n        return this.http.put(environment.ventas.vta_cobros + `/${idcobro}`, payload, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    deleteCobranza(token, idcobro){\r\n        return this.http.delete(environment.ventas.vta_cobros + `/${idcobro}` , {\r\n            headers: token,\r\n        })\r\n    }\r\n\r\n    generarReporteCalculadora(token, payload) {\r\n        return this.http.post(\r\n            environment.ventas.generar_reporte_calculadora,\r\n            payload,\r\n            { headers: token }\r\n        );\r\n    }\r\n\r\n    generarReporteCobro(token, params){\r\n        return this.http.get(environment.ventas.generar_reporte_cobro + params, {\r\n            headers: token\r\n        })\r\n    }\r\n\r\n    getClientes(token, filter) {\r\n        return this.http.get(environment.ventas.view_cliente + filter, {\r\n            headers: token,\r\n        });\r\n    }\r\n\r\n    getVentaPendiente(token, filter) {\r\n        return this.http.get(\r\n            environment.ventas.view_vta_venta_pendiente + filter,\r\n            {\r\n                headers: token,\r\n            }\r\n        );\r\n    }\r\n\r\n    getBancos(token) {\r\n        return this.http.get(environment.ventas.fondos_bancos, {\r\n            headers: token,\r\n        });\r\n    }\r\n}\r\n"],"names":["environment","CobranzasService","constructor","http","_authService","getItemEdicion","token","params","get","ventas","get_datos","headers","getMetodosCobro","vta_cobro_tipo","calcularImporte","payload","post","calcular_importe","calcularInteres","calcular_interes","cargarItemCobroCalculadora","cargar_item_cobro_calculadora","cargarItemCobro","cargar_item_cobro","cargarItemFormaCobro","cargar_forma_cobro","nuevaCobranza","vta_cobros","editarCobranza","idcobro","put","deleteCobranza","delete","generarReporteCalculadora","generar_reporte_calculadora","generarReporteCobro","generar_reporte_cobro","getClientes","filter","view_cliente","getVentaPendiente","view_vta_venta_pendiente","getBancos","fondos_bancos","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}