{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/shared/constants/date-format.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/@angular/material/fesm2022/toolbar.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// @Component({\r\n//     selector: 'app-save-stock-inicial',\r\n//     templateUrl: './save.component.html',\r\n//     styleUrls: ['./save.component.scss'],\r\n//     providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n// })\r\n\r\n\r\n/**\r\n * Formateo de fecha\r\n */\r\nexport const MY_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: 'mm/dd/yyyy',\r\n    },\r\n    display: {\r\n        dateInput: 'dd/MM/yyyy',\r\n        monthYearLabel: 'MMM yyyy',\r\n        dateA11yLabel: 'LL',\r\n        monthYearA11yLabel: 'MMMM yyyy',\r\n    },\r\n};","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["MY_DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","EmptyError","SafeSubscriber","firstValueFrom","source","config","hasConfig","Promise","resolve","reject","subscriber","next","value","unsubscribe","error","complete","defaultValue","subscribe","i0","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","i1","DOCUMENT","_c0","_c1","_MatToolbarBase","constructor","_elementRef","MatToolbarRow","_class","ɵfac","_class_Factory","t","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","length","isCombinedUsage","Array","from","nativeElement","childNodes","filter","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","trim","throwToolbarMixedModesError","_class2","_class2_Factory","ɵɵdirectiveInject","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","_class2_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","_class2_HostBindings","ɵɵclassProp","inputs","color","features","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","template","_class2_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule","_class3","_class3_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3]}