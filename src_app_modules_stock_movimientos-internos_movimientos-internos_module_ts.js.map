{"version":3,"file":"src_app_modules_stock_movimientos-internos_movimientos-internos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/movimientos-internos/components/addArticulo/add-articulo.component.ts","./src/app/modules/stock/movimientos-internos/components/addArticulo/add-articulo.component.html","./src/app/modules/stock/movimientos-internos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/movimientos-internos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/movimientos-internos/components/movimientos-internos.component.ts","./src/app/modules/stock/movimientos-internos/components/movimientos-internos.component.html","./src/app/modules/stock/movimientos-internos/components/save/save.component.ts","./src/app/modules/stock/movimientos-internos/components/save/save.component.html","./src/app/modules/stock/movimientos-internos/movimientos-internos.module.ts","./src/app/modules/stock/movimientos-internos/service/movimientos-internos.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { Observable, Subject, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-add-articulo-movimientos-internos',\r\n    templateUrl: './add-articulo.component.html',\r\n    styleUrls: ['./add-articulo.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class AddArticuloComponent implements OnInit {\r\n    columns = ['articulo', 'cantidad', 'unidadmedida', 'deposito destino', 'acciones'];\r\n    form: FormGroup;\r\n    title: string;\r\n    articulos: any[] = [];\r\n    unidades_de_medida: any[] = [];\r\n    depositos: IDeposito[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    articulos_list = [];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<AddArticuloComponent>,\r\n\r\n    ) {\r\n        this.title = 'Añadir movimiento de articulo';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulosDepositos();\r\n        this.getDepositos();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosDepositos() {\r\n        const articulos_um_deposito = await firstValueFrom(this._movimientosInternosService.getArticulosDepositos(this.data.deposito_egreso)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n     * @param value \r\n     * @returns \r\n     */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtenemos la descripcion del articulo seleccionado.\r\n     * @param articulo \r\n     * @returns \r\n     */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo.\r\n     * @param idarticulo \r\n     */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            });\r\n\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionArticulo({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion lista los depositos activos.\r\n     * @param option \r\n     */\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._movimientosInternosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list.filter(deposito => deposito.iddeposito != this.data.deposito_egreso); //Solo se almacenan los depositos que sean distintos al deposito de origen.\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form.get('articulo').value.idarticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.data.esEdicion === false) { //Sí existe minimo un movimiento...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM... \r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form.get('stock_existente').setValue(stock); //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero($event) {\r\n        if ($event == 'articulo') {\r\n            this.form.get('articulo').setValue('');\r\n            this.form.get('unidadmedida').disable();\r\n            this.form.get('unidadmedida').setValue('');\r\n            this.form.get('stock_existente').setValue('');\r\n            this.form.get('cantidad').setValue('');\r\n            this.form.get('deposito_ingreso').setValue('');\r\n        }\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            deposito_ingreso: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl(('')),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > articulo.stock) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.form.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value && movimiento.deposito_ingreso === this.form.get('deposito_ingreso').value);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('deposito_ingreso').setValue('');\r\n                        return this.alert.warning('En ese deposito ya existe un movimiento de ese articulo con esa unidad de medida!');\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= articulo.stock && this.form.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n                        let deposito = this.depositos.find(deposito => deposito.iddeposito === this.form.get('deposito_ingreso').value); //Traigo un deposito que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form.get('articulo').value,\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            cantidad: this.form.get('cantidad').value,\r\n                            deposito_ingreso: this.form.get('deposito_ingreso').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            decripcion_deposito_ingreso: deposito.descripcion,\r\n                            stock: `${Number(articulo.stock) - this.form.get('cantidad').value}`,\r\n                        }\r\n                        this.onCloseMenu(movimiento_articulo);\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false);\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <!-- Grilla -->\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Artículo</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art\"\r\n                        (ngModelChange)=\"seleccionArticulo($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextArticulo\">\r\n                        <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                            {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('articulo').value\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>UM</mat-label>\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                            {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}} {{um.um_base}})</i>\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>En stock</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/3\">\r\n                    <mat-label>Cantidad</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósitos Destino</mat-label>\r\n                    <mat-select formControlName=\"deposito_ingreso\">\r\n                        <mat-option *ngFor=\"let deposito of depositos\"\r\n                            [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Añadir</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IMovimientoInterno } from '../../models/movimiento-interno';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-movimientos-internos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuario: Observable<IUsuario[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IMovimientoInterno[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _movimientosInternosService: MovimientosInternosService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._movimientosInternosService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuario = this.formFilters.controls['usuario'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._movimientosInternosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Depósito Origen</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario\" matInput [matAutocomplete]=\"autoUsuario\" formControlName=\"usuario\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuario=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario of filteredUsuario | async\" [value]=\"usuario.nick\">\r\n                    {{usuario.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IMovimientoInterno } from '../models/movimiento-interno';\r\nimport { MovimientosInternosService as MovimientosInternosService } from '../service/movimientos-internos.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n@Component({\r\n    selector: 'app-movimientos-internos',\r\n    templateUrl: './movimientos-internos.component.html',\r\n    styleUrls: ['./movimientos-internos.component.scss']\r\n})\r\nexport class MovimientosInternosComponent implements OnInit, OnDestroy {\r\n    movimientos_internos: IMovimientoInterno[];\r\n    public dataSource: MatTableDataSource<IMovimientoInterno> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora','Responsable','Observaciones' , 'Deposito', 'Acciones'];\r\n    column_params = ['fecha','hora', 'nick','observaciones' , 'deposito', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'nick', 'deposito'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.movimiento_internos + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno ) => 'jedstion:editar',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => 'jedstion:eliminar',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Reporte\",\r\n                functionName: 'reporte',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => 'jedstion:imprimir',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n            }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario != '' ? \"filter[nick]=\" + this.filter.usuario + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateMovimientoInterno(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteMovimientoInterno(event);\r\n                break;\r\n            case 'reporte':\r\n                this.reporteMovimientoInterno(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveMovimientoInterno() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento interno creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateMovimientoInterno(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento interno editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteMovimientoInterno(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Movimiento interno: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el movimiento interno realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._movimientosInternosService.deleteMovimientoInterno(event.params.data.idmovimientointerno).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Movimiento interno eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este movimiento interno no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reporteMovimientoInterno(event) {\r\n        const idMovimientoInterno = event.params.data.idmovimientointerno;\r\n        this._movimientosInternosService.reporteMovimientoInterno(idMovimientoInterno).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                const reportePath = data.path;\r\n                if (this.pwaService.isPwa()) {\r\n                    this.router.navigate(['/reporte', reportePath]);\r\n                } else {\r\n                    const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                    window.open(reporteUrl, '_blank'); \r\n                }\r\n                } else {\r\n                console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveMovimientoInterno()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Movimiento interno</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IMovimientoInterno } from '../../models/movimiento-interno';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { AddArticuloComponent } from '../addArticulo/add-articulo.component';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n    selector: 'app-save-movimiento-interno',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'deposito_ingreso', 'acciones'];\r\n    form: FormGroup;\r\n    movimiento_interno: IMovimientoInterno;\r\n    title: string;\r\n    user: any;\r\n    depositos: IDeposito[] = [];\r\n    articulos: IArticulo[];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    deposito_default = 0;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.movimiento_interno = this.data ? this.data : null;\r\n        this.title = this.movimiento_interno?.idmovimientointerno ? `Editar Movimiento interno ${this.movimiento_interno.fecha} - ${this.movimiento_interno.hora}` : `Nuevo Movimiento interno`;\r\n        /* this`user = JSON.parse(sessionStorage.getItem('user')) */\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.exist();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.movimiento_interno ? this.movimiento_interno.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.movimiento_interno) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.movimiento_interno.idmovimientointerno).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        deposito_ingreso: m.deposito_ingreso,\r\n                        descripcion_deposito_ingreso: m.descripcion_deposito_ingreso,\r\n                        stock: m.stock_minimo_articulo    //Stock restante de ese articulo con esa um...\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_egreso').disable();\r\n                } else {\r\n                    this.form.get('deposito_egreso').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.movimiento_interno?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.movimiento_interno?.hora ? this.movimiento_interno.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito_egreso: new FormControl((this.movimiento_interno ? this.movimiento_interno.deposito : ''), Validators.required),\r\n            observaciones: new FormControl((this.movimiento_interno ? this.movimiento_interno.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        if (this.movimiento_interno?.idmovimientointerno) {\r\n            this.getDepositos(true);\r\n        } else {\r\n            this.getDepositos();\r\n        }\r\n    }\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._movimientosInternosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.movimiento_interno) {\r\n                this.form.get('deposito_egreso').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito_egreso').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n\r\n    async getItems(idmovimientointerno): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._movimientosInternosService.getItems(idmovimientointerno));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n     * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n     * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n     */\r\n    addMovimiento() {\r\n        if (this.form.get('deposito_egreso').value != '') {\r\n\r\n            let deposito_egreso_value = this.form.get('deposito_egreso').value.iddeposito;\r\n            if (typeof this.form.get('deposito_egreso').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos.find(d => d.descripcion === this.form.get('deposito_egreso').value);\r\n                deposito_egreso_value = d.iddeposito;\r\n            }\r\n\r\n            let esEdicion = this.movimiento_interno ? true : false;\r\n\r\n            this.dialogo\r\n                .open(AddArticuloComponent, {\r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        deposito_egreso: deposito_egreso_value,\r\n                        movimientos: this.mov_art_list,\r\n                        esEdicion: esEdicion\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno: res.articulo.codigo_interno,\r\n                                deposito_ingreso: res.deposito_ingreso,\r\n                                descripcion_deposito_ingreso: res.decripcion_deposito_ingreso,\r\n                                stock: res.stock    //Stock restante de ese articulo con esa um...\r\n                            }\r\n                            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n                            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                            if (this.mov_art_list.length != 0) {\r\n                                this.form.get('deposito_egreso').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_egreso').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input: string) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                deposito_ingreso: objeto.deposito_ingreso,\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                movimiento_interno: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito_egreso').value.iddeposito,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.movimiento_interno?.idmovimientointerno) {\r\n                this._movimientosInternosService.updateMovimientoInterno(payload, this.movimiento_interno.idmovimientointerno)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._movimientosInternosService.saveMovimientoInterno(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" readonly=\"true\" [min]=\"minDate\" [max]=\"maxDate\"/>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito Origen</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_egreso\" [matAutocomplete]=\"art\">\r\n                    <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_egreso')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_egreso').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[215px] h-auto shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='deposito_ingreso'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"text-white w-auto\">Depósito Destino</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_deposito_ingreso }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario || '' \" \r\n                        class=\"rounded-tr-lg text-white w-auto\"> \r\n                        <button class=\"flex items-center justify-center\"\r\n                            (click)=\"addMovimiento()\">\r\n                            <mat-icon class=\"text-inherit text-xl\">add_circle_outline</mat-icon>\r\n                            <span class=\"ml-2\">Añadir Artículo</span>\r\n                        </button>\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MovimientosInternosComponent } from './components/movimientos-internos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MovimientosInternosService } from './service/movimientos-internos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { AddArticuloComponent } from './components/addArticulo/add-articulo.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MovimientosInternosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [MovimientosInternosComponent, SaveComponent, FilterMenuComponent, AddArticuloComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [MovimientosInternosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class MovimientosInternosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IMovimientoInterno, IMovimientoInternoResponse } from '../models/movimiento-interno';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class MovimientosInternosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param movimiento_interno \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveMovimientoInterno(movimiento_interno:IMovimientoInterno): Observable<IMovimientoInterno> {\r\n        return this.http.post<IMovimientoInterno>(`${environment.stock.movimiento_internos}`, movimiento_interno);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param movimiento_interno\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateMovimientoInterno(movimiento_interno: IMovimientoInterno, idmovimientointerno: number): Observable<IMovimientoInterno> {\r\n        return this.http.put<IMovimientoInterno>(`${environment.stock.movimiento_internos}` + '/' + idmovimientointerno, movimiento_interno);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idmovimientointerno \r\n     * @returns Elimina un item\r\n     */\r\n    deleteMovimientoInterno(idmovimientointerno: number): Observable<IMovimientoInterno> {\r\n        return this.http.delete<IMovimientoInterno>(`${environment.stock.movimiento_internos}` + '/' + idmovimientointerno);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param idmovimientointerno \r\n     * @returns \r\n     */\r\n    reporteMovimientoInterno(idmovimientointerno: number): Observable<IMovimientoInternoResponse> {\r\n        return this.http.get<IMovimientoInternoResponse>(`${environment.stock.reporte_movimiento_internos}` + idmovimientointerno);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito_origen: number) {\r\n        let f = `?filter[deposito]=${deposito_origen}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idmovimientointerno: number) {\r\n        let f = `?filter[idmovimientointerno]=${idmovimientointerno}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(){\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","Validators","Subject","finalize","firstValueFrom","map","startWith","takeUntil","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MatTableDataSource","MY_DATE_FORMATS","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","_alertConfig","type","showAlert","ɵɵadvance","ɵɵtextInterpolate1","message","articulo_r6","ɵɵtextInterpolate2","codigo_interno","descripcion","ɵɵlistener","AddArticuloComponent_button_20_Template_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","limpiarCasillero","um_r9","factor_um","um_base","ɵɵtemplate","AddArticuloComponent_mat_option_25_i_2_Template","idunidadmedida","descripcion_um","deposito_r12","iddeposito","ɵɵtextInterpolate","AddArticuloComponent","constructor","data","_movimientosInternosService","_empresaService","alert","dialogRef","columns","articulos","unidades_de_medida","depositos","articulos_list","dataSource","default_color","_unsubscribeAll","title","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","newForm","getArticulosDepositos","getDepositos","subscribeAlert","emitConfig","next","config","appearance","time","_this","_asyncToGenerator","articulos_um_deposito","deposito_egreso","Promise","_ref","resolve","list","filteredArticulos","form","get","valueChanges","value","_filterArticulos","_x","apply","arguments","forEach","item","existeArticulo","find","articulo","idarticulo","push","filterValue","toString","toLowerCase","filter","includes","getTextArticulo","getUnidadesDeMedidaArticulos","_this2","_ref2","a","sort","b","parseFloat","um","stock","length","setValue","seleccionArticulo","_x2","option","_this3","Depositos","_ref3","deposito","_x3","$event","enable","articulo_um","cantidad_existente","existeMovimiento","movimientos","esEdicion","articulos_existentes","ae","Number","cantidad","disable","required","unidadmedida","deposito_ingreso","stock_existente","onSubmit","valid","error","warning","movimiento","movimiento_articulo","unidad_medida","unidadmedida_descripcion","decripcion_deposito_ingreso","onCloseMenu","close","ɵɵdirectiveInject","i1","MovimientosInternosService","i2","EmpresaService","i3","AppAlertService","i4","MatDialogRef","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","AddArticuloComponent_Template","rf","ctx","AddArticuloComponent_Template_button_click_5_listener","AddArticuloComponent_fuse_alert_8_Template","AddArticuloComponent_Template_input_ngModelChange_15_listener","AddArticuloComponent_mat_option_18_Template","AddArticuloComponent_button_20_Template","AddArticuloComponent_Template_mat_select_ngModelChange_24_listener","AddArticuloComponent_mat_option_25_Template","ɵɵelement","AddArticuloComponent_mat_option_38_Template","AddArticuloComponent_Template_button_click_40_listener","ɵɵclassMap","ɵɵstyleProp","_r1","ɵɵpipeBind1","fuseAnimations","FilterMenuComponent_button_21_Template_button_click_0_listener","_r7","ctx_r6","limpiarFechas","deposito_r8","usuario_r9","nick","FilterMenuComponent","_menuService","datePipe","usuarios","filterDeposito","filterUsuarios","filterFechas","movimientos_internos_list","formFilters","filtroFechaInicio","filtroFechaFin","usuario","getUsuarios","patchValue","resetFilters","reset","transform","Usuarios","filteredUsuario","controls","_filterUsuaurio","stk_list","JedsMenuService","DatePipe","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_Template_button_click_41_listener","FilterMenuComponent_Template_button_click_44_listener","getRawValue","_r4","EventEmitter","debounceTime","distinctUntilChanged","SaveComponent","TablaDinamicaComponent","environment","MovimientosInternosComponent","confirm","dialogo","_searchService","router","_headerTextService","pwaService","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","movimiento_internos","search","setTitulo","nombre_boton","functionName","iconoAccion","movimiento_interno","iconoAccionado","iconoDeshabilitado","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","generarAcciones","name","updateMovimientoInterno","deleteMovimientoInterno","reporteMovimientoInterno","saveMovimientoInterno","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","fecha","hora","dismissible","actions","show","color","label","cancel","res","idmovimientointerno","renderTabla","console","idMovimientoInterno","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","FuseConfirmationService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","i10","PwaService","viewQuery","MovimientosInternosComponent_Query","MovimientosInternosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","MovimientosInternosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","deposito_r20","SaveComponent_button_29_Template_button_click_0_listener","_r22","ctx_r21","ctx_r5","movimiento_articulo_r23","movimiento_articulo_r24","descripcion_articulo","ctx_r9","movimiento_articulo_r25","ctx_r11","movimiento_articulo_r26","ctx_r13","movimiento_articulo_r27","descripcion_deposito_ingreso","SaveComponent_th_54_Template_button_click_1_listener","_r29","ctx_r28","addMovimiento","ctx_r15","SaveComponent_td_55_Template_button_click_1_listener","restoredCtx","_r33","movimiento_r30","$implicit","ctx_r32","deleteMovimiento","mov_art_list","maxPalabras","deposito_default","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","dia","mes","anio","split","getItems","then","m","codigo_interno_articulo","stock_minimo_articulo","observaciones","maxLength","getPalabrasLength","isPalabraMaxLengthReached","depositoPorDefecto","filteredDepositos","_filterDepositos","getTextDeposito","items","deposito_egreso_value","d","mov","input","objeto","fecha_formateada","fecha_hora","payload","idusuario","id","emit","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","ɵɵelementContainerStart","SaveComponent_th_39_Template","SaveComponent_td_40_Template","ɵɵelementContainerEnd","SaveComponent_th_42_Template","SaveComponent_td_43_Template","SaveComponent_th_45_Template","SaveComponent_td_46_Template","SaveComponent_th_48_Template","SaveComponent_td_49_Template","SaveComponent_th_51_Template","SaveComponent_td_52_Template","SaveComponent_th_54_Template","SaveComponent_td_55_Template","SaveComponent_tr_56_Template","SaveComponent_tr_57_Template","SaveComponent_div_58_Template","SaveComponent_Template_button_click_60_listener","_r2","ɵɵpureFunction1","_c0","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","component","MovimientosInternosModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","reporte_movimiento_internos","f","subject","resp","accessToken","token","result","asObservable","deposito_origen","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}