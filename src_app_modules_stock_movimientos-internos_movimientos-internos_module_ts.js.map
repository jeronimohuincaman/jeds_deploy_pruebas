{"version":3,"file":"src_app_modules_stock_movimientos-internos_movimientos-internos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/movimientos-internos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/movimientos-internos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/movimientos-internos/components/movimientos-internos.component.ts","./src/app/modules/stock/movimientos-internos/components/movimientos-internos.component.html","./src/app/modules/stock/movimientos-internos/components/save/save.component.ts","./src/app/modules/stock/movimientos-internos/components/save/save.component.html","./src/app/modules/stock/movimientos-internos/movimientos-internos.module.ts","./src/app/modules/stock/movimientos-internos/service/movimientos-internos.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IMovimientoInterno } from '../../models/movimiento-interno';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-movimientos-internos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuario: Observable<IUsuario[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IMovimientoInterno[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _movimientosInternosService: MovimientosInternosService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._movimientosInternosService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuario = this.formFilters.controls['usuario'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._movimientosInternosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Depósito Origen</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario\" matInput [matAutocomplete]=\"autoUsuario\" formControlName=\"usuario\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuario=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario of filteredUsuario | async\" [value]=\"usuario.nick\">\r\n                    {{usuario.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IMovimientoInterno } from '../models/movimiento-interno';\r\nimport { MovimientosInternosService as MovimientosInternosService } from '../service/movimientos-internos.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n@Component({\r\n    selector: 'app-movimientos-internos',\r\n    templateUrl: './movimientos-internos.component.html',\r\n    styleUrls: ['./movimientos-internos.component.scss']\r\n})\r\nexport class MovimientosInternosComponent implements OnInit, OnDestroy {\r\n    movimientos_internos: IMovimientoInterno[];\r\n    public dataSource: MatTableDataSource<IMovimientoInterno> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora','Responsable','Observaciones' , 'Deposito', 'Acciones'];\r\n    column_params = ['fecha','hora', 'nick','observaciones' , 'deposito', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'nick', 'deposito'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.movimiento_internos + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno ) => 'jedstion:editar',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => 'jedstion:eliminar',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n            },\r\n            {\r\n                nombre_boton: \"Reporte\",\r\n                functionName: 'reporte',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => 'jedstion:imprimir',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n            }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario != '' ? \"filter[nick]=\" + this.filter.usuario + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateMovimientoInterno(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteMovimientoInterno(event);\r\n                break;\r\n            case 'reporte':\r\n                this.reporteMovimientoInterno(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveMovimientoInterno() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento interno creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateMovimientoInterno(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento interno editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteMovimientoInterno(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Movimiento interno: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el movimiento interno realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._movimientosInternosService.deleteMovimientoInterno(event.params.data.idmovimientointerno).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Movimiento interno eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este movimiento interno no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reporteMovimientoInterno(event) {\r\n        const idMovimientoInterno = event.params.data.idmovimientointerno;\r\n        this._movimientosInternosService.reporteMovimientoInterno(idMovimientoInterno).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                const reportePath = data.path;\r\n                if (this.pwaService.isPwa()) {\r\n                    this.router.navigate(['/reporte', reportePath]);\r\n                } else {\r\n                    const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                    window.open(reporteUrl, '_blank'); \r\n                }\r\n                } else {\r\n                console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button (click)='saveMovimientoInterno()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Movimiento interno</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IMovimientoInterno } from '../../models/movimiento-interno';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-movimiento-interno',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'deposito_ingreso', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    movimiento_interno: IMovimientoInterno;\r\n    title: string;\r\n    user: any;\r\n    depositos_origen: IDeposito[] = [];\r\n    depositos_destino: IDeposito[] = [];\r\n    articulos: IArticulo[];\r\n    articulos_list = [];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    deposito_default = 0;\r\n    esEdicion: boolean;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.movimiento_interno = this.data ? this.data : null;\r\n        this.esEdicion = this.movimiento_interno ? true : false;\r\n        this.title = this.movimiento_interno?.idmovimientointerno ? `Editar Movimiento interno ${this.movimiento_interno.fecha} - ${this.movimiento_interno.hora}` : `Nuevo Movimiento interno`;\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.exist();\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.movimiento_interno ? this.movimiento_interno.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.movimiento_interno) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.movimiento_interno.idmovimientointerno).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        deposito_ingreso: m.deposito_ingreso,\r\n                        descripcion_deposito_ingreso: m.descripcion_deposito_ingreso,\r\n                        stock: m.stock_minimo_articulo    //Stock restante de ese articulo con esa um...\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_egreso').disable();\r\n                } else {\r\n                    this.form.get('deposito_egreso').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.movimiento_interno?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.movimiento_interno?.hora ? this.movimiento_interno.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito_egreso: new FormControl((this.movimiento_interno ? { descripcion: this.movimiento_interno.deposito, iddeposito: this.movimiento_interno.iddeposito } : ''), Validators.required),\r\n            observaciones: new FormControl((this.movimiento_interno ? this.movimiento_interno.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            deposito_ingreso: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl((''))\r\n        });\r\n\r\n        if (this.movimiento_interno && this.form.get('deposito_egreso').value) {\r\n            this.seleccionItem(this.form.get('deposito_egreso').value)\r\n        }\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n        this.getDepositos();\r\n\r\n        // if (this.movimiento_interno?.idmovimientointerno) {\r\n        //     this.getDepositos(true);\r\n        // } else {\r\n        //     this.getDepositos();\r\n        // }\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n */\r\n    addMovimiento(movimiento) {\r\n        if (this.form.get('deposito_egreso').value != '') {\r\n\r\n            let deposito_egreso_value = this.form.get('deposito_egreso').value.iddeposito;\r\n            if (typeof this.form.get('deposito_egreso').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos_origen.find(d => d.descripcion === this.form.get('deposito_egreso').value);\r\n                deposito_egreso_value = d.iddeposito;\r\n            }\r\n\r\n            if (movimiento) {\r\n                let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                    idarticulo: movimiento.articulo.idarticulo,\r\n                    cantidad: movimiento.cantidad,\r\n                    idunidadmedida: movimiento.unidad_medida,\r\n                    descripcion_articulo: movimiento.articulo.descripcion,\r\n                    descripcion_um: movimiento.unidadmedida_descripcion,\r\n                    codigo_interno: movimiento.articulo.codigo_interno,\r\n                    deposito_ingreso: movimiento.deposito_ingreso,\r\n                    descripcion_deposito_ingreso: movimiento.decripcion_deposito_ingreso,\r\n                    stock: movimiento.stock    //Stock restante de ese articulo con esa um...\r\n                }\r\n                this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_egreso').disable();\r\n                }\r\n\r\n                // Actualizar validaciones según el estado de la grilla\r\n                this.updateFormValidators()\r\n\r\n                this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n                this.alert.success(\"Artículo añadido con éxito\");\r\n            }\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_egreso').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Esta funcion maneja las cambios de seleccion que puedan tener los combos.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && a.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.mov_art_list.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.esEdicion === false) { //Sí existe minimo un movimiento...\r\n                let articulos_existentes = this.mov_art_list.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM... \r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form_carga_articulos.get('stock_existente').setValue(stock); //Lo mostramos.\r\n        }\r\n\r\n        //Al seleccionar un deposito...\r\n        if ($event.iddeposito) {\r\n            this.form_carga_articulos.enable();\r\n            this.getArticulosDepositos($event.iddeposito); //...Buscamos las UM que posee ese articulo.\r\n            this.getDepositosDestino($event.iddeposito);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'deposito_egreso') {\r\n            this.form_carga_articulos.disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('deposito_ingreso').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value || !this.form_carga_articulos.get('deposito_ingreso').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value) {\r\n                    if (this.form_carga_articulos.get('cantidad').value > articulo.stock) {\r\n                        this.form_carga_articulos.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value && movimiento.deposito_ingreso === this.form_carga_articulos.get('deposito_ingreso').value);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form_carga_articulos.get('deposito_ingreso').setValue('');\r\n                        return this.alert.warning('En ese deposito ya existe un movimiento de ese articulo con esa unidad de medida!');\r\n                    }\r\n\r\n                    if (this.form_carga_articulos.get('cantidad').value <= articulo.stock && this.form_carga_articulos.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n                        let deposito = this.depositos_origen.find(deposito => deposito.iddeposito === this.form_carga_articulos.get('deposito_ingreso').value); //Traigo un deposito que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form_carga_articulos.get('articulo').value,\r\n                            unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                            cantidad: this.form_carga_articulos.get('cantidad').value,\r\n                            deposito_ingreso: this.form_carga_articulos.get('deposito_ingreso').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            decripcion_deposito_ingreso: deposito.descripcion,\r\n                            stock: `${Number(articulo.stock) - this.form_carga_articulos.get('cantidad').value}`,\r\n                        }\r\n\r\n                        this.addMovimiento(movimiento_articulo);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                deposito_ingreso: objeto.deposito_ingreso,\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                movimiento_interno: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito_egreso').value.iddeposito,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.movimiento_interno?.idmovimientointerno) {\r\n                this._movimientosInternosService.updateMovimientoInterno(payload, this.movimiento_interno.idmovimientointerno)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._movimientosInternosService.saveMovimientoInterno(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n* Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n*/\r\n    etiquetaArticulo() {\r\n        let deposito = this.form.get('deposito_egreso').value;\r\n\r\n        if (!deposito) {\r\n            return this.alert.error('Debe seleccionar un depósito');\r\n        }\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._movimientosInternosService.getArticulosDepositos(deposito['iddeposito'], idarticulo).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._movimientosInternosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos_origen = Depositos.list;\r\n\r\n            if (this.form.get('deposito_egreso').value) {\r\n                this.depositos_destino = this.depositos_origen.filter(deposito => deposito.iddeposito != this.form.get('deposito_egreso').value.iddeposito);\r\n            }\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos_origen.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.movimiento_interno) {\r\n                this.form.get('deposito_egreso').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito_egreso').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterTextGenerico(value, this.depositos_origen, 'descripcion')),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n * Esta funcion lista los depositos activos.\r\n * @param deposito_origen \r\n */\r\n    async getDepositosDestino(deposito_origen?) {\r\n        new Promise(async (resolve) => {\r\n            this.depositos_destino = this.depositos_origen.filter(deposito => deposito.iddeposito != deposito_origen); //Solo se almacenan los depositos que sean distintos al deposito de origen.\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n * Esta funcion solicita las unidades de medida que posee un articulo.\r\n * @param idarticulo \r\n */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            });\r\n\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista los articulos que posee un déposito.\r\n    */\r\n    async getArticulosDepositos(iddeposito: number) {\r\n        const articulos_um_deposito = await firstValueFrom(this._movimientosInternosService.getArticulosDepositos(iddeposito)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    async getItems(idmovimientointerno): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._movimientosInternosService.getItems(idmovimientointerno));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion generica para encontrar un item en un arreglo, parametrizable.\r\n     * @param value Valor ingresado por buscador\r\n     * @param array Arreglo donde se compara la busqueda\r\n     * @param param Campo por el que se desea buscar coincidencias\r\n     * @returns Resultado de busqueda\r\n     */\r\n    private _filterTextGenerico(value: string, array: any[], param: string) {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return array.filter(res => {\r\n            const result = res[`${param}`].toString().toLowerCase().includes(filterValue);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n     * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n     */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('deposito_ingreso').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').clearValidators();\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos.get('deposito_ingreso').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('deposito_ingreso').updateValueAndValidity();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" readonly=\"true\"\r\n                        [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito Origen</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_egreso\" [matAutocomplete]=\"dep\"\r\n                        (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #dep=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_egreso')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_egreso').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\" [disabled]=\"!form.get('deposito_egreso')?.value\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>En stock</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>Depósitos Destino</mat-label>\r\n                        <mat-select formControlName=\"deposito_ingreso\">\r\n                            <mat-option *ngFor=\"let deposito of depositos_destino\"\r\n                                [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Cantidad</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='deposito_ingreso'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Depósito Destino</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_deposito_ingreso}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MovimientosInternosComponent } from './components/movimientos-internos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MovimientosInternosService } from './service/movimientos-internos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MovimientosInternosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [MovimientosInternosComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [MovimientosInternosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class MovimientosInternosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IMovimientoInterno, IMovimientoInternoResponse } from '../models/movimiento-interno';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class MovimientosInternosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param movimiento_interno \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveMovimientoInterno(movimiento_interno:IMovimientoInterno): Observable<IMovimientoInterno> {\r\n        return this.http.post<IMovimientoInterno>(`${environment.stock.movimiento_internos}`, movimiento_interno);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param movimiento_interno\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateMovimientoInterno(movimiento_interno: IMovimientoInterno, idmovimientointerno: number): Observable<IMovimientoInterno> {\r\n        return this.http.put<IMovimientoInterno>(`${environment.stock.movimiento_internos}` + '/' + idmovimientointerno, movimiento_interno);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idmovimientointerno \r\n     * @returns Elimina un item\r\n     */\r\n    deleteMovimientoInterno(idmovimientointerno: number): Observable<IMovimientoInterno> {\r\n        return this.http.delete<IMovimientoInterno>(`${environment.stock.movimiento_internos}` + '/' + idmovimientointerno);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param idmovimientointerno \r\n     * @returns \r\n     */\r\n    reporteMovimientoInterno(idmovimientointerno: number): Observable<IMovimientoInternoResponse> {\r\n        return this.http.get<IMovimientoInternoResponse>(`${environment.stock.reporte_movimiento_internos}` + idmovimientointerno);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito: number, idarticulo?: number) {\r\n        let f = `?filter[deposito]=${deposito}`;\r\n        f += idarticulo ? `&filter[idarticulo]=${idarticulo}` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idmovimientointerno: number) {\r\n        let f = `?filter[idmovimientointerno]=${idmovimientointerno}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(){\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","deposito_r8","iddeposito","ɵɵadvance","ɵɵtextInterpolate","descripcion","usuario_r9","nick","ɵɵtextInterpolate1","FilterMenuComponent","constructor","data","_menuService","datePipe","_movimientosInternosService","_empresaService","usuarios","filterDeposito","filterUsuarios","filterFechas","movimientos_internos_list","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","filteredUsuario","controls","valueChanges","_filterUsuaurio","filterValue","toLowerCase","includes","_this2","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","DatePipe","i3","MovimientosInternosService","i4","EmpresaService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_Template_button_click_41_listener","FilterMenuComponent_Template_button_click_44_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r4","ɵɵpipeBind1","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","MovimientosInternosComponent","confirm","alert","dialogo","_searchService","router","_headerTextService","pwaService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","movimiento_internos","search","setTitulo","nombre_boton","functionName","iconoAccion","movimiento_interno","iconoAccionado","iconoDeshabilitado","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","next","generarAcciones","name","updateMovimientoInterno","deleteMovimientoInterno","reporteMovimientoInterno","saveMovimientoInterno","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","title","fecha","message","hora","dismissible","actions","show","color","label","cancel","res","idmovimientointerno","renderTabla","error","console","warning","idMovimientoInterno","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","i10","PwaService","viewQuery","MovimientosInternosComponent_Query","MovimientosInternosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","MovimientosInternosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","finalize","takeWhile","tap","timer","MAT_DIALOG_DATA","LectorQrComponent","ctx_r0","_alertConfig","type","showAlert","deposito_r25","SaveComponent_button_29_Template_button_click_0_listener","_r27","ctx_r26","limpiarCasillero","articulo_r28","ɵɵtextInterpolate2","codigo_interno","SaveComponent_button_41_Template_button_click_0_listener","_r30","ctx_r29","um_r31","factor_um","um_base","SaveComponent_mat_option_50_i_2_Template","idunidadmedida","descripcion_um","deposito_r34","ctx_r10","movimiento_articulo_r35","ctx_r12","movimiento_articulo_r36","descripcion_articulo","ctx_r14","movimiento_articulo_r37","ctx_r16","movimiento_articulo_r38","cantidad","ctx_r18","movimiento_articulo_r39","descripcion_deposito_ingreso","ctx_r20","SaveComponent_td_88_Template_button_click_1_listener","restoredCtx","_r43","movimiento_r40","$implicit","ctx_r42","deleteMovimiento","dialogRef","columns","depositos_origen","depositos_destino","articulos_list","unidades_de_medida","mov_art_list","maxPalabras","deposito_default","esEdicion","user","JSON","parse","localStorage","getItem","minDate","maxDate","Date","exist","newForm","subscribeAlert","emitConfig","config","appearance","time","dia","mes","anio","split","getItems","then","m","idarticulo","parseFloat","codigo_interno_articulo","deposito_ingreso","stock_minimo_articulo","length","form","disable","enable","required","deposito_egreso","observaciones","maxLength","form_carga_articulos","articulo","unidadmedida","stock_existente","seleccionItem","updateFormValidators","addMovimiento","movimiento","deposito_egreso_value","d","find","movimiento_articulo","unidad_medida","unidadmedida_descripcion","decripcion_deposito_ingreso","forEach","mov","Number","item","info","getUnidadesDeMedidaArticulos","um","articulo_um","a","cantidad_existente","existeMovimiento","articulos_existentes","ae","getArticulosDepositos","getDepositosDestino","input","onCargar","key","preventDefault","valid","articulos","onSubmit","isPalabraMaxLengthReached","movimientos","objeto","fecha_formateada","fecha_hora","payload","idusuario","id","emit","etiquetaArticulo","sendObject","code","decodedText","parseInt","response","option","Depositos","Promise","_ref","resolve","depositoPorDefecto","filteredDepositos","_filterTextGenerico","_x","apply","arguments","deposito_origen","_ref2","_x2","_this3","_ref3","sort","b","_x3","_this4","articulos_um_deposito","_ref4","filteredArticulos","_filterArticulos","_x4","existeArticulo","push","_this5","_ref5","items","_x5","toString","array","param","result","getTextDeposito","getTextArticulo","getPalabrasLength","setValidators","clearValidators","updateValueAndValidity","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_fuse_alert_8_Template","SaveComponent_Template_input_ngModelChange_24_listener","SaveComponent_mat_option_27_Template","SaveComponent_button_29_Template","SaveComponent_Template_input_ngModelChange_36_listener","SaveComponent_mat_option_39_Template","SaveComponent_button_41_Template","SaveComponent_Template_button_click_43_listener","SaveComponent_Template_mat_select_ngModelChange_49_listener","SaveComponent_mat_option_50_Template","SaveComponent_mat_option_59_Template","SaveComponent_Template_mat_form_field_keydown_enter_61_listener","SaveComponent_Template_button_click_66_listener","ɵɵelementContainerStart","SaveComponent_th_72_Template","SaveComponent_td_73_Template","ɵɵelementContainerEnd","SaveComponent_th_75_Template","SaveComponent_td_76_Template","SaveComponent_th_78_Template","SaveComponent_td_79_Template","SaveComponent_th_81_Template","SaveComponent_td_82_Template","SaveComponent_th_84_Template","SaveComponent_td_85_Template","SaveComponent_th_87_Template","SaveComponent_td_88_Template","SaveComponent_tr_89_Template","SaveComponent_tr_90_Template","SaveComponent_div_91_Template","SaveComponent_Template_button_click_99_listener","_r2","_r5","tmp_21_0","ɵɵpureFunction1","_c0","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","component","MovimientosInternosModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","reporte_movimiento_internos","f","subject","depositos","resp","accessToken","token","asObservable","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}