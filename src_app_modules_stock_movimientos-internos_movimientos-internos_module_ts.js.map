{"version":3,"file":"src_app_modules_stock_movimientos-internos_movimientos-internos_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/movimientos-internos/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/movimientos-internos/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/movimientos-internos/components/movimientos-internos.component.ts","./src/app/modules/stock/movimientos-internos/components/movimientos-internos.component.html","./src/app/modules/stock/movimientos-internos/components/save/save.component.ts","./src/app/modules/stock/movimientos-internos/components/save/save.component.html","./src/app/modules/stock/movimientos-internos/movimientos-internos.module.ts","./src/app/modules/stock/movimientos-internos/service/movimientos-internos.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IMovimientoInterno } from '../../models/movimiento-interno';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu-movimientos-internos',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  providers: [\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\r\n  ],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  usuarios: IUsuario[] = [];\r\n  filteredUsuario: Observable<IUsuario[]>;\r\n  filterDeposito: IDeposito[] = [];\r\n  filterUsuarios: any = [];\r\n  filterFechas: any = [];\r\n  movimientos_internos_list: IMovimientoInterno[] = []; //Se crea por sí hace falta crear una copia de los datos y manipularlos de una forma más personalizada\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  default_color: string = 'bg-primary';\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    @Inject('MENU_DATA') public data: any, \r\n    private _menuService: JedsMenuService, \r\n    private datePipe: DatePipe, \r\n    private _movimientosInternosService: MovimientosInternosService,\r\n    private _empresaService: EmpresaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      filtroFechaInicio: new FormControl(('')),\r\n      filtroFechaFin: new FormControl(('')),\r\n      usuario: new FormControl(('')),\r\n      deposito: new FormControl((-1)),\r\n    });\r\n    this.getDepositos();\r\n    this.getUsuarios();\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n          this.color_primario = empresa.color_primario;\r\n          this.color_secundario = empresa.color_secundario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n    this.formFilters.patchValue(this.data.filter);\r\n\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      filtroFechaInicio: '',\r\n      filtroFechaFin: '',\r\n      usuario: '',\r\n      deposito: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    if (data) {\r\n      data.filtroFechaInicio = this.datePipe.transform(this.formFilters.get('filtroFechaInicio').value, 'yyyy-MM-dd');\r\n      data.filtroFechaFin = this.datePipe.transform(this.formFilters.get('filtroFechaFin').value, 'yyyy-MM-dd');\r\n    }\r\n    this._menuService.close(data);\r\n  }\r\n\r\n  /**\r\n  * Funcion para limpiar los filtros de rango de fechas\r\n  */\r\n  limpiarFechas() {\r\n    this.formFilters.get('filtroFechaInicio').setValue('');\r\n    this.formFilters.get('filtroFechaFin').setValue('');\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los usuarios en el filtro de grilla.\r\n   */\r\n  async getUsuarios() {\r\n    const Usuarios = await firstValueFrom(this._movimientosInternosService.getUsuarios());\r\n    this.usuarios = Usuarios.list;\r\n    this.filteredUsuario = this.formFilters.controls['usuario'].valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterUsuaurio(value))\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Esta funcion es para filtrar los proveedores según el input que se haya ingresado en el input de proveedor.\r\n    * @param value \r\n    * @returns \r\n    */\r\n  private _filterUsuaurio(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usuarios.filter(usuario =>\r\n      usuario.nick.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para listas los depositos en el filtro de grilla.\r\n   */\r\n  async getDepositos() {\r\n    const stk_list = await firstValueFrom(this._movimientosInternosService.getDepositos(true));\r\n    this.filterDeposito = stk_list.list;\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-120 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n\r\n        <!-- Fecha inicio-->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Rango de fechas</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-date-range-input [rangePicker]=\"picker\">\r\n                <input matStartDate placeholder=\"Desde\" formControlName=\"filtroFechaInicio\">\r\n                <input matEndDate placeholder=\"Hasta\" formControlName=\"filtroFechaFin\">\r\n            </mat-date-range-input>\r\n            <mat-datepicker-toggle matIconSuffix [for]=\"picker\" *ngIf=\"!formFilters.get('filtroFechaInicio').value || !formFilters.get('filtroFechaFin').value\"></mat-datepicker-toggle>\r\n            <mat-date-range-picker #picker></mat-date-range-picker>\r\n            <button matSuffix mat-icon-button (click)=\"limpiarFechas()\"\r\n                *ngIf=\"formFilters.get('filtroFechaInicio').value || formFilters.get('filtroFechaFin').value\">\r\n                <mat-icon>clear</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- Deposito -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Depósito Origen</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <mat-select formControlName=\"deposito\">\r\n                <mat-option [value]=\"-1\">Todos</mat-option>\r\n                <mat-option *ngFor=\"let deposito of filterDeposito\"\r\n                    [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- Usuario -->\r\n        <span class=\"font-semibold text-gray-600 text-base\">Usuario</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\r\n            <input type=\"text\" placeholder=\"Seleccione Usuario\" matInput [matAutocomplete]=\"autoUsuario\" formControlName=\"usuario\">\r\n            <button mat-icon-button matSuffix>\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-autocomplete #autoUsuario=\"matAutocomplete\">\r\n                <mat-option *ngFor=\"let usuario of filteredUsuario | async\" [value]=\"usuario.nick\">\r\n                    {{usuario.nick}}\r\n                </mat-option>\r\n            </mat-autocomplete>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \r\n            [style.border]=\"color_primario || '' \"\r\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IMovimientoInterno } from '../models/movimiento-interno';\r\nimport { MovimientosInternosService as MovimientosInternosService } from '../service/movimientos-internos.service';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n@Component({\r\n    selector: 'app-movimientos-internos',\r\n    templateUrl: './movimientos-internos.component.html',\r\n    styleUrls: ['./movimientos-internos.component.scss']\r\n})\r\nexport class MovimientosInternosComponent implements OnInit, OnDestroy {\r\n    movimientos_internos: IMovimientoInterno[];\r\n    public dataSource: MatTableDataSource<IMovimientoInterno> = new MatTableDataSource();\r\n    headers = ['Fecha', 'Hora','Responsable','Observaciones' , 'Deposito', 'Acciones'];\r\n    column_params = ['fecha','hora', 'nick','observaciones' , 'deposito', 'acciones'];\r\n    funcionesObjeto = null;\r\n    accionesObjeto = null;\r\n    showMenu: any;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['observaciones', 'nick', 'deposito'];\r\n    filter: IFilter = {\r\n        deposito: -1,\r\n        filtroFechaInicio: '',\r\n        filtroFechaFin: ''\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.stock.movimiento_internos + '?sort=-fecha';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [\r\n            {\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n                visible: (movimiento_interno: IMovimientoInterno) => false\r\n            }\r\n        ];\r\n\r\n        this.showMenu = (movimiento_interno: IMovimientoInterno) => true;\r\n\r\n        this.accionesObjeto = [\r\n            {\r\n                nombre_boton: \"Editar\",\r\n                functionName: 'editar',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno ) => 'jedstion:editar',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n                visible: (movimiento_interno: IMovimientoInterno) => true\r\n            },\r\n            {\r\n                nombre_boton: \"Eliminar\",\r\n                functionName: 'eliminar',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => 'jedstion:eliminar',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n                visible: (movimiento_interno: IMovimientoInterno) => true\r\n            },\r\n            {\r\n                nombre_boton: \"Reporte\",\r\n                functionName: 'reporte',\r\n                iconoAccion: (movimiento_interno: IMovimientoInterno) => 'jedstion:imprimir',\r\n                iconoAccionado: (movimiento_interno: IMovimientoInterno) => '',\r\n                iconoDeshabilitado: (movimiento_interno: IMovimientoInterno) => '',\r\n                visible: (movimiento_interno: IMovimientoInterno) => true\r\n            }\r\n        ]\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n                data: this.tabla.getElementosExistentes()\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.deposito != -1 ? \"filter[iddeposito]=\" + this.filter.deposito + '&' : '';\r\n                        this.extraParams += this.filter.usuario != '' ? \"filter[nick]=\" + this.filter.usuario + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaInicio != null ? \"filter[fecha][gte]=\" + this.filter.filtroFechaInicio + '&' : '';\r\n                        this.extraParams += this.filter.filtroFechaFin != null ? \"filter[fecha][lte]=\" + this.filter.filtroFechaFin + '&' : '';\r\n\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n\r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateMovimientoInterno(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteMovimientoInterno(event);\r\n                break;\r\n            case 'reporte':\r\n                this.reporteMovimientoInterno(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveMovimientoInterno() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento interno creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateMovimientoInterno(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Movimiento interno editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteMovimientoInterno(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar Movimiento interno: \" + event.params.data.fecha,\r\n            message: `¿Desea eliminar el movimiento interno realizado el: ${event.params.data.fecha} ${event.params.data.hora}; del depósito: ${event.params.data.deposito} ?`,\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._movimientosInternosService.deleteMovimientoInterno(event.params.data.idmovimientointerno).subscribe({\r\n                        next: (res) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Movimiento interno eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este movimiento interno no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte y lo muestra en una nueva pestaña\r\n     */\r\n    reporteMovimientoInterno(event) {\r\n        const idMovimientoInterno = event.params.data.idmovimientointerno;\r\n        this._movimientosInternosService.reporteMovimientoInterno(idMovimientoInterno).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                const reportePath = data.path;\r\n                if (this.pwaService.isPwa()) {\r\n                    this.router.navigate(['/reporte', reportePath]);\r\n                } else {\r\n                    const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                    window.open(reporteUrl, '_blank'); \r\n                }\r\n                } else {\r\n                console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"absolute right-10\">\r\n            <button mat-flat-button (click)='saveMovimientoInterno()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\r\n                <div class=\"flex item-center\">\r\n                    <!-- SVG con fill=\"currentColor\" -->\r\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5\">Nuevo Movimiento interno</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2 mt-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'ssp'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\"\r\n            [acciones]=\"accionesObjeto\" [showMenu]=\"showMenu\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IMovimientoInterno } from '../../models/movimiento-interno';\r\nimport { MovimientosInternosService } from '../../service/movimientos-internos.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { IArticulo } from 'app/modules/stock/articulos/models/articulo';\r\nimport { IDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-movimiento-interno',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    // Necesarios para la app\r\n    title: string;\r\n    user: any;\r\n    maxPalabras: number = 50;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    deposito_default = 0;\r\n    esEdicion: boolean;\r\n    mostrarSpinner = true;\r\n    mostrar_mensaje: boolean = false;\r\n\r\n    // Particulares del modulo\r\n    columns = ['codigointerno', 'articulo', 'cantidad', 'unidadmedida', 'deposito_ingreso', 'acciones'];\r\n    form: FormGroup;\r\n    form_carga_articulos: FormGroup;\r\n    movimiento_interno: IMovimientoInterno;\r\n    depositos_origen: IDeposito[] = [];\r\n    depositos_destino: IDeposito[] = [];\r\n    articulos: IArticulo[];\r\n    articulos_list = [];\r\n    unidades_de_medida: any[] = [];\r\n    mov_art_list: any[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    filteredArticulos: Observable<IArticulo[]>;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _movimientosInternosService: MovimientosInternosService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n        this.movimiento_interno = this.data ? this.data : null;\r\n        this.esEdicion = this.movimiento_interno ? true : false;\r\n        this.title = this.movimiento_interno?.idmovimientointerno ? `Editar Movimiento interno ${this.movimiento_interno.fecha} - ${this.movimiento_interno.hora}` : `Nuevo Movimiento interno`;\r\n        this.user = JSON.parse(localStorage.getItem('user'));\r\n        // Se define minDate como null o cualquier otra fecha límite que desees permitir hacia atras\r\n        this.minDate = null;\r\n        // Define maxDate como el dia de hoy\r\n        this.maxDate = new Date();\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Load empresa data\r\n        this.loadServices();\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        const [dia, mes, anio] = this.movimiento_interno ? this.movimiento_interno.fecha.split('/') : ''; //Se hace esto para poder manejar el formato que se cambio en el render del componente de tabla dinamica.\r\n\r\n        if (this.movimiento_interno) { //Sí existe el orden de compra, cargo la grilla con sus articulos...\r\n            this.getItems(this.movimiento_interno.idmovimientointerno).then((res) => {\r\n                this.mov_art_list = res.map(m => {\r\n                    return {\r\n                        idarticulo: m.idarticulo,\r\n                        cantidad: parseFloat(m.cantidad),\r\n                        idunidadmedida: m.idunidadmedida,\r\n                        descripcion_articulo: m.descripcion_articulo,\r\n                        descripcion_um: m.descripcion_um,\r\n                        codigo_interno: m.codigo_interno_articulo,\r\n                        deposito_ingreso: m.deposito_ingreso,\r\n                        descripcion_deposito_ingreso: m.descripcion_deposito_ingreso,\r\n                        stock: m.stock_minimo_articulo    //Stock restante de ese articulo con esa um...\r\n                    }\r\n                })\r\n\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_egreso').disable();\r\n                } else {\r\n                    this.form.get('deposito_egreso').enable();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.form = new FormGroup({\r\n            fecha: new FormControl((this.movimiento_interno?.fecha ? this.datePipe.transform(new Date(`${mes}/${dia}/${anio}`), 'yyyy-MM-dd') : this.datePipe.transform(new Date(), 'yyyy-MM-dd')), [Validators.required]),\r\n            hora: new FormControl((this.movimiento_interno?.hora ? this.movimiento_interno.hora : this.datePipe.transform(new Date(), 'HH:mm')), [Validators.required]),\r\n            deposito_egreso: new FormControl((this.movimiento_interno ? { descripcion: this.movimiento_interno.deposito, iddeposito: this.movimiento_interno.iddeposito } : ''), Validators.required),\r\n            observaciones: new FormControl((this.movimiento_interno ? this.movimiento_interno.observaciones : ''), [Validators.maxLength(this.maxPalabras)]),\r\n        });\r\n\r\n        this.form_carga_articulos = new FormGroup({\r\n            articulo: new FormControl((''), Validators.required),\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            cantidad: new FormControl((''), Validators.required),\r\n            deposito_ingreso: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl((''))\r\n        });\r\n\r\n        if (this.movimiento_interno && this.form.get('deposito_egreso').value) {\r\n            this.seleccionItem(this.form.get('deposito_egreso').value)\r\n        }\r\n\r\n        this.updateFormValidators();\r\n    }\r\n\r\n    /**\r\n    * Si existe un stockinicial le mando 'true' a fondos y nada a TM para que me traiga todos los fondos y TMs al editar.\r\n    * Caso contrario, si se va a crear un stockinicial, llamo a los fondos sin enviarle un parametro asi me trae solo los activos y\r\n    * le envio un paramtro a los tipos de stockinicials para que me traiga los activos.\r\n    */\r\n    exist() {\r\n    }\r\n\r\n\r\n    /**\r\n     * Este metodo ejecuta todas las peticiones asincronas al mismo tiempo\r\n    */\r\n    async loadServices() {\r\n        await Promise.all([\r\n            this._empresaService.getEmpresa(),\r\n            this.getDepositos()\r\n        ]).then(() => {\r\n            this.mostrarSpinner = false;\r\n        })\r\n    }\r\n\r\n    // ################# Carga De Movimientos #################\r\n\r\n    /**\r\n * Esta funcion añade un nuevo item a la grilla dentro del saveComponent.\r\n * @var art_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n * @var um_descripcion busca en el arreglo correspondiente un elemento con el mismo id para imprimir su descripcion.\r\n * @var art_stk_ini Encapsula un objeto con los datos que deseamos mostrar en la tabla.\r\n */\r\n    addMovimiento(movimiento) {\r\n        if (this.form.get('deposito_egreso').value != '') {\r\n\r\n            let deposito_egreso_value = this.form.get('deposito_egreso').value.iddeposito;\r\n            if (typeof this.form.get('deposito_egreso').value == 'string') { //En caso de edicion...\r\n                let d = this.depositos_origen.find(d => d.descripcion === this.form.get('deposito_egreso').value);\r\n                deposito_egreso_value = d.iddeposito;\r\n            }\r\n\r\n            if (movimiento) {\r\n                let movimiento_articulo = {                                     //Encapsulo los datos que me interesan mostrar en la grilla.\r\n                    idarticulo: movimiento.articulo.idarticulo,\r\n                    cantidad: movimiento.cantidad,\r\n                    idunidadmedida: movimiento.unidad_medida,\r\n                    descripcion_articulo: movimiento.articulo.descripcion,\r\n                    descripcion_um: movimiento.unidadmedida_descripcion,\r\n                    codigo_interno: movimiento.articulo.codigo_interno,\r\n                    deposito_ingreso: movimiento.deposito_ingreso,\r\n                    descripcion_deposito_ingreso: movimiento.decripcion_deposito_ingreso,\r\n                    stock: movimiento.stock    //Stock restante de ese articulo con esa um...\r\n                }\r\n                this.mov_art_list = [movimiento_articulo, ...this.mov_art_list]; // Se agrega el nuevo articulo al comienzo de la lista para que siempre aparezca primero en la grilla\r\n                this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                if (this.mov_art_list.length != 0) {\r\n                    this.form.get('deposito_egreso').disable();\r\n                }\r\n\r\n                // Actualizar validaciones según el estado de la grilla\r\n                this.updateFormValidators()\r\n\r\n                this.limpiarCasillero('carga_exitosa'); // Limpio casillerros para que este listo para volver a cargar\r\n                this.alert.success(\"Artículo añadido con éxito\");\r\n            }\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * El resultado de esta operación es un nuevo \r\n     * array que contiene todos los elementos de la lista original, \r\n     * excepto el artículo que se desea eliminar.\r\n     * @param movimiento_articulo \r\n     */\r\n    deleteMovimiento(movimiento_articulo) {\r\n        this.mov_art_list.forEach((mov) => {\r\n            if (mov.idarticulo == movimiento_articulo.idarticulo && mov.idunidadmedida == movimiento_articulo.idunidadmedida) {\r\n                mov.stock = `${Number(mov.stock) + mov.cantidad}`;\r\n            };\r\n        });\r\n\r\n        this.mov_art_list = this.mov_art_list.filter((item) => { return item !== movimiento_articulo });\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n\r\n        if (this.mov_art_list.length === 0) {\r\n            this.form.get('deposito_egreso').enable();\r\n        }\r\n\r\n        this.alert.success(\"Artículo eliminado con éxito\")\r\n    }\r\n\r\n    /**\r\n    * Esta funcion maneja las cambios de seleccion que puedan tener los combos.\r\n    * @param $event \r\n    */\r\n    seleccionItem($event, info?) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form_carga_articulos.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && a.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.mov_art_list.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento && this.esEdicion === false) { //Sí existe minimo un movimiento...\r\n                let articulos_existentes = this.mov_art_list.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM... \r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form_carga_articulos.get('stock_existente').setValue(stock); //Lo mostramos.\r\n        }\r\n\r\n        //Al seleccionar un deposito...\r\n        if ($event.iddeposito) {\r\n            this.form_carga_articulos.enable();\r\n            this.getArticulosDepositos($event.iddeposito); //...Buscamos las UM que posee ese articulo.\r\n            this.getDepositosDestino($event.iddeposito);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n\r\n        if (this.form.get(input)) {\r\n            this.form.get(input).setValue('');\r\n            this.seleccionItem(input, 'reset');\r\n        }\r\n\r\n        if (input === 'articulo') {\r\n            this.form_carga_articulos.get('unidadmedida').disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'deposito_egreso') {\r\n            this.form_carga_articulos.disable();\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n        }\r\n\r\n        if (input === 'carga_exitosa') {\r\n            this.form_carga_articulos.get('unidadmedida').setValue('');\r\n            this.form_carga_articulos.get('articulo').setValue('');\r\n            this.form_carga_articulos.get('stock_existente').setValue('');\r\n            this.form_carga_articulos.get('cantidad').setValue('');\r\n            this.form_carga_articulos.get('deposito_ingreso').setValue('');\r\n        }\r\n    }\r\n\r\n    onCargar($event?: KeyboardEvent) {\r\n        if ($event?.key === 'Enter') {\r\n            $event.preventDefault();\r\n        }\r\n\r\n        if (!this.form_carga_articulos.get('unidadmedida').value || !this.form_carga_articulos.get('articulo').value || !this.form_carga_articulos.get('cantidad').value || !this.form_carga_articulos.get('deposito_ingreso').value) {\r\n            return this.alert.warning('Por favor, complete todos los campos de la carga de articulo');\r\n        }\r\n\r\n        if (!this.form_carga_articulos.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && articulo.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value) {\r\n                    if (this.form_carga_articulos.get('cantidad').value > articulo.stock) {\r\n                        this.form_carga_articulos.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.mov_art_list.find(movimiento => movimiento.idarticulo === this.form_carga_articulos.get('articulo').value.idarticulo && movimiento.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value && movimiento.deposito_ingreso === this.form_carga_articulos.get('deposito_ingreso').value);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form_carga_articulos.get('deposito_ingreso').setValue('');\r\n                        return this.alert.warning('En ese deposito ya existe un movimiento de ese articulo con esa unidad de medida!');\r\n                    }\r\n\r\n                    if (this.form_carga_articulos.get('cantidad').value <= articulo.stock && this.form_carga_articulos.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form_carga_articulos.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n                        let deposito = this.depositos_origen.find(deposito => deposito.iddeposito === this.form_carga_articulos.get('deposito_ingreso').value); //Traigo un deposito que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: this.form_carga_articulos.get('articulo').value,\r\n                            unidad_medida: this.form_carga_articulos.get('unidadmedida').value,\r\n                            cantidad: this.form_carga_articulos.get('cantidad').value,\r\n                            deposito_ingreso: this.form_carga_articulos.get('deposito_ingreso').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            decripcion_deposito_ingreso: deposito.descripcion,\r\n                            stock: `${Number(articulo.stock) - this.form_carga_articulos.get('cantidad').value}`,\r\n                        }\r\n\r\n                        this.addMovimiento(movimiento_articulo);\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n        // Verificar la longitud de las observaciones\r\n        if (!this.isPalabraMaxLengthReached()) {\r\n            return this.alert.error(`La longitud máxima de observaciones es de ${this.maxPalabras} caracteres.`);\r\n        }\r\n\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                deposito_ingreso: objeto.deposito_ingreso,\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida,\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo al orden de compra')\r\n            }\r\n\r\n            const fecha = this.form.get('fecha').value;\r\n            const hora = this.form.get('hora').value;\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                movimiento_interno: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora: fecha_hora,\r\n                    iddeposito: this.form.get('deposito_egreso').value.iddeposito,\r\n                    observaciones: this.form.get('observaciones').value,\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            if (this.movimiento_interno?.idmovimientointerno) {\r\n                this._movimientosInternosService.updateMovimientoInterno(payload, this.movimiento_interno.idmovimientointerno)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._movimientosInternosService.saveMovimientoInterno(payload)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.dialogRef.close(data);\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close(false)\r\n    }\r\n\r\n    // ################# Metodos de escaner QR #################\r\n\r\n    /**\r\n* Se escanea el QR de la Etiqueta de articulo y se toma el idarticulo.\r\n*/\r\n    etiquetaArticulo() {\r\n        let deposito = this.form.get('deposito_egreso').value;\r\n\r\n        if (!deposito) {\r\n            return this.alert.error('Debe seleccionar un depósito');\r\n        }\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n\r\n            if (!code || code.length === 0) {\r\n                return this.alert.error('Código QR vacío o inválido');\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo'], 10);\r\n            this._movimientosInternosService.getArticulosDepositos(deposito['iddeposito'], idarticulo).subscribe(response => {\r\n                if (response?.list?.length > 0) {\r\n                    const articulo = response.list[0];\r\n                    this.form_carga_articulos.get('articulo').setValue(articulo);\r\n                } else {\r\n                    return this.alert.error('No hay stock del artículo en el depósito');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener artículo:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    // ################# Metodos de comunicacion con el service #################\r\n\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._movimientosInternosService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos_origen = Depositos.list;\r\n\r\n            if (this.form.get('deposito_egreso').value) {\r\n                this.depositos_destino = this.depositos_origen.filter(deposito => deposito.iddeposito != this.form.get('deposito_egreso').value.iddeposito);\r\n            }\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos_origen.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto && !this.movimiento_interno) {\r\n                this.form.get('deposito_egreso').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito_egreso').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterTextGenerico(value, this.depositos_origen, 'descripcion')),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n * Esta funcion lista los depositos activos.\r\n * @param deposito_origen \r\n */\r\n    async getDepositosDestino(deposito_origen?) {\r\n        new Promise(async (resolve) => {\r\n            this.depositos_destino = this.depositos_origen.filter(deposito => deposito.iddeposito != deposito_origen); //Solo se almacenan los depositos que sean distintos al deposito de origen.\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n * Esta funcion solicita las unidades de medida que posee un articulo.\r\n * @param idarticulo \r\n */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            let um_base; // Asigno una variable global para que cada UM sepa cual es la um base (factor = '1.00')\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo && a.factor_um != null).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                //Convierto en numero\r\n                a.factor_um = parseFloat(a.factor_um);\r\n\r\n                // Almaceno solo la um base de un articulo \r\n                if (a.factor_um === 1) {\r\n                    um_base = a.um;\r\n                }\r\n\r\n                return { idarticulo: a.idarticulo, idunidadmedida: a.idunidadmedida, descripcion_um: a.um, stock: a.stock, factor_um: a.factor_um, um_base: um_base }\r\n            });\r\n\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form_carga_articulos.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionItem({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n    * Funcion que lista los articulos que posee un déposito.\r\n    */\r\n    async getArticulosDepositos(iddeposito: number) {\r\n        const articulos_um_deposito = await firstValueFrom(this._movimientosInternosService.getArticulosDepositos(iddeposito)); //solicitamos los aticulos que esten en un deposito\r\n        new Promise(async (resolve) => {\r\n            this.articulos = articulos_um_deposito.list;\r\n            this.filteredArticulos = this.form_carga_articulos.get('articulo').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterArticulos(value)),\r\n            );\r\n            resolve(true);\r\n        });\r\n\r\n        //Esta funcion la realizamos para listar los articulos sin que se repitan.\r\n        articulos_um_deposito.list.forEach(item => {\r\n            const existeArticulo = this.articulos_list.find(articulo => articulo.idarticulo === item.idarticulo);\r\n            if (!existeArticulo) {\r\n                let articulo = { idarticulo: item.idarticulo, codigo_interno: item.codigo_interno, descripcion: item.descripcion };\r\n                this.articulos_list.push(articulo);\r\n            };\r\n        });\r\n    }\r\n\r\n    async getItems(idmovimientointerno): Promise<any> {\r\n        return new Promise(async (resolve) => {\r\n            const items = await firstValueFrom(this._movimientosInternosService.getItems(idmovimientointerno));\r\n            this.mov_art_list = items.list;\r\n            resolve(this.mov_art_list);\r\n        })\r\n    }\r\n\r\n    // ################# Metodo de filtrado para inputs autocomplete #################\r\n\r\n    /**\r\n    * Esta funcion es para filtrar los artículos según el input que se haya ingresado en el buscador de articulos.\r\n    * @param value \r\n    * @returns \r\n    */\r\n    private _filterArticulos(value: string): IArticulo[] {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return this.articulos_list.filter(articulo => {\r\n            const codigo_interno = articulo.codigo_interno.toString().toLowerCase().includes(filterValue);\r\n            const descripcion = articulo.descripcion.toString().toLowerCase().includes(filterValue);\r\n            return codigo_interno || descripcion;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Funcion generica para encontrar un item en un arreglo, parametrizable.\r\n     * @param value Valor ingresado por buscador\r\n     * @param array Arreglo donde se compara la busqueda\r\n     * @param param Campo por el que se desea buscar coincidencias\r\n     * @returns Resultado de busqueda\r\n     */\r\n    private _filterTextGenerico(value: string, array: any[], param: string) {\r\n        const filterValue = value.toString().toLowerCase();\r\n        return array.filter(res => {\r\n            const result = res[`${param}`].toString().toLowerCase().includes(filterValue);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n    * Obtenemos la descripcion del articulo seleccionado.\r\n    * @param articulo \r\n    * @returns \r\n    */\r\n    getTextArticulo(articulo: IArticulo): string {\r\n        return articulo ? `${articulo.codigo_interno} - ${articulo.descripcion}` : '';\r\n    }\r\n\r\n    // ################# Metodos extra #################\r\n\r\n    /**\r\n    * Funcion para contar las palabras en las observaciones\r\n    */\r\n    getPalabrasLength(): number {\r\n        const observaciones = this.form.get('observaciones').value;\r\n        return observaciones ? observaciones.length : 0;\r\n    }\r\n\r\n    /**\r\n    * Funcion para verificar si se ha alcanzado el límite de caracteres en las observaciones\r\n    */\r\n    isPalabraMaxLengthReached(): boolean {\r\n        return this.getPalabrasLength() <= this.maxPalabras;\r\n    }\r\n\r\n    /**\r\n     * Este metodo sirve para agregar o quitar las validaciones de requeridos a los campos del formulario de carga de articulos.\r\n     */\r\n    updateFormValidators() {\r\n        if (this.mov_art_list.length === 0) {\r\n            // Si la grilla está vacía, hacer que los campos sean requeridos\r\n            this.form_carga_articulos.get('articulo').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('cantidad').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('unidadmedida').setValidators(Validators.required);\r\n            this.form_carga_articulos.get('deposito_ingreso').setValidators(Validators.required);\r\n        } else {\r\n            // Si hay elementos en la grilla, quitar la validación de requerido\r\n            this.form_carga_articulos.get('articulo').clearValidators();\r\n            this.form_carga_articulos.get('cantidad').clearValidators();\r\n            this.form_carga_articulos.get('unidadmedida').clearValidators();\r\n            this.form_carga_articulos.get('deposito_ingreso').clearValidators();\r\n        }\r\n\r\n        // Asegurarse de que Angular reevalúe las validaciones\r\n        this.form_carga_articulos.get('articulo').updateValueAndValidity();\r\n        this.form_carga_articulos.get('cantidad').updateValueAndValidity();\r\n        this.form_carga_articulos.get('unidadmedida').updateValueAndValidity();\r\n        this.form_carga_articulos.get('deposito_ingreso').updateValueAndValidity();\r\n    }\r\n\r\n    /**\r\n    * Filtro para buscar en la grilla de articulos\r\n    * @param filterValue \r\n    */\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n}","<div\r\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl xl:max-h-[950px] xl:min-h-[850px] sm:max-h-[630px] sm:min-h-[500px] overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\r\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Spinner -->\r\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\r\n\r\n    <!-- Alert -->\r\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\r\n        {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form *ngIf=\"!mostrarSpinner\" class=\"form-menu p-4\" [formGroup]=\"form\">\r\n        <div class=\"flex flex-col w-full h-full p-4\">\r\n\r\n            <!-- Datos del movimiento -->\r\n            <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Fecha\" formControlName=\"fecha\" readonly=\"true\"\r\n                        [min]=\"minDate\" [max]=\"maxDate\" />\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"outline\" class=\"w-full sm:w-1/4\">\r\n                    <mat-label>Hora</mat-label>\r\n                    <input matInput formControlName=\"hora\" type=\"time\" />\r\n                </mat-form-field>\r\n                <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                    <mat-label>Depósito Origen</mat-label>\r\n                    <input type=\"text\" matInput formControlName=\"deposito_egreso\" [matAutocomplete]=\"dep\"\r\n                        (ngModelChange)=\"seleccionItem($event)\">\r\n                    <mat-autocomplete autoActiveFirstOption #dep=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                        <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                            {{ deposito.descripcion }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                    <button matSuffix mat-icon-button (click)=\"limpiarCasillero('deposito_egreso')\" class=\"mr-2\"\r\n                        *ngIf=\"form.get('deposito_egreso').value && mov_art_list.length == 0\">\r\n                        <mat-icon>clear</mat-icon>\r\n                    </button>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <!-- Carga de artículos -->\r\n            <form [formGroup]=\"form_carga_articulos\">\r\n                <div class=\"flex gap-2 flex-col sm:flex-row\">\r\n                    <div class=\"flex w-full gap-1\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\">\r\n                            <mat-label>Artículo</mat-label>\r\n                            <input type=\"text\" matInput formControlName=\"articulo\" [matAutocomplete]=\"art_carga\"\r\n                                (ngModelChange)=\"seleccionItem($event)\">\r\n                            <mat-autocomplete autoActiveFirstOption #art_carga=\"matAutocomplete\"\r\n                                [displayWith]=\"getTextArticulo\">\r\n                                <mat-option *ngFor=\"let articulo of filteredArticulos | async\" [value]=\"articulo\">\r\n                                    {{ articulo.codigo_interno }} - {{ articulo.descripcion }}\r\n                                </mat-option>\r\n                            </mat-autocomplete>\r\n                            <button matSuffix mat-icon-button (click)=\"limpiarCasillero('articulo')\" class=\"mr-2\"\r\n                                *ngIf=\"form_carga_articulos.get('articulo').value\">\r\n                                <mat-icon>clear</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                [style.color]=\"color_secundario\"\r\n                                class=\"flex items-center justify-center w-12 h-12 rounded-full ml-1 mt-1\"\r\n                                (click)=\"etiquetaArticulo()\" [disabled]=\"!form.get('deposito_egreso')?.value\">\r\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path\r\n                                        d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                                        fill=\"currentColor\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>UM</mat-label>\r\n                        <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionItem({um: $event})\">\r\n                            <mat-option *ngFor=\"let um of unidades_de_medida\" [value]=\"um.idunidadmedida\">\r\n                                {{um.descripcion_um}} <i *ngIf=\"um.factor_um != 1\" class=\"font-light\">(x{{um.factor_um}}\r\n                                    {{um.um_base}})</i>\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>En stock</mat-label>\r\n                        <input matInput type=\"number\" formControlName=\"stock_existente\" readonly=\"true\">\r\n                    </mat-form-field>\r\n                    <mat-form-field appearance='outline' class=\"w-full sm:w-1/2\">\r\n                        <mat-label>Depósitos Destino</mat-label>\r\n                        <mat-select formControlName=\"deposito_ingreso\">\r\n                            <mat-option *ngFor=\"let deposito of depositos_destino\"\r\n                                [value]=\"deposito.iddeposito\">{{deposito.descripcion}}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <div class=\"flex w-full sm:w-1/2\">\r\n                        <mat-form-field appearance='outline' class=\"w-full sm:w-full\"\r\n                            (keydown.enter)=\"onCargar($event)\">\r\n                            <mat-label>Cantidad</mat-label>\r\n                            <input matInput type=\"number\" formControlName=\"cantidad\">\r\n                        </mat-form-field>\r\n                        <div class=\"flex\">\r\n                            <button [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n                                matTooltip='Añadir UM'\r\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full mt-2 ml-2 sm:ml-4 transition-transform transform active:scale-95\"\r\n                                (click)=\"onCargar()\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Barra de busqueda de articulos en la grilla -->\r\n            <div class=\"search-container mt-2 mb-1 flex\">\r\n                <div class=\"relative w-full md:w-1/3\">\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Buscar artículo\"\r\n                        class=\"w-full bg-slate-50 border border-gray-200 rounded-lg shadow-md py-2 px-4 text-sm placeholder-gray-500 text-gray-700 transition duration-300\" />\r\n                    <span class=\"absolute inset-y-0 right-4 flex items-center text-gray-400\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                            <path fill-rule=\"evenodd\"\r\n                                d=\"M12.9 14.32a8 8 0 111.42-1.42l4.39 4.4a1 1 0 11-1.42 1.41l-4.4-4.39zM8 14a6 6 0 100-12 6 6 0 000 12z\"\r\n                                clip-rule=\"evenodd\" />\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[200px] h-[200px] shadow-md rounded-lg\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full mt-1 '>\r\n                    <ng-container matColumnDef='codigointerno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                            Codigo Interno</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">\r\n                            Articulo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo' class=\"w-auto\">\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Unidad de medida</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Cantidad</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='deposito_ingreso'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white w-auto\">Depósito Destino</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_deposito_ingreso}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='acciones'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento'>\r\n                            <button mat-icon-button (click)=\"deleteMovimiento(movimiento)\" #delete>\r\n                                <mat-icon color=\"warn\">delete</mat-icon>\r\n                            </button>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Mostrar el contador de items -->\r\n            <div class=\"flex w-full items-center my-2 px-4\">\r\n                <span class=\"flex-grow\"></span>\r\n                <label class=\"text-gray-700 text-sm\">\r\n                    Total de artículos: {{ dataSource.data.length }}\r\n                </label>\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"outline\" class=\"w-full mt-4\">\r\n                <mat-label>Observaciones</mat-label>\r\n                <textarea matInput formControlName=\"observaciones\" class=\"resize-none\"></textarea>\r\n                <div class=\"counter\" [ngClass]=\"{'reached-max': !isPalabraMaxLengthReached()}\">\r\n                    {{ getPalabrasLength() }}/{{ maxPalabras }}\r\n                </div>\r\n            </mat-form-field>\r\n        </div>\r\n    </form>\r\n    <div *ngIf=\"!mostrarSpinner\" class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\">\r\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\r\n            [style.background-color]=\"color_primario || '' \"\r\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Guardar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MovimientosInternosComponent } from './components/movimientos-internos.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { MovimientosInternosService } from './service/movimientos-internos.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: MovimientosInternosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [MovimientosInternosComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule,\r\n        SharedComponentModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [MovimientosInternosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class MovimientosInternosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IMovimientoInterno, IMovimientoInternoResponse } from '../models/movimiento-interno';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\nimport { IProveedor } from 'app/modules/administracion/proveedores/models/proveedor';\r\n\r\n@Injectable()\r\nexport class MovimientosInternosService {\r\n    constructor(private http: HttpClient, private _authService: AuthService) { }\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param movimiento_interno \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveMovimientoInterno(movimiento_interno:IMovimientoInterno): Observable<IMovimientoInterno> {\r\n        return this.http.post<IMovimientoInterno>(`${environment.stock.movimiento_internos}`, movimiento_interno);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param movimiento_interno\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateMovimientoInterno(movimiento_interno: IMovimientoInterno, idmovimientointerno: number): Observable<IMovimientoInterno> {\r\n        return this.http.put<IMovimientoInterno>(`${environment.stock.movimiento_internos}` + '/' + idmovimientointerno, movimiento_interno);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idmovimientointerno \r\n     * @returns Elimina un item\r\n     */\r\n    deleteMovimientoInterno(idmovimientointerno: number): Observable<IMovimientoInterno> {\r\n        return this.http.delete<IMovimientoInterno>(`${environment.stock.movimiento_internos}` + '/' + idmovimientointerno);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param idmovimientointerno \r\n     * @returns \r\n     */\r\n    reporteMovimientoInterno(idmovimientointerno: number): Observable<IMovimientoInternoResponse> {\r\n        return this.http.get<IMovimientoInternoResponse>(`${environment.stock.reporte_movimiento_internos}` + idmovimientointerno);\r\n    }\r\n\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getArticulosDepositos(deposito: number, idarticulo?: number) {\r\n        let f = `?filter[deposito]=${deposito}`;\r\n        f += idarticulo ? `&filter[idarticulo]=${idarticulo}` : '';\r\n\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        let f = `?filter[idarticulo]=${idarticulo}`\r\n        f += `&expand=um`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.articulo_unidad_medidas}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    getItems(idmovimientointerno: number) {\r\n        let f = `?filter[idmovimientointerno]=${idmovimientointerno}`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_movimientos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    getUsuarios(){\r\n        let f = `?sort=asc`;\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.login.view_usuarios}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable();\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["FormControl","FormGroup","fuseAnimations","MAT_DATE_FORMATS","MY_DATE_FORMATS","firstValueFrom","map","startWith","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","_r1","ɵɵelementStart","ɵɵlistener","FilterMenuComponent_button_21_Template_button_click_0_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","limpiarFechas","ɵɵtext","ɵɵelementEnd","deposito_r8","iddeposito","ɵɵadvance","ɵɵtextInterpolate","descripcion","usuario_r9","nick","ɵɵtextInterpolate1","FilterMenuComponent","constructor","data","_menuService","datePipe","_movimientosInternosService","_empresaService","usuarios","filterDeposito","filterUsuarios","filterFechas","movimientos_internos_list","default_color","_unsubscribeAll","ngOnInit","formFilters","filtroFechaInicio","filtroFechaFin","usuario","deposito","getDepositos","getUsuarios","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","patchValue","filter","resetFilters","reset","onCloseMenu","transform","get","value","close","setValue","_this","_asyncToGenerator","Usuarios","list","filteredUsuario","controls","valueChanges","_filterUsuaurio","filterValue","toLowerCase","includes","_this2","stk_list","ɵɵdirectiveInject","i1","JedsMenuService","i2","DatePipe","i3","MovimientosInternosService","i4","EmpresaService","selectors","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_datepicker_toggle_18_Template","FilterMenuComponent_button_21_Template","FilterMenuComponent_mat_option_28_Template","FilterMenuComponent_mat_option_38_Template","FilterMenuComponent_Template_button_click_41_listener","FilterMenuComponent_Template_button_click_44_listener","getRawValue","ɵɵclassMap","ɵɵstyleProp","_r4","ɵɵpipeBind1","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","MovimientosInternosComponent","confirm","alert","dialogo","_searchService","router","_headerTextService","pwaService","dataSource","headers","column_params","funcionesObjeto","accionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","movimiento_internos","search","setTitulo","iconoAccion","movimiento_interno","iconoAccionado","iconoDeshabilitado","visible","showMenu","nombre_boton","functionName","SearchTextSub$","getSearchText","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","getElementosExistentes","afterClosed","next","generarAcciones","name","updateMovimientoInterno","deleteMovimientoInterno","reporteMovimientoInterno","saveMovimientoInterno","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","title","fecha","message","hora","dismissible","actions","show","color","label","cancel","res","idmovimientointerno","renderTabla","error","console","warning","idMovimientoInterno","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","ngOnDestroy","unsubscribe","FuseConfirmationService","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","i10","PwaService","viewQuery","MovimientosInternosComponent_Query","MovimientosInternosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵnamespaceHTML","MovimientosInternosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","finalize","takeWhile","tap","timer","MAT_DIALOG_DATA","LectorQrComponent","ctx_r1","_alertConfig","type","showAlert","deposito_r28","SaveComponent_form_10_button_20_Template_button_click_0_listener","_r30","ctx_r29","limpiarCasillero","articulo_r31","ɵɵtextInterpolate2","codigo_interno","SaveComponent_form_10_button_32_Template_button_click_0_listener","_r33","ctx_r32","um_r34","factor_um","um_base","SaveComponent_form_10_mat_option_41_i_2_Template","idunidadmedida","descripcion_um","deposito_r37","ctx_r13","movimiento_articulo_r38","ctx_r15","movimiento_articulo_r39","descripcion_articulo","ctx_r17","movimiento_articulo_r40","ctx_r19","movimiento_articulo_r41","cantidad","ctx_r21","movimiento_articulo_r42","descripcion_deposito_ingreso","ctx_r23","SaveComponent_form_10_td_85_Template_button_click_1_listener","restoredCtx","_r46","movimiento_r43","$implicit","ctx_r45","deleteMovimiento","SaveComponent_form_10_Template_input_ngModelChange_15_listener","_r49","ctx_r48","seleccionItem","SaveComponent_form_10_mat_option_18_Template","SaveComponent_form_10_button_20_Template","SaveComponent_form_10_Template_input_ngModelChange_27_listener","ctx_r50","SaveComponent_form_10_mat_option_30_Template","SaveComponent_form_10_button_32_Template","SaveComponent_form_10_Template_button_click_34_listener","ctx_r51","etiquetaArticulo","SaveComponent_form_10_Template_mat_select_ngModelChange_40_listener","ctx_r52","um","SaveComponent_form_10_mat_option_41_Template","SaveComponent_form_10_mat_option_50_Template","SaveComponent_form_10_Template_mat_form_field_keydown_enter_52_listener","ctx_r53","onCargar","SaveComponent_form_10_Template_button_click_57_listener","ctx_r54","SaveComponent_form_10_Template_input_keyup_62_listener","ctx_r55","applyFilter","target","ɵɵelementContainerStart","SaveComponent_form_10_th_69_Template","SaveComponent_form_10_td_70_Template","ɵɵelementContainerEnd","SaveComponent_form_10_th_72_Template","SaveComponent_form_10_td_73_Template","SaveComponent_form_10_th_75_Template","SaveComponent_form_10_td_76_Template","SaveComponent_form_10_th_78_Template","SaveComponent_form_10_td_79_Template","SaveComponent_form_10_th_81_Template","SaveComponent_form_10_td_82_Template","SaveComponent_form_10_th_84_Template","SaveComponent_form_10_td_85_Template","SaveComponent_form_10_tr_86_Template","SaveComponent_form_10_tr_87_Template","SaveComponent_form_10_div_88_Template","ctx_r2","form","minDate","maxDate","_r5","getTextDeposito","filteredDepositos","mov_art_list","length","form_carga_articulos","_r8","getTextArticulo","filteredArticulos","tmp_17_0","unidades_de_medida","depositos_destino","columns","ɵɵpureFunction1","_c0","isPalabraMaxLengthReached","getPalabrasLength","maxPalabras","SaveComponent_div_11_Template_button_click_1_listener","_r57","ctx_r56","onSubmit","ctx_r3","dialogRef","deposito_default","mostrarSpinner","mostrar_mensaje","depositos_origen","articulos_list","esEdicion","user","JSON","parse","localStorage","getItem","Date","loadServices","newForm","subscribeAlert","emitConfig","config","appearance","time","dia","mes","anio","split","getItems","then","m","idarticulo","parseFloat","codigo_interno_articulo","deposito_ingreso","stock_minimo_articulo","disable","enable","required","deposito_egreso","observaciones","maxLength","articulo","unidadmedida","stock_existente","updateFormValidators","exist","Promise","all","addMovimiento","movimiento","deposito_egreso_value","d","find","movimiento_articulo","unidad_medida","unidadmedida_descripcion","decripcion_deposito_ingreso","forEach","mov","Number","item","info","getUnidadesDeMedidaArticulos","articulo_um","a","cantidad_existente","existeMovimiento","articulos_existentes","ae","getArticulosDepositos","getDepositosDestino","input","key","preventDefault","valid","articulos","movimientos","objeto","fecha_formateada","fecha_hora","payload","idusuario","id","emit","sendObject","code","decodedText","parseInt","response","option","Depositos","_ref","resolve","depositoPorDefecto","_filterTextGenerico","_x","apply","arguments","deposito_origen","_this3","_ref2","_x2","_this4","_ref3","sort","b","_x3","_this5","articulos_um_deposito","_ref4","_filterArticulos","_x4","existeArticulo","push","_this6","_ref5","items","_x5","toString","array","param","result","setValidators","clearValidators","updateValueAndValidity","trim","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_spinner_component_8_Template","SaveComponent_fuse_alert_9_Template","SaveComponent_form_10_Template","SaveComponent_div_11_Template","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","SharedComponentModule","routes","component","MovimientosInternosModule","imports","forChild","declarations","exports","http","_authService","post","put","delete","reporte_movimiento_internos","f","subject","depositos","resp","accessToken","token","asObservable","view_stock_articulo_depositos","articulo_unidad_medidas","view_stock_movimientos","login","view_usuarios","ɵɵinject","HttpClient","AuthService","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_c1","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","document","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","Array","from","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","some","textContent","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}