{"version":3,"file":"src_app_modules_stock_rubros_rubros_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/rubros/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/rubros/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/rubros/components/rubros.component.ts","./src/app/modules/stock/rubros/components/rubros.component.html","./src/app/modules/stock/rubros/components/save/save.component.ts","./src/app/modules/stock/rubros/components/save/save.component.html","./src/app/modules/stock/rubros/rubros.module.ts","./src/app/modules/stock/rubros/service/rubros.service.ts","./node_modules/@angular/material/fesm2022/toolbar.mjs"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AuthService } from '@core/auth/auth.service';\nimport { IUsuario, User } from '@core/user/user.types';\nimport { fuseAnimations } from '@fuse/animations';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n  selector: 'app-filter-menu',\n  templateUrl: './filter-menu.component.html',\n  styleUrls: ['./filter-menu.component.scss'],\n  animations: fuseAnimations\n})\nexport class FilterMenuComponent implements OnInit {\n  public formFilters: FormGroup;\n  public proveedorespp: any[];\n  color_primario: string;\n  color_secundario: string;\n  default_color: string = 'bg-primary';\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n  constructor(\n    @Inject('MENU_DATA') public data: any, \n    private menuService: JedsMenuService,\n    private _empresaService: EmpresaService\n  ) { }\n\n  ngOnInit(): void {\n    this.formFilters = new FormGroup({\n      activo: new FormControl(-1)\n    });\n    // Subscribe to empresa data\n    this._empresaService.empresa$\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(empresa => {\n          this.color_primario = empresa.color_primario;\n          this.color_secundario = empresa.color_secundario;\n      });\n\n    // Load empresa data\n    this._empresaService.getEmpresa();\n    this.formFilters.patchValue(this.data.filter);\n  }\n\n  resetFilters() {\n    this.formFilters.reset({\n      activo: -1,\n    });\n  }\n\n  onCloseMenu(data: any = null) {\n    this.menuService.close(data);\n  }\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\n    [@expandCollapse]=\"'expanded'\">\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\n        <div>\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\n                <mat-icon class=\"text-white\">refresh</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\n        <span class=\"font-semibold text-gray-600 text-base\">Activo</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <mat-select formControlName='activo'>\n                <mat-option [value]='-1'>Todos</mat-option>\n                <mat-option [value]='0' class=\"fila-naranja\">No</mat-option>\n                <mat-option [value]='1' class=\"fila-amarillo\">Si</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \n            [style.border]=\"color_primario || '' \"\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\n            <span class=\"font-medium text-base\">Limpiar</span>\n        </button>\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\n            <span class=\"text-white font-bold\">Filtrar</span>\n        </button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { IFilterRubro, IRubro } from '../models/rubro';\nimport { RubrosService } from '../service/rubros.service';\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { SaveComponent } from './save/save.component';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { FormControl } from '@angular/forms';\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from 'environments/environment';\nimport { SearchService } from 'app/layout/common/search/search.service';\nimport { MatButton } from '@angular/material/button';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\nimport { Router } from '@angular/router';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\n@Component({\n    selector: 'app-rubros',\n    templateUrl: './rubros.component.html',\n    styleUrls: ['./rubros.component.scss']\n})\nexport class RubrosComponent implements OnInit, OnDestroy {\n    rubros: IRubro[];\n    public dataSource: MatTableDataSource<IRubro> = new MatTableDataSource();\n    headers = ['Descripcion', 'Activo', 'Acciones'];\n    column_params = ['descripcion', 'activo', 'acciones'];\n    funcionesObjeto = null;\n    filtroBusqueda: string = '';\n    filtersLike = ['descripcion'];\n    filter: IFilterRubro = {\n        activo: -1,\n    };\n    @Input() extraParams='';\n    @Output() parametrosActualizados = new EventEmitter<any>();\n    env = environment.stock.rubros + '?sort=descripcion'\n    search: FormControl = new FormControl('');\n    sortValue: string;\n    FilterEventSub$: Subscription;\n    SearchTextSub$: Subscription;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'border-primary text-primary';\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    constructor(\n        private _rubrosService: RubrosService,\n        private _empresaService: EmpresaService,\n        private confirm: FuseConfirmationService,\n        private alert: AppAlertService,\n        private dialogo: MatDialog,\n        private _searchService: SearchService,\n        private _menuService: JedsMenuService,\n        private router: Router,\n        public _headerTextService: HeaderTextService,\n    ) {\n        this._headerTextService.setTitulo(this.router);\n\n        /**\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\n         */\n        this.funcionesObjeto = [\n            {\n                nombre_boton: \"Editar\",\n                functionName: 'editar',\n                iconoAccion: (rubro: IRubro) => 'jedstion:editar',\n                iconoAccionado: (rubro: IRubro) => '',\n                iconoDeshabilitado: (rubro: IRubro) => '',\n                visible: (rubro: IRubro) => true\n            },\n            {\n                nombre_boton: \"Eliminar\",\n                functionName: 'eliminar',\n                iconoAccion: (rubro: IRubro) => 'jedstion:eliminar',\n                iconoAccionado: (rubro: IRubro) => '',\n                iconoDeshabilitado: (rubro: IRubro) => '',\n                visible: (rubro: IRubro) => true\n            },\n        ];\n    }\n\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\n    ngOnInit(): void {\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(empresa => {\n                this.color_primario = empresa.color_primario;\n                this.color_secundario = empresa.color_secundario;\n            });\n        \n        // Load empresa data\n        this._empresaService.getEmpresa();\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\n            debounceTime(750),\n            distinctUntilChanged()\n        )\n            .subscribe(value => {\n                this.filtroBusqueda = value;\n                this.tabla.filters(this.filtroBusqueda);\n            });\n\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\n            this.onFilterMenu(this._searchService.getFilterOrigin())\n        });\n    }\n   \n    onFilterMenu(origin: MatButton) {\n        this._menuService\n            .open(FilterMenuComponent, origin._elementRef, {\n                filter: this.filter,\n            })\n            .afterClosed()\n            .subscribe({\n                next: filter => {\n                    if (filter) {\n                        this.filter = filter;\n                        this.extraParams = this.filter.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\n                        this.tabla.filters(this.filtroBusqueda);\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\n                        \n                    }\n                },\n            });\n    }\n\n    /**\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\n * @param event \n */\n    generarAcciones(event: { name: string, params: any }) {\n        switch (event.name) {\n            case 'editar':\n                this.updateRubro(event);\n                break;\n            case 'eliminar':\n                this.deleteRubro(event);\n                break;\n        }\n    }\n\n    /**\n     * Esta funcion guarda un item\n     */\n    saveRubro() {\n        this.dialogo\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\n            .componentInstance.creadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.alert.success(\"Rubro creado con éxito.\");\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n\n    /**\n     * Esta funcion modifica un item\n     * @param event \n     */\n    updateRubro(event) {\n        this.dialogo\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\n            .componentInstance.editadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.alert.success(\"Rubro editado con éxito.\");\n                    this.tabla.filters(this.filtroBusqueda);\n                },\n            });\n    }\n\n    /**\n     * Esta funcion elimina un item\n     * @param event \n     */\n    deleteRubro(event) {\n        this.confirm.open({\n            title: \"Eliminar rubro \" + event.params.data.descripcion,\n            message: \"¿Desea eliminar el rubro: \" + event.params.data.descripcion + \"?\",\n            dismissible: false,\n            actions: {\n                confirm: {\n                    show: true,\n                    color: 'warn',\n                    label: 'Si',\n                },\n                cancel: {\n                    show: true,\n                    label: 'No',\n                },\n            },\n        })\n            .afterClosed()\n            .subscribe(res => {\n                if (res === 'confirmed') {\n                    this._rubrosService.deleteRubro(event.params.data.idrubro).subscribe({\n                        next: (data) => {\n                            // Manejar la respuesta exitosa\n                            this.alert.success(\"Rubro eliminado con éxito.\");\n                            if (res) {\n                                this.tabla.renderTabla()\n                            }\n                        },\n                        error: (error) => {\n                            // Manejar el error\n                            console.error('Error en el servicio:', error);\n                            this.alert.warning(\"Este rubro no puede eliminarse. Tiene elementos asociados.\");\n                        }\n                    });\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        this._searchService.unsubscribe()\n    }\n}","<div class=\"w-full flex flex-col relative \">\n    <div class=\"mb-12 mt-6\">\n        <!-- Contenedor del botón -->\n        <div class=\"absolute right-10\">\n            <button mat-flat-button (click)='saveRubro()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\n                <div class=\"flex item-center\">\n                    <!-- SVG con fill=\"currentColor\" -->\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\n                    </svg>\n                    <span class=\"ml-2 text-lg mt-0.5\">Agregar Rubro</span>\n                </div>\n            </button>\n        </div>\n    </div>\n    <div class=\"pr-2 pl-2\">\n        <!-- Tabla dinámica -->\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\n        </app-tabla-dinamica>\n    </div>\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { IRubro } from '../../models/rubro';\nimport { RubrosService } from '../../service/rubros.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IAlertConfig } from '@shared/models/alert';\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\nimport { environment } from 'environments/environment';\n\n@Component({\n    selector: 'app-save-rubros',\n    templateUrl: './save.component.html',\n    styleUrls: ['./save.component.scss']\n})\nexport class SaveComponent implements OnInit {\n    // Necesarios para la app\n    title: string;\n    showAlert = false;\n    _alertConfig: IAlertConfig;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'bg-primary';\n    mostrarSpinner = true;\n    mostrar_mensaje: boolean = false;\n\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\n\n    // Particulares del modulo\n    columns = ['nombre', 'activo', 'acciones'];\n    form: FormGroup;\n    rubro: IRubro;\n    imagenesNuevas = [];\n    imagen: string;\n    selectedFiles: File[] = [];\n    titleImagen: boolean;\n    imagenesRubros: any[] = [];\n    urlBase: string = environment.stock.ver_imagen + '/';\n    protected fileAdjuntoImagen: any;\n    protected validExtension = [\n        '.png',\n        '.jpg'\n    ];\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private rubrosService: RubrosService,\n        private _empresaService: EmpresaService,\n        public alert: AppAlertService,\n        public dialogRef: MatDialogRef<SaveComponent>\n    ) {\n        this.rubro = this.data ? this.data : null;\n        this.title = this.rubro?.idrubro ? 'Editar rubro' : 'Nuevo rubro';\n        this.imagen = data?.imagen;\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(empresa => {\n                this.color_primario = empresa.color_primario;\n                this.color_secundario = empresa.color_secundario;\n            });\n    }\n\n    ngOnInit(): void {\n        // Load empresa data\n        this._empresaService.getEmpresa();\n        this.newForm();\n        if (this.imagen) { //obtener las imagenes actuales de los rubros\n            this.getImagenRubros().then(() => {\n                this.mostrarSpinner = false;\n            })\n        } else {\n            this.mostrarSpinner = false;\n        };\n        this.subscribeAlert();\n    }\n\n    // Alert\n    subscribeAlert() {\n        this.alert.emitConfig.subscribe({\n            next: (config: IAlertConfig) => {\n                this.showAlert = true;\n                this._alertConfig = {\n                    ...config,\n                    appearance: 'border',\n                };\n                let time = 2;\n                timer(100, 1500)\n                    .pipe(\n                        finalize(() => {\n                            this.showAlert = false;\n                            this._alertConfig = null;\n                        }),\n                        takeWhile(() => time > 0),\n                        takeUntil(this._unsubscribeAll),\n                        tap(() => (time -= 1))\n                    )\n                    .subscribe();\n            },\n        });\n    }\n\n    newForm() {\n        this.form = new FormGroup({\n            descripcion: new FormControl((this.rubro ? this.rubro.descripcion : ''), Validators.required),\n            activo: new FormControl((this.rubro ? (this.rubro?.activo ? 1 : 0) : ''), Validators.required),\n        });\n    }\n\n    async getImagenRubros() {\n        try {\n            this.imagenesRubros.push({\n                base64: this.urlBase + this.imagen,\n                extension: this.obtenerExtension(this.imagen),\n                name: this.imagen\n            });\n        } catch (error) {\n            console.error('Error al obtener los adjuntos del contrato:', error);\n        }\n    }\n\n    obtenerExtension(nombreArchivo: string): string {\n        // Encuentra la última aparición del punto en el nombre del archivo\n        const ultimoPuntoIndex = nombreArchivo.lastIndexOf('.');\n\n        // Si no se encuentra ningún punto o el punto está al final del nombre del archivo, no hay extensión\n        if (ultimoPuntoIndex === -1 || ultimoPuntoIndex === nombreArchivo.length - 1) {\n            return '';\n        }\n\n        // Devuelve la parte del nombre del archivo después del último punto (la extensión)\n        return nombreArchivo.slice(ultimoPuntoIndex + 1);\n    }\n\n    getFileNameFromUrl(url: string): string {\n        // Divide la URL en partes utilizando el carácter \"/\"\n        const parts = url.split('/');\n        // El último elemento del array es el nombre del archivo\n        const fileName = parts[parts.length - 1];\n        return fileName;\n    }\n\n    getFileSize(size: number): string {\n        const bytes = size;\n        const kilobytes = bytes / 1024;\n        if (kilobytes < 1024) {\n            return kilobytes.toFixed(2) + ' KB';\n        } else {\n            const megabytes = kilobytes / 1024;\n            return megabytes.toFixed(2) + ' MB';\n        }\n    }\n\n    getFileTitle(file: File): string {\n        return file.name + ' (' + this.getFileSize(file.size) + ')';\n    }\n\n    removeFile(imagenes: string, file: any) {\n        switch (imagenes) {\n            case 'imagenes nuevas':\n                {\n                    const index = this.selectedFiles.indexOf(file);\n                    if (index !== -1) {\n                        this.selectedFiles.splice(index, 1);\n                        if (this.selectedFiles.length === 0) {\n                            this.titleImagen = false;\n                        }\n                    }\n                    const adjIndex = this.imagenesNuevas.findIndex(adj => adj.name === file.name);\n                    if (adjIndex !== -1) {\n                        this.imagenesNuevas.splice(adjIndex, 1);\n                    }\n                    // Reinicializar el campo de entrada de archivos\n                    const campoArchivo = \"fileToUploadImagen\";\n                    (document.getElementById(campoArchivo) as HTMLInputElement).value = null;\n                }\n                break;\n            case 'imagenes guardadas':\n                {\n                    const adjIndex = this.imagenesRubros.findIndex(adj => adj.name === file.name);\n                    if (adjIndex !== -1) {\n                        this.imagenesRubros.splice(adjIndex, 1);\n                    }\n                }\n                break;\n            default: {\n                console.error('Ocurrió un error.')\n            }\n        }\n    }\n\n    onAddAdjunto(evento: Event) {\n        const imagenes: FileList = (evento.target as HTMLInputElement).files;\n        if (!imagenes || imagenes.length === 0) return; // No se seleccionaron archivos\n\n        if (this.imagenesNuevas.length > 0) {\n            this.alert.error(\"Solo se puede agregar una imagen\");\n            return;\n        }\n\n        for (let i = 0; i < imagenes.length; i++) {\n            const imagenRubro = imagenes[i];\n            this.selectedFiles.push(imagenRubro);\n            let tamaño = imagenRubro.size / 1024; // en Kb\n            tamaño = Math.round(tamaño);\n            const nombreArchivo = imagenRubro.name;\n            const extension = nombreArchivo.split('.').pop();\n\n            let imagenValida = true;\n            if (tamaño <= 20480) { // Máximo: 20 Mb\n                this.getBase64(imagenRubro).then(\n                    (data: any) => {\n                        let base64 = data.toString().split(\"base64,\")[1];\n                        if (this.validExtension.includes('.' + extension)) {\n                            const adj = {\n                                name: nombreArchivo,\n                                extension: extension,\n                                base64: base64\n                            };\n                            // Verificar si el archivo ya está en la lista\n                            const existe = this.imagenesNuevas.some(a => a.extension === adj.extension && a.base64 === adj.base64);\n                            if (!existe) {\n                                this.imagenesNuevas.push(adj);\n                                this.titleImagen = true; // Cambiar a verdadero cuando se agrega un archivo\n                            }\n                        } else {\n                            this.alert.info(\"Formato de archivo no soportado\");\n                            imagenValida = false;\n                        }\n                    });\n            } else {\n                this.alert.info(\"Tamaño de archivo superado: \" + imagenRubro?.name + \" - \" + Math.trunc(tamaño / 1024) + \" Mb\");\n                imagenValida = false;\n            }\n            if (!imagenValida) {\n                // Si el archivo no es válido, limpiar el campo de entrada\n                let campoArchivo;\n                this.fileAdjuntoImagen = null;\n                campoArchivo = \"fileToUploadImagen\";\n                (document.getElementById(campoArchivo) as HTMLInputElement).value = null;\n            }\n        }\n    }\n\n    async getBase64(file: any): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n\n    onSubmit() {\n        if (!this.form.valid) {\n            this.form.markAllAsTouched();\n            return this.alert.error('Revise Los Datos Ingresados');\n        } else {\n            if (this.imagenesRubros.length > 0 && this.imagenesNuevas.length > 0) {\n                this.alert.warning(\"Ya tiene una imagen cargada. Si desea agregar uno nueva, elimine la imagen existente.\");\n                return;\n            }\n            this.rubro = {\n                ...this.rubro,\n                descripcion: this.form.get('descripcion').value,\n                activo: this.form.get('activo').value,\n            }\n\n            if (this.imagenesNuevas.length > 0) {\n                this.rubro.imagen = this.imagenesNuevas[0].base64;\n            } else {\n                this.rubro.imagen = null;\n            }\n\n            if (this.rubro.idrubro) {\n                this.rubrosService.updateRubro(this.rubro)\n                    .subscribe({\n                        next: (data) => {\n                            if (data) {\n                                this.editadoExitosamente.emit();\n                                this.onCloseMenu()\n                            }\n                        }\n                    });\n            } else {\n                this.rubrosService.saveRubro(this.rubro)\n                    .subscribe({\n                        next: (data) => {\n                            if (data) {\n                                this.creadoExitosamente.emit();\n                                this.onCloseMenu()\n                            }\n                        }\n                    });\n            }\n        }\n    }\n\n    onCloseMenu() {\n        this.dialogRef.close()\n    }\n}","<div\n    class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col max-w-[1280px] xl:max-w-[1280px] xl:min-w-[950px] sm:max-w-[950px] sm:min-w-[800px] sm:rounded-2xl xl:max-h-[950px] xl:min-h-[850px] sm:max-h-[630px] sm:min-h-[500px] overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\n    >\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\n        <div>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n\n    <!-- Spinner -->\n    <spinner-component *ngIf=\"mostrarSpinner\"></spinner-component>\n\n    <!-- Alert -->\n    <fuse-alert class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\n        [type]=\"_alertConfig.type\" [appearance]=\"'outline'\" *ngIf=\"showAlert\" [@fadeIn]=\"showAlert\">\n        {{ _alertConfig.message }}\n    </fuse-alert>\n    <form *ngIf=\"!mostrarSpinner\" class=\"p-4 form-menu\" [formGroup]=\"form\">\n        <div class=\"flex gap-2 flex-col sm:flex-row\">\n            <mat-form-field appearance='outline' class=\"w-full sm:w-[550px]\">\n                <mat-label>Descripción</mat-label>\n                <input matInput formControlName='descripcion'>\n            </mat-form-field>\n            <mat-form-field appearance='outline' class=\"w-full sm:w-36\">\n                <mat-label>Activo</mat-label>\n                <mat-select formControlName='activo'>\n                    <mat-option [value]='0'>No</mat-option>\n                    <mat-option [value]='1'>Si</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </form>\n    <div *ngIf=\"!mostrarSpinner\" class=\"flex items-center w-full pl-5 mt-2\">\n        <button mat-icon-button type=\"button\" matTooltip=\"Añadir Imagen\" [class]=\"color_primario ? '' : default_color\"\n            [style.background-color]=\"color_primario || '' \" (click)=\"fileInput.click()\">\n            <mat-icon class=\"!text-white transform -rotate-45\">attach_file</mat-icon>\n        </button>\n        <input #fileInput id=\"fileToUploadImagen\" type=\"file\" [accept]=\"validExtension\" (change)=\"onAddAdjunto($event)\"\n            style=\"display: none;\">\n        <ng-container>\n            <small class=\"text-muted text-lg ml-6 cursor-pointer\" (click)=\"fileInput.click()\">\n                <b>{{ titleImagen ? 'Agregar Imagen' : 'Seleccione Imagen' }}</b> (Max:\n                20\n                Mb.)\n            </small>\n        </ng-container>\n    </div>\n    <!-- Archivos nuevos -->\n    <div *ngIf=\"selectedFiles && selectedFiles.length > 0 && !mostrarSpinner\" class=\"flex items-center w-full pl-6 mt-5\">\n        <div class=\"flex items-center flex-wrap gap-2 my-4\">\n            <span class=\"text-base\"><b>Nueva:</b> </span>\n            <div *ngFor=\"let file of selectedFiles\" [class]=\"color_primario ? '' : default_color\"\n                [style.background-color]=\"color_primario || '' \"\n                class=\"flex items-center justify-between px-2 rounded-full min-w-60 max-w-60\">\n                <div [title]=\"getFileTitle(file)\" class=\"flex items-center\">\n                    <span matTooltip=\"{{file.name}}\" class=\"max-w-[180px] truncate text-sm text-white\">{{ file.name }}\n                        ({{\n                        getFileSize(file.size) }})</span>\n                </div>\n                <button mat-icon-button type=\"button\" class=\"!w-7 !h-7 !max-h-7 !min-h-7\"\n                    (click)=\"removeFile('imagenes nuevas',file)\" matTooltip=\"Eliminar Imagen\">\n                    <mat-icon class=\"icon-size-3 text-white\">close</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n    <!-- Archivos guardados -->\n    <div *ngIf=\"imagenesRubros && imagenesRubros.length > 0 && !mostrarSpinner\" class=\"flex items-center w-full pl-6 mt-5\">\n        <div class=\"flex items-center flex-wrap gap-2 my-4\">\n            <span class=\"text-base\"><b>Guardada:</b> </span>\n            <div *ngFor=\"let imagen of imagenesRubros\" [class]=\"color_primario ? '' : default_color\"\n                [style.background-color]=\"color_primario || '' \"\n                class=\"flex items-center justify-between px-2  rounded-full min-w-60 max-w-60\">\n                <a href=\"{{urlBase+imagen.name}}\" target=\"_blank\" class=\"flex items-center\">\n                    <span class=\"max-w-[160px] truncate text-sm text-white\"\n                        matTooltip=\"{{imagen.name}}\">{{getFileNameFromUrl(imagen.name)}}</span>\n                    <mat-icon class=\"ml-2 text-lg justify-end text-white\" matTooltip=\"Ver Imagen\">open_in_new</mat-icon>\n                </a>\n                <button mat-icon-button type=\"button\" class=\"!w-7 !h-7 !max-h-7 !min-h-7\"\n                    (click)=\"removeFile('imagenes guardadas',imagen)\" matTooltip=\"Eliminar Imagen\">\n                    <mat-icon class=\"icon-size-4 text-white\">close</mat-icon>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"!mostrarSpinner\" class=\"w-full md:flex md:justify-end md:pb-6 md:px-6 mt-auto sm:mt-8\">\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\"\n            [style.background-color]=\"color_primario || '' \"\n            class='w-full rounded-none md:w-36 md:rounded-lg py-8 md:py-0' (click)='onSubmit()'>\n            <span class=\"text-white font-medium text-base\">Guardar</span>\n        </button>\n    </div>\n</div>","import { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FuseAlertComponent } from '@fuse/components/alert';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RubrosComponent } from './components/rubros.component';\nimport { SaveComponent } from './components/save/save.component';\nimport { RubrosService } from './service/rubros.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSortModule } from '@angular/material/sort';\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\nimport { SharedComponentModule } from '@shared/components/shared-component.module';\nconst routes: Routes = [\n    {\n        path: '',\n        component: RubrosComponent\n    }\n];\n@NgModule({\n    declarations: [RubrosComponent, SaveComponent, FilterMenuComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MatTableModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatIconModule,\n        FuseAlertComponent,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatToolbarModule,\n        MatCheckboxModule,\n        MatSortModule,\n        TablaDinamicaModule,\n        MatDialogModule,\n        SharedComponentModule\n    ],\n    exports: [RouterModule],\n    providers: [RubrosService, JedsMenuService, AppAlertService]\n})\nexport class RubrosModule { }","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { Observable, Subject } from 'rxjs';\nimport { IRubro, Response } from '../models/rubro';\nimport { AuthService } from '@core/auth/auth.service';\n\n@Injectable()\nexport class RubrosService {\n    constructor(private http: HttpClient, private _authService:AuthService) { }\n    /**\n     * Funcion en el servicio\n     * - Esta funcion retorna los Rubros.\n     * @returns Rubros\n     */\n    getRubros(sort?:any): Observable<Response[]> {\n        let f = '?';\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\n        let subject = new Subject<any>();\n\n        this.http.get<Response[]>(`${environment.stock.rubros}${f}`)\n        .subscribe((resp:any) => {\n            this._authService.accessToken = resp.token,\n            subject.next({\n                'list':resp.result,\n                // 'totalPages': resp.headers.get('x-pagination-page-count'),\n                // 'totalCount': resp.headers.get('x-pagination-total-count')\n            })\n        });\n        return subject.asObservable();\n    }\n\n    /**\n     * Funcion en el Servicio \n     * @param rubro \n     * @returns Crea un item nuevo\n     */\n    saveRubro(rubro: IRubro): Observable<IRubro> {\n        return this.http.post<IRubro>(`${environment.stock.rubros}`, rubro);\n    }\n\n    /**\n     * Funcion en el servicio\n     * @param rubro\n     * @returns Item actualizado actualizado\n     */\n    updateRubro(rubro: IRubro): Observable<IRubro> {\n        return this.http.put<IRubro>(`${environment.stock.rubros}` + '/' + rubro.idrubro, rubro);\n    }\n\n    /**\n     * Funcion en el servicio\n     * @param idrubro \n     * @returns Elimina un item\n     */\n    deleteRubro(idrubro: number): Observable<IRubro> {\n        return this.http.delete<IRubro>(environment.stock.rubros + '/' + idrubro);\n    }\n}","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["FormControl","FormGroup","fuseAnimations","Subject","takeUntil","FilterMenuComponent","constructor","data","menuService","_empresaService","default_color","_unsubscribeAll","ngOnInit","formFilters","activo","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","patchValue","filter","resetFilters","reset","onCloseMenu","close","i0","ɵɵdirectiveInject","i1","JedsMenuService","i2","EmpresaService","selectors","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_Template_button_click_23_listener","FilterMenuComponent_Template_button_click_26_listener","getRawValue","ɵɵproperty","ɵɵadvance","ɵɵclassMap","ɵɵstyleProp","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","RubrosComponent","_rubrosService","confirm","alert","dialogo","_searchService","_menuService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","rubros","search","setTitulo","nombre_boton","functionName","iconoAccion","rubro","iconoAccionado","iconoDeshabilitado","visible","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateRubro","deleteRubro","saveRubro","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","title","descripcion","message","dismissible","actions","show","color","label","cancel","res","idrubro","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","RubrosService","i3","FuseConfirmationService","i4","AppAlertService","i5","MatDialog","i6","SearchService","i7","i8","Router","i9","HeaderTextService","viewQuery","RubrosComponent_Query","RubrosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","RubrosComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","Validators","MAT_DIALOG_DATA","finalize","takeWhile","tap","timer","ctx_r1","_alertConfig","type","showAlert","ɵɵtextInterpolate1","ctx_r2","form","SaveComponent_div_12_Template_button_click_1_listener","ɵɵrestoreView","_r9","_r7","ɵɵreference","ɵɵresetView","click","SaveComponent_div_12_Template_input_change_4_listener","ctx_r10","ɵɵnextContext","onAddAdjunto","ɵɵelementContainerStart","SaveComponent_div_12_Template_small_click_7_listener","ɵɵelementContainerEnd","ctx_r3","validExtension","ɵɵtextInterpolate","titleImagen","SaveComponent_div_13_div_5_Template_button_click_4_listener","restoredCtx","_r15","file_r13","$implicit","ctx_r14","removeFile","ctx_r12","getFileTitle","ɵɵpropertyInterpolate","ɵɵtextInterpolate2","getFileSize","size","ɵɵtemplate","SaveComponent_div_13_div_5_Template","ctx_r4","selectedFiles","SaveComponent_div_14_div_5_Template_button_click_6_listener","_r19","imagen_r17","ctx_r18","ctx_r16","urlBase","ɵɵsanitizeUrl","getFileNameFromUrl","SaveComponent_div_14_div_5_Template","ctx_r5","imagenesRubros","SaveComponent_div_15_Template_button_click_1_listener","_r21","ctx_r20","onSubmit","ctx_r6","rubrosService","dialogRef","mostrarSpinner","mostrar_mensaje","columns","imagenesNuevas","ver_imagen","imagen","newForm","getImagenRubros","then","subscribeAlert","emitConfig","config","appearance","time","required","_this","_asyncToGenerator","push","base64","extension","obtenerExtension","nombreArchivo","ultimoPuntoIndex","lastIndexOf","length","slice","url","parts","split","fileName","bytes","kilobytes","toFixed","megabytes","file","imagenes","index","indexOf","splice","adjIndex","findIndex","adj","campoArchivo","document","getElementById","evento","target","files","i","imagenRubro","tamaño","Math","round","pop","imagenValida","getBase64","toString","includes","existe","some","a","info","trunc","fileAdjuntoImagen","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","valid","markAllAsTouched","get","emit","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_6_listener","SaveComponent_spinner_component_9_Template","SaveComponent_fuse_alert_10_Template","SaveComponent_form_11_Template","SaveComponent_div_12_Template","SaveComponent_div_13_Template","SaveComponent_div_14_Template","SaveComponent_div_15_Template","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","SharedComponentModule","routes","path","component","RubrosModule","imports","forChild","declarations","exports","http","_authService","getRubros","sort","f","subject","resp","accessToken","token","asObservable","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac","Directive","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","ContentChildren","NgModule","mixinColor","MatCommonModule","DOCUMENT","_c0","_c1","_MatToolbarBase","MatToolbarRow","MatToolbarRow_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","exportAs","ngDevMode","ɵsetClassMetadata","args","selector","host","MatToolbar","elementRef","_platform","_document","ngAfterViewInit","isBrowser","_checkToolbarMixedModes","_toolbarRows","changes","isCombinedUsage","Array","from","nativeElement","childNodes","node","classList","contains","nodeType","COMMENT_NODE","textContent","trim","throwToolbarMixedModesError","MatToolbar_Factory","ElementRef","Platform","ɵcmp","ɵɵdefineComponent","contentQueries","MatToolbar_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","MatToolbar_HostBindings","ɵɵclassProp","inputs","features","ɵɵInheritDefinitionFeature","ngContentSelectors","MatToolbar_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","OnPush","None","undefined","decorators","descendants","Error","MatToolbarModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[8]}