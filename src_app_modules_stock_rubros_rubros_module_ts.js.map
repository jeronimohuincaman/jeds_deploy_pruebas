{"version":3,"file":"src_app_modules_stock_rubros_rubros_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/rubros/components/filter-menu/filter-menu.component.ts","./src/app/modules/stock/rubros/components/filter-menu/filter-menu.component.html","./src/app/modules/stock/rubros/components/rubros.component.ts","./src/app/modules/stock/rubros/components/rubros.component.html","./src/app/modules/stock/rubros/components/save/save.component.ts","./src/app/modules/stock/rubros/components/save/save.component.html","./src/app/modules/stock/rubros/rubros.module.ts","./src/app/modules/stock/rubros/service/rubros.service.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IUsuario, User } from '@core/user/user.types';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\n\r\n@Component({\r\n  selector: 'app-filter-menu',\r\n  templateUrl: './filter-menu.component.html',\r\n  styleUrls: ['./filter-menu.component.scss'],\r\n  animations: fuseAnimations\r\n})\r\nexport class FilterMenuComponent implements OnInit {\r\n  public formFilters: FormGroup;\r\n  public proveedorespp: any[];\r\n  constructor(@Inject('MENU_DATA') public data: any, private menuService: JedsMenuService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formFilters = new FormGroup({\r\n      activo: new FormControl(-1)\r\n    });\r\n    this.formFilters.patchValue(this.data.filter);\r\n  }\r\n\r\n  resetFilters() {\r\n    this.formFilters.reset({\r\n      activo: -1,\r\n    });\r\n  }\r\n\r\n  onCloseMenu(data: any = null) {\r\n    this.menuService.close(data);\r\n  }\r\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\r\n    [@expandCollapse]=\"'expanded'\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Filtros</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"formFilters\">\r\n       \r\n        <span class=\"font-bold text-gray-500 text-base mt-4\">Activo</span>\r\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded min-w-64 mt-2\">\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='-1'>Todos</mat-option>\r\n                <mat-option [value]='0' class=\"fila-naranja\">No</mat-option>\r\n                <mat-option [value]='1' class=\"fila-amarillo\">Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\r\n        <button mat-stroked-button class=\"w-full rounded-none md:w-28 md:rounded-3xl hidden md:block\" color=\"primary\"\r\n            (click)=\"resetFilters()\">\r\n            <span class=\"text-gray-700 font-bold\">Limpiar</span>\r\n        </button>\r\n        <button mat-raised-button class=\"w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0\"\r\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\r\n            <span class=\"text-white font-bold\">Filtrar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { IFilterRubro, IRubro } from '../models/rubro';\r\nimport { RubrosService } from '../service/rubros.service';\r\nimport { Subscription, debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n    selector: 'app-rubros',\r\n    templateUrl: './rubros.component.html',\r\n    styleUrls: ['./rubros.component.scss']\r\n})\r\nexport class RubrosComponent implements OnInit, OnDestroy {\r\n    rubros: IRubro[];\r\n    public dataSource: MatTableDataSource<IRubro> = new MatTableDataSource();\r\n    headers = ['Descripcion', 'Activo', 'Acciones'];\r\n    column_params = ['descripcion', 'activo', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['descripcion'];\r\n    filter: IFilterRubro = {\r\n        activo: -1,\r\n    };\r\n    \r\n    @Input() extraParams='';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n\r\n    env = environment.stock.rubros + '?'\r\n\r\n    search: FormControl = new FormControl('');\r\n\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    \r\n\r\n    constructor(\r\n        private _rubrosService: RubrosService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n   \r\n    onFilterMenu(origin: MatButton) {\r\n        this._menuService\r\n            .open(FilterMenuComponent, origin._elementRef, {\r\n                filter: this.filter,\r\n            })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: filter => {\r\n                    if (filter) {\r\n                        this.filter = filter;\r\n                        this.extraParams = this.filter.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\r\n                        this.tabla.filters(this.filtroBusqueda);\r\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n                        \r\n                    }\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateRubro(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteRubro(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveRubro() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .componentInstance.creadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Rubro creado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateRubro(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .componentInstance.editadoExitosamente\r\n            .subscribe({\r\n                next: () => {\r\n                    this.alert.success(\"Rubro editado con éxito.\");\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteRubro(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar rubro \" + event.params.data.descripcion,\r\n            message: \"¿Desea eliminar el rubro: \" + event.params.data.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._rubrosService.deleteRubro(event.params.data.idrubro).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Rubro eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.warning(\"Este rubro no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-8 mt-2\">\r\n        <!-- Contenedor del botón -->\r\n        <div class=\"fixed right-10 \">\r\n            <button mat-icon-button type=\"button\" class='mr-2 ml-2 bg-blue-500 p-2 rounded-full z-99999' matTooltip='Crear Rubro'\r\n                (click)=\"saveRubro()\" #save>\r\n                <mat-icon class=\"text-white\">add</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { IRubro } from '../../models/rubro';\r\nimport { RubrosService } from '../../service/rubros.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-save-rubros',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    form: FormGroup;\r\n    rubro: IRubro;\r\n    title: string;\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() public editadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private rubrosService: RubrosService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>\r\n    ) {\r\n        this.rubro = this.data ? this.data : null;\r\n        this.title = this.rubro?.idrubro ? 'Editar rubro' : 'Nuevo rubro';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n        this.subscribeAlert();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n          next: (config: IAlertConfig) => {\r\n            this.showAlert = true;\r\n            this._alertConfig = {\r\n              ...config,\r\n              appearance: 'border',\r\n            };\r\n            let time = 2;\r\n            timer(100, 1500)\r\n              .pipe(\r\n                finalize(() => {\r\n                  this.showAlert = false;\r\n                  this._alertConfig = null;\r\n                }),\r\n                takeWhile(() => time > 0),\r\n                takeUntil(this._unsubscribeAll),\r\n                tap(() => (time -= 1))\r\n              )\r\n              .subscribe();\r\n          },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            descripcion: new FormControl((this.rubro ? this.rubro.descripcion : ''), Validators.required),\r\n            activo: new FormControl((this.rubro ? (this.rubro?.activo ? 1 : 0) : ''), Validators.required),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.rubro = {\r\n                ...this.rubro,\r\n                descripcion: this.form.get('descripcion').value,\r\n                activo: this.form.get('activo').value,\r\n            }\r\n            if (this.rubro.idrubro) {\r\n                this.rubrosService.updateRubro(this.rubro)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.editadoExitosamente.emit();\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this.rubrosService.saveRubro(this.rubro)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.creadoExitosamente.emit();\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col md:min-w-140 sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden bg-white shadow-sm dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Descripción</mat-label>\r\n            <input matInput formControlName='descripcion'>\r\n        </mat-form-field>\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Activo</mat-label>\r\n            <mat-select formControlName='activo'>\r\n                <mat-option [value]='0'>No</mat-option>\r\n                <mat-option [value]='1'>Si</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='w-full bg-primary rounded-none md:w-28 md:rounded-3xl py-8 md:py-0' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { RubrosComponent } from './components/rubros.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { RubrosService } from './service/rubros.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: RubrosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [RubrosComponent, SaveComponent, FilterMenuComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [RubrosService, JedsMenuService, AppAlertService]\r\n})\r\nexport class RubrosModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IRubro, Response } from '../models/rubro';\r\nimport { AuthService } from '@core/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class RubrosService {\r\n    constructor(private http: HttpClient, private _authService:AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los Rubros.\r\n     * @returns Rubros\r\n     */\r\n    getRubros(sort?:any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.stock.rubros}${f}`)\r\n        .subscribe((resp:any) => {\r\n            this._authService.accessToken = resp.token,\r\n            subject.next({\r\n                'list':resp.result,\r\n                // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n            })\r\n        });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param rubro \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveRubro(rubro: IRubro): Observable<IRubro> {\r\n        return this.http.post<IRubro>(`${environment.stock.rubros}`, rubro);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param rubro\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateRubro(rubro: IRubro): Observable<IRubro> {\r\n        return this.http.put<IRubro>(`${environment.stock.rubros}` + '/' + rubro.idrubro, rubro);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idrubro \r\n     * @returns Elimina un item\r\n     */\r\n    deleteRubro(idrubro: number): Observable<IRubro> {\r\n        return this.http.delete<IRubro>(environment.stock.rubros + '/' + idrubro);\r\n    }\r\n}"],"names":["FormControl","FormGroup","fuseAnimations","FilterMenuComponent","constructor","data","menuService","ngOnInit","formFilters","activo","patchValue","filter","resetFilters","reset","onCloseMenu","close","i0","ɵɵdirectiveInject","i1","JedsMenuService","selectors","decls","vars","consts","template","FilterMenuComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","FilterMenuComponent_Template_button_click_23_listener","FilterMenuComponent_Template_button_click_26_listener","getRawValue","ɵɵproperty","ɵɵadvance","EventEmitter","debounceTime","distinctUntilChanged","MatTableDataSource","SaveComponent","TablaDinamicaComponent","environment","RubrosComponent","_rubrosService","confirm","alert","dialogo","_searchService","_menuService","router","_headerTextService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","extraParams","parametrosActualizados","env","stock","rubros","search","setTitulo","icono","nombre_boton","functionName","SearchTextSub$","getSearchText","pipe","subscribe","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","open","_elementRef","afterClosed","next","generarAcciones","name","updateRubro","deleteRubro","saveRubro","panelClass","componentInstance","creadoExitosamente","success","params","autoFocus","editadoExitosamente","title","descripcion","message","dismissible","actions","show","color","label","cancel","res","idrubro","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","RubrosService","i2","FuseConfirmationService","i3","AppAlertService","i4","MatDialog","i5","SearchService","i6","i7","Router","i8","HeaderTextService","viewQuery","RubrosComponent_Query","RubrosComponent_Template_button_click_3_listener","RubrosComponent_Template_app_tabla_dinamica_functionEmitter_8_listener","$event","Validators","MAT_DIALOG_DATA","finalize","Subject","takeUntil","takeWhile","tap","timer","ctx_r0","_alertConfig","type","showAlert","ɵɵtextInterpolate1","rubrosService","dialogRef","columns","_unsubscribeAll","rubro","newForm","subscribeAlert","emitConfig","config","appearance","time","form","required","onSubmit","valid","get","emit","MatDialogRef","outputs","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","ɵɵtemplate","SaveComponent_fuse_alert_8_Template","ɵɵelement","SaveComponent_Template_button_click_23_listener","ɵɵtextInterpolate","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","routes","path","component","RubrosModule","imports","forChild","declarations","exports","http","_authService","getRubros","sort","f","subject","resp","accessToken","token","result","asObservable","post","put","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}