{"version":3,"file":"default-src_fuse_components_alert_index_ts.js","mappings":"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","sources":["./src/@fuse/components/alert/alert.component.ts","./src/@fuse/components/alert/alert.component.html","./src/@fuse/components/alert/alert.service.ts","./src/@fuse/components/alert/alert.types.ts","./src/@fuse/components/alert/index.ts","./src/@fuse/components/alert/public-api.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { NgIf } from '@angular/common';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseAlertService } from '@fuse/components/alert/alert.service';\r\nimport { FuseAlertAppearance, FuseAlertType } from '@fuse/components/alert/alert.types';\r\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\r\nimport { filter, Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n    selector       : 'fuse-alert',\r\n    templateUrl    : './alert.component.html',\r\n    styleUrls      : ['./alert.component.scss'],\r\n    encapsulation  : ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    animations     : fuseAnimations,\r\n    exportAs       : 'fuseAlert',\r\n    standalone     : true,\r\n    imports        : [NgIf, MatIconModule, MatButtonModule],\r\n})\r\nexport class FuseAlertComponent implements OnChanges, OnInit, OnDestroy\r\n{\r\n    /* eslint-disable @typescript-eslint/naming-convention */\r\n    static ngAcceptInputType_dismissible: BooleanInput;\r\n    static ngAcceptInputType_dismissed: BooleanInput;\r\n    static ngAcceptInputType_showIcon: BooleanInput;\r\n    /* eslint-enable @typescript-eslint/naming-convention */\r\n\r\n    @Input() appearance: FuseAlertAppearance = 'soft';\r\n    @Input() dismissed: boolean = false;\r\n    @Input() dismissible: boolean = false;\r\n    @Input() name: string = this._fuseUtilsService.randomId();\r\n    @Input() showIcon: boolean = true;\r\n    @Input() type: FuseAlertType = 'primary';\r\n    @Output() readonly dismissedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _fuseAlertService: FuseAlertService,\r\n        private _fuseUtilsService: FuseUtilsService,\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Host binding for component classes\r\n     */\r\n    @HostBinding('class') get classList(): any\r\n    {\r\n        /* eslint-disable @typescript-eslint/naming-convention */\r\n        return {\r\n            'fuse-alert-appearance-border' : this.appearance === 'border',\r\n            'fuse-alert-appearance-fill'   : this.appearance === 'fill',\r\n            'fuse-alert-appearance-outline': this.appearance === 'outline',\r\n            'fuse-alert-appearance-soft'   : this.appearance === 'soft',\r\n            'fuse-alert-dismissed'         : this.dismissed,\r\n            'fuse-alert-dismissible'       : this.dismissible,\r\n            'fuse-alert-show-icon'         : this.showIcon,\r\n            'fuse-alert-type-primary'      : this.type === 'primary',\r\n            'fuse-alert-type-accent'       : this.type === 'accent',\r\n            'fuse-alert-type-warn'         : this.type === 'warn',\r\n            'fuse-alert-type-basic'        : this.type === 'basic',\r\n            'fuse-alert-type-info'         : this.type === 'info',\r\n            'fuse-alert-type-success'      : this.type === 'success',\r\n            'fuse-alert-type-warning'      : this.type === 'warning',\r\n            'fuse-alert-type-error'        : this.type === 'error',\r\n        };\r\n        /* eslint-enable @typescript-eslint/naming-convention */\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On changes\r\n     *\r\n     * @param changes\r\n     */\r\n    ngOnChanges(changes: SimpleChanges): void\r\n    {\r\n        // Dismissed\r\n        if ( 'dismissed' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.dismissed = coerceBooleanProperty(changes.dismissed.currentValue);\r\n\r\n            // Dismiss/show the alert\r\n            this._toggleDismiss(this.dismissed);\r\n        }\r\n\r\n        // Dismissible\r\n        if ( 'dismissible' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.dismissible = coerceBooleanProperty(changes.dismissible.currentValue);\r\n        }\r\n\r\n        // Show icon\r\n        if ( 'showIcon' in changes )\r\n        {\r\n            // Coerce the value to a boolean\r\n            this.showIcon = coerceBooleanProperty(changes.showIcon.currentValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Subscribe to the dismiss calls\r\n        this._fuseAlertService.onDismiss\r\n            .pipe(\r\n                filter(name => this.name === name),\r\n                takeUntil(this._unsubscribeAll),\r\n            )\r\n            .subscribe(() =>\r\n            {\r\n                // Dismiss the alert\r\n                this.dismiss();\r\n            });\r\n\r\n        // Subscribe to the show calls\r\n        this._fuseAlertService.onShow\r\n            .pipe(\r\n                filter(name => this.name === name),\r\n                takeUntil(this._unsubscribeAll),\r\n            )\r\n            .subscribe(() =>\r\n            {\r\n                // Show the alert\r\n                this.show();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * On destroy\r\n     */\r\n    ngOnDestroy(): void\r\n    {\r\n        // Unsubscribe from all subscriptions\r\n        this._unsubscribeAll.next(null);\r\n        this._unsubscribeAll.complete();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Dismiss the alert\r\n     */\r\n    dismiss(): void\r\n    {\r\n        // Return if the alert is already dismissed\r\n        if ( this.dismissed )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Dismiss the alert\r\n        this._toggleDismiss(true);\r\n    }\r\n\r\n    /**\r\n     * Show the dismissed alert\r\n     */\r\n    show(): void\r\n    {\r\n        // Return if the alert is already showing\r\n        if ( !this.dismissed )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Show the alert\r\n        this._toggleDismiss(false);\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Private methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Dismiss/show the alert\r\n     *\r\n     * @param dismissed\r\n     * @private\r\n     */\r\n    private _toggleDismiss(dismissed: boolean): void\r\n    {\r\n        // Return if the alert is not dismissible\r\n        if ( !this.dismissible )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Set the dismissed\r\n        this.dismissed = dismissed;\r\n\r\n        // Execute the observable\r\n        this.dismissedChanged.next(this.dismissed);\r\n\r\n        // Notify the change detector\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n}\r\n","<div\r\n    class=\"fuse-alert-container\"\r\n    *ngIf=\"!dismissible || dismissible && !dismissed\"\r\n    [@fadeIn]=\"!dismissed\"\r\n    [@fadeOut]=\"!dismissed\">\r\n\r\n    <!-- Border -->\r\n    <div\r\n        class=\"fuse-alert-border\"\r\n        *ngIf=\"appearance === 'border'\"></div>\r\n\r\n    <!-- Icon -->\r\n    <div\r\n        class=\"fuse-alert-icon\"\r\n        *ngIf=\"showIcon\">\r\n\r\n        <!-- Custom icon -->\r\n        <div class=\"fuse-alert-custom-icon\">\r\n            <ng-content select=\"[fuseAlertIcon]\"></ng-content>\r\n        </div>\r\n\r\n        <!-- Default icons -->\r\n        <div class=\"fuse-alert-default-icon\">\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'primary'\"\r\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'accent'\"\r\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'warn'\"\r\n                [svgIcon]=\"'heroicons_solid:x-circle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'basic'\"\r\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'info'\"\r\n                [svgIcon]=\"'heroicons_solid:information-circle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'success'\"\r\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'warning'\"\r\n                [svgIcon]=\"'heroicons_solid:exclamation-triangle'\"></mat-icon>\r\n\r\n            <mat-icon\r\n                *ngIf=\"type === 'error'\"\r\n                [svgIcon]=\"'heroicons_solid:x-circle'\"></mat-icon>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div class=\"fuse-alert-content\">\r\n\r\n        <div class=\"fuse-alert-title\">\r\n            <ng-content select=\"[fuseAlertTitle]\"></ng-content>\r\n        </div>\r\n\r\n        <div class=\"fuse-alert-message\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- Dismiss button -->\r\n    <button\r\n        class=\"fuse-alert-dismiss-button\"\r\n        mat-icon-button\r\n        (click)=\"dismiss()\">\r\n        <mat-icon [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\r\n    </button>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class FuseAlertService\r\n{\r\n    private readonly _onDismiss: ReplaySubject<string> = new ReplaySubject<string>(1);\r\n    private readonly _onShow: ReplaySubject<string> = new ReplaySubject<string>(1);\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Getter for onDismiss\r\n     */\r\n    get onDismiss(): Observable<any>\r\n    {\r\n        return this._onDismiss.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Getter for onShow\r\n     */\r\n    get onShow(): Observable<any>\r\n    {\r\n        return this._onShow.asObservable();\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Dismiss the alert\r\n     *\r\n     * @param name\r\n     */\r\n    dismiss(name: string): void\r\n    {\r\n        // Return if the name is not provided\r\n        if ( !name )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Execute the observable\r\n        this._onDismiss.next(name);\r\n    }\r\n\r\n    /**\r\n     * Show the dismissed alert\r\n     *\r\n     * @param name\r\n     */\r\n    show(name: string): void\r\n    {\r\n        // Return if the name is not provided\r\n        if ( !name )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Execute the observable\r\n        this._onShow.next(name);\r\n    }\r\n\r\n}\r\n","export type FuseAlertAppearance =\r\n    | 'border'\r\n    | 'fill'\r\n    | 'outline'\r\n    | 'soft';\r\n\r\nexport type FuseAlertType =\r\n    | 'primary'\r\n    | 'accent'\r\n    | 'warn'\r\n    | 'basic'\r\n    | 'info'\r\n    | 'success'\r\n    | 'warning'\r\n    | 'error';\r\n","export * from '@fuse/components/alert/public-api';\r\n","export * from '@fuse/components/alert/alert.component';\r\nexport * from '@fuse/components/alert/alert.service';\r\nexport * from '@fuse/components/alert/alert.types';\r\n"],"names":["coerceBooleanProperty","NgIf","EventEmitter","MatButtonModule","MatIconModule","fuseAnimations","filter","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵtemplate","FuseAlertComponent_div_0_div_2_mat_icon_4_Template","FuseAlertComponent_div_0_div_2_mat_icon_5_Template","FuseAlertComponent_div_0_div_2_mat_icon_6_Template","FuseAlertComponent_div_0_div_2_mat_icon_7_Template","FuseAlertComponent_div_0_div_2_mat_icon_8_Template","FuseAlertComponent_div_0_div_2_mat_icon_9_Template","FuseAlertComponent_div_0_div_2_mat_icon_10_Template","FuseAlertComponent_div_0_div_2_mat_icon_11_Template","ɵɵadvance","ctx_r2","type","FuseAlertComponent_div_0_div_1_Template","FuseAlertComponent_div_0_div_2_Template","ɵɵlistener","FuseAlertComponent_div_0_Template_button_click_8_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","dismiss","ctx_r0","dismissed","appearance","showIcon","FuseAlertComponent","constructor","_changeDetectorRef","_fuseAlertService","_fuseUtilsService","dismissible","name","randomId","dismissedChanged","_unsubscribeAll","classList","ngOnChanges","changes","currentValue","_toggleDismiss","ngOnInit","onDismiss","pipe","subscribe","onShow","show","ngOnDestroy","next","complete","markForCheck","ɵɵdirectiveInject","ChangeDetectorRef","i1","FuseAlertService","i2","FuseUtilsService","selectors","hostVars","hostBindings","FuseAlertComponent_HostBindings","rf","ctx","FuseAlertComponent_div_0_Template","i3","MatIcon","i4","MatIconButton","styles","encapsulation","data","animation","changeDetection","ReplaySubject","_onDismiss","_onShow","asObservable","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}