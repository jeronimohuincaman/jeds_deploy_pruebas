{"version":3,"file":"src_app_modules_auth_reset-password_reset-password_routes_ts.js","mappings":"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","sources":["./src/@fuse/validators/index.ts","./src/@fuse/validators/public-api.ts","./src/@fuse/validators/validators.ts","./src/app/modules/auth/reset-password/reset-password.component.ts","./src/app/modules/auth/reset-password/reset-password.component.html","./src/app/modules/auth/reset-password/reset-password.routes.ts"],"sourcesContent":["export * from '@fuse/validators/public-api';\r\n","export * from '@fuse/validators/validators';\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport class FuseValidators\r\n{\r\n    /**\r\n     * Check for empty (optional fields) values\r\n     *\r\n     * @param value\r\n     */\r\n    static isEmptyInputValue(value: any): boolean\r\n    {\r\n        return value == null || value.length === 0;\r\n    }\r\n\r\n    /**\r\n     * Must match validator\r\n     *\r\n     * @param controlPath A dot-delimited string values that define the path to the control.\r\n     * @param matchingControlPath A dot-delimited string values that define the path to the matching control.\r\n     */\r\n    static mustMatch(controlPath: string, matchingControlPath: string): ValidatorFn\r\n    {\r\n        return (formGroup: AbstractControl): ValidationErrors | null =>\r\n        {\r\n            // Get the control and matching control\r\n            const control = formGroup.get(controlPath);\r\n            const matchingControl = formGroup.get(matchingControlPath);\r\n\r\n            // Return if control or matching control doesn't exist\r\n            if ( !control || !matchingControl )\r\n            {\r\n                return null;\r\n            }\r\n\r\n            // Delete the mustMatch error to reset the error on the matching control\r\n            if ( matchingControl.hasError('mustMatch') )\r\n            {\r\n                delete matchingControl.errors.mustMatch;\r\n                matchingControl.updateValueAndValidity();\r\n            }\r\n\r\n            // Don't validate empty values on the matching control\r\n            // Don't validate if values are matching\r\n            if ( this.isEmptyInputValue(matchingControl.value) || control.value === matchingControl.value )\r\n            {\r\n                return null;\r\n            }\r\n\r\n            // Prepare the validation errors\r\n            const errors = {mustMatch: true};\r\n\r\n            // Set the validation error on the matching control\r\n            matchingControl.setErrors(errors);\r\n\r\n            // Return the errors\r\n            return errors;\r\n        };\r\n    }\r\n}\r\n","import { NgIf } from '@angular/common';\r\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { FormsModule, NgForm, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { RouterLink } from '@angular/router';\r\nimport { fuseAnimations } from '@fuse/animations';\r\nimport { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\r\nimport { FuseValidators } from '@fuse/validators';\r\nimport { AuthService } from 'app/core/auth/auth.service';\r\nimport { finalize } from 'rxjs';\r\n\r\n@Component({\r\n    selector     : 'auth-reset-password',\r\n    templateUrl  : './reset-password.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations   : fuseAnimations,\r\n    standalone   : true,\r\n    imports      : [NgIf, FuseAlertComponent, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatIconModule, MatProgressSpinnerModule, RouterLink],\r\n})\r\nexport class AuthResetPasswordComponent implements OnInit\r\n{\r\n    @ViewChild('resetPasswordNgForm') resetPasswordNgForm: NgForm;\r\n\r\n    alert: { type: FuseAlertType; message: string } = {\r\n        type   : 'success',\r\n        message: '',\r\n    };\r\n    resetPasswordForm: UntypedFormGroup;\r\n    showAlert: boolean = false;\r\n\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor(\r\n        private _authService: AuthService,\r\n        private _formBuilder: UntypedFormBuilder,\r\n    )\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Lifecycle hooks\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * On init\r\n     */\r\n    ngOnInit(): void\r\n    {\r\n        // Create the form\r\n        this.resetPasswordForm = this._formBuilder.group({\r\n                password       : ['', Validators.required],\r\n                passwordConfirm: ['', Validators.required],\r\n            },\r\n            {\r\n                validators: FuseValidators.mustMatch('password', 'passwordConfirm'),\r\n            },\r\n        );\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Reset password\r\n     */\r\n    resetPassword(): void\r\n    {\r\n        // Return if the form is invalid\r\n        if ( this.resetPasswordForm.invalid )\r\n        {\r\n            return;\r\n        }\r\n\r\n        // Disable the form\r\n        this.resetPasswordForm.disable();\r\n\r\n        // Hide the alert\r\n        this.showAlert = false;\r\n\r\n        // Send the request to the server\r\n        this._authService.resetPassword(this.resetPasswordForm.get('password').value)\r\n            .pipe(\r\n                finalize(() =>\r\n                {\r\n                    // Re-enable the form\r\n                    this.resetPasswordForm.enable();\r\n\r\n                    // Reset the form\r\n                    this.resetPasswordNgForm.resetForm();\r\n\r\n                    // Show the alert\r\n                    this.showAlert = true;\r\n                }),\r\n            )\r\n            .subscribe(\r\n                (response) =>\r\n                {\r\n                    // Set the alert\r\n                    this.alert = {\r\n                        type   : 'success',\r\n                        message: 'Your password has been reset.',\r\n                    };\r\n                },\r\n                (response) =>\r\n                {\r\n                    // Set the alert\r\n                    this.alert = {\r\n                        type   : 'error',\r\n                        message: 'Something went wrong, please try again.',\r\n                    };\r\n                },\r\n            );\r\n    }\r\n}\r\n","<div class=\"flex flex-col sm:flex-row items-center md:items-start sm:justify-center md:justify-start flex-auto min-w-0\">\r\n    <div class=\"md:flex md:items-center md:justify-end w-full sm:w-auto md:h-full md:w-1/2 py-8 px-4 sm:p-12 md:p-16 sm:rounded-2xl md:rounded-none sm:shadow md:shadow-none sm:bg-card\">\r\n        <div class=\"w-full max-w-80 sm:w-80 mx-auto sm:mx-0\">\r\n            <!-- Logo -->\r\n            <div class=\"w-12\">\r\n                <img src=\"assets/images/logo/logo.svg\">\r\n            </div>\r\n\r\n            <!-- Title -->\r\n            <div class=\"mt-8 text-4xl font-extrabold tracking-tight leading-tight\">Reset your password</div>\r\n            <div class=\"mt-0.5 font-medium\">Create a new password for your account</div>\r\n\r\n            <!-- Alert -->\r\n            <fuse-alert\r\n                class=\"mt-8\"\r\n                *ngIf=\"showAlert\"\r\n                [appearance]=\"'outline'\"\r\n                [showIcon]=\"false\"\r\n                [type]=\"alert.type\"\r\n                [@shake]=\"alert.type === 'error'\">\r\n                {{alert.message}}\r\n            </fuse-alert>\r\n\r\n            <!-- Reset password form -->\r\n            <form\r\n                class=\"mt-8\"\r\n                [formGroup]=\"resetPasswordForm\"\r\n                #resetPasswordNgForm=\"ngForm\">\r\n\r\n                <!-- Password field -->\r\n                <mat-form-field class=\"w-full\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input\r\n                        id=\"password\"\r\n                        matInput\r\n                        type=\"password\"\r\n                        [formControlName]=\"'password'\"\r\n                        #passwordField>\r\n                    <button\r\n                        mat-icon-button\r\n                        type=\"button\"\r\n                        (click)=\"passwordField.type === 'password' ? passwordField.type = 'text' : passwordField.type = 'password'\"\r\n                        matSuffix>\r\n                        <mat-icon\r\n                            class=\"icon-size-5\"\r\n                            *ngIf=\"passwordField.type === 'password'\"\r\n                            [svgIcon]=\"'heroicons_solid:eye'\"></mat-icon>\r\n                        <mat-icon\r\n                            class=\"icon-size-5\"\r\n                            *ngIf=\"passwordField.type === 'text'\"\r\n                            [svgIcon]=\"'heroicons_solid:eye-slash'\"></mat-icon>\r\n                    </button>\r\n                    <mat-error>\r\n                        Password is required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <!-- Password confirm field -->\r\n                <mat-form-field class=\"w-full\">\r\n                    <mat-label>Password (Confirm)</mat-label>\r\n                    <input\r\n                        id=\"password-confirm\"\r\n                        matInput\r\n                        type=\"password\"\r\n                        [formControlName]=\"'passwordConfirm'\"\r\n                        #passwordConfirmField>\r\n                    <button\r\n                        mat-icon-button\r\n                        type=\"button\"\r\n                        (click)=\"passwordConfirmField.type === 'password' ? passwordConfirmField.type = 'text' : passwordConfirmField.type = 'password'\"\r\n                        matSuffix>\r\n                        <mat-icon\r\n                            class=\"icon-size-5\"\r\n                            *ngIf=\"passwordConfirmField.type === 'password'\"\r\n                            [svgIcon]=\"'heroicons_solid:eye'\"></mat-icon>\r\n                        <mat-icon\r\n                            class=\"icon-size-5\"\r\n                            *ngIf=\"passwordConfirmField.type === 'text'\"\r\n                            [svgIcon]=\"'heroicons_solid:eye-slash'\"></mat-icon>\r\n                    </button>\r\n                    <mat-error *ngIf=\"resetPasswordForm.get('passwordConfirm').hasError('required')\">\r\n                        Password confirmation is required\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"resetPasswordForm.get('passwordConfirm').hasError('mustMatch')\">\r\n                        Passwords must match\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n                <!-- Submit button -->\r\n                <button\r\n                    class=\"fuse-mat-button-large w-full mt-3\"\r\n                    mat-flat-button\r\n                    [color]=\"'primary'\"\r\n                    [disabled]=\"resetPasswordForm.disabled\"\r\n                    (click)=\"resetPassword()\">\r\n                    <span *ngIf=\"!resetPasswordForm.disabled\">\r\n                        Reset your password\r\n                    </span>\r\n                    <mat-progress-spinner\r\n                        *ngIf=\"resetPasswordForm.disabled\"\r\n                        [diameter]=\"24\"\r\n                        [mode]=\"'indeterminate'\"></mat-progress-spinner>\r\n                </button>\r\n\r\n                <!-- Form footer -->\r\n                <div class=\"mt-8 text-md font-medium text-secondary\">\r\n                    <span>Return to</span>\r\n                    <a\r\n                        class=\"ml-1 text-primary-500 hover:underline\"\r\n                        [routerLink]=\"['/sign-in']\">sign in\r\n                    </a>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div class=\"relative hidden md:flex flex-auto items-center justify-center w-1/2 h-full p-16 lg:px-28 overflow-hidden bg-gray-800 dark:border-l\">\r\n        <!-- Background - @formatter:off -->\r\n        <!-- Rings -->\r\n        <svg class=\"absolute inset-0 pointer-events-none\"\r\n             viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\r\n                <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\r\n                <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\r\n            </g>\r\n        </svg>\r\n        <!-- Dots -->\r\n        <svg class=\"absolute -top-16 -right-16 text-gray-700\"\r\n             viewBox=\"0 0 220 192\" width=\"220\" height=\"192\" fill=\"none\">\r\n            <defs>\r\n                <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\r\n                    <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\r\n                </pattern>\r\n            </defs>\r\n            <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\r\n        </svg>\r\n        <!-- @formatter:on -->\r\n        <!-- Content -->\r\n        <div class=\"z-10 relative w-full max-w-2xl\">\r\n            <div class=\"text-7xl font-bold leading-none text-gray-100\">\r\n                <div>Welcome to</div>\r\n                <div>our community</div>\r\n            </div>\r\n            <div class=\"mt-6 text-lg tracking-tight leading-6 text-gray-400\">\r\n                Fuse helps developers to build organized and well coded dashboards full of beautiful and rich modules.\r\n                Join us and start building your application today.\r\n            </div>\r\n            <div class=\"flex items-center mt-8\">\r\n                <div class=\"flex flex-0 items-center -space-x-1.5\">\r\n                    <img\r\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\r\n                        src=\"assets/images/avatars/female-18.jpg\">\r\n                    <img\r\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\r\n                        src=\"assets/images/avatars/female-11.jpg\">\r\n                    <img\r\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\r\n                        src=\"assets/images/avatars/male-09.jpg\">\r\n                    <img\r\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\r\n                        src=\"assets/images/avatars/male-16.jpg\">\r\n                </div>\r\n                <div class=\"ml-4 font-medium tracking-tight text-gray-400\">More than 17k people joined us, it's your turn</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Routes } from '@angular/router';\r\nimport { AuthResetPasswordComponent } from 'app/modules/auth/reset-password/reset-password.component';\r\n\r\nexport default [\r\n    {\r\n        path     : '',\r\n        component: AuthResetPasswordComponent,\r\n    },\r\n] as Routes;\r\n"],"names":["FuseValidators","isEmptyInputValue","value","length","mustMatch","controlPath","matchingControlPath","formGroup","control","get","matchingControl","hasError","errors","updateValueAndValidity","setErrors","NgIf","FormsModule","ReactiveFormsModule","Validators","MatButtonModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","RouterLink","fuseAnimations","FuseAlertComponent","finalize","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","alert","type","ɵɵadvance","ɵɵtextInterpolate1","message","ɵɵelement","AuthResetPasswordComponent","constructor","_authService","_formBuilder","showAlert","ngOnInit","resetPasswordForm","group","password","required","passwordConfirm","validators","resetPassword","invalid","disable","pipe","enable","resetPasswordNgForm","resetForm","subscribe","response","ɵɵdirectiveInject","i1","AuthService","i2","UntypedFormBuilder","selectors","viewQuery","AuthResetPasswordComponent_Query","rf","ctx","ɵɵtemplate","AuthResetPasswordComponent_fuse_alert_9_Template","ɵɵlistener","AuthResetPasswordComponent_Template_button_click_17_listener","ɵɵrestoreView","_r12","_r2","ɵɵreference","ɵɵresetView","AuthResetPasswordComponent_mat_icon_18_Template","AuthResetPasswordComponent_mat_icon_19_Template","AuthResetPasswordComponent_Template_button_click_27_listener","_r5","AuthResetPasswordComponent_mat_icon_28_Template","AuthResetPasswordComponent_mat_icon_29_Template","AuthResetPasswordComponent_mat_error_30_Template","AuthResetPasswordComponent_mat_error_31_Template","AuthResetPasswordComponent_Template_button_click_32_listener","AuthResetPasswordComponent_span_33_Template","AuthResetPasswordComponent_mat_progress_spinner_34_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","disabled","ɵɵpureFunction0","_c1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i3","MatFormField","MatLabel","MatError","MatSuffix","i4","MatInput","i5","MatButton","MatIconButton","i6","MatIcon","i7","MatProgressSpinner","encapsulation","data","animation","path","component"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}