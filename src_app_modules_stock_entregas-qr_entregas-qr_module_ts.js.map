{"version":3,"file":"src_app_modules_stock_entregas-qr_entregas-qr_module_ts.js","mappings":"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","sources":["./src/app/modules/stock/entregas-qr/components/entregas-qr.component.ts","./src/app/modules/stock/entregas-qr/components/entregas-qr.component.html","./src/app/modules/stock/entregas-qr/components/save/save.component.ts","./src/app/modules/stock/entregas-qr/components/save/save.component.html","./src/app/modules/stock/entregas-qr/entregas-qr.module.ts","./src/app/modules/stock/entregas-qr/service/entregas-qr.service.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable, Subject, firstValueFrom, map, startWith, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\nimport { EntregasQRService } from '../service/entregas-qr.service';\r\nimport { IEntregaQR } from '../models/entrega-qr';\r\nimport { IDeposito } from '../../depositos/models/deposito';\r\nimport { SaveComponent } from './save/save.component';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { DatePipe } from '@angular/common';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-entregas-qr',\r\n    templateUrl: './entregas-qr.component.html',\r\n    styleUrls: ['./entregas-qr.component.scss']\r\n})\r\nexport class EntregasQRComponent implements OnInit, OnDestroy {\r\n    form: FormGroup;\r\n    columns = ['codigo_interno', 'articulo', 'unidadmedida', 'cantidad'];\r\n    public dataSource: MatTableDataSource<any> = new MatTableDataSource();\r\n    user: any;\r\n    entrega: IEntregaQR;\r\n    depositos: IDeposito[] = [];\r\n    mov_art_list: any[] = [];\r\n    usuarios: IUsuario[] = [];\r\n    filteredDepositos: Observable<IDeposito[]>;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    idUsuario: number;\r\n    nombre: string = '';\r\n    apellido: string = '';\r\n    orden_servicio: number;\r\n    mostrarTextoCredencial: boolean = true;\r\n    mostrarTextoOrdenServicio: boolean = true;\r\n    buttonStyleCredencial: string = 'default';\r\n    buttonStyleOrdenServicio: string = 'default';\r\n    credencialScaneada = false;\r\n    ordenServicioScaneada = false;\r\n    deposito_default = 0;\r\n    asignacion_entrega: number;\r\n    asignacion_tipo: any;\r\n\r\n    constructor(\r\n        private _entregasQRService: EntregasQRService,\r\n        private _empresaService: EmpresaService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private _menuService: JedsMenuService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService,\r\n        private datePipe: DatePipe\r\n\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n        this.user = JSON.parse(localStorage.getItem('user'))\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n                this.deposito_default = empresa.deposito_default;\r\n                this.asignacion_entrega = empresa.asignacion_entrega;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getDepositos();\r\n    }\r\n\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            deposito_entrega: new FormControl((this.entrega ? this.entrega.descripcion_deposito : ''), Validators.required),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Se escanea el QR de la Credencial de Usuario y se toma el idusuario.\r\n     */\r\n    credencialUsuario() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                this.alert.error('Código QR vacío o inválido.');\r\n                return;\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en un json\r\n\r\n            const idusuario = parseInt(decodedText['idusuario'], 10);\r\n            this.idUsuario = idusuario;\r\n            this._entregasQRService.getUsuarioQR(idusuario).subscribe(response => {\r\n                if (response?.result?.length > 0) {\r\n                    const usuario = response.result[0];\r\n                    this.nombre = usuario.nombre;\r\n                    this.apellido = usuario.apellido;\r\n                    this.mostrarTextoCredencial = false;\r\n                    this.buttonStyleCredencial = 'scanned';\r\n                    this.credencialScaneada = true;\r\n                } else {\r\n                    this.alert.error('Usuario no encontrado.');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener usuario:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Se escanea el QR de Orden de Servicio y se toma la idventagenerica.\r\n     */\r\n    ordenServicio() {\r\n        let idordenservicio: number;\r\n        let clave_os: string;\r\n        let endpoint: string;\r\n        let queryParams: string;\r\n\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe((code) => {\r\n            if (!code || code.length === 0) {\r\n                this.alert.error('Código QR vacío o inválido.');\r\n                return;\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en json\r\n\r\n            // Encapsulo los datos que voy a utilizar\r\n            for (const clave in decodedText) {\r\n                clave_os = clave;\r\n                idordenservicio = decodedText[clave];\r\n                this.asignacion_tipo = clave;\r\n            }\r\n\r\n            // Defino el endpoint segun cada asignacion\r\n            if (this.asignacion_entrega === 0 && clave_os === 'idventagenerica') {\r\n                endpoint = `${environment.ventas.view_venta_genericas}`;\r\n            } else if (this.asignacion_entrega === 1 && clave_os === 'idcomplejo') {\r\n                endpoint = `${environment.inmuebles.complejos.view_inm_complejos}`;\r\n            } else if (this.asignacion_entrega === 1 && clave_os === 'idunidadfuncional') {\r\n                endpoint = `${environment.inmuebles.unidad_funcional.view_inm_unidad_funcional}`;\r\n            } else {\r\n                return this.alert.error('Orden de Servicio no encontrada.');\r\n            }\r\n\r\n            // Aplico el filtro\r\n            queryParams = `?filter[${clave_os}]=`;\r\n\r\n            this._entregasQRService.getOrdenServicio(idordenservicio, endpoint, queryParams).subscribe(response => {\r\n                if (response?.result?.length > 0) {\r\n                    const result = response.result[0];\r\n\r\n                    // Aplico el valor de la orden de servicio segun la asignacion que se haya escaneado\r\n                    if (this.asignacion_entrega === 0) {\r\n                        this.orden_servicio = result.idventagenerica;\r\n                    } else if (this.asignacion_entrega === 1 && clave_os === 'idcomplejo') {\r\n                        this.orden_servicio = result.idcomplejo;\r\n                    } else if (this.asignacion_entrega === 1 && clave_os === 'idunidadfuncional') {\r\n                        this.orden_servicio = result.idunidadfuncional;\r\n                    }\r\n\r\n                    this.mostrarTextoOrdenServicio = false;\r\n                    this.buttonStyleOrdenServicio = 'scanned';\r\n                    this.ordenServicioScaneada = true;\r\n                } else {\r\n                    this.alert.error('Orden de Servicio no encontrada.');\r\n                }\r\n            }, error => {\r\n                console.error('Error al obtener venta:', error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param option \r\n     * Se va a traer los Depositos para listarlos en un Select\r\n     */\r\n    async getDepositos(option?) {\r\n        const Depositos = await firstValueFrom(this._entregasQRService.getDepositos(option));\r\n        new Promise(async (resolve) => {\r\n            this.depositos = Depositos.list;\r\n\r\n            // Filtrar y autoasignar el depósito por defecto\r\n            const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n            if (depositoPorDefecto) {\r\n                this.form.get('deposito_entrega').setValue(depositoPorDefecto);\r\n            }\r\n\r\n            this.filteredDepositos = this.form.get('deposito_entrega').valueChanges.pipe(\r\n                startWith(''),\r\n                map((value) => this._filterDepositos(value)),\r\n            );\r\n\r\n            resolve(true);\r\n        })\r\n    };\r\n\r\n    /**\r\n     * \r\n     * @param deposito \r\n     * @returns Filtrado de Depositos para el Autocomplete\r\n     */\r\n    private _filterDepositos(deposito: IDeposito): IDeposito[] {\r\n        const filterValue = deposito.toString().toLowerCase();\r\n        return this.depositos.filter(deposito => deposito.descripcion.toLowerCase().includes(filterValue));\r\n    }\r\n\r\n    getTextDeposito(option) {\r\n        if (option.descripcion) {\r\n            return option.descripcion;\r\n        }\r\n        if (option.deposito) {\r\n            return option.deposito;\r\n        }\r\n        return option;\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    agregarArticulo() {\r\n        if (this.form.get('deposito_entrega').value != '') {\r\n            let deposito_entrega_value = this.form.get('deposito_entrega').value.iddeposito;\r\n            this.dialogo\r\n                .open(SaveComponent, {\r\n                    panelClass: 'ayuda-dialog',\r\n                    data: {\r\n                        deposito_entrega: deposito_entrega_value,\r\n                        movimientos: this.mov_art_list,\r\n                    }\r\n                })\r\n                .afterClosed()\r\n                .subscribe({\r\n                    next: (res) => {\r\n                        if (res) {\r\n                            let movimiento_articulo = {\r\n                                idarticulo: res.articulo.idarticulo,\r\n                                cantidad: res.cantidad,\r\n                                idunidadmedida: res.unidad_medida,\r\n                                descripcion_articulo: res.articulo.descripcion,\r\n                                descripcion_um: res.unidadmedida_descripcion,\r\n                                codigo_interno: res.articulo.codigo,\r\n                                stock: res.stock,    //Stock restante de ese articulo con esa um...\r\n                            }\r\n\r\n                            this.mov_art_list = [movimiento_articulo, ...this.mov_art_list];\r\n                            this.dataSource = new MatTableDataSource(this.mov_art_list); //Actualizo la tabla\r\n\r\n                            // Deshabilito el control Deposito\r\n                            if (this.mov_art_list.length != 0) {\r\n                                this.form.get('deposito_entrega').disable();\r\n                            }\r\n\r\n                            this.alert.success(\"Artículo añadido con éxito\")\r\n                        }\r\n                    },\r\n                });\r\n        } else {\r\n            this.alert.warning(\"Seleccione un Depósito de origen\")\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion para limpiar campos\r\n    */\r\n    limpiarCasillero(input) {\r\n        this.form.get(input).setValue('');\r\n    }\r\n\r\n    /**\r\n     * Resetea todo el Formulario de Entrega con QR \r\n     */\r\n    resetForm() {\r\n        // Filtrar y autoasignar el depósito por defecto\r\n        const depositoPorDefecto = this.depositos.find(deposito => deposito.iddeposito === this.deposito_default);\r\n\r\n        this.form.get('deposito_entrega').setValue(depositoPorDefecto ? depositoPorDefecto : '');\r\n        this.form.get('deposito_entrega').enable();\r\n        this.form.get('deposito_entrega').setErrors(null);\r\n        this.mov_art_list = [];\r\n        this.dataSource = new MatTableDataSource(this.mov_art_list);\r\n        this.mostrarTextoCredencial = true;\r\n        this.mostrarTextoOrdenServicio = true;\r\n        this.buttonStyleCredencial = 'default';\r\n        this.buttonStyleOrdenServicio = 'default';\r\n        this.credencialScaneada = false;\r\n        this.ordenServicioScaneada = false;\r\n        this.idUsuario = null;\r\n        this.nombre = '';\r\n        this.apellido = '';\r\n        this.orden_servicio = null;\r\n    }\r\n\r\n    onSubmit() {\r\n        // if (!this.credencialScaneada || !this.ordenServicioScaneada) {\r\n        //     this.alert.error('Escanea ambos códigos QR');\r\n        //     return;\r\n        // }\r\n\r\n        if (!this.ordenServicioScaneada) {\r\n            this.alert.error('Debe Escanear La Orden De Servicio');\r\n            return;\r\n        }\r\n\r\n        if (!this.form.get('deposito_entrega').value || !this.form.get('deposito_entrega').value.iddeposito) {\r\n            this.alert.error('Revise Los Datos Ingresados');\r\n            return;\r\n        } else {\r\n            let movimientos = this.mov_art_list.map(objeto => ({   //Encapsulo solamente los datos que utilizaré de los articulos...\r\n                idarticulo: objeto.idarticulo,\r\n                cantidad: objeto.cantidad,\r\n                idunidadmedida: objeto.idunidadmedida\r\n            }))\r\n\r\n            if (movimientos.length === 0) {\r\n                return this.alert.warning('Debe ingresar un articulo a la orden de entrega.')\r\n            }\r\n\r\n            const fecha = new Date().toISOString().split('T')[0];\r\n            const hora = new Date().toLocaleTimeString([], { hour12: false });\r\n\r\n            // Se formatea la fecha nuevamente al formato deseado (YYYY-MM-DD)\r\n            const fecha_formateada = this.datePipe.transform(fecha, 'yyyy-MM-dd');\r\n\r\n            // Se concatena a ambas fecha y hora\r\n            const fecha_hora = `${fecha_formateada} ${hora}`;\r\n\r\n            const payload = {\r\n                entrega: {\r\n                    idusuario: this.user.id,\r\n                    fecha_hora_precarga: fecha_hora,\r\n                    iddeposito: this.form.get('deposito_entrega').value.iddeposito,\r\n                    usuario_entrega: this.idUsuario ? this.idUsuario : null,\r\n                    observaciones: `Entrega QR - Órden N°${this.orden_servicio}`,\r\n                    idventagenerica: this.asignacion_tipo === 'idventagenerica' ? this.orden_servicio : null,\r\n                    idunidadfuncional: this.asignacion_tipo === 'idunidadfuncional' ? this.orden_servicio : null,\r\n                    idcomplejo: this.asignacion_tipo === 'idcomplejo' ? this.orden_servicio : null\r\n                },\r\n                movimientos: movimientos\r\n            }\r\n\r\n            this._entregasQRService.saveEntregaQR(payload)\r\n                .subscribe({\r\n                    next: (data) => {\r\n                        if (data) {\r\n                            this.alert.success(\"Entrega creada con éxito.\");\r\n                            setTimeout(() => {\r\n                                this.resetForm();\r\n                            }, 1500);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe();\r\n        this.dialogo.closeAll();\r\n    }\r\n}","<div class=\"flex-auto p-2 sm:p-10 bg-card relative\">\r\n    <h1 class=\"text-3xl font-semibold mb-6 text-center\">Realizar Entrega</h1>\r\n    <div class=\"flex items-center justify-center mb-6\" (click)=\"credencialUsuario()\">\r\n        <button [ngClass]=\"color_primario ? '' : default_color\" [ngStyle]=\"{\r\n                'background': buttonStyleCredencial === 'default' ? color_primario || '' : '',\r\n                'border': buttonStyleCredencial === 'scanned' ? '2px solid ' + (color_primario || '') : '',\r\n                'color': buttonStyleCredencial === 'scanned' ? color_primario || '' : 'white'\r\n            }\" class=\"flex items-center justify-center w-12 h-12 rounded-full mr-4\">\r\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                    fill=\"currentColor\" />\r\n            </svg>\r\n        </button>\r\n        <p class=\"text-lg font-semibold w-72\" *ngIf=\"mostrarTextoCredencial\">\r\n            Escanear Credencial de Empleado\r\n        </p>\r\n        <p class=\"text-lg font-semibold w-72\" *ngIf=\"!mostrarTextoCredencial\">\r\n            {{ nombre }} {{ apellido }}\r\n        </p>\r\n    </div>\r\n    <div class=\"flex items-center justify-center mb-4\" (click)=\"ordenServicio()\">\r\n        <button [ngClass]=\"color_primario ? '' : default_color\" [ngStyle]=\"{\r\n                'background': buttonStyleOrdenServicio === 'default' ? color_primario || '' : '',\r\n                'border': buttonStyleOrdenServicio === 'scanned' ? '2px solid ' + (color_primario || '') : '',\r\n                'color': buttonStyleOrdenServicio === 'scanned' ? color_primario || '' : 'white'\r\n            }\" class=\"flex items-center justify-center w-12 h-12 rounded-full mr-4\">\r\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\"\r\n                    fill=\"currentColor\" />\r\n            </svg>\r\n        </button>\r\n        <p class=\"text-lg font-semibold w-72\" *ngIf=\"mostrarTextoOrdenServicio\">\r\n            Escanear Orden de Servicio\r\n        </p>\r\n        <p class=\"text-lg font-semibold w-72\" *ngIf=\"!mostrarTextoOrdenServicio\">\r\n            Órden N°{{ orden_servicio }}\r\n        </p>\r\n    </div>\r\n    <form class=\"flex flex-col form-menu items-center justify-center my-6\" [formGroup]=\"form\">\r\n        <div class=\"w-90\">\r\n            <span class=\"block font-semibold text-lg mb-2\">Depósito</span>\r\n            <mat-form-field appearance=\"fill\" class=\"w-full sm:w-90\">\r\n                <input type=\"text\" matInput formControlName=\"deposito_entrega\" placeholder=\"Seleccione Depósito\"\r\n                    [matAutocomplete]=\"art\">\r\n                <button mat-icon-button matSuffix *ngIf=\"!form.get('deposito_entrega').value\">\r\n                    <mat-icon>arrow_drop_down</mat-icon>\r\n                </button>\r\n                <button mat-icon-button matSuffix (click)=\"limpiarCasillero('deposito_entrega')\"\r\n                    *ngIf=\"form.get('deposito_entrega').value\">\r\n                    <mat-icon class=\"text-xl\">clear</mat-icon>\r\n                </button>\r\n                <mat-autocomplete autoActiveFirstOption #art=\"matAutocomplete\" [displayWith]=\"getTextDeposito\">\r\n                    <mat-option *ngFor=\"let deposito of filteredDepositos | async\" [value]=\"deposito\">\r\n                        {{ deposito.descripcion }}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n            <button mat-flat-button (click)='agregarArticulo()' [class]=\"color_primario ? '' : default_color\"\r\n                [style.border]=\"color_primario || '' \" [style.color]=\"color_primario || '' \"\r\n                class=\"w-36 rounded-lg py-0 ml-[215px] !border border-solid\">\r\n                <div class=\"flex item-center\">\r\n                    <span class=\"text-lg\">Agregar Artículo</span>\r\n                </div>\r\n            </button>\r\n            <!-- Grilla -->\r\n            <div class=\"overflow-y-auto max-h-[150px] h-[150px] shadow-md rounded-lg mt-8\">\r\n                <table mat-table [dataSource]=\"dataSource\" class=' w-full'>\r\n                    <ng-container matColumnDef='codigo_interno'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white\">\r\n                            Código Interno\r\n                        </th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{movimiento_articulo.codigo_interno}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='articulo'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white\">\r\n                            Artículo</th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{movimiento_articulo.descripcion_articulo}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='unidadmedida'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"text-white\"> U. de Medida </th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.descripcion_um }}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef='cantidad'>\r\n                        <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                            [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white\"> Cantidad </th>\r\n                        <td mat-cell *matCellDef='let movimiento_articulo'>\r\n                            {{ movimiento_articulo.cantidad}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef='columns; sticky: true'></tr>\r\n                    <tr mat-row *matRowDef='let row; columns: columns'></tr>\r\n                </table>\r\n                <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n                    <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"flex items-center justify-center\">\r\n        <div class=\"w-90 mt-8\">\r\n            <button mat-flat-button (click)='onSubmit()' [class]=\"color_primario ? '' : default_color\"\r\n                [style.background]=\"color_primario || '' \" [style.color]=\"color_primario || '' \"\r\n                class=\"rounded-lg w-36 ml-[215px] py-0\">\r\n                <div class=\"flex item-center\">\r\n                    <span class=\"text-lg text-white\">\r\n                        {{ this.idUsuario ? 'Entregar' : 'Precargar' }}\r\n                    </span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { Observable, Subject, debounceTime, finalize, firstValueFrom, map, startWith, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { MY_DATE_FORMATS } from '@shared/constants/date-format';\r\nimport { EntregasQRService } from '../../service/entregas-qr.service';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { LectorQrComponent } from '@shared/components/lector-qr/lector-qr.component';\r\n\r\n@Component({\r\n    selector: 'app-save-entregas',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss'],\r\n    providers: [{ provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }]\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    form: FormGroup;\r\n    articulos: any[] = [];\r\n    idArticulo: number | null = null;\r\n    unidades_de_medida: any[] = [];\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'bg-primary';\r\n    showAlert = false;\r\n    _alertConfig: IAlertConfig;\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n    @Output() public creadoExitosamente: EventEmitter<void> = new EventEmitter<void>();\r\n    codigo_interno: string = '';\r\n    descripcion: string = '';\r\n    mostrarTexto: boolean = true;\r\n    buttonStyle: string = 'default';\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _entregasQRService: EntregasQRService,\r\n        private _empresaService: EmpresaService,\r\n        private datePipe: DatePipe,\r\n        private alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>,\r\n        private dialogo: MatDialog,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n\r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.newForm();\r\n        this.getArticulosDepositos();\r\n        this.subscribeAlert();\r\n        this.etiquetaArticulo();\r\n    }\r\n\r\n    // Alert\r\n    subscribeAlert() {\r\n        this.alert.emitConfig.subscribe({\r\n            next: (config: IAlertConfig) => {\r\n                this.showAlert = true;\r\n                this._alertConfig = {\r\n                    ...config,\r\n                    appearance: 'border',\r\n                };\r\n                let time = 2;\r\n                timer(100, 1500)\r\n                    .pipe(\r\n                        finalize(() => {\r\n                            this.showAlert = false;\r\n                            this._alertConfig = null;\r\n                        }),\r\n                        takeWhile(() => time > 0),\r\n                        takeUntil(this._unsubscribeAll),\r\n                        tap(() => (time -= 1))\r\n                    )\r\n                    .subscribe();\r\n            },\r\n        });\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            unidadmedida: new FormControl((''), Validators.required),\r\n            stock_existente: new FormControl(('')),\r\n            cantidad: new FormControl((''), Validators.required),\r\n        });\r\n        this.form.get('unidadmedida').disable();\r\n        this.form.get('stock_existente').disable();\r\n        this.form.get('cantidad').disable();\r\n    }\r\n\r\n    /**\r\n     * Funcion que lista los articulos que posee un déposito.\r\n     */\r\n    async getArticulosDepositos() {\r\n        const articulos_um_deposito = await firstValueFrom(this._entregasQRService.getArticulosDepositos(this.data.deposito_entrega)); // solicitamos los artículos que estén en un depósito\r\n        this.articulos = articulos_um_deposito.list;\r\n    }\r\n\r\n    /**\r\n     * Se escanea el QR de las Etiqueta de Articulos y se toma el idarticulo.\r\n     */\r\n    etiquetaArticulo() {\r\n        this.dialogo.open(LectorQrComponent, {\r\n            panelClass: 'ayuda-dialog'\r\n        }).componentInstance.sendObject.subscribe(async (code) => {\r\n            if (!code || code.length === 0) {\r\n                this.alert.error('Código QR vacío o inválido.');\r\n                return;\r\n            }\r\n\r\n            let decodedText = JSON.parse(code); // Convierto el string en json\r\n\r\n            const idarticulo = parseInt(decodedText['idarticulo']);\r\n            \r\n            try {\r\n                const response = await firstValueFrom(this._entregasQRService.getArticuloQR(idarticulo));\r\n                if (response?.result?.length > 0) {\r\n                    const articulo = response.result[0];\r\n                    // Validar si el artículo está en el depósito\r\n                    const articuloEnDeposito = this.articulos.find(item => item.idarticulo === articulo.idarticulo);\r\n                    if (articuloEnDeposito) {\r\n                        this.idArticulo = articulo.idarticulo\r\n                        this.codigo_interno = articulo.codigo_interno;\r\n                        this.descripcion = articulo.descripcion;\r\n                        this.mostrarTexto = false;\r\n                        this.buttonStyle = 'scanned';\r\n                        this.getUnidadesDeMedidaArticulos(articulo.idarticulo);\r\n                    } else {\r\n                        this.alert.error('Artículo sin stock en este depósito.');\r\n                    }\r\n                    this.form.get('unidadmedida').enable()\r\n                    this.form.get('cantidad').enable()\r\n                } else {\r\n                    this.alert.error('Artículo no encontrado.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener artículo:', error);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion solicita las unidades de medida que posee un articulo.\r\n     * @param idarticulo \r\n     */\r\n    getUnidadesDeMedidaArticulos(idarticulo) {\r\n        new Promise(async (resolve) => {\r\n            this.unidades_de_medida = this.articulos.filter(a => a.idarticulo === idarticulo).sort((a, b) => a.factor_um - b.factor_um).map(a => {\r\n                return {\r\n                    idarticulo: a.idarticulo,\r\n                    codigo_interno: a.codigo_interno,\r\n                    idunidadmedida: a.idunidadmedida,\r\n                    descripcion_um: a.um,\r\n                    stock: a.stock\r\n                }\r\n            });\r\n\r\n            // Autoasigna la primera unidad de medida al control del formulario\r\n            if (this.unidades_de_medida.length > 0) {\r\n                this.form.get('unidadmedida').setValue(this.unidades_de_medida[0].idunidadmedida);\r\n                this.seleccionArticulo({ um: this.unidades_de_medida[0].idunidadmedida });\r\n            }\r\n            resolve(true);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta funcion maneja las cambios de seleccion que puedan tener articulos y unidades de medida.\r\n     * @param $event \r\n     */\r\n    seleccionArticulo($event) {\r\n        //Al seleccionar un articulo...\r\n        if ($event.idarticulo) {\r\n            this.form.get('unidadmedida').enable()\r\n            this.getUnidadesDeMedidaArticulos($event.idarticulo) //...Buscamos las UM que posee ese articulo.\r\n        }\r\n        // - Mostrar Stock -\r\n        //Al seleccionar la UM...\r\n        if ($event.um) {\r\n            //Consultamos sí existe un articulo con esa UM y utilizamos la respuesta para ver si existe un movimiento con ese articulo y esa UM en los movimientos.\r\n            let articulo_um = this.unidades_de_medida.find(a => a.idarticulo === this.idArticulo && a.idunidadmedida === this.form.get('unidadmedida').value);\r\n            let stock; //variable auxiliar   \r\n            let cantidad_existente = 0;\r\n\r\n            let existeMovimiento = this.data.movimientos.length > 0 ? true : false; //Consultamos sí hay movimientos\r\n\r\n            if (existeMovimiento) { //Sí existe minimo un movimiento y es una crecion...\r\n                let articulos_existentes = this.data.movimientos.filter(a => a.idarticulo === articulo_um.idarticulo && a.idunidadmedida === articulo_um.idunidadmedida); //Se hace esto para mantener el stock actualizado, en caso de haber sido modificado.\r\n                //Si existen movimientos de articulos con la misma UM...\r\n                articulos_existentes.forEach(ae => {\r\n                    cantidad_existente = cantidad_existente + Number(ae.cantidad); //...sumamos la cantidad que equivalen\r\n                })\r\n                stock = `${Number(articulo_um.stock) - cantidad_existente}`; //...Se le asigna el stock restante...\r\n            } else {\r\n                stock = articulo_um.stock; //..Sino el stock que traiga ese articulo con esa UM del servicio.\r\n            }\r\n            this.form.get('stock_existente').setValue(stock) //Lo mostramos.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param input \r\n     * Metodo para el boton de suma para el campo de Cantidad.\r\n     */\r\n    sumaArticulo(input: HTMLInputElement) {\r\n        if (this.idArticulo !== null) {\r\n            const currentValue = Number(input.value) || 0;\r\n            this.form.controls['cantidad'].setValue(currentValue + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param input \r\n     * Metodo para el boton de resta para el campo de Cantidad.\r\n     */\r\n    restaArticulo(input: HTMLInputElement) {\r\n        if (this.idArticulo !== null) {\r\n            const currentValue = Number(input.value) || 0;\r\n            if (currentValue > 0) {\r\n                this.form.controls['cantidad'].setValue(currentValue - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Limpia los campos del Formulario.\r\n     */\r\n    limpiarCasilleros() {\r\n        this.codigo_interno = '';\r\n        this.descripcion = '';\r\n        this.mostrarTexto = true;\r\n        this.buttonStyle = 'default';\r\n        this.form.reset({\r\n            unidadmedida: '',\r\n            stock_existente: '',\r\n            cantidad: ''\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Maneja los eventos de teclado en el formulario.\r\n    * @param event - El evento del teclado.\r\n    */\r\n    onKeyDown(event: KeyboardEvent): void {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault(); // Evita el comportamiento predeterminado del Enter (como el envío de formularios)\r\n            this.onSubmit(); // Llama a la función onSubmit\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.error('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.articulos.forEach(articulo => {\r\n                if (articulo.idarticulo === this.idArticulo && articulo.idunidadmedida === this.form.get('unidadmedida').value) {\r\n                    if (this.form.get('cantidad').value > articulo.stock) {\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('No hay stock suficiente!');\r\n                    }\r\n\r\n                    let existeMovimiento = this.data.movimientos.find(movimiento => movimiento.idarticulo === this.idArticulo && movimiento.idunidadmedida === this.form.get('unidadmedida').value);\r\n\r\n                    if (existeMovimiento) {\r\n                        this.form.get('unidadmedida').setValue('');\r\n                        this.form.get('stock_existente').setValue('');\r\n                        this.form.get('cantidad').setValue('');\r\n                        return this.alert.warning('Este artículo ya tiene un movimiento con esta unidad.');\r\n                    }\r\n\r\n                    if (this.form.get('cantidad').value <= articulo.stock && this.form.get('cantidad').value > 0) {\r\n                        let unidadmedida = this.unidades_de_medida.find(um => um.idunidadmedida === this.form.get('unidadmedida').value); //Traigo una UM que coincida con mi seleccion para poder utilizar su descripcion.\r\n\r\n                        let movimiento_articulo = {\r\n                            articulo: {\r\n                                idarticulo: this.idArticulo,\r\n                                codigo: this.codigo_interno,\r\n                                descripcion: this.descripcion\r\n                            },\r\n                            unidad_medida: this.form.get('unidadmedida').value,\r\n                            unidadmedida_descripcion: unidadmedida.descripcion_um,\r\n                            stock: `${Number(articulo.stock) - this.form.get('cantidad').value}`,\r\n                            cantidad: this.form.get('cantidad').value,\r\n                        }\r\n\r\n                        this.onCloseMenu(movimiento_articulo)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseMenu(articulo?) {\r\n        this.dialogRef.close(articulo ? articulo : false)\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-120 sm:w-min-w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\">\r\n    <div [class]=\"color_primario ? '' : default_color\" [style.background]=\"color_primario\"\r\n        [style.color]=\"color_secundario || '' \" class=\"w-full px-4 py-4 flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">Agregar Artículo</span>\r\n        <div>\r\n            <button mat-icon-button class=\"md:hidden\" (click)=\"limpiarCasilleros()\">\r\n                <mat-icon class=\"text-white\">refresh</mat-icon>\r\n            </button>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <!-- Alert -->\r\n    <fuse-alert\r\n        class=\"fixed top-0 left-0 w-full flex justify-center items-center mt-8 alert-main z-99999\"\r\n        [type]=\"_alertConfig.type\"\r\n        [appearance]=\"'outline'\"\r\n        *ngIf=\"showAlert\"\r\n        [@fadeIn]=\"showAlert\"\r\n    >\r\n    {{ _alertConfig.message }}\r\n    </fuse-alert>\r\n    <div class=\"flex px-8 pt-6 items-center sm:ml-12\" (click)=\"etiquetaArticulo()\">\r\n        <button\r\n            [ngClass]=\"color_primario ? '' : default_color\"\r\n            [ngStyle]=\"{\r\n                'background': buttonStyle === 'default' ? color_primario || '' : '',\r\n                'border': buttonStyle === 'scanned' ? '2px solid ' + (color_primario || '') : '',\r\n                'color': buttonStyle === 'scanned' ? color_primario || '' : 'white'\r\n            }\"\r\n            class=\"flex items-center justify-center w-12 h-12 rounded-full mr-4\">\r\n            <svg width=\"22\" height=\"22\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M2.66667 2.66667H6.66667V6.66667H2.66667V2.66667ZM13.3333 2.66667V6.66667H9.33333V2.66667H13.3333ZM9.33333 10H10.6667V8.66667H9.33333V7.33333H10.6667V8.66667H12V7.33333H13.3333V8.66667H12V10H13.3333V12H12V13.3333H10.6667V12H8.66667V13.3333H7.33333V10.6667H9.33333V10ZM10.6667 10V12H12V10H10.6667ZM2.66667 13.3333V9.33333H6.66667V13.3333H2.66667ZM4 4V5.33333H5.33333V4H4ZM10.6667 4V5.33333H12V4H10.6667ZM4 10.6667V12H5.33333V10.6667H4ZM2.66667 7.33333H4V8.66667H2.66667V7.33333ZM6 7.33333H8.66667V10H7.33333V8.66667H6V7.33333ZM7.33333 4H8.66667V6.66667H7.33333V4ZM1.33333 1.33333V4H0V1.33333C0 0.979711 0.140476 0.640573 0.390524 0.390524C0.640573 0.140476 0.979711 0 1.33333 0L4 0V1.33333H1.33333ZM14.6667 0C15.0203 0 15.3594 0.140476 15.6095 0.390524C15.8595 0.640573 16 0.979711 16 1.33333V4H14.6667V1.33333H12V0H14.6667ZM1.33333 12V14.6667H4V16H1.33333C0.979711 16 0.640573 15.8595 0.390524 15.6095C0.140476 15.3594 0 15.0203 0 14.6667V12H1.33333ZM14.6667 14.6667V12H16V14.6667C16 15.0203 15.8595 15.3594 15.6095 15.6095C15.3594 15.8595 15.0203 16 14.6667 16H12V14.6667H14.6667Z\" fill=\"currentColor\" />\r\n            </svg>\r\n        </button>\r\n        <p class=\"text-lg font-semibold\" *ngIf=\"mostrarTexto\">\r\n            Escanear Artículo\r\n        </p>\r\n        <p class=\"text-lg font-semibold\" *ngIf=\"!mostrarTexto\">\r\n            {{codigo_interno}} - {{descripcion}}\r\n        </p>\r\n    </div>    \r\n    <form class=\"form-menu p-8 sm:ml-12\" [formGroup]=\"form\">\r\n        <div class=\"flex gap-4\">\r\n            <div class=\"flex flex-col\">\r\n                <span class=\"block font-semibold text-lg mb-2\">Unidad de Medida</span>\r\n                <mat-form-field appearance='outline' class=\"w-[186px]\">\r\n                    <mat-select formControlName=\"unidadmedida\" (ngModelChange)=\"seleccionArticulo({um: $event})\" placeholder=\"Selecciona una UM\">\r\n                        <mat-option *ngFor=\"let um of unidades_de_medida\"\r\n                        [value]=\"um.idunidadmedida\">{{um.descripcion_um}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"flex flex-col\">\r\n                <span class=\"block font-semibold text-lg mb-2 text-gray-500\">En Stock</span>\r\n                <mat-form-field appearance='outline' class=\"w-32\">\r\n                    <input matInput type=\"number\" formControlName=\"stock_existente\" placeholder=\"Stock Artículo\" readonly=\"true\">\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n        <div class=\"flex gap-2\">\r\n            <div class=\"flex flex-col\">\r\n                <span class=\"block font-semibold text-lg mb-2\">Cantidad</span>\r\n                <mat-form-field appearance=\"outline\" class=\"w-48\">\r\n                    <input matInput type=\"number\" formControlName=\"cantidad\" placeholder=\"Cantidad a Entregar\" #cantidadInput (keydown)=\"onKeyDown($event)\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"flex items-center justify-center ml-2\">\r\n                <button \r\n                    [class]=\"color_primario ? '' : default_color\" \r\n                    [style.background]=\"color_primario\" \r\n                    class=\"flex items-center justify-center w-10 h-10 sm:w-12 sm:h-12 rounded-full mt-3.5 mr-2 sm:mr-4 transition-transform transform active:scale-95\"\r\n                    (click)=\"sumaArticulo(cantidadInput)\">\r\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M16 10H10V16H6V10H0V6H6V0H10V6H16V10Z\" fill=\"white\"/>\r\n                    </svg>                    \r\n                </button>\r\n                <button \r\n                    [class]=\"color_primario ? '' : default_color\" \r\n                    [style.background]=\"color_primario\" \r\n                    class=\"flex items-center justify-center w-10 h-10 sm:w-12 sm:h-12 rounded-full mt-3.5 transition-transform transform active:scale-95\"\r\n                    (click)=\"restaArticulo(cantidadInput)\">\r\n                    <svg width=\"14\" height=\"2\" viewBox=\"0 0 14 2\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M14 2H0V0H14V2Z\" fill=\"white\"/>\r\n                    </svg>                    \r\n                </button>\r\n            </div>\r\n        </div>   \r\n    </form>\r\n    <div class=\"w-full md:flex md:justify-center md:pb-6 md:px-6 mt-auto\"> \r\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\r\n            [style.color]=\"color_primario || '' \" class=\"hidden !border border-solid md:block md:w-36 md:rounded-lg py-8 md:py-0 mr-2\"\r\n            (click)=\"limpiarCasilleros()\">\r\n            <span class=\"font-medium text-base\">Limpiar</span>\r\n        </button>\r\n        <button mat-flat-button [class]=\"color_primario  ? '' : default_color\" [style.background-color]=\"color_primario\"\r\n            [style.color]=\"color_secundario || '' \" class='w-full rounded-none md:w-36 md:rounded-lg md:w-36 py-8 md:py-0' (click)='onSubmit()'>\r\n            <span class=\"text-white font-medium text-base\">Agregar</span>\r\n        </button>\r\n    </div>\r\n</div>","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { EntregasQRService } from './service/entregas-qr.service';\r\nimport { EntregasQRComponent } from './components/entregas-qr.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: EntregasQRComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [EntregasQRComponent, SaveComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule,\r\n        MatDatepickerModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [ EntregasQRService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class EntregasQRModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { IEntregaQR } from '../models/entrega-qr';\r\n\r\n@Injectable()\r\nexport class EntregasQRService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private _authService: AuthService\r\n    ) { }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param entregas \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveEntregaQR(entregas: IEntregaQR): Observable<IEntregaQR> {\r\n        return this.http.post<IEntregaQR>(`${environment.stock.entregas}`, entregas);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param codigo \r\n     * @returns Verifica si el QR escaneado de la Credencial del Usuario es valido.\r\n     */\r\n    getUsuarioQR(codigo: number): Observable<any> {\r\n        return this.http.get<any>(`${environment.login.view_usuarios}?filter[codigo]=` + codigo);\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param idordenservicio\r\n    * @param queryParams \r\n    * @returns Verifica si el QR escaneado de la Orden de Servicio es valido.\r\n    */\r\n    getOrdenServicio(idordenservicio: number, endpoint: string, queryParams: string): Observable<any> {\r\n        return this.http.get<any>(`${endpoint}${queryParams}` + idordenservicio)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param idarticulo \r\n     * @returns Verifica si el QR escaneado de las Etiquetas de Articulos es valido.\r\n     */\r\n    getArticuloQR(idarticulo: number): Observable<any> {\r\n        return this.http.get<any>(`${environment.stock.view_articulos}?pagination=1&filter[idarticulo]=` + idarticulo);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param option \r\n     * @returns Trae los Depositos de dichas empresa\r\n     */\r\n    getDepositos(option?) {\r\n        let f = '?';\r\n        f += !option ? 'filter[activo]=1' : '';\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param deposito \r\n     * @returns Trae los Articulos que se tienen en dichos Depositos.\r\n     */\r\n    getArticulosDepositos(deposito: number) {\r\n        let f = `?filter[deposito]=${deposito}`\r\n        let subject = new Subject<any>();\r\n        this.http.get<Response[]>(`${environment.stock.view_stock_articulo_depositos}${f}`)\r\n            .subscribe((resp: any) => {\r\n                this._authService.accessToken = resp.token;\r\n                subject.next({\r\n                    list: resp.result\r\n                })\r\n            });\r\n        return subject.asObservable()\r\n    }\r\n\r\n}"],"names":["Subject","firstValueFrom","map","startWith","takeUntil","MatTableDataSource","FormControl","FormGroup","Validators","TablaDinamicaComponent","LectorQrComponent","SaveComponent","environment","i0","ɵɵnamespaceHTML","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r1","nombre","apellido","ɵɵtextInterpolate1","ctx_r3","orden_servicio","ɵɵlistener","EntregasQRComponent_button_22_Template_button_click_0_listener","ɵɵrestoreView","_r20","ctx_r19","ɵɵnextContext","ɵɵresetView","limpiarCasillero","ɵɵproperty","deposito_r21","descripcion","ɵɵclassMap","ctx_r8","color_primario","default_color","ɵɵstyleProp","movimiento_articulo_r22","codigo_interno","ctx_r10","movimiento_articulo_r23","descripcion_articulo","ctx_r12","movimiento_articulo_r24","descripcion_um","ctx_r14","movimiento_articulo_r25","cantidad","ɵɵelement","EntregasQRComponent","constructor","_entregasQRService","_empresaService","confirm","alert","dialogo","_searchService","_menuService","router","_headerTextService","pwaService","datePipe","columns","dataSource","depositos","mov_art_list","usuarios","_unsubscribeAll","mostrarTextoCredencial","mostrarTextoOrdenServicio","buttonStyleCredencial","buttonStyleOrdenServicio","credencialScaneada","ordenServicioScaneada","deposito_default","setTitulo","user","JSON","parse","localStorage","getItem","ngOnInit","empresa$","pipe","subscribe","empresa","color_secundario","asignacion_entrega","getEmpresa","newForm","getDepositos","form","deposito_entrega","entrega","descripcion_deposito","required","credencialUsuario","open","panelClass","componentInstance","sendObject","code","length","error","decodedText","idusuario","parseInt","idUsuario","getUsuarioQR","response","result","usuario","console","ordenServicio","idordenservicio","clave_os","endpoint","queryParams","clave","asignacion_tipo","ventas","view_venta_genericas","inmuebles","complejos","view_inm_complejos","unidad_funcional","view_inm_unidad_funcional","getOrdenServicio","idventagenerica","idcomplejo","idunidadfuncional","option","_this","_asyncToGenerator","Depositos","Promise","_ref","resolve","list","depositoPorDefecto","find","deposito","iddeposito","get","setValue","filteredDepositos","valueChanges","value","_filterDepositos","_x","apply","arguments","filterValue","toString","toLowerCase","filter","includes","getTextDeposito","agregarArticulo","deposito_entrega_value","data","movimientos","afterClosed","next","res","movimiento_articulo","idarticulo","articulo","idunidadmedida","unidad_medida","unidadmedida_descripcion","codigo","stock","disable","success","warning","input","resetForm","enable","setErrors","onSubmit","objeto","fecha","Date","toISOString","split","hora","toLocaleTimeString","hour12","fecha_formateada","transform","fecha_hora","payload","id","fecha_hora_precarga","usuario_entrega","observaciones","saveEntregaQR","setTimeout","ngOnDestroy","unsubscribe","closeAll","ɵɵdirectiveInject","i1","EntregasQRService","i2","EmpresaService","i3","FuseConfirmationService","i4","AppAlertService","i5","MatDialog","i6","SearchService","i7","JedsMenuService","i8","Router","i9","HeaderTextService","i10","PwaService","i11","DatePipe","selectors","viewQuery","EntregasQRComponent_Query","rf","ctx","EntregasQRComponent_Template_div_click_3_listener","ɵɵnamespaceSVG","ɵɵtemplate","EntregasQRComponent_p_7_Template","EntregasQRComponent_p_8_Template","EntregasQRComponent_Template_div_click_9_listener","EntregasQRComponent_p_13_Template","EntregasQRComponent_p_14_Template","EntregasQRComponent_button_21_Template","EntregasQRComponent_button_22_Template","EntregasQRComponent_mat_option_25_Template","EntregasQRComponent_Template_button_click_27_listener","ɵɵelementContainerStart","EntregasQRComponent_th_34_Template","EntregasQRComponent_td_35_Template","ɵɵelementContainerEnd","EntregasQRComponent_th_37_Template","EntregasQRComponent_td_38_Template","EntregasQRComponent_th_40_Template","EntregasQRComponent_td_41_Template","EntregasQRComponent_th_43_Template","EntregasQRComponent_td_44_Template","EntregasQRComponent_tr_45_Template","EntregasQRComponent_tr_46_Template","EntregasQRComponent_div_47_Template","EntregasQRComponent_Template_button_click_50_listener","ɵɵpureFunction3","_c0","_r6","ɵɵpipeBind1","EventEmitter","finalize","takeWhile","tap","timer","MAT_DIALOG_DATA","MAT_DATE_FORMATS","MY_DATE_FORMATS","ctx_r0","_alertConfig","type","showAlert","message","ctx_r2","um_r5","ɵɵtextInterpolate","dialogRef","articulos","idArticulo","unidades_de_medida","creadoExitosamente","mostrarTexto","buttonStyle","getArticulosDepositos","subscribeAlert","etiquetaArticulo","emitConfig","config","appearance","time","unidadmedida","stock_existente","articulos_um_deposito","_this2","getArticuloQR","articuloEnDeposito","item","getUnidadesDeMedidaArticulos","_this3","_ref2","a","sort","b","factor_um","um","seleccionArticulo","_x2","$event","articulo_um","cantidad_existente","existeMovimiento","articulos_existentes","forEach","ae","Number","sumaArticulo","currentValue","controls","restaArticulo","limpiarCasilleros","reset","onKeyDown","event","key","preventDefault","valid","movimiento","onCloseMenu","close","MatDialogRef","outputs","features","ɵɵProvidersFeature","provide","useValue","decls","vars","consts","template","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","SaveComponent_Template_button_click_8_listener","SaveComponent_fuse_alert_11_Template","SaveComponent_Template_div_click_12_listener","SaveComponent_p_16_Template","SaveComponent_p_17_Template","SaveComponent_Template_mat_select_ngModelChange_24_listener","SaveComponent_mat_option_25_Template","SaveComponent_Template_input_keydown_36_listener","SaveComponent_Template_button_click_39_listener","_r4","ɵɵreference","SaveComponent_Template_button_click_42_listener","SaveComponent_Template_button_click_46_listener","SaveComponent_Template_button_click_49_listener","RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","MatDatepickerModule","routes","path","component","EntregasQRModule","imports","forChild","declarations","exports","http","_authService","entregas","post","login","view_usuarios","view_articulos","f","subject","resp","accessToken","token","asObservable","view_stock_articulo_depositos","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}