{"version":3,"file":"default-src_app_shared_components_tabla-dinamica_tabla-dinamica_module_ts.js","mappings":"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","sources":["./src/app/shared/components/tabla-dinamica/services/tabla-dinamica.service.ts","./src/app/shared/components/tabla-dinamica/tabla-dinamica.component.ts","./src/app/shared/components/tabla-dinamica/tabla-dinamica.component.html","./src/app/shared/components/tabla-dinamica/tabla-dinamica.module.ts","./src/app/shared/pipes/activo.pipe.ts","./node_modules/@angular/material/fesm2022/sort.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthService } from '@core/auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TablaDinamicaService {\r\n\r\n  constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n  // private _providerbase: string = environment.baseRest + '/' ;\r\n\r\n  /**\r\n   * \r\n   * @param endpoint La url completa del servicio utilizado para obtener datos que se usaran en la tabla.\r\n   * @param filter \r\n   * @returns \r\n   */\r\n  getData(endpoint: string, filter: string): Observable<any> {\r\n    var subject = new Subject<any>();\r\n    this.http.get(`${endpoint}${filter}`, { observe: 'response' }).subscribe((resp: any) => {\r\n      if (resp.body.token) this._authService.accessToken = resp.body.token;\r\n      subject.next({\r\n        'data': resp.body,\r\n        'totalPages': resp.headers.get('X-Pagination-Page-Count'),\r\n        'totalCount': resp.headers.get('X-Pagination-Total-Count')\r\n      })\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, Optional, Inject, ViewEncapsulation, OnChanges, AfterViewChecked } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TablaDinamicaService } from './services/tabla-dinamica.service';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { filter, forEach } from 'lodash';\r\nimport { MatButton } from '@angular/material/button';\r\n//import { FiltroComponent } from 'app/modules/rrhh/empleados/components/filtro/filtro.component';\r\n//import { throwDialogContentAlreadyAttachedError } from '@angular/cdk/dialog';\r\nimport { NavigationService } from '@core/navigation/navigation.service';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { UserService } from '@core/user/user.service';\r\nimport { Subject, takeUntil } from 'rxjs';\r\nimport { ActivoPipe } from '@shared/pipes/activo.pipe';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IArticuloDeposito } from 'app/modules/stock/depositos/models/deposito';\r\n\r\n@Component({\r\n  selector: 'app-tabla-dinamica',\r\n  templateUrl: './tabla-dinamica.component.html',\r\n  styleUrls: ['./tabla-dinamica.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class TablaDinamicaComponent implements OnInit, AfterViewChecked {\r\n  color_primario: string;\r\n  default_color: string = 'text-primary';\r\n  allSelected = false;\r\n  private seleccionados: Set<string> = new Set();\r\n  @Output() selectionChange = new EventEmitter<any[]>();\r\n  public filterLikeCache: string = ''\r\n  public PageIndex: number = 0\r\n  public Pagesize: number = 10;\r\n  public pageSizeOptions: number[] = [5, 10, 25, 50, 100]\r\n  private filtros_cache\r\n  @Input() cache: boolean = true;\r\n\r\n  private timeoutId: any\r\n\r\n  //------------------------- Filters\r\n  @Input() filterComponent: any = undefined\r\n  public formComponent: any\r\n  /**\r\n   * Filtros concatenados\r\n   */\r\n  public filterLikecomponent: string = '';\r\n\r\n  private filterLike: string = ''\r\n  private filterPaginado: string = `&per-page=${this.Pagesize}&page=${this.PageIndex}`\r\n  @Input() FiltersLikes: string[] = [];\r\n  @Input() FilterLikesID: boolean = false\r\n  @Input() extraParams: string = '';\r\n  @Input() renderType: string; // ssp o client , para paginacion o sin paginacion\r\n  private sortSSP: string = ''; // editado y usado solo si es SSP\r\n\r\n  @Input() endpoint: string = null;\r\n\r\n  @Input() functions: any[];\r\n  @Output() functionEmitter = new EventEmitter<{ name: string, params: any }>();\r\n\r\n  @Input() columnsNames: string[] = [];\r\n  @Input() columnsParams: string[] = [];\r\n  @Input() booleanParams: string[] = [];\r\n\r\n  @Input() accionesButtons: string[];\r\n  @Input() accionesFunctions: string[];\r\n  @Input() extraClasses: string = '';\r\n\r\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  private filterDataSource\r\n  user: import(\"../../../core/user/user.types\").IUsuario;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n\r\n  // * para que el padre te diga cuando recargar la tabla\r\n  eventoUpdate() {\r\n    /*\r\n    en el componente padre:\r\n    -declarar @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    -llamar a esta funcion con this.tabla.eventoUpdate();\r\n    */\r\n    this.renderTabla();\r\n  }\r\n\r\n  constructor(\r\n    private jedsMenu: JedsMenuService,\r\n    private service: TablaDinamicaService,\r\n    private _empresaService: EmpresaService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private menuService: JedsMenuService, private _userService: UserService) {\r\n    // this.dataSource = new MatTableDataSource<any>(this.parentData);\r\n    // this.paginator.length = this.totalRows;\r\n    // this.user = this._userService.getCurrentUser();\r\n\r\n    // Subscribe to the user service (ESTA ES LA FORMA DE OBTENER EL USUARIO EN ESTE PROYECTO CHEKEAR user.service.ts y auth.service.ts) \r\n    // this._userService.user$\r\n    //   .pipe((takeUntil(this._unsubscribeAll)))\r\n    //   .subscribe((user: User) => {\r\n    //     this.user = user;\r\n    //   });\r\n\r\n    if (data) {\r\n      // * caso en el que los parametros para renderizar no vengan desde una llamada al componente con su etiqueta, sino desde un dialog.\r\n      this.endpoint = data.endpoint;\r\n      this.extraParams = data.extraParams;\r\n      this.renderType = data.renderType;\r\n      this.columnsNames = data.columnsNames;\r\n      this.columnsParams = data.columnsParams;\r\n      this.accionesButtons = data.accionesButtons;\r\n      this.accionesFunctions = data.accionesFunctions;\r\n      this.functions = data.functions;\r\n      this.extraClasses = data.extraClasses;\r\n      this.cache = data.cache;\r\n      this.FiltersLikes = data.FiltersLikes;\r\n    }\r\n\r\n    if (!this.columnsNames) {\r\n      this.columnsNames = this.columnsParams;\r\n    }\r\n  }\r\n\r\n  emitFunction(name: string, params: any, origin: any) {\r\n    this.functionEmitter.emit({ name, params: { data: params, origin: origin } });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /* Reemplazar por get_filtro_global del common */\r\n    /* this.filtros_cache = NavigationService.getPermisos(this.user)?.filtros\r\n    if (this.filtros_cache && this.cache) {\r\n\r\n      this.filterLikecomponent = this.filtros_cache.filtercomponent\r\n\r\n      if (this.filtros_cache.filterPaginado) {\r\n        this.filterPaginado = this.filtros_cache.filterPaginado\r\n        this.PageIndex = this.filtros_cache.data.page\r\n        this.Pagesize = this.filtros_cache.data.perpage\r\n      }\r\n\r\n      if (this.filtros_cache.like) {\r\n        this.filterLikeCache = this.filtros_cache.like\r\n      }\r\n\r\n      if (this.filtros_cache.filterLike) {\r\n        this.filterLike = this.filtros_cache.filterLike\r\n      }\r\n      if (this.filtros_cache.formComponent) {\r\n        this.formComponent = this.filtros_cache.formComponent\r\n      }\r\n\r\n    } */\r\n    this.renderTabla();\r\n    this.agregarEstilos();\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n        this.color_primario = empresa.color_primario;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.sort.sortChange.subscribe((sort: Sort) => {\r\n      if (this.renderType == 'ssp') {\r\n        let column = sort.active;\r\n        switch (sort.direction) {\r\n          case \"asc\":\r\n            this.sortSSP = `= ${column}`; //simplemente mando la columna y se ordena ascendente\r\n            break;\r\n          case \"desc\":\r\n            this.sortSSP = `=-${column}`; // mando signo menos (-) y columna, y se ordena descendente\r\n            break;\r\n          default:\r\n            this.sortSSP = '';\r\n            break;\r\n        }\r\n        this.renderTabla();\r\n      }\r\n    });\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  renderTabla(arg?: any) {\r\n    let query = this.sortSSP != '' ? `&sort${this.sortSSP}` : ''; // sortSSP va a ser vacio si el renderType es client. Caso contrario (SSP) puede tener valor\r\n\r\n    if (this.endpoint) {\r\n      if (this.extraParams && this.extraParams != '') {\r\n        let arr_filters = this.extraParams.split('&');\r\n        if (this.extraParams.length != 0 && arr_filters.length > 0) {\r\n          arr_filters.forEach(filter => {\r\n            filter.startsWith('[') ? query += '&filter' + filter + '' : query += '&' + filter + '';\r\n          })\r\n        }\r\n      }\r\n      if (this.filterComponent) {\r\n        query += this.filterLikecomponent\r\n      }\r\n      if (this.filterLike) {\r\n        query += this.filterLike\r\n      }\r\n      if (this.renderType != 'client') {\r\n        query += this.filterPaginado\r\n      }\r\n\r\n      this.service.getData(this.endpoint, query).subscribe(r => {\r\n        /**\r\n         * Grilla con valores booleanos\r\n         * En caso de que exista una columna que tenga valores booleanos este forEach convierte los \r\n         * valores booleanos que sean manejados con numeros para mostrar 'si' o 'no' segun corresponda.\r\n         */\r\n        if (r.data.result) {\r\n          r.data.result.forEach((item) => {\r\n            if (item.fecha) {\r\n              item.fecha = this.cambiarFormatoFecha(item.fecha);\r\n            }\r\n            if (item.hora) {\r\n              item.hora = this.cambiarformatoHora(item.hora);\r\n            }\r\n            if (item.activo) {\r\n              item.activo = item.activo === 1 ? 'Si' : '';\r\n            }\r\n            if (item.bonificado) {\r\n              item.bonificado = item.bonificado === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_banco) {\r\n              item.lleva_banco = item.lleva_banco === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_numero) {\r\n              item.lleva_numero = item.lleva_numero === 1 ? 'Si' : ''\r\n            }\r\n            if (item.lleva_vencimiento) {\r\n              item.lleva_vencimiento = item.lleva_vencimiento === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_cobro) {\r\n              item.lleva_fecha_cobro = item.lleva_fecha_cobro === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_emision) {\r\n              item.lleva_fecha_emision = item.lleva_fecha_emision === 1 ? 'Si' : '';\r\n            }\r\n            if (item.duplica_numero) {\r\n              item.duplica_numero = item.duplica_numero === 1 ? 'Si' : '';\r\n            }\r\n            // Clientes \r\n            if (item.cliente_asociado === null) {\r\n              item.cliente_asociado = 'Sin Cliente Asociado';\r\n            }\r\n            // Ventas\r\n            if (item.obra_descripcion && item.obra_direccion) {\r\n              item.obra = `${item.obra_descripcion} - ${item.obra_direccion}`\r\n            }\r\n            if (item.colocacion && item.acarreo && item.bien_cargada) {\r\n              item.colocacion = item.colocacion === 1 ? 'Si' : '';\r\n              item.acarreo = item.acarreo === 1 ? 'Si' : '';\r\n              item.bien_cargada = item.bien_cargada === 1 ? 'Si' : '';\r\n            }\r\n            // Articulos\r\n            if (item.total_stock && item.cantidad_pendiente) {\r\n              item.total_stock = parseFloat(item.total_stock).toFixed(0);\r\n              item.cantidad_pendiente = parseFloat(item.cantidad_pendiente).toFixed(0);\r\n            }\r\n          })\r\n        } else {\r\n          r.data.forEach((item) => {\r\n            if (item.fecha) {\r\n              item.fecha = this.cambiarFormatoFecha(item.fecha);\r\n            }\r\n            if (item.hora) {\r\n              item.hora = this.cambiarformatoHora(item.hora);\r\n            }\r\n            if (item.activo) {\r\n              item.activo = item.activo === 1 ? 'Si' : '';\r\n            }\r\n            if (item.bonificado) {\r\n              item.bonificado = item.bonificado === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_banco) {\r\n              item.lleva_banco = item.lleva_banco === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_numero) {\r\n              item.lleva_numero = item.lleva_numero === 1 ? 'Si' : ''\r\n            }\r\n            if (item.lleva_vencimiento) {\r\n              item.lleva_vencimiento = item.lleva_vencimiento === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_cobro) {\r\n              item.lleva_fecha_cobro = item.lleva_fecha_cobro === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_emision) {\r\n              item.lleva_fecha_emision = item.lleva_fecha_emision === 1 ? 'Si' : '';\r\n            }\r\n            if (item.duplica_numero) {\r\n              item.duplica_numero = item.duplica_numero === 1 ? 'Si' : '';\r\n            }\r\n            // Clientes \r\n            if (item.cliente_asociado === null) {\r\n              item.cliente_asociado = 'Sin Cliente Asociado';\r\n            }\r\n            // Ventas\r\n            if (item.obra_descripcion && item.obra_direccion) {\r\n              item.obra = `${item.obra_descripcion} - ${item.obra_direccion}`\r\n            }\r\n            if (item.colocacion && item.acarreo && item.bien_cargada) {\r\n              item.colocacion = item.colocacion === 1 ? 'Si' : '';\r\n              item.acarreo = item.acarreo === 1 ? 'Si' : '';\r\n              item.bien_cargada = item.bien_cargada === 1 ? 'Si' : '';\r\n            }\r\n            // Articulos\r\n            if (item.total_stock && item.cantidad_pendiente) {\r\n              item.total_stock = parseFloat(item.total_stock).toFixed(0);\r\n              item.cantidad_pendiente = parseFloat(item.cantidad_pendiente).toFixed(0);\r\n            }\r\n          })\r\n        }\r\n\r\n\r\n        if (this.endpoint.toString().includes('view_stock_articulo_deposito')) {\r\n          r.data.result = this.quitarRepetidos(r.data.result);\r\n        }\r\n\r\n        this.filterDataSource = r.data.result ? r.data.result : r.data;\r\n        this.dataSource = new MatTableDataSource<any>((r.data.result ? r.data.result : r.data));\r\n        this.paginator.length = r.totalCount;\r\n        this.syncSelectionWithCurrentPage();\r\n\r\n        if (this.renderType == 'client') {  //  Si el paginado es por front...\r\n          this.paginator.length = this.filterDataSource.length  //... Se le asigna el largo de la cantidad de elementos que deveulva el back.\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n\r\n        this.paginator.pageIndex = this.PageIndex;\r\n\r\n        //Asigna el tamaño de pagina dinamicamente segun el porcentaje de 5, 10, 25, 50, 100\r\n        this.pageSizeOptions = [\r\n          Math.ceil(this.paginator.length * 0.05),\r\n          Math.ceil(this.paginator.length * 0.1),\r\n          Math.ceil(this.paginator.length * 0.25),\r\n          Math.ceil(this.paginator.length * 0.5),\r\n          this.paginator.length\r\n        ]\r\n\r\n        //Eliminamos elementos repetidos\r\n        this.pageSizeOptions = [...new Set(this.pageSizeOptions)];\r\n\r\n        if (!this.Pagesize) {\r\n          this.Pagesize = this.pageSizeOptions[2];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n * Esta funcion quita los items repetidos que se utilizaran en combo select\r\n * @param data \r\n * @returns arreglo_auxiliar \r\n */\r\n  quitarRepetidos(data: IArticuloDeposito[]) {\r\n    let arreglo_auxiliar = [];\r\n\r\n    data.forEach(a => {\r\n      let e = data.filter(ar => ar.idarticulo === a.idarticulo);\r\n      if (!arreglo_auxiliar.some(ae => ae.idarticulo === a.idarticulo)) {\r\n        let um_stock = this.groupAndAdjustData(e);\r\n        a.stock = um_stock[0]['cantidad'];\r\n        arreglo_auxiliar.push(a);\r\n      }\r\n    })\r\n    return arreglo_auxiliar;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion unifica las unidades de medida de un articulo\r\n   * @param data \r\n   * @returns \r\n   */\r\n  groupAndAdjustData(data) {\r\n    const groupedData = data.reduce((acc, articulo) => {\r\n      if (articulo.stock !== '0') {\r\n        const existing = acc.find(item => item.deposito_descripcion === articulo.deposito_descripcion);\r\n        if (existing) {\r\n          existing.cantidad += ` + ${articulo.stock} ${articulo.um || ''}`.trim();\r\n        } else {\r\n          acc.push({\r\n            deposito_descripcion: articulo.deposito_descripcion,\r\n            cantidad: `${articulo.stock} ${articulo.um || ''}`.trim()\r\n          });\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    // Ajuste para separar los valores concatenados con espacio\r\n    groupedData.forEach(item => {\r\n      item.cantidad = item.cantidad.replace(/\\s*\\+\\s*/g, ' + ');\r\n    });\r\n\r\n    return groupedData;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion sirve para cambiar el formato de la fecha cuando se maneja con tipo String\r\n   * @param fecha \r\n   * @returns Devuelve una fecha con formato dd/mm/yyyy\r\n   */\r\n  cambiarFormatoFecha(fecha: string): string {\r\n    // Supongamos que la fecha está en el formato 'YYYY-MM-DD'\r\n    const partes = fecha.split('-');\r\n    if (partes.length === 3) {\r\n      const anio = partes[0];\r\n      const mes = partes[1];\r\n      const dia = partes[2];\r\n      return `${dia}/${mes}/${anio}`;\r\n    } else {\r\n      // Manejar el caso en que la cadena no tiene el formato esperado\r\n      return 'Fecha inválida';\r\n    }\r\n  }\r\n\r\n  /**\r\n * Esta función sirve para cambiar el formato de la hora de una cadena tipo 'HH:mm:ss'.\r\n * @param hora Cadena en formato 'HH:mm:ss'\r\n * @returns Devuelve una cadena con la hora en formato 'HH:mm'\r\n */\r\n  cambiarformatoHora(hora: string): string {\r\n    const partes = hora.split(':');\r\n    if (partes.length >= 2) {\r\n      const horas = partes[0];\r\n      const minutos = partes[1];\r\n      return `${horas.padStart(2, '0')}:${minutos.padStart(2, '0')}`;\r\n    } else {\r\n      return 'Hora inválida';\r\n    }\r\n  }\r\n\r\n  /**\r\n * Selecciona o deselecciona todos los elementos de la página actual.\r\n * @param seleccionado Indica si se deben seleccionar o deseleccionar todos los elementos.\r\n */\r\n  seleccionarTodos(seleccionado: boolean) {\r\n    this.allSelected = seleccionado;\r\n    const elementosPaginaActual = this.dataSource.data.slice(this.PageIndex * this.Pagesize, (this.PageIndex + 1) * this.Pagesize);\r\n    elementosPaginaActual.forEach(item => {\r\n      if (seleccionado) {\r\n        this.seleccionados.add(item.idarticulo);\r\n      } else {\r\n        this.seleccionados.delete(item.idarticulo);\r\n      }\r\n      item.selected = seleccionado;\r\n    });\r\n    this.selectionChange.emit(this.getElementosSeleccionados());\r\n  }\r\n\r\n  /**\r\n   * Selecciona o deselecciona un elemento específico.\r\n   * @param element El elemento que se debe seleccionar o deseleccionar.\r\n   * @param seleccionado Indica si el elemento debe ser seleccionado o deseleccionado.\r\n   */\r\n  seleccionarElemento(element: any, seleccionado: boolean) {\r\n    if (seleccionado) {\r\n      this.seleccionados.add(element.idarticulo);\r\n    } else {\r\n      this.seleccionados.delete(element.idarticulo);\r\n    }\r\n    element.selected = seleccionado;\r\n    this.allSelected = this.dataSource.data.every(item => this.seleccionados.has(item.idarticulo));\r\n    this.selectionChange.emit(this.getElementosSeleccionados());\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los elementos seleccionados actualmente.\r\n   * @returns Un array con los elementos que están actualmente seleccionados.\r\n   */\r\n  getElementosSeleccionados(): any[] {\r\n    return this.dataSource.data.filter(item => this.seleccionados.has(item.idarticulo));\r\n  }\r\n\r\n  /**\r\n   * Sincroniza la selección de elementos con la página actual.\r\n   * Actualiza el estado de selección de cada elemento en la página actual\r\n   * en función de si están presentes en el conjunto de elementos seleccionados.\r\n   */\r\n  syncSelectionWithCurrentPage() {\r\n    const elementosPaginaActual = this.dataSource.data.slice(this.PageIndex * this.Pagesize, (this.PageIndex + 1) * this.Pagesize);\r\n    elementosPaginaActual.forEach(item => {\r\n      item.selected = this.seleccionados.has(item.idarticulo);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Puede surgir que en cierta situacion necesitemos SOLAMENTE los elementos que \r\n   * trae nuestro servicio para utilizarlo en un componente en concreto.\r\n   * @returns Elemenmtos existentes.\r\n   */\r\n  getElementosExistentes() {\r\n    let elementos_existentes = [];\r\n    this.dataSource.filteredData.forEach((elemento) => {\r\n      if (!elementos_existentes.includes(elemento)) {\r\n        elementos_existentes.push(elemento);\r\n      }\r\n    })\r\n    return elementos_existentes;\r\n  }\r\n\r\n  agregarEstilos() {\r\n    if (this.extraClasses && this.extraClasses != '') {\r\n      let arr_classes = this.extraClasses.split(',');\r\n      if (this.extraClasses.length != 0 && arr_classes.length > 0) {\r\n        arr_classes.forEach(elem => {\r\n          let itemSearch = elem.split(' ')[0];\r\n          let items = document.querySelectorAll(itemSearch);\r\n          let cssClass = elem.split(' ')[1];\r\n          for (let i = 0; i < items.length; i += 1) {\r\n            items[i].classList.add(cssClass);\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  cambioPagina(event: any) {\r\n    this.PageIndex = event.pageIndex;\r\n    this.Pagesize = event.pageSize\r\n    this.filterPaginado = `&per-page=${this.Pagesize}&page=${this.PageIndex}`\r\n    /* Deberíamos usar set_filtro_global */\r\n    /*  if (this.cache) {\r\n      NavigationService.setFilterModulo({ filterPaginado: this.filterPaginado, data: { perpage: this.Pagesize, page: this.PageIndex } }, this.user)\r\n     } */\r\n    this.renderTabla();\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para el buscador de input, recibe un string y renderiza la tabla\r\n   * @param input \r\n   */\r\n  filters(input: string) {\r\n    this.filterLike = input\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId); //Limpio el temporizador evita multiples llamadas\r\n    }\r\n    this.timeoutId = setTimeout(() => {\r\n      let query = ''\r\n      for (let i = 0; i < this.FiltersLikes.length; i++) {\r\n        const like = this.FiltersLikes[i];\r\n        if (this.FilterLikesID) {\r\n          query += `&filter[${like}]=${this.filterLike}`\r\n        } else {\r\n          query += `&filter[or][${i}][${like}][like]=${this.filterLike}`\r\n        }\r\n      }\r\n\r\n      this.filterLike = query;\r\n      /* Deberíamos usar set_filtro_global */\r\n      /*   if (this.cache) {\r\n          NavigationService.setFilterModulo({ like: input }, this.user)\r\n          NavigationService.setFilterModulo({ filterLike: this.filterLike }, this.user)\r\n        } */\r\n      if (input != '') {\r\n        if (this.renderType == \"client\") {\r\n          this.dataSource.data = this.filterDataSource.filter(r => this.FiltersLikes.some(f => r[f].toLowerCase().includes(input.toLowerCase())))\r\n        }\r\n      } else { //Caso de input vacio\r\n        if (this.renderType == \"client\") {\r\n          this.dataSource.data = this.filterDataSource\r\n        } else {\r\n          this.filterLike = ''\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Se renderiza despues de cualquier acción. \r\n       * Por ejemplo sí se quiere editar un item con el filtro de busqueda activado, \r\n       * renderiza ese item manteniendo el filtro de busqueda.\r\n       */\r\n      this.renderTabla();\r\n\r\n      this.agregarEstilos();\r\n    }, 750);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Funcion para acceder a multi nivel con expands\r\n   * \r\n   * @param element una fila de la respuesta \r\n   * @param column el string de atributo para acceder\r\n   * @returns el parametro en formato de string.\r\n   */\r\n  parse(element: any, column: string): string {\r\n    let colSplit = column.split('.');\r\n    let temp = element\r\n    let err: boolean = false\r\n    for (let i = 0; i < colSplit.length && !err; i++) {\r\n      const propiedad = colSplit[i];\r\n      temp = temp[propiedad]\r\n      if (!temp) {\r\n        err = true\r\n        temp = temp === 0 ? 'No' : '-'; //Parseo valor booleano manejado como numero para que me muestre un 'No'.\r\n      }\r\n    }\r\n    return temp\r\n  }\r\n\r\n  onFilterMenu(documentRef: MatButton | MatIcon) {//filtros\r\n    this.jedsMenu\r\n      .open(this.filterComponent, documentRef._elementRef, this.formComponent)\r\n      .afterClosed()\r\n      .subscribe({\r\n        next: data => {\r\n          if (data) {\r\n            this.filterLikecomponent = data.filter\r\n            this.formComponent = data.form\r\n            this.renderTabla()\r\n            this.agregarEstilos();\r\n            /* Deberíamos usar set_filtro_global */\r\n            /*  if (this.cache) {\r\n              NavigationService.setFilterModulo({ filtercomponent: this.filterLikecomponent, formComponent: this.formComponent }, this.user)\r\n             } */\r\n          }\r\n        },\r\n      });\r\n  }\r\n\r\n  modalUp(documentRef: MatButton) {\r\n    this.menuService\r\n      .open(this.filterComponent, documentRef._elementRef, this.formComponent)\r\n      .afterClosed()\r\n      .subscribe({\r\n        next: data => {\r\n          if (data) {\r\n            this.filterLikecomponent = data.filter\r\n            this.formComponent = data.form\r\n            this.renderTabla()\r\n            this.agregarEstilos();\r\n            /* Deberíamos usar set_filtro_global */\r\n            /*  if (this.cache) {\r\n              NavigationService.setFilterModulo({ filtercomponent: this.filterLikecomponent, formComponent: this.formComponent }, this.user)\r\n             } */\r\n          }\r\n        },\r\n      });\r\n  }\r\n}","<div class=\"w-full cont-with-paginator mat-elevation-z8 mb-2\">\r\n    <!--clase h-200 para que se arme scroll solo en este componente cuando por ejemplo se use paginado x25 o x50 en vez de x10-->\r\n    <!--  <div *ngIf=\"FiltersLikes&&FiltersLikes.length>0\" class=\"flex w-full justify-end smm:justify-center smm:mb-2\">\r\n        <mat-form-field\r\n            class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded  min-w-64 md:min-w-54 sm:min-w-30 mdm:min-w-30 smm:w-full\">\r\n            <mat-icon class=\"icon-size-5\" matPrefix svgIcon=\"heroicons_solid:search\">\r\n            </mat-icon>\r\n            <input [value]=\"filterLikeCache\" matInput placeholder=\"Buscar\" autocomplete=\"off\" #buscar\r\n                (keyup)=\"filters(buscar.value)\" />\r\n        </mat-form-field>\r\n        <button *ngIf=\"filterComponent\" #filtro class=\"ml-2 bg-primary dark:text-white \" mat-button type=\"button\"\r\n            (click)=\"onFilterMenu(filtro)\">\r\n            <mat-icon class=\"text-white\" svgIcon=\"heroicons_outline:adjustments\"></mat-icon>\r\n        </button>\r\n    </div> -->\r\n    <div class=\"w-full max-h-[75vh] overflow-y-auto mt-2\">\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"w-full smm:px-0 smm:mt-0 mt-4 small-table-text mb-8 cont-with-paginator\" matSort>\r\n            <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of columnsParams; let i = index\">\r\n                <ng-container *ngIf=\"column === 'seleccion'\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-checkbox (change)=\"seleccionarTodos($event.checked)\" [checked]=\"allSelected\"></mat-checkbox>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <mat-checkbox   \r\n                            (change)=\"seleccionarElemento(element, $event.checked)\" \r\n                            [checked]=\"element.selected\">\r\n                        </mat-checkbox>\r\n                    </td>\r\n                </ng-container>\r\n                <!-- Other columns -->\r\n                <ng-container *ngIf=\"column != 'seleccion' && column != 'acciones' else botones\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsNames[i]}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"descripcion\"> {{ booleanParams.includes(column) ? (element[column] | activoPipe:column) : parse(element, column) }}</span>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-template #botones>\r\n                    <th mat-header-cell *matHeaderCellDef> {{columnsNames[i]}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-column-botones w-64\"> <!-- element es el objeto que se itera desde dataSource -->\r\n                        <div class=\"\">\r\n                            <!-- <button mat-raised-button color=\"accent\"\r\n                                *ngFor=\"let accion of accionesButtons; let x = index\">{{accion}}</button> -->\r\n\r\n                            <button [disabled]=\"accion.disabled && accion.disabled(element)\" #origin\r\n                                [class.mat-icon-button]=\"accion.type !== 'button'\"\r\n                                [class.mat-button]=\"accion.type === 'button'\" color=\"accent\"\r\n                                *ngFor=\"let accion of functions; let x = index\"\r\n                                [ngClass]=\"{'bg-primary text-center':accion.type=='button' }\"\r\n                                (click)=\"emitFunction(accion.functionName, element,origin)\"\r\n                                matTooltip=\"{{accion.extra ? accion.nombre_boton(element) : accion.nombre_boton}}\"\r\n                                matTooltipPosition=\"above\" matTooltipClass=\"tooltip-class\" matTooltipShowDelay=\"100\"\r\n                                matTooltipHideDelay=\"100\" TooltipTouchGestures=\"auto\">\r\n                                <div class=\"icon-container\">\r\n                                    <!-- Icon de Accion (Recibe la condicion para ver como se tiene que mostrar) -->\r\n                                    <mat-icon [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || ''\"  class=\"icon \"\r\n                                        *ngIf=\"!accion.extra && accion.iconoAccion(element)\"\r\n                                        svgIcon=\"{{ accion.iconoAccion(element) }}\">\r\n                                    </mat-icon>\r\n                                    <!-- Icon de Accionado (Recibe la condicion para ver como se tiene que mostrar) -->\r\n                                    <mat-icon [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || ''\"  \r\n                                        class=\"icon \" *ngIf=\"!accion.extra && accion.iconoAccionado(element) \"\r\n                                        svgIcon=\"{{ accion.iconoAccionado(element) }}\">\r\n                                    </mat-icon>\r\n                                    <!-- Icon Deshabilitado (Recibe la condicion para ver como se tiene que mostrar) -->\r\n                                    <mat-icon class=\"icon \"\r\n                                        *ngIf=\"!accion.extra && accion.iconoDeshabilitado(element)\"\r\n                                        svgIcon=\"{{ accion.iconoDeshabilitado(element) }}\">\r\n                                    </mat-icon>\r\n                                </div>\r\n                                {{ accion.type === 'button' ? accion.nombre_boton : '' }}\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </ng-template>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsParams; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columnsParams;\"></tr>\r\n        </table>\r\n    </div>\r\n    <div class=\"absolute bottom-0 left-0 right-0 bg-slate-800 rounded-b-2xl w-full\">\r\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" class=\"w-full rounded-b-lg shadow-md mat-paginator-sticky\"\r\n            [pageIndex]=\"PageIndex\" [pageSize]=\"Pagesize\" aria-label=\"Select page of users\"\r\n            (page)=\"cambioPagina($event)\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TablaDinamicaComponent } from './tabla-dinamica.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { SharedComponentModule } from '../shared-component.module';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { ActivoPipe } from '@shared/pipes/activo.pipe';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TablaDinamicaComponent,\r\n        ActivoPipe\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SharedComponentModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule\r\n    ],\r\n    exports: [\r\n        TablaDinamicaComponent\r\n    ],\r\n    providers: [\r\n        JedsMenuService,\r\n        { provide: MAT_DIALOG_DATA, useValue: {} },\r\n        { provide: MatDialogRef, useValue: {} },\r\n    ]\r\n})\r\nexport class TablaDinamicaModule { }","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'activoPipe'\r\n})\r\nexport class ActivoPipe implements PipeTransform {\r\n    transform(value: any, column_name: string): any {\r\n        // Lógica para transformar el valor según tus necesidades\r\n        if (value == 1) {\r\n            return 'Si';\r\n        } else if (value == 0) {\r\n            return 'No';\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overridden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n"],"names":["Subject","TablaDinamicaService","constructor","http","_authService","getData","endpoint","filter","subject","get","observe","subscribe","resp","body","token","accessToken","next","headers","asObservable","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn","EventEmitter","MatPaginator","MatSort","MatTableDataSource","MAT_DIALOG_DATA","takeUntil","ɵɵelementStart","ɵɵlistener","TablaDinamicaComponent_ng_container_3_ng_container_1_th_1_Template_mat_checkbox_change_1_listener","$event","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","seleccionarTodos","checked","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r9","allSelected","TablaDinamicaComponent_ng_container_3_ng_container_1_td_2_Template_mat_checkbox_change_1_listener","restoredCtx","_r15","element_r13","$implicit","ctx_r14","seleccionarElemento","selected","ɵɵelementContainerStart","ɵɵtemplate","TablaDinamicaComponent_ng_container_3_ng_container_1_th_1_Template","TablaDinamicaComponent_ng_container_3_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ɵɵtext","ɵɵtextInterpolate1","ctx_r16","columnsNames","i_r4","ctx_r17","booleanParams","includes","column_r3","ɵɵpipeBind2","element_r19","parse","TablaDinamicaComponent_ng_container_3_ng_container_2_th_1_Template","TablaDinamicaComponent_ng_container_3_ng_container_2_td_2_Template","ctx_r21","ɵɵelement","ɵɵclassMap","ctx_r29","color_primario","default_color","ɵɵstyleProp","ɵɵpropertyInterpolate","accion_r26","iconoAccion","element_r24","ctx_r30","iconoAccionado","iconoDeshabilitado","TablaDinamicaComponent_ng_container_3_ng_template_3_td_1_button_2_Template_button_click_0_listener","_r39","_r28","ɵɵreference","ctx_r38","emitFunction","functionName","TablaDinamicaComponent_ng_container_3_ng_template_3_td_1_button_2_mat_icon_3_Template","TablaDinamicaComponent_ng_container_3_ng_template_3_td_1_button_2_mat_icon_4_Template","TablaDinamicaComponent_ng_container_3_ng_template_3_td_1_button_2_mat_icon_5_Template","ɵɵclassProp","type","extra","nombre_boton","disabled","ɵɵpureFunction1","_c0","TablaDinamicaComponent_ng_container_3_ng_template_3_td_1_button_2_Template","ctx_r22","functions","TablaDinamicaComponent_ng_container_3_ng_template_3_th_0_Template","TablaDinamicaComponent_ng_container_3_ng_template_3_td_1_Template","TablaDinamicaComponent_ng_container_3_ng_container_1_Template","TablaDinamicaComponent_ng_container_3_ng_container_2_Template","TablaDinamicaComponent_ng_container_3_ng_template_3_Template","ɵɵtemplateRefExtractor","_r7","TablaDinamicaComponent","eventoUpdate","renderTabla","jedsMenu","service","_empresaService","data","menuService","_userService","seleccionados","Set","selectionChange","filterLikeCache","PageIndex","Pagesize","pageSizeOptions","cache","filterComponent","undefined","filterLikecomponent","filterLike","filterPaginado","FiltersLikes","FilterLikesID","extraParams","sortSSP","functionEmitter","columnsParams","extraClasses","dataSource","_unsubscribeAll","renderType","accionesButtons","accionesFunctions","name","params","origin","emit","ngAfterViewChecked","agregarEstilos","ngOnInit","empresa$","pipe","empresa","getEmpresa","ngAfterViewInit","paginator","sort","sortChange","column","active","direction","arg","query","arr_filters","split","length","forEach","startsWith","r","result","item","fecha","cambiarFormatoFecha","hora","cambiarformatoHora","activo","bonificado","lleva_banco","lleva_numero","lleva_vencimiento","lleva_fecha_cobro","lleva_fecha_emision","duplica_numero","cliente_asociado","obra_descripcion","obra_direccion","obra","colocacion","acarreo","bien_cargada","total_stock","cantidad_pendiente","parseFloat","toFixed","toString","quitarRepetidos","filterDataSource","totalCount","syncSelectionWithCurrentPage","pageIndex","Math","ceil","arreglo_auxiliar","a","e","ar","idarticulo","some","ae","um_stock","groupAndAdjustData","stock","push","groupedData","reduce","acc","articulo","existing","find","deposito_descripcion","cantidad","um","trim","replace","partes","anio","mes","dia","horas","minutos","padStart","seleccionado","elementosPaginaActual","slice","add","delete","getElementosSeleccionados","element","every","has","getElementosExistentes","elementos_existentes","filteredData","elemento","arr_classes","elem","itemSearch","items","document","querySelectorAll","cssClass","i","classList","cambioPagina","event","pageSize","filters","input","timeoutId","clearTimeout","setTimeout","like","f","toLowerCase","colSplit","temp","err","propiedad","onFilterMenu","documentRef","open","_elementRef","formComponent","afterClosed","form","modalUp","ɵɵdirectiveInject","JedsMenuService","i3","EmpresaService","i4","UserService","selectors","viewQuery","TablaDinamicaComponent_Query","rf","ctx","TablaDinamicaComponent_ng_container_3_Template","TablaDinamicaComponent_tr_4_Template","TablaDinamicaComponent_tr_5_Template","TablaDinamicaComponent_Template_mat_paginator_page_7_listener","CommonModule","MatTableModule","MatSortModule","MatPaginatorModule","MatButtonModule","MatFormFieldModule","MatIconModule","MatInputModule","MatDialogModule","MatDialogRef","MatTooltipModule","SharedComponentModule","ActivoPipe","MatCheckboxModule","TablaDinamicaModule","provide","useValue","imports","declarations","exports","transform","value","column_name","pure","InjectionToken","Directive","Optional","Inject","Input","Output","Injectable","SkipSelf","Component","ViewEncapsulation","ChangeDetectionStrategy","NgModule","coerceBooleanProperty","SPACE","ENTER","mixinInitialized","mixinDisabled","AnimationDurations","AnimationCurves","MatCommonModule","merge","trigger","state","style","transition","animate","keyframes","animateChild","MatSortHeader_div_3_Template","_r2","ɵɵgetCurrentView","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ctx_r1","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","ctx_r0","_getArrowViewState","_getArrowDirectionState","_c1","getSortDuplicateSortableIdError","id","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","_direction","ngDevMode","disableClear","_disableClear","v","_defaultOptions","sortables","Map","_stateChanges","start","register","sortable","set","deregister","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","indexOf","_markInitialized","ngOnChanges","ngOnDestroy","complete","MatSort_Factory","t","ɵdir","ɵɵdefineDirective","hostAttrs","inputs","outputs","exportAs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵsetClassMetadata","args","selector","host","decorators","sortOrder","reverse","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","changes","MatSortHeaderIntl_Factory","ɵprov","ɵɵdefineInjectable","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","deps","useFactory","_MatSortHeaderBase","MatSortHeader","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_intl","_changeDetectorRef","_sort","_columnDef","_focusMonitor","_ariaDescriber","defaultOptions","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","nativeElement","querySelector","monitor","newState","_setIndicatorHintVisible","markForCheck","stopMonitoring","_rerenderSubscription","unsubscribe","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","keyCode","preventDefault","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","MatSortHeader_Factory","ChangeDetectorRef","FocusMonitor","ElementRef","AriaDescriber","ɵcmp","ɵɵdefineComponent","hostVars","hostBindings","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","ɵɵattribute","attrs","ngContentSelectors","decls","vars","consts","template","MatSortHeader_Template","ɵɵprojectionDef","ɵɵprojection","dependencies","NgIf","styles","encapsulation","animation","changeDetection","None","OnPush","animations","MatSortModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers"],"sourceRoot":"webpack:///","x_google_ignoreList":[5]}