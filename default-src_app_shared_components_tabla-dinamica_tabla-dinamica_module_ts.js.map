{"version":3,"file":"default-src_app_shared_components_tabla-dinamica_tabla-dinamica_module_ts.js","mappings":"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","sources":["./src/app/shared/components/tabla-dinamica/services/tabla-dinamica.service.ts","./src/app/shared/components/tabla-dinamica/tabla-dinamica.component.ts","./src/app/shared/components/tabla-dinamica/tabla-dinamica.component.html","./src/app/shared/components/tabla-dinamica/tabla-dinamica.module.ts","./src/app/shared/pipes/activo.pipe.ts","./node_modules/rxjs/dist/esm/internal/observable/interval.js","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs","./node_modules/@angular/material/fesm2022/sort.mjs"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { IOrdenamiento } from '@shared/models/orden';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TablaDinamicaService {\r\n\r\n  constructor(private http: HttpClient, private _authService: AuthService) { }\r\n\r\n  // private _providerbase: string = environment.baseRest + '/' ;\r\n\r\n  /**\r\n   * \r\n   * @param endpoint La url completa del servicio utilizado para obtener datos que se usaran en la tabla.\r\n   * @param filter \r\n   * @returns \r\n   */\r\n  getData(endpoint: string, filter: string): Observable<any> {\r\n    var subject = new Subject<any>();\r\n    this.http.get(`${endpoint}${filter}`, { observe: 'response' }).subscribe((resp: any) => {\r\n      if (resp.body.token) this._authService.accessToken = resp.body.token;\r\n      subject.next({\r\n        'data': resp.body,\r\n        'totalPages': resp.headers.get('X-Pagination-Page-Count'),\r\n        'totalCount': resp.headers.get('X-Pagination-Total-Count')\r\n      })\r\n    });\r\n    return subject.asObservable();\r\n  }\r\n\r\n  saveOrdenarArticulos(payload: IOrdenamiento) {\r\n    return this.http.post(`${environment.stock.stk_articulo_ordenar}`, payload);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, Optional, Inject, ViewEncapsulation, OnChanges, AfterViewChecked } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { TablaDinamicaService } from './services/tabla-dinamica.service';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { UserService } from '@core/user/user.service';\r\nimport { finalize, Subject, takeUntil, takeWhile, tap, timer } from 'rxjs';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { IArticuloDeposito } from 'app/modules/stock/depositos/models/deposito';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { IAlertConfig } from '@shared/models/alert';\r\nimport { IOrdenamiento } from '@shared/models/orden';\r\n\r\n@Component({\r\n  selector: 'app-tabla-dinamica',\r\n  templateUrl: './tabla-dinamica.component.html',\r\n  styleUrls: ['./tabla-dinamica.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\nexport class TablaDinamicaComponent implements OnInit, AfterViewChecked {\r\n  color_primario: string;\r\n  color_secundario: string;\r\n  articulo_producto: number;\r\n  default_color: string = 'text-primary';\r\n  allSelected = false;\r\n  seleccionados = [];\r\n  @Output() selectionChange = new EventEmitter<any[]>();\r\n  public filterLikeCache: string = ''\r\n  public PageIndex: number = 0\r\n  public Pagesize: number = 10;\r\n  public pageSizeOptions: number[] = [5, 10, 25, 50, 100]\r\n  private filtros_cache\r\n  @Input() cache: boolean = true;\r\n\r\n  private timeoutId: any\r\n\r\n  //------------------------- Filters\r\n  @Input() filterComponent: any = undefined\r\n  public formComponent: any\r\n  /**\r\n   * Filtros concatenados\r\n   */\r\n  public filterLikecomponent: string = '';\r\n\r\n  private filterLike: string = ''\r\n  private filterPaginado: string = `&per-page=${this.Pagesize}&page=${this.PageIndex}`\r\n  @Input() FiltersLikes: string[] = [];\r\n  @Input() FilterLikesID: boolean = false\r\n  @Input() extraParams: string = '';\r\n  @Input() renderType: string; // ssp o client , para paginacion o sin paginacion\r\n  private sortSSP: string = ''; // editado y usado solo si es SSP\r\n\r\n  @Input() endpoint: string = null;\r\n\r\n  @Input() functions: any[];\r\n  @Output() functionEmitter = new EventEmitter<{ name: string, params: any }>();\r\n\r\n  @Input() columnsNames: string[] = [];\r\n  @Input() columnsParams: string[] = [];\r\n  @Input() booleanParams: string[] = [];\r\n\r\n  @Input() accionesButtons: string[];\r\n  @Input() accionesFunctions: string[];\r\n  @Input() extraClasses: string = '';\r\n\r\n  @Input() isDragAndDrop: boolean = false;\r\n  modeSelected: boolean = false;\r\n\r\n  @Input() isModal: boolean = false;\r\n\r\n  dataSource: MatTableDataSource<any> = new MatTableDataSource<any>();\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  @ViewChild(MatSort) sort!: MatSort;\r\n  private filterDataSource\r\n  user: import(\"../../../core/user/user.types\").IUsuario;\r\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n  showAlert = false;\r\n  _alertConfig: IAlertConfig;\r\n\r\n  // * para que el padre te diga cuando recargar la tabla\r\n  eventoUpdate() {\r\n    /*\r\n    en el componente padre:\r\n    -declarar @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n    -llamar a esta funcion con this.tabla.eventoUpdate();\r\n    */\r\n    this.renderTabla();\r\n  }\r\n\r\n  constructor(\r\n    private jedsMenu: JedsMenuService,\r\n    private service: TablaDinamicaService,\r\n    private _empresaService: EmpresaService,\r\n    public alert: AppAlertService,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private menuService: JedsMenuService, private _userService: UserService) {\r\n\r\n    if (data) {\r\n      // * caso en el que los parametros para renderizar no vengan desde una llamada al componente con su etiqueta, sino desde un dialog.\r\n      this.endpoint = data.endpoint;\r\n      this.extraParams = data.extraParams;\r\n      this.renderType = data.renderType;\r\n      this.columnsNames = data.columnsNames;\r\n      this.columnsParams = data.columnsParams;\r\n      this.accionesButtons = data.accionesButtons;\r\n      this.accionesFunctions = data.accionesFunctions;\r\n      this.functions = data.functions;\r\n      this.extraClasses = data.extraClasses;\r\n      this.cache = data.cache;\r\n      this.FiltersLikes = data.FiltersLikes;\r\n      this.isDragAndDrop = data.isDragAndDrop;\r\n      this.isModal = data.isModal;\r\n\r\n      this.modeSelected = this.isDragAndDrop ? true : false;\r\n    }\r\n\r\n    if (!this.columnsNames) {\r\n      this.columnsNames = this.columnsParams;\r\n    }\r\n  }\r\n\r\n  // Alert\r\n  subscribeAlert() {\r\n    this.alert.emitConfig.subscribe({\r\n      next: (config: IAlertConfig) => {\r\n        this.showAlert = true;\r\n        this._alertConfig = {\r\n          ...config,\r\n          appearance: 'border',\r\n        };\r\n        let time = 2;\r\n        timer(100, 1500)\r\n          .pipe(\r\n            finalize(() => {\r\n              this.showAlert = false;\r\n              this._alertConfig = null;\r\n            }),\r\n            takeWhile(() => time > 0),\r\n            takeUntil(this._unsubscribeAll),\r\n            tap(() => (time -= 1))\r\n          )\r\n          .subscribe();\r\n      },\r\n    });\r\n  }\r\n\r\n  emitFunction(name: string, params: any, origin: any) {\r\n    this.functionEmitter.emit({ name, params: { data: params, origin: origin } });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.renderTabla();\r\n    this.agregarEstilos();\r\n    // Subscribe to empresa data\r\n    this._empresaService.empresa$\r\n      .pipe(takeUntil(this._unsubscribeAll))\r\n      .subscribe(empresa => {\r\n        this.color_primario = empresa.color_primario;\r\n        this.color_secundario = empresa.color_secundario;\r\n        this.articulo_producto = empresa.articulo_producto;\r\n      });\r\n\r\n    // Load empresa data\r\n    this._empresaService.getEmpresa();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    if (!this.isModal) {\r\n\r\n      this.sort.sortChange.subscribe((sort: Sort) => {\r\n        if (this.renderType == 'ssp') {\r\n          let column = sort.active;\r\n          switch (sort.direction) {\r\n            case \"asc\":\r\n              this.sortSSP = `=${column}`; //simplemente mando la columna y se ordena ascendente\r\n              break;\r\n            case \"desc\":\r\n              this.sortSSP = `=-${column}`; // mando signo menos (-) y columna, y se ordena descendente\r\n              break;\r\n            default:\r\n              this.sortSSP = '';\r\n              break;\r\n          }\r\n          this.renderTabla();\r\n        }\r\n      });\r\n    }\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  renderTabla(arg?: any) {\r\n    let query = this.sortSSP != '' ? `&sort${this.sortSSP}` : ''; // sortSSP va a ser vacio si el renderType es client. Caso contrario (SSP) puede tener valor\r\n\r\n    if (this.endpoint) {\r\n      if (this.extraParams && this.extraParams != '') {\r\n        let arr_filters = this.extraParams.split('&');\r\n        if (this.extraParams.length != 0 && arr_filters.length > 0) {\r\n          arr_filters.forEach(filter => {\r\n            filter.startsWith('[') ? query += '&filter' + filter + '' : query += '&' + filter + '';\r\n          })\r\n        }\r\n      }\r\n      if (this.filterComponent) {\r\n        query += this.filterLikecomponent\r\n      }\r\n      if (this.filterLike) {\r\n        query += this.filterLike\r\n      }\r\n      if (this.renderType != 'client') {\r\n        query += this.filterPaginado\r\n      }\r\n\r\n      this.service.getData(this.endpoint, query).subscribe(r => {\r\n        /**\r\n         * Grilla con valores booleanos\r\n         * En caso de que exista una columna que tenga valores booleanos este forEach convierte los \r\n         * valores booleanos que sean manejados con numeros para mostrar 'si' o 'no' segun corresponda.\r\n         */\r\n        if (r.data.result) {\r\n          r.data.result.forEach((item) => {\r\n            if (item.fecha) {\r\n              item.fecha = this.cambiarFormatoFecha(item.fecha);\r\n            }\r\n            if (item.hora) {\r\n              item.hora = this.cambiarformatoHora(item.hora);\r\n            }\r\n            if (item.fecha_precarga) {\r\n              item.fecha_precarga = this.cambiarFormatoFecha(item.fecha_precarga);\r\n            }\r\n            if (item.hora_entrega) {\r\n              item.hora_entrega = this.cambiarformatoHora(item.hora_entrega);\r\n            }\r\n            if (item.cotizado) {\r\n              item.cotizado = item.cotizado === 1 ? 'Si' : '';\r\n            }\r\n            if (item.activo) {\r\n              item.activo = item.activo === 1 ? 'Si' : '';\r\n            }\r\n            if (item.bonificado) {\r\n              item.bonificado = item.bonificado === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_banco) {\r\n              item.lleva_banco = item.lleva_banco === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_numero) {\r\n              item.lleva_numero = item.lleva_numero === 1 ? 'Si' : ''\r\n            }\r\n            if (item.lleva_vencimiento) {\r\n              item.lleva_vencimiento = item.lleva_vencimiento === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_cobro) {\r\n              item.lleva_fecha_cobro = item.lleva_fecha_cobro === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_emision) {\r\n              item.lleva_fecha_emision = item.lleva_fecha_emision === 1 ? 'Si' : '';\r\n            }\r\n            if (item.duplica_numero) {\r\n              item.duplica_numero = item.duplica_numero === 1 ? 'Si' : '';\r\n            }\r\n            // Clientes \r\n            if (item.cliente_asociado === null) {\r\n              item.cliente_asociado = 'Sin Cliente Asociado';\r\n            }\r\n            // Ventas\r\n            if (item.obra_descripcion && item.obra_direccion) {\r\n              item.obra = `${item.obra_descripcion} - ${item.obra_direccion}`\r\n            }\r\n            if (item.colocacion && item.acarreo && item.bien_cargada) {\r\n              item.colocacion = item.colocacion === 1 ? 'Si' : '';\r\n              item.acarreo = item.acarreo === 1 ? 'Si' : '';\r\n              item.bien_cargada = item.bien_cargada === 1 ? 'Si' : '';\r\n            }\r\n            // Articulos\r\n            if (item.total_stock && item.cantidad_pendiente) {\r\n              item.total_stock = parseFloat(item.total_stock).toFixed(0);\r\n              item.cantidad_pendiente = parseFloat(item.cantidad_pendiente).toFixed(0);\r\n            }\r\n          })\r\n        } else {\r\n          r.data.forEach((item) => {\r\n            if (item.fecha) {\r\n              item.fecha = this.cambiarFormatoFecha(item.fecha);\r\n            }\r\n            if (item.hora) {\r\n              item.hora = this.cambiarformatoHora(item.hora);\r\n            }\r\n            if (item.cotizado) {\r\n              item.cotizado = item.cotizado === 1 ? 'Si' : '';\r\n            }\r\n            if (item.activo) {\r\n              item.activo = item.activo === 1 ? 'Si' : '';\r\n            }\r\n            if (item.bonificado) {\r\n              item.bonificado = item.bonificado === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_banco) {\r\n              item.lleva_banco = item.lleva_banco === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_numero) {\r\n              item.lleva_numero = item.lleva_numero === 1 ? 'Si' : ''\r\n            }\r\n            if (item.lleva_vencimiento) {\r\n              item.lleva_vencimiento = item.lleva_vencimiento === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_cobro) {\r\n              item.lleva_fecha_cobro = item.lleva_fecha_cobro === 1 ? 'Si' : '';\r\n            }\r\n            if (item.lleva_fecha_emision) {\r\n              item.lleva_fecha_emision = item.lleva_fecha_emision === 1 ? 'Si' : '';\r\n            }\r\n            if (item.duplica_numero) {\r\n              item.duplica_numero = item.duplica_numero === 1 ? 'Si' : '';\r\n            }\r\n            // Clientes \r\n            if (item.cliente_asociado === null) {\r\n              item.cliente_asociado = 'Sin Cliente Asociado';\r\n            }\r\n            // Ventas\r\n            if (item.obra_descripcion && item.obra_direccion) {\r\n              item.obra = `${item.obra_descripcion} - ${item.obra_direccion}`\r\n            }\r\n            if (item.colocacion && item.acarreo && item.bien_cargada) {\r\n              item.colocacion = item.colocacion === 1 ? 'Si' : '';\r\n              item.acarreo = item.acarreo === 1 ? 'Si' : '';\r\n              item.bien_cargada = item.bien_cargada === 1 ? 'Si' : '';\r\n            }\r\n            // Articulos\r\n            if (item.total_stock && item.cantidad_pendiente) {\r\n              item.total_stock = parseFloat(item.total_stock).toFixed(0);\r\n              item.cantidad_pendiente = parseFloat(item.cantidad_pendiente).toFixed(0);\r\n            }\r\n          })\r\n        }\r\n\r\n\r\n        if (this.endpoint.toString().includes('view_stock_articulo_deposito')) {\r\n          r.data.result = this.quitarRepetidos(r.data.result);\r\n        }\r\n\r\n        this.filterDataSource = r.data.result ? r.data.result : r.data;\r\n        this.dataSource = new MatTableDataSource<any>((r.data.result ? r.data.result : r.data));\r\n        this.paginator.length = r.totalCount;\r\n        this.syncSelectionWithCurrentPage();\r\n\r\n        if (this.renderType == 'client') {  //  Si el paginado es por front...\r\n          this.paginator.length = this.filterDataSource.length  //... Se le asigna el largo de la cantidad de elementos que deveulva el back.\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n\r\n        this.paginator.pageIndex = this.PageIndex;\r\n\r\n        //Asigna el tamaño de pagina dinamicamente segun el porcentaje de 5, 10, 25, 50, 100\r\n        this.pageSizeOptions = [\r\n          Math.ceil(this.paginator.length * 0.05),\r\n          Math.ceil(this.paginator.length * 0.1),\r\n          Math.ceil(this.paginator.length * 0.25),\r\n          Math.ceil(this.paginator.length * 0.5),\r\n          this.paginator.length\r\n        ]\r\n\r\n        //Eliminamos elementos repetidos\r\n        this.pageSizeOptions = [...new Set(this.pageSizeOptions)];\r\n\r\n        if (!this.Pagesize) {\r\n          this.Pagesize = this.pageSizeOptions[2];\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n * Esta funcion quita los items repetidos que se utilizaran en combo select\r\n * @param data \r\n * @returns arreglo_auxiliar \r\n */\r\n  quitarRepetidos(data: IArticuloDeposito[]) {\r\n    let arreglo_auxiliar = [];\r\n\r\n    data.forEach(a => {\r\n      let e = data.filter(ar => ar.idarticulo === a.idarticulo);\r\n      if (!arreglo_auxiliar.some(ae => ae.idarticulo === a.idarticulo)) {\r\n        let um_stock = this.groupAndAdjustData(e);\r\n        a.stock = um_stock[0]['cantidad'];\r\n        arreglo_auxiliar.push(a);\r\n      }\r\n    })\r\n    return arreglo_auxiliar;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion unifica las unidades de medida de un articulo\r\n   * @param data \r\n   * @returns \r\n   */\r\n  groupAndAdjustData(data) {\r\n    const groupedData = data.reduce((acc, articulo) => {\r\n      if (articulo.stock !== '0') {\r\n        const existing = acc.find(item => item.deposito_descripcion === articulo.deposito_descripcion);\r\n        if (existing) {\r\n          existing.cantidad += ` + ${articulo.stock} ${articulo.um || ''}`.trim();\r\n        } else {\r\n          acc.push({\r\n            deposito_descripcion: articulo.deposito_descripcion,\r\n            cantidad: `${articulo.stock} ${articulo.um || ''}`.trim()\r\n          });\r\n        }\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    // Ajuste para separar los valores concatenados con espacio\r\n    groupedData.forEach(item => {\r\n      item.cantidad = item.cantidad.replace(/\\s*\\+\\s*/g, ' + ');\r\n    });\r\n\r\n    return groupedData;\r\n  }\r\n\r\n  /**\r\n   * Esta funcion sirve para cambiar el formato de la fecha cuando se maneja con tipo String\r\n   * @param fecha \r\n   * @returns Devuelve una fecha con formato dd/mm/yyyy\r\n   */\r\n  cambiarFormatoFecha(fecha: string): string {\r\n    // Supongamos que la fecha está en el formato 'YYYY-MM-DD'\r\n    const partes = fecha.split('-');\r\n    if (partes.length === 3) {\r\n      const anio = partes[0];\r\n      const mes = partes[1];\r\n      const dia = partes[2];\r\n      return `${dia}/${mes}/${anio}`;\r\n    } else {\r\n      // Manejar el caso en que la cadena no tiene el formato esperado\r\n      return 'Fecha inválida';\r\n    }\r\n  }\r\n\r\n  /**\r\n * Esta función sirve para cambiar el formato de la hora de una cadena tipo 'HH:mm:ss'.\r\n * @param hora Cadena en formato 'HH:mm:ss'\r\n * @returns Devuelve una cadena con la hora en formato 'HH:mm'\r\n */\r\n  cambiarformatoHora(hora: string): string {\r\n    const partes = hora.split(':');\r\n    if (partes.length >= 2) {\r\n      const horas = partes[0];\r\n      const minutos = partes[1];\r\n      return `${horas.padStart(2, '0')}:${minutos.padStart(2, '0')}`;\r\n    } else {\r\n      return 'Hora inválida';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selecciona o deselecciona todos los elementos de la página actual.\r\n   * @param seleccionado Indica si se deben seleccionar o deseleccionar todos los elementos.\r\n   */\r\n  seleccionarTodos(seleccionado: boolean) {\r\n    this.allSelected = seleccionado;\r\n    const elementosPaginaActual = this.dataSource.data.slice(this.PageIndex * this.Pagesize, (this.PageIndex + 1) * this.Pagesize);\r\n    this.seleccionados = this.seleccionados.filter(item => !elementosPaginaActual.includes(item));\r\n    if (seleccionado) {\r\n      this.seleccionados.push(...elementosPaginaActual);\r\n    } else {\r\n      this.seleccionados = this.seleccionados.filter(item => !elementosPaginaActual.includes(item));\r\n    }\r\n    this.syncSelectionWithCurrentPage();\r\n    this.selectionChange.emit(this.seleccionados);\r\n  }\r\n\r\n  /**\r\n   * Selecciona o deselecciona un elemento específico.\r\n   * @param element El elemento que se debe seleccionar o deseleccionar.\r\n   * @param seleccionado Indica si el elemento debe ser seleccionado o deseleccionado.\r\n   */\r\n  seleccionarElemento(element: any, seleccionado: boolean) {\r\n    if (seleccionado) {\r\n      if (!this.seleccionados.includes(element)) {\r\n        this.seleccionados.push(element);\r\n      }\r\n    } else {\r\n      this.seleccionados = this.seleccionados.filter(item => item !== element);\r\n    }\r\n    element.selected = seleccionado;\r\n    this.syncSelectionWithCurrentPage();\r\n    this.allSelected = this.dataSource.data.every(item => this.seleccionados.includes(item));\r\n    this.selectionChange.emit(this.seleccionados);\r\n  }\r\n\r\n  /**\r\n   * Obtiene todos los elementos seleccionados actualmente.\r\n   * @returns Un array con los elementos que están actualmente seleccionados.\r\n   */\r\n  getElementosSeleccionados(): any[] {\r\n    return this.seleccionados;\r\n  }\r\n\r\n  /**\r\n   * Sincroniza la selección de elementos con la página actual.\r\n   * Actualiza el estado de selección de cada elemento en la página actual\r\n   * en función de si están presentes en el conjunto de elementos seleccionados.\r\n   */\r\n  syncSelectionWithCurrentPage() {\r\n    const elementosPaginaActual = this.dataSource.data.slice(this.PageIndex * this.Pagesize, (this.PageIndex + 1) * this.Pagesize);\r\n    elementosPaginaActual.forEach(item => {\r\n      item.selected = this.seleccionados.some(i => JSON.stringify(i) === JSON.stringify(item));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Puede surgir que en cierta situacion necesitemos SOLAMENTE los elementos que \r\n   * trae nuestro servicio para utilizarlo en un componente en concreto.\r\n   * @returns Elemenmtos existentes.\r\n   */\r\n  getElementosExistentes() {\r\n    let elementos_existentes = [];\r\n    this.dataSource.filteredData.forEach((elemento) => {\r\n      if (!elementos_existentes.includes(elemento)) {\r\n        elementos_existentes.push(elemento);\r\n      }\r\n    })\r\n    return elementos_existentes;\r\n  }\r\n\r\n  agregarEstilos() {\r\n    if (this.extraClasses && this.extraClasses != '') {\r\n      let arr_classes = this.extraClasses.split(',');\r\n      if (this.extraClasses.length != 0 && arr_classes.length > 0) {\r\n        arr_classes.forEach(elem => {\r\n          let itemSearch = elem.split(' ')[0];\r\n          let items = document.querySelectorAll(itemSearch);\r\n          let cssClass = elem.split(' ')[1];\r\n          for (let i = 0; i < items.length; i += 1) {\r\n            items[i].classList.add(cssClass);\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  cambioPagina(event: any) {\r\n    this.PageIndex = event.pageIndex;\r\n    this.Pagesize = event.pageSize\r\n    this.filterPaginado = `&per-page=${this.Pagesize}&page=${this.PageIndex}`\r\n    /* Deberíamos usar set_filtro_global */\r\n    /*  if (this.cache) {\r\n      NavigationService.setFilterModulo({ filterPaginado: this.filterPaginado, data: { perpage: this.Pagesize, page: this.PageIndex } }, this.user)\r\n     } */\r\n    this.renderTabla();\r\n    this.agregarEstilos();\r\n  }\r\n\r\n  /**\r\n   * Esta funcion es para el buscador de input, recibe un string y renderiza la tabla\r\n   * @param input \r\n   */\r\n  filters(input: string) {\r\n    this.filterLike = input\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId); //Limpio el temporizador evita multiples llamadas\r\n    }\r\n    this.timeoutId = setTimeout(() => {\r\n      let query = ''\r\n      for (let i = 0; i < this.FiltersLikes.length; i++) {\r\n        const like = this.FiltersLikes[i];\r\n        if (this.FilterLikesID) {\r\n          query += `&filter[${like}]=${this.filterLike}`\r\n        } else {\r\n          query += `&filter[or][${i}][${like}][like]=${this.filterLike}`\r\n        }\r\n      }\r\n\r\n      this.filterLike = query;\r\n      /* Deberíamos usar set_filtro_global */\r\n      /*   if (this.cache) {\r\n          NavigationService.setFilterModulo({ like: input }, this.user)\r\n          NavigationService.setFilterModulo({ filterLike: this.filterLike }, this.user)\r\n        } */\r\n      if (input != '') {\r\n        if (this.renderType == \"client\") {\r\n          this.dataSource.data = this.filterDataSource.filter(r => this.FiltersLikes.some(f => r[f].toLowerCase().includes(input.toLowerCase())))\r\n        }\r\n      } else { //Caso de input vacio\r\n        if (this.renderType == \"client\") {\r\n          this.dataSource.data = this.filterDataSource\r\n        } else {\r\n          this.filterLike = ''\r\n        }\r\n      }\r\n\r\n      /**\r\n       * Se renderiza despues de cualquier acción. \r\n       * Por ejemplo sí se quiere editar un item con el filtro de busqueda activado, \r\n       * renderiza ese item manteniendo el filtro de busqueda.\r\n       */\r\n      this.renderTabla();\r\n\r\n      this.agregarEstilos();\r\n    }, 750);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Funcion para acceder a multi nivel con expands\r\n   * \r\n   * @param element una fila de la respuesta \r\n   * @param column el string de atributo para acceder\r\n   * @returns el parametro en formato de string.\r\n   */\r\n  parse(element: any, column: string): string {\r\n    let colSplit = column.split('.');\r\n    let temp = element\r\n    let err: boolean = false\r\n    for (let i = 0; i < colSplit.length && !err; i++) {\r\n      const propiedad = colSplit[i];\r\n      temp = temp[propiedad]\r\n      if (!temp) {\r\n        err = true\r\n        temp = temp === 0 ? 'No' : '-'; //Parseo valor booleano manejado como numero para que me muestre un 'No'.\r\n      }\r\n    }\r\n    return temp\r\n  }\r\n\r\n  onFilterMenu(documentRef: MatButton | MatIcon) {//filtros\r\n    this.jedsMenu\r\n      .open(this.filterComponent, documentRef._elementRef, this.formComponent)\r\n      .afterClosed()\r\n      .subscribe({\r\n        next: data => {\r\n          if (data) {\r\n            this.filterLikecomponent = data.filter\r\n            this.formComponent = data.form\r\n            this.renderTabla()\r\n            this.agregarEstilos();\r\n            /* Deberíamos usar set_filtro_global */\r\n            /*  if (this.cache) {\r\n              NavigationService.setFilterModulo({ filtercomponent: this.filterLikecomponent, formComponent: this.formComponent }, this.user)\r\n             } */\r\n          }\r\n        },\r\n      });\r\n  }\r\n\r\n  modalUp(documentRef: MatButton) {\r\n    this.menuService\r\n      .open(this.filterComponent, documentRef._elementRef, this.formComponent)\r\n      .afterClosed()\r\n      .subscribe({\r\n        next: data => {\r\n          if (data) {\r\n            this.filterLikecomponent = data.filter\r\n            this.formComponent = data.form\r\n            this.renderTabla()\r\n            this.agregarEstilos();\r\n            /* Deberíamos usar set_filtro_global */\r\n            /*  if (this.cache) {\r\n              NavigationService.setFilterModulo({ filtercomponent: this.filterLikecomponent, formComponent: this.formComponent }, this.user)\r\n             } */\r\n          }\r\n        },\r\n      });\r\n  }\r\n\r\n  // Lógica para mover elementos al soltar\r\n  drop(event: CdkDragDrop<any[]>) {\r\n    moveItemInArray(this.dataSource.data, event.previousIndex, event.currentIndex);\r\n    this.saveOrdenarArticulos(event.currentIndex);\r\n    // this.dataSource.data = [...this.dataSource.data];  // Actualiza el datasource\r\n  }\r\n\r\n  saveOrdenarArticulos(currentIndex) {\r\n    let articulo_a_mover = this.dataSource.data.find((a, index) => index === currentIndex); // Artículo arrastrado para cambiar de posicion.\r\n\r\n    let bandera = this.dataSource.data.find((a, index) => index === currentIndex + 1); // Artículo que se posicionará debajo del artículo a mover, puede ser `undefined`\r\n\r\n    let articulo_2 = bandera ? bandera : this.dataSource.data.find((a, index) => index === currentIndex - 1); // Si mueve el articulo a la ultima posicion, `bandera` devolvera 'undefined'\r\n\r\n    if (articulo_a_mover.idarticulo != articulo_2.idarticulo) { // Verifico que no sean el mismo articulo\r\n\r\n      let payload: IOrdenamiento = {\r\n        idarticulo1: articulo_a_mover.idarticulo, // Articulo a mover\r\n        idarticulo2: articulo_2.idarticulo // Articulo que se posicionara debajo del articulo a mover\r\n      }\r\n\r\n      // Llamado al servicio de ordenamiento\r\n      this.service.saveOrdenarArticulos(payload).subscribe({\r\n        next: (data) => {\r\n          if (data) {\r\n            this.renderTabla();\r\n            this.alert.success('Artículo movido con éxito');\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Función para alternar entre Scroll y Drag and Drop\r\n  toggleDragAndDrop(): void {\r\n    this.modeSelected = !this.modeSelected;\r\n  }\r\n}","<div *ngIf=\"this.isDragAndDrop && this.articulo_producto === 1\" class=\"right-10 flex justify-end space-x-4 mr-7 mt-3\">\r\n    <!-- Botón para alternar entre Scroll y Drag and Drop -->\r\n    <button mat-raised-button [class]=\"this.modeSelected ? color_primario : ''\"\r\n        [style.background-color]=\"this.modeSelected ? color_primario : color_secundario\"\r\n        [style.border]=\"!this.modeSelected ? color_primario : color_secundario || ''\"\r\n        [style.color]=\"!this.modeSelected ? color_primario : color_secundario || ''\" (click)=\"toggleDragAndDrop()\">\r\n        <div class=\"flex items-center\">\r\n            <svg id=\"vista_lista\" width=\"37\" height=\"37\" viewBox=\"0 0 37 37\" fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M10 19.3333H11.7778V17.5556H10V19.3333ZM10 22.8889H11.7778V21.1111H10V22.8889ZM10 15.7778H11.7778V14H10V15.7778ZM13.5556 19.3333H26V17.5556H13.5556V19.3333ZM13.5556 22.8889H26V21.1111H13.5556V22.8889ZM13.5556 14V15.7778H26V14H13.5556ZM10 19.3333H11.7778V17.5556H10V19.3333ZM10 22.8889H11.7778V21.1111H10V22.8889ZM10 15.7778H11.7778V14H10V15.7778ZM13.5556 19.3333H26V17.5556H13.5556V19.3333ZM13.5556 22.8889H26V21.1111H13.5556V22.8889ZM13.5556 14V15.7778H26V14H13.5556Z\"\r\n                    fill=\"currentColor\" />\r\n            </svg>\r\n            <span class=\"ml-2 text-lg mt-0.5 hidden md:inline\">\r\n                {{ this.modeSelected ? 'Modo Arrastre' : 'Modo Scroll'}}\r\n            </span>\r\n        </div>\r\n    </button>\r\n</div>\r\n\r\n<!-- Grilla Generales-->\r\n<div *ngIf=\"!isModal\" class=\"w-full cont-with-paginator mat-elevation-z8 mb-2\">\r\n\r\n    <div class=\"w-full max-h-[75vh] overflow-y-auto mt-2 pb-12\">\r\n        <table mat-table [dataSource]=\"dataSource\" cdkDropList\r\n            (cdkDropListDropped)=\"this.modeSelected ? drop($event) : null\"\r\n            [cdkDropListData]=\"this.modeSelected ? dataSource.data : null\"\r\n            class=\"w-full smm:px-0 smm:mt-0 mt-4 small-table-text mb-8 cont-with-paginator responsive-table\" matSort>\r\n            <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of columnsParams; let i = index\">\r\n                <!-- Checkbox de seleccion -->\r\n                <ng-container *ngIf=\"column === 'seleccion'\">\r\n                    <th mat-header-cell *matHeaderCellDef>\r\n                        <mat-checkbox (change)=\"seleccionarTodos($event.checked)\"\r\n                            [checked]=\"allSelected\"></mat-checkbox>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"mobile-label\">Selección</span>\r\n                        <mat-checkbox (change)=\"seleccionarElemento(element, $event.checked)\"\r\n                            [checked]=\"element.selected\">\r\n                        </mat-checkbox>\r\n                    </td>\r\n                </ng-container>\r\n                <!-- Other columns -->\r\n                <ng-container *ngIf=\"column != 'seleccion' && column != 'acciones' else botones\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{columnsNames[i]}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <span class=\"mobile-label\">{{columnsNames[i]}}</span>\r\n                        <span class=\"cell-content\"> {{ booleanParams.includes(column) ? (element[column] |\r\n                            activoPipe:column) : parse(element, column) }}</span>\r\n                    </td>\r\n                </ng-container>\r\n                <!-- Botones -->\r\n                <ng-template #botones>\r\n                    <th mat-header-cell *matHeaderCellDef> {{columnsNames[i]}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"mat-column-botones\">\r\n                        <span class=\"mobile-label\">{{columnsNames[i]}}</span>\r\n                        <div class=\"button-container\">\r\n                            <!-- <button mat-raised-button color=\"accent\"\r\n                                *ngFor=\"let accion of accionesButtons; let x = index\">{{accion}}</button> -->\r\n                            <button [disabled]=\"accion.disabled && accion.disabled(element)\" #origin\r\n                                [class.mat-icon-button]=\"accion.type !== 'button'\"\r\n                                [class.mat-button]=\"accion.type === 'button'\" color=\"accent\"\r\n                                *ngFor=\"let accion of functions; let x = index\"\r\n                                [ngClass]=\"{'bg-primary text-center':accion.type=='button' }\"\r\n                                (click)=\"emitFunction(accion.functionName, element,origin)\"\r\n                                matTooltip=\"{{accion.extra ? accion.nombre_boton(element) : accion.nombre_boton}}\"\r\n                                matTooltipPosition=\"above\" matTooltipClass=\"tooltip-class\" matTooltipShowDelay=\"100\"\r\n                                matTooltipHideDelay=\"100\" TooltipTouchGestures=\"auto\">\r\n                                <div class=\"icon-container\">\r\n                                    <!-- Icon de Accion (Recibe la condicion para ver como se tiene que mostrar) -->\r\n                                    <mat-icon [class]=\"color_primario ? '' : default_color\"\r\n                                        [style.color]=\"color_primario || ''\" class=\"icon \"\r\n                                        *ngIf=\"!accion.extra && accion.iconoAccion(element)\"\r\n                                        svgIcon=\"{{ accion.iconoAccion(element) }}\">\r\n                                    </mat-icon>\r\n                                    <!-- Icon de Accionado (Recibe la condicion para ver como se tiene que mostrar) -->\r\n                                    <mat-icon [class]=\"color_primario ? '' : default_color\"\r\n                                        [style.color]=\"color_primario || ''\" class=\"icon \"\r\n                                        *ngIf=\"!accion.extra && accion.iconoAccionado(element) \"\r\n                                        svgIcon=\"{{ accion.iconoAccionado(element) }}\">\r\n                                    </mat-icon>\r\n                                    <!-- Icon Deshabilitado (Recibe la condicion para ver como se tiene que mostrar) -->\r\n                                    <mat-icon class=\"icon \" *ngIf=\"!accion.extra && accion.iconoDeshabilitado(element)\"\r\n                                        svgIcon=\"{{ accion.iconoDeshabilitado(element) }}\">\r\n                                    </mat-icon>\r\n                                </div>\r\n                                {{ accion.type === 'button' ? accion.nombre_boton : '' }}\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </ng-template>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsParams; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columnsParams;\" [cdkDrag]=\"this.modeSelected ? '' : null\"\r\n                [cdkDragData]=\"this.modeSelected ? row : null\" [cdkDragDisabled]=\"!this.modeSelected\"></tr>\r\n        </table>\r\n    </div>\r\n    <div class=\"absolute bottom-0 left-0 right-0 bg-slate-800 rounded-b-2xl w-full\">\r\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" class=\"w-full rounded-b-lg shadow-md mat-paginator-sticky\"\r\n            [pageIndex]=\"PageIndex\" [pageSize]=\"Pagesize\" aria-label=\"Select page of users\"\r\n            (page)=\"cambioPagina($event)\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- Grilla En modal-->\r\n<div *ngIf=\"isModal\"\r\n    class=\"overflow-y-auto max-h-[400px] h-[400px] shadow-md rounded-lg cont-with-paginator mat-elevation-z8 mb-2\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\" w-full mt-1\" matSort>\r\n\r\n        <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of columnsParams; let i = index\">\r\n\r\n            <!-- Checkbox de selección -->\r\n            <ng-container *ngIf=\"column === 'seleccion'\">\r\n                <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                    [style.background]=\"color_primario || '' \" class=\"rounded-tl-lg text-white w-auto\">\r\n                    <mat-checkbox (change)=\"seleccionarTodos($event.checked)\" [checked]=\"allSelected\"></mat-checkbox>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <mat-checkbox (change)=\"seleccionarElemento(element, $event.checked)\" [checked]=\"element.selected\">\r\n                    </mat-checkbox>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- Otras columnas -->\r\n            <ng-container *ngIf=\"column != 'seleccion' && column != 'acciones' else botones\">\r\n                <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                    [style.background]=\"color_primario || '' \"\r\n                    [ngClass]=\"columnsNames.indexOf(columnsNames[i]) === 0 ? 'rounded-tl-lg' : ''\"\r\n                    class=\"text-white w-auto\">\r\n                    {{columnsNames[i]}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    {{ booleanParams.includes(column) ? (element[column] | activoPipe:column) : parse(element,\r\n                    column) }}\r\n                </td>\r\n            </ng-container>\r\n\r\n            <!-- Botones de acciones -->\r\n            <ng-template #botones>\r\n                <th mat-header-cell *matHeaderCellDef [class]=\"color_primario ? '' : default_color\"\r\n                    [style.background]=\"color_primario || '' \" class=\"rounded-tr-lg text-white w-auto\">\r\n                    {{columnsNames[i]}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let element\">\r\n                    <div class=\"button-container\">\r\n                        <button [disabled]=\"accion.disabled && accion.disabled(element)\" #origin\r\n                            [class.mat-icon-button]=\"accion.type !== 'button'\"\r\n                            [class.mat-button]=\"accion.type === 'button'\" color=\"accent\"\r\n                            *ngFor=\"let accion of functions; let x = index\"\r\n                            (click)=\"emitFunction(accion.functionName, element,origin)\"\r\n                            matTooltip=\"{{accion.extra ? accion.nombre_boton(element) : accion.nombre_boton}}\"\r\n                            matTooltipPosition=\"above\" matTooltipClass=\"tooltip-class\" matTooltipShowDelay=\"100\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <mat-icon [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || ''\"\r\n                                class=\"icon\" *ngIf=\"accion.iconoAccion(element)\"\r\n                                svgIcon=\"{{ accion.iconoAccion(element) }}\">\r\n                            </mat-icon>\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </ng-template>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"columnsParams; sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: columnsParams;\"></tr>\r\n    </table>\r\n\r\n    <!-- Mensaje cuando no hay artículos -->\r\n    <div *ngIf=\"dataSource.data.length === 0\" class=\"flex justify-center items-center h-20\">\r\n        <p class=\"text-gray-600 text-lg\">No hay artículos cargados.</p>\r\n    </div>\r\n\r\n    <!-- Paginador -->\r\n    <div *ngIf=\"!isModal\" class=\"absolute bottom-0 left-0 right-0 bg-slate-800 rounded-b-2xl w-full\">\r\n        <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" class=\"w-full rounded-b-lg shadow-md mat-paginator-sticky\"\r\n            [pageIndex]=\"PageIndex\" [pageSize]=\"Pagesize\" (page)=\"cambioPagina($event)\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TablaDinamicaComponent } from './tabla-dinamica.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { SharedComponentModule } from '../shared-component.module';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { ActivoPipe } from '@shared/pipes/activo.pipe';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TablaDinamicaComponent,\r\n        ActivoPipe\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        SharedComponentModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule,\r\n        DragDropModule\r\n    ],\r\n    exports: [\r\n        TablaDinamicaComponent\r\n    ],\r\n    providers: [\r\n        JedsMenuService,\r\n        { provide: MAT_DIALOG_DATA, useValue: {} },\r\n        { provide: MatDialogRef, useValue: {} },\r\n    ]\r\n})\r\nexport class TablaDinamicaModule { }","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'activoPipe'\r\n})\r\nexport class ActivoPipe implements PipeTransform {\r\n    transform(value: any, column_name: string): any {\r\n        // Lógica para transformar el valor según tus necesidades\r\n        if (value == 1) {\r\n            return 'Si';\r\n        } else if (value == 0) {\r\n            return 'No';\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n}","import { asyncScheduler } from '../scheduler/async';\nimport { timer } from './timer';\nexport function interval(period = 0, scheduler = asyncScheduler) {\n    if (period < 0) {\n        period = 0;\n    }\n    return timer(period, period, scheduler);\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }]; } });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }]; }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }]; }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overridden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n"],"names":["environment","Subject","TablaDinamicaService","constructor","http","_authService","getData","endpoint","filter","subject","get","observe","subscribe","resp","body","token","accessToken","next","headers","asObservable","saveOrdenarArticulos","payload","post","stock","stk_articulo_ordenar","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn","EventEmitter","MatPaginator","MatSort","MatTableDataSource","MAT_DIALOG_DATA","finalize","takeUntil","takeWhile","tap","timer","moveItemInArray","ɵɵelementStart","ɵɵlistener","TablaDinamicaComponent_div_0_Template_button_click_1_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","toggleDragAndDrop","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","ɵɵadvance","ɵɵclassMap","ctx_r0","modeSelected","color_primario","ɵɵstyleProp","color_secundario","ɵɵtextInterpolate1","TablaDinamicaComponent_div_1_ng_container_3_ng_container_1_th_1_Template_mat_checkbox_change_1_listener","$event","_r17","ctx_r16","seleccionarTodos","checked","ɵɵproperty","ctx_r14","allSelected","TablaDinamicaComponent_div_1_ng_container_3_ng_container_1_td_2_Template_mat_checkbox_change_3_listener","restoredCtx","_r20","element_r18","$implicit","ctx_r19","seleccionarElemento","selected","ɵɵelementContainerStart","ɵɵtemplate","TablaDinamicaComponent_div_1_ng_container_3_ng_container_1_th_1_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_container_1_td_2_Template","ɵɵelementContainerEnd","ctx_r21","columnsNames","i_r9","ɵɵtextInterpolate","ctx_r22","booleanParams","includes","column_r8","ɵɵpipeBind2","element_r24","parse","TablaDinamicaComponent_div_1_ng_container_3_ng_container_2_th_1_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_container_2_td_2_Template","ctx_r26","ctx_r34","default_color","ɵɵpropertyInterpolate","accion_r31","iconoAccion","element_r29","ctx_r35","iconoAccionado","iconoDeshabilitado","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_td_1_button_4_Template_button_click_0_listener","_r44","_r33","ɵɵreference","ctx_r43","emitFunction","functionName","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_td_1_button_4_mat_icon_3_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_td_1_button_4_mat_icon_4_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_td_1_button_4_mat_icon_5_Template","ɵɵclassProp","type","extra","nombre_boton","disabled","ɵɵpureFunction1","_c0","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_td_1_button_4_Template","ctx_r27","functions","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_th_0_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_td_1_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_container_1_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_container_2_Template","TablaDinamicaComponent_div_1_ng_container_3_ng_template_3_Template","ɵɵtemplateRefExtractor","_r12","ctx_r7","row_r48","TablaDinamicaComponent_div_1_Template_table_cdkDropListDropped_2_listener","_r50","ctx_r49","drop","TablaDinamicaComponent_div_1_ng_container_3_Template","TablaDinamicaComponent_div_1_tr_4_Template","TablaDinamicaComponent_div_1_tr_5_Template","TablaDinamicaComponent_div_1_Template_mat_paginator_page_7_listener","ctx_r51","cambioPagina","ctx_r1","dataSource","data","columnsParams","pageSizeOptions","PageIndex","Pagesize","TablaDinamicaComponent_div_2_ng_container_2_ng_container_1_th_1_Template_mat_checkbox_change_1_listener","_r66","ctx_r65","ctx_r63","TablaDinamicaComponent_div_2_ng_container_2_ng_container_1_td_2_Template_mat_checkbox_change_1_listener","_r69","element_r67","ctx_r68","TablaDinamicaComponent_div_2_ng_container_2_ng_container_1_th_1_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_container_1_td_2_Template","ctx_r70","indexOf","i_r58","ctx_r71","column_r57","element_r73","TablaDinamicaComponent_div_2_ng_container_2_ng_container_2_th_1_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_container_2_td_2_Template","ctx_r75","ctx_r83","accion_r80","element_r78","TablaDinamicaComponent_div_2_ng_container_2_ng_template_3_td_1_button_2_Template_button_click_0_listener","_r87","_r82","ctx_r86","TablaDinamicaComponent_div_2_ng_container_2_ng_template_3_td_1_button_2_mat_icon_2_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_template_3_td_1_button_2_Template","ctx_r76","TablaDinamicaComponent_div_2_ng_container_2_ng_template_3_th_0_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_template_3_td_1_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_container_1_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_container_2_Template","TablaDinamicaComponent_div_2_ng_container_2_ng_template_3_Template","_r61","TablaDinamicaComponent_div_2_div_6_Template_mat_paginator_page_1_listener","_r92","ctx_r91","ctx_r56","TablaDinamicaComponent_div_2_ng_container_2_Template","TablaDinamicaComponent_div_2_tr_3_Template","TablaDinamicaComponent_div_2_tr_4_Template","TablaDinamicaComponent_div_2_div_5_Template","TablaDinamicaComponent_div_2_div_6_Template","ctx_r2","length","isModal","TablaDinamicaComponent","eventoUpdate","renderTabla","jedsMenu","service","_empresaService","alert","menuService","_userService","seleccionados","selectionChange","filterLikeCache","cache","filterComponent","undefined","filterLikecomponent","filterLike","filterPaginado","FiltersLikes","FilterLikesID","extraParams","sortSSP","functionEmitter","extraClasses","isDragAndDrop","_unsubscribeAll","showAlert","renderType","accionesButtons","accionesFunctions","subscribeAlert","emitConfig","config","_alertConfig","appearance","time","pipe","name","params","origin","emit","ngAfterViewChecked","agregarEstilos","ngOnInit","empresa$","empresa","articulo_producto","getEmpresa","ngAfterViewInit","paginator","sort","sortChange","column","active","direction","arg","query","arr_filters","split","forEach","startsWith","r","result","item","fecha","cambiarFormatoFecha","hora","cambiarformatoHora","fecha_precarga","hora_entrega","cotizado","activo","bonificado","lleva_banco","lleva_numero","lleva_vencimiento","lleva_fecha_cobro","lleva_fecha_emision","duplica_numero","cliente_asociado","obra_descripcion","obra_direccion","obra","colocacion","acarreo","bien_cargada","total_stock","cantidad_pendiente","parseFloat","toFixed","toString","quitarRepetidos","filterDataSource","totalCount","syncSelectionWithCurrentPage","pageIndex","Math","ceil","Set","arreglo_auxiliar","a","e","ar","idarticulo","some","ae","um_stock","groupAndAdjustData","push","groupedData","reduce","acc","articulo","existing","find","deposito_descripcion","cantidad","um","trim","replace","partes","anio","mes","dia","horas","minutos","padStart","seleccionado","elementosPaginaActual","slice","element","every","getElementosSeleccionados","i","JSON","stringify","getElementosExistentes","elementos_existentes","filteredData","elemento","arr_classes","elem","itemSearch","items","document","querySelectorAll","cssClass","classList","add","event","pageSize","filters","input","timeoutId","clearTimeout","setTimeout","like","f","toLowerCase","colSplit","temp","err","propiedad","onFilterMenu","documentRef","open","_elementRef","formComponent","afterClosed","form","modalUp","previousIndex","currentIndex","articulo_a_mover","index","bandera","articulo_2","idarticulo1","idarticulo2","success","ɵɵdirectiveInject","JedsMenuService","i3","EmpresaService","i4","AppAlertService","i5","UserService","selectors","viewQuery","TablaDinamicaComponent_Query","rf","ctx","TablaDinamicaComponent_div_0_Template","TablaDinamicaComponent_div_1_Template","TablaDinamicaComponent_div_2_Template","CommonModule","MatTableModule","MatSortModule","MatPaginatorModule","MatButtonModule","MatFormFieldModule","MatIconModule","MatInputModule","MatDialogModule","MatDialogRef","MatTooltipModule","SharedComponentModule","ActivoPipe","MatCheckboxModule","DragDropModule","TablaDinamicaModule","provide","useValue","imports","declarations","exports","transform","value","column_name","pure","asyncScheduler","interval","period","scheduler","Injectable","Inject","InjectionToken","Directive","Input","Optional","SkipSelf","Output","Self","ContentChildren","ContentChild","NgModule","DOCUMENT","CdkScrollableModule","_getEventTarget","normalizePassiveListenerOptions","_getShadowRoot","coerceBooleanProperty","coerceElement","coerceArray","coerceNumberProperty","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","Subscription","animationFrameScheduler","Observable","merge","startWith","map","take","switchMap","extendStyles","dest","source","importantProperties","key","hasOwnProperty","setProperty","has","removeProperty","toggleNativeDragInteractions","enable","userSelect","style","toggleVisibility","position","top","opacity","left","combineTransforms","initialTransform","parseCssTimeUnitsToMs","multiplier","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","part","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","Map","clear","elements","set","scrollPosition","getViewportScrollPosition","scrollTop","scrollLeft","handleScroll","target","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","nodeName","removeAttribute","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","context","getContext","drawImage","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","DragRef","_disabled","_dropContainer","newValue","_toggleNativeDragInteractions","_handles","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","container","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","remove","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","delete","withDirection","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","insertBefore","_createPreviewElement","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","previousContainer","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","setAttribute","Array","isArray","className","Promise","resolve","placeholderRect","duration","handler","propertyName","removeEventListener","timeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","splice","copyArrayItem","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","withItems","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","findIndex","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","b","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","draggedItems","connectedTo","withOrientation","_scrollableElements","size","_clientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","options","_clearGlobalListeners","streams","observer","eventOptions","ngOnDestroy","instance","DragDropRegistry_Factory","t","NgZone","ɵprov","ɵɵdefineInjectable","ngDevMode","ɵsetClassMetadata","args","decorators","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","DragDrop_Factory","ViewportRuler","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CdkDropListGroup_Factory","ɵdir","ɵɵdefineDirective","inputs","exportAs","standalone","features","ɵɵProvidersFeature","useExisting","providers","CDK_DRAG_CONFIG","assertElementNode","Error","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","_group","_dropListRef","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_destroyed","id","_unsortedItems","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","ref","correspondingDropList","list","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","markForCheck","dropEvent","draggingDisabled","listAutoScrollDisabled","listOrientation","CdkDropList_Factory","ElementRef","ChangeDetectorRef","ScrollDispatcher","Directionality","hostAttrs","hostVars","hostBindings","CdkDropList_HostBindings","ɵɵattribute","outputs","host","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","parentDrag","_parentDrag","CdkDragHandle_Factory","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","CdkDragPreview_Factory","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","rootElementSelector","closest","_getBoundaryElement","boundary","dir","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","childHandleElements","handleInstance","dragRef","CdkDrag_Factory","ViewContainerRef","contentQueries","CdkDrag_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","CdkDrag_HostBindings","ɵɵNgOnChangesFeature","descendants","DRAG_DROP_DIRECTIVES","DragDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","Component","ViewEncapsulation","ChangeDetectionStrategy","SPACE","ENTER","mixinInitialized","mixinDisabled","AnimationDurations","AnimationCurves","MatCommonModule","trigger","state","transition","animate","keyframes","animateChild","MatSortHeader_div_3_Template","_r2","ɵɵgetCurrentView","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","_getArrowViewState","_getArrowDirectionState","_c1","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","disableClear","_disableClear","v","_defaultOptions","sortables","register","sortable","deregister","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","_markInitialized","MatSort_Factory","ɵɵInheritDefinitionFeature","sortOrder","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","MatSortHeaderIntl_Factory","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","deps","useFactory","_MatSortHeaderBase","MatSortHeader","sortActionDescription","_sortActionDescription","_updateSortActionDescription","_intl","_sort","_columnDef","_focusMonitor","_ariaDescriber","defaultOptions","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","querySelector","monitor","newState","_setIndicatorHintVisible","stopMonitoring","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","keyCode","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","MatSortHeader_Factory","FocusMonitor","AriaDescriber","ɵcmp","ɵɵdefineComponent","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","attrs","ngContentSelectors","decls","vars","consts","MatSortHeader_Template","ɵɵprojectionDef","ɵɵprojection","dependencies","NgIf","encapsulation","animation","changeDetection","None","OnPush","animations","MatSortModule_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[5,6,7]}