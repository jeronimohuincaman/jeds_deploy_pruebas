{"version":3,"file":"src_app_modules_administracion_clientes_clientes_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAuD;AACR;AAEa;AACH;AACE;AACA;AACO;AACb;AACI;AACG;AACO;AACZ;AACa;AACP;AACO;AACH;AACJ;AACU;AACR;AACR;AACuC;AACnC;;;AAC3D,MAAMsB,MAAM,GAAW,CACnB;EACIC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAEV,6EAAiBA;CAC/B,CACJ;AACD,MAwBaW,cAAc;SAAdA,cAAc;;mBAAdA,MAAc;AAAA;;QAAdA;AAAc;;aAFZ,CAACT,sEAAe,EAAEN,6EAAe,EAAEE,8EAAe,CAAC;EAAAc,OAAA,GAnB1DzB,yDAAY,EACZD,yDAAY,CAAC2B,QAAQ,CAACL,MAAM,CAAC,EAC7BnB,oEAAc,EACdC,sEAAe,EACfC,sEAAe,EACfC,6EAAkB,EAClBC,gEAAmB,EACnBC,oEAAc,EACdG,kEAAa,EACbF,sEAAkB,EAClBI,wEAAgB,EAChBI,kFAAqB,EACrBf,wEAAgB,EAChBgB,0EAAiB,EACjBC,kEAAa,EACbC,wGAAmB,EACnBC,sEAAe,EAETrB,yDAAY;AAAA;AAGC;;sHAAdyB,cAAc;IAAAG,YAAA,GAvBRd,6EAAiB,EAAEC,0EAAa;IAAAW,OAAA,GAE3CzB,yDAAY,EAAA4B,yDAAA,EAEZ1B,oEAAc,EACdC,sEAAe,EACfC,sEAAe,EACfC,6EAAkB,EAClBC,gEAAmB,EACnBC,oEAAc,EACdG,kEAAa,EACbF,sEAAkB,EAClBI,wEAAgB,EAChBI,kFAAqB,EACrBf,wEAAgB,EAChBgB,0EAAiB,EACjBC,kEAAa,EACbC,wGAAmB,EACnBC,sEAAe;IAAAS,OAAA,GAET9B,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CgD;AACd;AACN;AAGT;AACuD;AAE7C;;;;;;;;;AAEvD,MAKac,iBAAiB;EAe1BuB,YACYC,gBAAiC,EACjCC,OAAgC,EAChCC,KAAsB,EACtBC,OAAkB,EAClBC,cAA6B;IAJ7B,KAAAJ,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,cAAc,GAAdA,cAAc;IAlBnB,KAAAC,UAAU,GAAiC,IAAIV,uEAAkB,EAAE;IAC1E,KAAAW,OAAO,GAAG,CAAC,mBAAmB,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,kBAAkB,EAAE,UAAU,CAAC;IAC1G,KAAAC,aAAa,GAAG,CAAC,aAAa,EAAE,MAAM,EAAE,0BAA0B,EAAE,eAAe,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,UAAU,CAAC;IACzI,KAAAC,eAAe,GAAG,IAAI;IACtB,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAC,WAAW,GAAG,CAAC,aAAa,CAAC;IAE7B,KAAAC,GAAG,GAAGb,iEAAW,CAACc,cAAc,CAACC,aAAa,GAAG,GAAG;IAEpD,KAAAC,MAAM,GAAgB,IAAIlB,uDAAW,CAAC,EAAE,CAAC;IAWrC;;;IAGA,IAAI,CAACY,eAAe,GAAG,CAAC;MACpBO,KAAK,EAAE,MAAM;MACbC,YAAY,EAAE,QAAQ;MACtBC,YAAY,EAAE;MACd;KACH,EACD;MACIF,KAAK,EAAE,QAAQ;MACfC,YAAY,EAAE,UAAU;MACxBC,YAAY,EAAE;KACjB,CACA;EACL;EAIAC,QAAQA,CAAA;IACJ,IAAI,CAACd,cAAc,CAACe,aAAa,EAAE,CAACC,IAAI;IAAE;IACtC3B,kDAAY,CAAC,GAAG,CAAC,EACjBC,2DAAoB,EAAE,CACzB,CACI2B,SAAS,CAACC,KAAK,IAAG;MACf,IAAI,CAACb,cAAc,GAAGa,KAAK;MAC3B,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACf,cAAc,CAAC;IAC3C,CAAC,CAAC;EACV;EAEA;;;;EAIAgB,eAAeA,CAACC,KAAoC;IAChD,QAAQA,KAAK,CAACC,IAAI;MACd,KAAK,QAAQ;QACT,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC;QACzB;MACJ,KAAK,UAAU;QACX,IAAI,CAACG,aAAa,CAACH,KAAK,CAAC;QACzB;;EAEZ;EAEA;;;EAGAI,WAAWA,CAAA;IACP,IAAI,CAAC3B,OAAO,CACP4B,IAAI,CAACtD,+DAAa,EAAE;MAAEuD,UAAU,EAAE;IAAc,CAAE,CAAC,CACnDC,WAAW,EAAE,CACbZ,SAAS,CAAC;MACPa,IAAI,EAAEA,CAAA,KAAK;QACP,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,IAAI,CAACf,cAAc,CAAC;MAC3C;KACH,CAAC;EACV;EAEA;;;;EAIAmB,aAAaA,CAACF,KAAK;IACf,IAAI,CAACvB,OAAO,CACP4B,IAAI,CAACtD,+DAAa,EAAE;MAAE0D,IAAI,EAAET,KAAK,CAACU,MAAM,CAACD,IAAI;MAAEH,UAAU,EAAE,WAAW;MAAEK,SAAS,EAAE;IAAK,CAAE,CAAC,CAC3FJ,WAAW,EAAE,CACbZ,SAAS,CAAC;MACPa,IAAI,EAAEA,CAAA,KAAK;QACP,IAAI,CAACX,KAAK,CAACC,OAAO,CAAC,IAAI,CAACf,cAAc,CAAC;MAC3C;KACH,CAAC;EACV;EAEA;;;;EAIAoB,aAAaA,CAACH,KAAK;IACf,IAAI,CAACzB,OAAO,CAAC8B,IAAI,CAAC;MACdO,KAAK,EAAE,iBAAiB,GAAGZ,KAAK,CAACU,MAAM,CAACD,IAAI,CAACI,WAAW;MACxDC,OAAO,EAAE,4BAA4B,GAAGd,KAAK,CAACU,MAAM,CAACD,IAAI,CAACI,WAAW,GAAG,GAAG;MAC3EE,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE;QACLzC,OAAO,EAAE;UACL0C,IAAI,EAAE,IAAI;UACVC,KAAK,EAAE,MAAM;UACbC,KAAK,EAAE;SACV;QACDC,MAAM,EAAE;UACJH,IAAI,EAAE,IAAI;UACVE,KAAK,EAAE;;;KAGlB,CAAC,CACGZ,WAAW,EAAE,CACbZ,SAAS,CAAC0B,GAAG,IAAG;MACb,IAAIA,GAAG,KAAK,WAAW,EAAE;QACrB,IAAI,CAAC/C,gBAAgB,CAAC6B,aAAa,CAACH,KAAK,CAACU,MAAM,CAACD,IAAI,CAACa,OAAO,CAAC,CAAC3B,SAAS,CAAC;UACrEa,IAAI,EAAGC,IAAI,IAAI;YACX;YACA,IAAI,CAACjC,KAAK,CAAC+C,OAAO,CAAC,8BAA8B,CAAC;YAClD,IAAIF,GAAG,EAAE;cACL,IAAI,CAACxB,KAAK,CAAC2B,WAAW,EAAE;;UAEhC,CAAC;UACDC,KAAK,EAAGA,KAAK,IAAI;YACb;YACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;YAC7C,IAAI,CAACjD,KAAK,CAACiD,KAAK,CAAC,8DAA8D,CAAC;UACpF;SACH,CAAC;;IAEV,CAAC,CAAC;EACV;;SAxIS3E,iBAAiB;;mBAAjBA,MAAiB,EAAA6E,gEAAA,CAAA9D,sEAAA,GAAA8D,gEAAA,CAAAE,gFAAA,GAAAF,gEAAA,CAAAI,8EAAA,GAAAJ,gEAAA,CAAAK,gEAAA,GAAAL,gEAAA,CAAAO,kFAAA;AAAA;;QAAjBpF,MAAiB;EAAAsF,SAAA;EAAAC,SAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;iEAuCfpE,8GAAsB;;;;;;;;;;;;MCzDrCwD,6DAAA,aAAoB;MAU2BA,yDAAA,mBAAAgB,mDAAA;QAAA,OAASH,GAAA,CAAApC,WAAA,EAAa;MAAA,EAAC;MACfuB,qDAAA,aAAM;MAAAA,2DAAA,EAAS;MAIlEA,6DAAA,aAAwB;MAMhBA,yDAAA,6BAAAmB,yEAAAC,MAAA;QAAA,OAAmBP,GAAA,CAAAzC,eAAA,CAAAgD,MAAA,CAAuB;MAAA,EAAC;MAE/CpB,2DAAA,EAAqB;;;MAN0EA,wDAAA,GAAe;MAAfA,yDAAA,gBAAe,iBAAAa,GAAA,CAAA5D,OAAA,2CAAA4D,GAAA,CAAA3D,aAAA,cAAA2D,GAAA,CAAAvD,GAAA,eAAAuD,GAAA,CAAA1D,eAAA,wCAAA0D,GAAA,CAAAxD,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdlD;AAEK;;;;;;;;;;AAEzE,MAKajC,aAAa;EAKtBsB,YACoCoC,IAAS,EACjCnC,gBAAiC,EAClCE,KAAsB,EACtB6E,SAAsC;IAHb,KAAA5C,IAAI,GAAJA,IAAI;IAC5B,KAAAnC,gBAAgB,GAAhBA,gBAAgB;IACjB,KAAAE,KAAK,GAALA,KAAK;IACL,KAAA6E,SAAS,GAATA,SAAS;IARpB,KAAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC;IAUtC,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC9C,IAAI,GAAG,IAAI,CAACA,IAAI,GAAG,IAAI;IAC3C,IAAI,CAACG,KAAK,GAAG,IAAI,CAAC2C,OAAO,EAAEC,MAAM,GAAG,gBAAgB,GAAG,eAAe;EAC1E;EAEAhE,QAAQA,CAAA;IACJ,IAAI,CAACiE,OAAO,EAAE;EAClB;EAEAA,OAAOA,CAAA;IACH,IAAI,CAACC,IAAI,GAAG,IAAIR,qDAAS,CAAC;MACtBS,MAAM,EAAE,IAAIzF,uDAAW,CAAE,IAAI,CAACqF,OAAO,GAAG,IAAI,CAACA,OAAO,CAACI,MAAM,GAAG,EAAE,EAAGR,sDAAU,CAACS,QAAQ,CAAC;MACvFC,QAAQ,EAAE,IAAI3F,uDAAW,CAAE,IAAI,CAACqF,OAAO,GAAG,IAAI,CAACA,OAAO,CAACM,QAAQ,GAAG,EAAE,EAAGV,sDAAU,CAACS,QAAQ;KAC7F,CAAC;EACN;EAEAE,QAAQA,CAAA;IACJ,IAAI,CAAC,IAAI,CAACJ,IAAI,CAACK,KAAK,EAAE;MAClB,OAAO,IAAI,CAACvF,KAAK,CAACwF,OAAO,CAAC,6BAA6B,CAAC;KAC3D,MAAM;MACH,IAAI,CAACT,OAAO,GAAG;QACX,GAAG,IAAI,CAACA,OAAO;QACfI,MAAM,EAAE,IAAI,CAACD,IAAI,CAACO,GAAG,CAAC,QAAQ,CAAC,CAACrE,KAAK;QACrCiE,QAAQ,EAAE,IAAI,CAACH,IAAI,CAACO,GAAG,CAAC,UAAU,CAAC,CAACrE;OACvC;MACD,IAAI,IAAI,CAAC2D,OAAO,CAACC,MAAM,EAAE;QACrB,IAAI,CAAClF,gBAAgB,CAAC4B,aAAa,CAAC,IAAI,CAACqD,OAAO,CAAC,CAC5C5D,SAAS,CAAC;UACPa,IAAI,EAAGC,IAAI,IAAI;YACX,IAAIA,IAAI,EAAE;cACN,IAAI,CAACyD,WAAW,EAAE;;UAE1B;SACH,CAAC;OACT,MAAM;QACH,IAAI,CAAC5F,gBAAgB,CAAC8B,WAAW,CAAC,IAAI,CAACmD,OAAO,CAAC,CAC1C5D,SAAS,CAAC;UACPa,IAAI,EAAGC,IAAI,IAAI;YACX,IAAIA,IAAI,EAAE;cACN,IAAI,CAACyD,WAAW,EAAE;;UAE1B;SACH,CAAC;;;EAGlB;EAEAA,WAAWA,CAAA;IACP,IAAI,CAACb,SAAS,CAACc,KAAK,EAAE;EAC1B;;SA3DSpH,aAAa;;mBAAbA,MAAa,EAAA4E,+DAAA,CAMVyB,qEAAe,GAAAzB,+DAAA,CAAA9D,sEAAA,GAAA8D,+DAAA,CAAAE,iFAAA,GAAAF,+DAAA,CAAAI,kEAAA;AAAA;;QANlBhF,MAAa;EAAAqF,SAAA;EAAAiC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAlC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ1BZ,4DAAA,aAAmM;MAEhJA,oDAAA,GAAS;MAAAA,0DAAA,EAAO;MAC3DA,4DAAA,UAAK;MACuBA,wDAAA,mBAAA+C,+CAAA;QAAA,OAASlC,GAAA,CAAA0B,WAAA,EAAa;MAAA,EAAC;MAC3CvC,4DAAA,kBAA6B;MAAAA,oDAAA,YAAK;MAAAA,0DAAA,EAAW;MAIzDA,4DAAA,cAA2E;MAExDA,oDAAA,cAAM;MAAAA,0DAAA,EAAY;MAC7BA,uDAAA,gBAAyC;MAC7CA,0DAAA,EAAiB;MACjBA,4DAAA,yBAAoD;MACrCA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAY;MAC/BA,uDAAA,gBAA2C;MAC/CA,0DAAA,EAAiB;MAErBA,4DAAA,cAAwD;MACQA,wDAAA,mBAAAiD,gDAAA;QAAA,OAASpC,GAAA,CAAAsB,QAAA,EAAU;MAAA,EAAC;MAC5EnC,oDAAA,iBACJ;MAAAA,0DAAA,EAAS;;;MApBkCA,uDAAA,GAAS;MAATA,+DAAA,CAAAa,GAAA,CAAA5B,KAAA,CAAS;MAOAe,uDAAA,GAAkB;MAAlBA,wDAAA,cAAAa,GAAA,CAAAkB,IAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPvB;AACZ;;;;AAK3C,MACa1G,eAAe;EACxBqB,YAAoB0G,IAAgB,EAAUC,YAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;EAAgB;EAC1E;;;;;EAKAC,WAAWA,CAACC,IAAS;IACjB,IAAIC,CAAC,GAAG,GAAG;IACXA,CAAC,IAAID,IAAI,IAAI,MAAM,GAAG,mBAAmB,GAAG,kBAAkB;IAC9D,IAAIE,OAAO,GAAG,IAAIN,yCAAO,EAAO;IAEhC,IAAI,CAACC,IAAI,CAACd,GAAG,CAAa,GAAG7F,iEAAW,CAACc,cAAc,CAACC,aAAa,GAAGgG,CAAC,EAAE,CAAC,CAC3ExF,SAAS,CAAE0F,IAAQ,IAAI;MACpB,IAAI,CAACL,YAAY,CAACM,WAAW,GAAGD,IAAI,CAACE,KAAK,EAC1CH,OAAO,CAAC5E,IAAI,CAAC;QACT,MAAM,EAAC6E,IAAI,CAACG;QACZ;QACA;OACH,CAAC;IACN,CAAC,CAAC;;IACF,OAAOJ,OAAO,CAACK,YAAY,EAAE;EACjC;EAEA;;;;;EAKArF,WAAWA,CAACmD,OAAiB;IACzB,OAAO,IAAI,CAACwB,IAAI,CAACW,IAAI,CAAW,EAAE,EAAEnC,OAAO,CAAC;EAChD;EAEA;;;;;EAKArD,aAAaA,CAACqD,OAAiB;IAC3B,OAAO,IAAI,CAACwB,IAAI,CAACY,GAAG,CAAW,EAAE,GAAG,GAAG,GAAGpC,OAAO,CAACC,MAAM,EAAED,OAAO,CAAC;EACtE;EAEA;;;;;EAKApD,aAAaA,CAACyF,SAAiB;IAC3B,OAAO,IAAI,CAACb,IAAI,CAACc,MAAM,CAAW,EAAE,GAAG,GAAG,GAAGD,SAAS,CAAC;EAC3D;;SAjDS5I,eAAe;;mBAAfA,MAAe,EAAA2E,sDAAA,CAAA9D,4DAAA,GAAA8D,sDAAA,CAAAE,gEAAA;AAAA;;SAAf7E,MAAe;EAAAiJ,OAAA,EAAfjJ,MAAe,CAAAkJ;AAAA","sources":["./src/app/modules/administracion/clientes/clientes.module.ts","./src/app/modules/administracion/clientes/components/clientes.component.ts","./src/app/modules/administracion/clientes/components/clientes.component.html","./src/app/modules/administracion/clientes/components/save/save.component.ts","./src/app/modules/administracion/clientes/components/save/save.component.html","./src/app/modules/administracion/clientes/service/clientes.service.ts"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ClientesComponent } from './components/clientes.component';\r\nimport { SaveComponent } from './components/save/save.component';\r\nimport { ClientesService } from './service/clientes.service';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ClientesComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [ClientesComponent, SaveComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule,\r\n        MatDialogModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [ClientesService, JedsMenuService, AppAlertService]\r\n})\r\nexport class ClientesModule { }","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ICliente } from '../models/cliente';\r\nimport { ClientesService } from '../service/clientes.service';\r\nimport { debounceTime, distinctUntilChanged, firstValueFrom } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { SaveComponent } from './save/save.component';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'environments/environment';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\n@Component({\r\n    selector: 'app-clientes',\r\n    templateUrl: './clientes.component.html',\r\n    styleUrls: ['./clientes.component.scss']\r\n})\r\nexport class ClientesComponent implements OnInit {\r\n    clientes: ICliente[];\r\n    public dataSource: MatTableDataSource<ICliente> = new MatTableDataSource();\r\n    headers = ['Nombre y Apellido', 'CUIT', 'Condición', 'Teléfono', 'E-mail', 'Cliente asociado', 'Acciones'];\r\n    column_params = ['razonSocial', 'Cuit', 'condicioniva_descripcion', 'telefonoMovil', 'correoElectronico', 'cliente_asociado', 'acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['razonSocial'];\r\n\r\n    env = environment.administracion.view_clientes + '?'\r\n\r\n    search: FormControl = new FormControl('');\r\n\r\n    sortValue: string;\r\n\r\n    constructor(\r\n        private _clientesService: ClientesService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n    ) {\r\n        /**\r\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n         */\r\n        this.funcionesObjeto = [{\r\n            icono: 'edit',\r\n            nombre_boton: \"Editar\",\r\n            functionName: 'editar',\r\n            //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n        },\r\n        {\r\n            icono: 'delete',\r\n            nombre_boton: \"Eliminar\",\r\n            functionName: 'eliminar',\r\n        }\r\n        ];\r\n    }\r\n\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n    ngOnInit(): void {\r\n        this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(750),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n    }\r\n\r\n    /**\r\n * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n * @param event \r\n */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'editar':\r\n                this.updateCliente(event);\r\n                break;\r\n            case 'eliminar':\r\n                this.deleteCliente(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta funcion guarda un item\r\n     */\r\n    saveCliente() {\r\n        this.dialogo\r\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion modifica un item\r\n     * @param event \r\n     */\r\n    updateCliente(event) {\r\n        this.dialogo\r\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\r\n            .afterClosed()\r\n            .subscribe({\r\n                next: () => {\r\n                    this.tabla.filters(this.filtroBusqueda);\r\n                },\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Esta funcion elimina un item\r\n     * @param event \r\n     */\r\n    deleteCliente(event) {\r\n        this.confirm.open({\r\n            title: \"Eliminar rubro \" + event.params.data.descripcion,\r\n            message: \"¿Desea eliminar el rubro: \" + event.params.data.descripcion + \"?\",\r\n            dismissible: false,\r\n            actions: {\r\n                confirm: {\r\n                    show: true,\r\n                    color: 'warn',\r\n                    label: 'Si',\r\n                },\r\n                cancel: {\r\n                    show: true,\r\n                    label: 'No',\r\n                },\r\n            },\r\n        })\r\n            .afterClosed()\r\n            .subscribe(res => {\r\n                if (res === 'confirmed') {\r\n                    this._clientesService.deleteCliente(event.params.data.idrubro).subscribe({\r\n                        next: (data) => {\r\n                            // Manejar la respuesta exitosa\r\n                            this.alert.success(\"Cliente eliminado con éxito.\");\r\n                            if (res) {\r\n                                this.tabla.renderTabla()\r\n                            }\r\n                        },\r\n                        error: (error) => {\r\n                            // Manejar el error\r\n                            console.error('Error en el servicio:', error);\r\n                            this.alert.error(\"Este Cliente no puede eliminarse. Tiene elementos asociados.\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n}","<div class=\"w-full\">\r\n    <!-- Buscador -->\r\n       <!--  <form class=\"bg-white shadow-md w-1/2 px-4 py-4 rounded-lg \">\r\n            <mat-form-field appearance=\"outline\" class=\"w-full\">\r\n                <mat-label class=\"text-gray-700\">Buscar...</mat-label>\r\n                <input matInput [formControl]=\"search\" class=\"text-black w-full\" placeholder=\"Buscar\" autocomplete=\"off\"\r\n                    #buscar>\r\n            </mat-form-field>\r\n        </form> -->\r\n        <div class=\"m-2\">\r\n            <button mat-header-cell mat-button (click)=\"saveCliente()\" #save\r\n            class=\" bg-blue-500 text-white rounded-md\">Create</button>\r\n        </div>\r\n    \r\n\r\n    <div class=\" pr-2 pl-2\">\r\n        <!-- Tabla dinamica -->\r\n        <app-tabla-dinamica class=\"relative bottom-10 sm:bottom-0 table-fixed sm:top-2 z-0 w-full m-0\" [cache]=\"false\"\r\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\"\r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'th'\"\r\n            (functionEmitter)=\"generarAcciones($event)\"\r\n            [FiltersLikes]=\"filtersLike\" >\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { ICliente } from '../../models/cliente';\r\nimport { ClientesService } from '../../service/clientes.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AppAlertService } from 'app/shared/service/app/alert.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'app-save-clientes',\r\n    templateUrl: './save.component.html',\r\n    styleUrls: ['./save.component.scss']\r\n})\r\nexport class SaveComponent implements OnInit {\r\n    columns = ['nombre', 'activo', 'acciones'];\r\n    form: FormGroup;\r\n    cliente: ICliente;\r\n    title: string;\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private _clientesService: ClientesService,\r\n        public alert: AppAlertService,\r\n        public dialogRef: MatDialogRef<SaveComponent>\r\n    ) {\r\n        this.cliente = this.data ? this.data : null;\r\n        this.title = this.cliente?.codigo ? 'Editar cliente' : 'Nuevo cliente';\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.newForm();\r\n    }\r\n\r\n    newForm() {\r\n        this.form = new FormGroup({\r\n            nombre: new FormControl((this.cliente ? this.cliente.nombre : ''), Validators.required),\r\n            apellido: new FormControl((this.cliente ? this.cliente.apellido : ''), Validators.required),\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        if (!this.form.valid) {\r\n            return this.alert.warning('Revise Los Datos Ingresados');\r\n        } else {\r\n            this.cliente = {\r\n                ...this.cliente,\r\n                nombre: this.form.get('nombre').value,\r\n                apellido: this.form.get('apellido').value,\r\n            }\r\n            if (this.cliente.codigo) {\r\n                this._clientesService.updateCliente(this.cliente)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            } else {\r\n                this._clientesService.saveCliente(this.cliente)\r\n                    .subscribe({\r\n                        next: (data) => {\r\n                            if (data) {\r\n                                this.onCloseMenu()\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    onCloseMenu() {\r\n        this.dialogRef.close()\r\n    }\r\n}","<div class=\"fixed inset-0 sm:static max-h-screen sm:inset-auto flex flex-col md:min-w-140 sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden bg-white shadow-sm dark:bg-slate-900\">\r\n    <div class=\"w-full px-4 py-4 bg-primary flex justify-between items-center\">\r\n        <span class=\"text-white font-bold text-lg\">{{title}}</span>\r\n        <div>\r\n            <button mat-icon-button (click)=\"onCloseMenu()\">\r\n                <mat-icon class=\"text-white\">close</mat-icon>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <form class=\"flex flex-col w-full h-full p-4 form-menu\" [formGroup]=\"form\">\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Nombre</mat-label>\r\n            <input matInput formControlName='nombre'>\r\n        </mat-form-field>\r\n        <mat-form-field appearance='outline' class=\"w-full\">\r\n            <mat-label>Apellido</mat-label>\r\n            <input matInput formControlName='apellido'>\r\n        </mat-form-field>\r\n    </form>\r\n    <div class=\"w-full md:flex justify-center pb-4 md:px-4\">\r\n        <button mat-raised-button color='accent' class='rounded-sm' (click)='onSubmit()'>\r\n            Guardar\r\n        </button>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ICliente } from '../models/cliente';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Response } from '@shared/models/response-with-token';\r\n\r\n@Injectable()\r\nexport class ClientesService {\r\n    constructor(private http: HttpClient, private _authService:AuthService) { }\r\n    /**\r\n     * Funcion en el servicio\r\n     * - Esta funcion retorna los Rubros.\r\n     * @returns Rubros\r\n     */\r\n    getClientes(sort?:any): Observable<Response[]> {\r\n        let f = '?';\r\n        f += sort == 'desc' ? 'sort=-descripcion' : 'sort=descripcion';\r\n        let subject = new Subject<any>();\r\n\r\n        this.http.get<Response[]>(`${environment.administracion.view_clientes}${f}`)\r\n        .subscribe((resp:any) => {\r\n            this._authService.accessToken = resp.token,\r\n            subject.next({\r\n                'list':resp.result,\r\n                // 'totalPages': resp.headers.get('x-pagination-page-count'),\r\n                // 'totalCount': resp.headers.get('x-pagination-total-count')\r\n            })\r\n        });\r\n        return subject.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Funcion en el Servicio \r\n     * @param cliente \r\n     * @returns Crea un item nuevo\r\n     */\r\n    saveCliente(cliente: ICliente): Observable<ICliente> {\r\n        return this.http.post<ICliente>(``, cliente);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param cliente\r\n     * @returns Item actualizado actualizado\r\n     */\r\n    updateCliente(cliente: ICliente): Observable<ICliente> {\r\n        return this.http.put<ICliente>(`` + '/' + cliente.codigo, cliente);\r\n    }\r\n\r\n    /**\r\n     * Funcion en el servicio\r\n     * @param idcliente \r\n     * @returns Elimina un item\r\n     */\r\n    deleteCliente(idcliente: number): Observable<ICliente> {\r\n        return this.http.delete<ICliente>(`` + '/' + idcliente);\r\n    }\r\n}"],"names":["RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","JedsMenuService","MatIconModule","AppAlertService","MatTooltipModule","ClientesComponent","SaveComponent","ClientesService","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","routes","path","component","ClientesModule","imports","forChild","declarations","i1","exports","debounceTime","distinctUntilChanged","MatTableDataSource","FormControl","TablaDinamicaComponent","environment","constructor","_clientesService","confirm","alert","dialogo","_searchService","dataSource","headers","column_params","funcionesObjeto","filtroBusqueda","filtersLike","env","administracion","view_clientes","search","icono","nombre_boton","functionName","ngOnInit","getSearchText","pipe","subscribe","value","tabla","filters","generarAcciones","event","name","updateCliente","deleteCliente","saveCliente","open","panelClass","afterClosed","next","data","params","autoFocus","title","descripcion","message","dismissible","actions","show","color","label","cancel","res","idrubro","success","renderTabla","error","console","i0","ɵɵdirectiveInject","i2","FuseConfirmationService","i3","i4","MatDialog","i5","SearchService","selectors","viewQuery","ClientesComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","ClientesComponent_Template_button_click_2_listener","ɵɵtext","ɵɵelementEnd","ClientesComponent_Template_app_tabla_dinamica_functionEmitter_6_listener","$event","ɵɵadvance","ɵɵproperty","FormGroup","Validators","MAT_DIALOG_DATA","dialogRef","columns","cliente","codigo","newForm","form","nombre","required","apellido","onSubmit","valid","warning","get","onCloseMenu","close","MatDialogRef","decls","vars","consts","template","SaveComponent_Template","SaveComponent_Template_button_click_5_listener","ɵɵelement","SaveComponent_Template_button_click_18_listener","ɵɵtextInterpolate","Subject","http","_authService","getClientes","sort","f","subject","resp","accessToken","token","result","asObservable","post","put","idcliente","delete","ɵɵinject","HttpClient","AuthService","factory","ɵfac"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}