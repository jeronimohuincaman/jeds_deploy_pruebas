{"version":3,"file":"src_app_modules_administracion_clientes_clientes_module_ts.js","mappings":"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","sources":["./src/app/modules/administracion/clientes/clientes.module.ts","./src/app/modules/administracion/clientes/components/clientes.component.ts","./src/app/modules/administracion/clientes/components/clientes.component.html","./src/app/modules/administracion/clientes/components/filter-menu/filter-menu.component.ts","./src/app/modules/administracion/clientes/components/filter-menu/filter-menu.component.html"],"sourcesContent":["import { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FuseAlertComponent } from '@fuse/components/alert';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ClientesComponent } from './components/clientes.component';\nimport { SaveComponent } from './components/save/save.component';\nimport { ClientesService } from './service/clientes.service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSortModule } from '@angular/material/sort';\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FilterMenuComponent } from './components/filter-menu/filter-menu.component';\nconst routes: Routes = [\n    {\n        path: '',\n        component: ClientesComponent\n    }\n];\n@NgModule({\n    declarations: [ClientesComponent, SaveComponent, FilterMenuComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        MatTableModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatIconModule,\n        FuseAlertComponent,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        MatToolbarModule,\n        MatCheckboxModule,\n        MatSortModule,\n        TablaDinamicaModule,\n        MatDialogModule\n    ],\n    exports: [RouterModule],\n    providers: [ClientesService, JedsMenuService, AppAlertService]\n})\nexport class ClientesModule { }","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { ICliente } from '../models/cliente';\nimport { ClientesService } from '../service/clientes.service';\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { SaveComponent } from './save/save.component';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { AppAlertService } from '@shared/service/app/alert.service';\nimport { FormControl } from '@angular/forms';\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from 'environments/environment';\nimport { SearchService } from 'app/layout/common/search/search.service';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { MatButton } from '@angular/material/button';\nimport { FilterMenuComponent } from './filter-menu/filter-menu.component';\nimport { IFilter } from '@shared/models/filter';\nimport { Router } from '@angular/router';\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\n@Component({\n    selector: 'app-clientes',\n    templateUrl: './clientes.component.html',\n    styleUrls: ['./clientes.component.scss']\n})\nexport class ClientesComponent implements OnInit, OnDestroy {\n    clientes: ICliente[];\n    public dataSource: MatTableDataSource<ICliente> = new MatTableDataSource();\n    headers: string[];\n    column_params: string[];\n    funcionesObjeto = null;\n    accionesObjeto = null;\n    showMenu: any;\n    filtroBusqueda: string = '';\n    filtersLike = ['razonSocial', 'correoElectronico'];\n    filter: IFilter = {\n        razonSocial: '',\n        Cuit: '',\n        localidad_descripcion: ''\n    };\n    @Input() extraParams = '';\n    @Output() parametrosActualizados = new EventEmitter<any>();\n    env = environment.administracion.view_clientes + '?';\n    search: FormControl = new FormControl('');\n    sortValue: string;\n    FilterEventSub$: Subscription;\n    SearchTextSub$: Subscription;\n    color_primario: string;\n    color_secundario: string;\n    default_color: string = 'border-primary text-primary';\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    constructor(\n        private _clientesService: ClientesService,\n        private _searchService: SearchService,\n        private _menuService: JedsMenuService,\n        private confirm: FuseConfirmationService,\n        private alert: AppAlertService,\n        private dialogo: MatDialog,\n        private router: Router,\n        public _headerTextService: HeaderTextService,\n        private _empresaService: EmpresaService,\n\n    ) {\n        this._headerTextService.setTitulo(this.router);\n        /**\n         * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\n         */\n        this.funcionesObjeto = [\n            {\n                iconoAccion: (cliente: ICliente) => '',\n                iconoAccionado: (cliente: ICliente) => '',\n                iconoDeshabilitado: (cliente: ICliente) => '',\n                visible: (cliente: ICliente) => false\n            }\n        ];\n\n        this.showMenu = (cliente: ICliente) => true;\n\n        this.accionesObjeto = [\n            {\n                nombre_boton: \"Ver\",\n                functionName: 'ver',\n                iconoAccion: (cliente: ICliente) => 'jedstion:ver',\n                iconoAccionado: (cliente: ICliente) => '',\n                iconoDeshabilitado: (cliente: ICliente) => '',\n                visible: (cliente: ICliente) => true\n            },\n            {\n                nombre_boton: \"Editar\",\n                functionName: 'editar',\n                iconoAccion: (cliente: ICliente) => 'jedstion:editar',\n                iconoAccionado: (cliente: ICliente) => '',\n                iconoDeshabilitado: (cliente: ICliente) => '',\n                visible: (cliente: ICliente) => true\n            },\n            {\n                nombre_boton: \"Eliminar\",\n                functionName: 'eliminar',\n                iconoAccion: (cliente: ICliente) => 'jedstion:eliminar',\n                iconoAccionado: (cliente: ICliente) => '',\n                iconoDeshabilitado: (cliente: ICliente) => '',\n                visible: (cliente: ICliente) => true\n            },\n        ]\n\n        this._empresaService.tieneClientesAsociados().subscribe(ClientesAsociados => {\n            this.headers = ['Nombre y Apellido / Razón Social', 'CUIT', 'Condición', 'Teléfono', 'Localidad', 'E-mail', ClientesAsociados ? 'Cliente Asociado' : 'Contacto de Referencia', 'Acciones'];\n            this.column_params = ['razonSocial', 'Cuit', 'condicioniva_descripcion', 'telefonoParticular', 'localidad_descripcion', 'correoElectronico', ClientesAsociados ? 'cliente_asociado' : 'contacto_referencia', 'acciones'];\n        });\n    }\n\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\n\n    ngOnInit(): void {\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\n            debounceTime(250),\n            distinctUntilChanged()\n        )\n            .subscribe(value => {\n                this.filtroBusqueda = value;\n                this.tabla.filters(this.filtroBusqueda);\n            });\n\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\n            this.onFilterMenu(this._searchService.getFilterOrigin())\n        });\n        // Subscribe to empresa data\n        this._empresaService.empresa$\n        .pipe(takeUntil(this._unsubscribeAll))\n        .subscribe(empresa => {\n            this.color_primario = empresa.color_primario;\n            this.color_secundario = empresa.color_secundario;\n        });\n\n        // Load empresa data\n        this._empresaService.getEmpresa();\n    }\n\n    /**\n    * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\n    * @param origin \n    */\n    onFilterMenu(origin: MatButton) {\n        this._menuService\n            .open(FilterMenuComponent, origin._elementRef, {\n                filter: this.filter,\n            })\n            .afterClosed()\n            .subscribe({\n                next: filter => {\n                    if (filter) {\n                        this.filter = filter;\n                        this.extraParams = ''; \n                        if (this.filter?.razonSocial !== '') {\n                            this.extraParams += \"filter[razonSocial][like]=\" + this.filter.razonSocial + '&';\n                        }\n                        if (this.filter?.Cuit !== '') {\n                            this.extraParams += \"filter[Cuit][like]=\" + this.filter.Cuit + '&';\n                        }\n                        if (this.filter?.localidad_descripcion !== '') {\n                            this.extraParams += \"filter[localidad_descripcion][like]=\" + this.filter.localidad_descripcion + '&';\n                        }\n                        if (this.filter?.razonSocial === '' && this.filter?.Cuit === '' && this.filter?.localidad_descripcion === '') {\n                            this.extraParams = ''; // Si se selecciona 'Todos' en ambos, reinicia todos los filtros\n                        }\n                        this.tabla.filters(this.filtroBusqueda);\n                        // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\n                    }\n                },\n            });\n    }\n\n    /**\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\n    * @param event \n    */\n    generarAcciones(event: { name: string, params: any }) {\n        switch (event.name) {\n            case 'ver':\n                this.verCliente(event);\n                break;\n            case 'editar':\n                this.updateCliente(event);\n                break;\n            case 'eliminar':\n                this.deleteCliente(event);\n                break;\n        }\n    }\n\n    /**\n     * Esta funcion guarda un item\n     */\n    saveCliente() {\n        this.dialogo\n            .open(SaveComponent, { panelClass: 'ayuda-dialog' })\n            .componentInstance.creadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.tabla.filters(this.filtroBusqueda);\n                    this.alert.success(\"Cliente creado con éxito.\");\n                },\n            });\n    }\n\n    /**\n     * Esta funcion modifica un item\n     * @param event \n     */\n    updateCliente(event) {\n        this.dialogo\n            .open(SaveComponent, { data: event.params.data, panelClass: 'my-dialog', autoFocus: false })\n            .componentInstance.editadoExitosamente\n            .subscribe({\n                next: () => {\n                    this.tabla.filters(this.filtroBusqueda);\n                    this.alert.success(\"Cliente editado con éxito.\");\n                },\n            });\n    }\n\n    /**\n     * Esta funcion es para ver un item\n     * @param event \n     */\n    verCliente(event) {\n        this.dialogo\n            .open(SaveComponent, { data: { ...event.params.data, visualizar: true }, panelClass: 'my-dialog', autoFocus: false, disableClose: true })\n            .afterClosed()\n            .subscribe({\n                next: () => {\n                    // No se manda nada aqui porque es para la visualizacion del cliente solamente\n                },\n            });\n    }    \n\n    /**\n     * Esta funcion elimina un item\n     * @param event \n     */\n    deleteCliente(event) {\n        this.confirm.open({\n            title: \"Eliminar Cliente \" + event.params.data.razonSocial,\n            message: \"¿Desea eliminar el cliente: \" + event.params.data.razonSocial + \"?\",\n            dismissible: false,\n            actions: {\n                confirm: {\n                    show: true,\n                    color: 'warn',\n                    label: 'Si',\n                },\n                cancel: {\n                    show: true,\n                    label: 'No',\n                },\n            },\n        })\n            .afterClosed()\n            .subscribe(res => {\n                if (res === 'confirmed') {\n                    this._clientesService.deleteCliente(event.params.data.codigo).subscribe({\n                        next: (data) => {\n                            // Manejar la respuesta exitosa\n                            this.alert.success(\"Cliente eliminado con éxito.\");\n                            if (res) {\n                                this.tabla.renderTabla()\n                            }\n                        },\n                        error: (error) => {\n                            // Manejar el error\n                            console.error('Error en el servicio:', error);\n                            this.alert.warning(\"Este Cliente no puede eliminarse. Tiene elementos asociados.\");\n                        }\n                    });\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        this._searchService.unsubscribe()\n    }\n}","<div class=\"w-full flex flex-col relative \">\n    <div class=\"mb-12 mt-6\">\n        <!-- Contenedor del botón -->\n        <div class=\"absolute right-10\">\n            <button mat-flat-button (click)='saveCliente()' #save [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || '' \"\n                [style.color]=\"color_primario || '' \" class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\">\n                <div class=\"flex item-center\">\n                    <!-- SVG con fill=\"currentColor\" -->\n                    <svg id=\"note_plus\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            d=\"M15.8333 10.8333C16.4167 10.8333 16.975 10.9417 17.5 11.125V7.5L12.5 2.5H4.16667C3.24167 2.5 2.5 3.24167 2.5 4.16667V15.8333C2.5 16.7583 3.25 17.5 4.16667 17.5H11.125C10.9417 16.975 10.8333 16.4167 10.8333 15.8333C10.8333 13.075 13.075 10.8333 15.8333 10.8333ZM11.6667 3.75L16.25 8.33333H11.6667V3.75ZM19.1667 15V16.6667H16.6667V19.1667H15V16.6667H12.5V15H15V12.5H16.6667V15H19.1667Z\" />\n                    </svg>\n                    <span class=\"ml-2 text-lg mt-0.5\">Agregar Cliente</span>\n                </div>\n            </button>\n        </div>\n    </div>\n    <div class=\"pr-2 pl-2\">\n        <!-- Tabla dinámica -->\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" [cache]=\"false\"\n            [columnsNames]=\"headers\" [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\"\n            [functions]=\"funcionesObjeto\" [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\"\n            [acciones]=\"accionesObjeto\" [showMenu]=\"showMenu\">\n        </app-tabla-dinamica>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { fuseAnimations } from '@fuse/animations';\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\nimport { ICliente } from '../../models/cliente';\nimport { firstValueFrom, map, Observable, startWith, Subject, takeUntil } from 'rxjs';\nimport { ClientesService } from '../../service/clientes.service';\nimport { ILocalidad } from '@shared/models/localidad';\nimport { EmpresaService } from '@shared/service/app/empresa.service';\n\n@Component({\n  selector: 'app-filter-menu-clientes',\n  templateUrl: './filter-menu.component.html',\n  styleUrls: ['./filter-menu.component.scss'],\n  animations: fuseAnimations\n})\nexport class FilterMenuComponent implements OnInit {\n  public formFilters: FormGroup;\n  clientes: ICliente[] = [];\n  localidades: ILocalidad[] = [];\n  filteredClientes: Observable<ICliente[]>;\n  filteredCuit: Observable<ICliente[]>;\n  filteredLocalidades: Observable<ILocalidad[]>;\n  color_primario: string;\n  color_secundario: string;\n  default_color: string = 'bg-primary';\n  private _unsubscribeAll: Subject<any> = new Subject<any>();\n  constructor(\n    @Inject('MENU_DATA') public data: any, \n    private _menuService: JedsMenuService,\n    private _clientesService: ClientesService,\n    private _empresaService: EmpresaService\n  ) { }\n\n  ngOnInit(): void {\n    /**\n    * Formulario de filtros\n    */\n    this.formFilters = new FormGroup({\n      razonSocial: new FormControl(''),\n      Cuit: new FormControl(''),\n      localidad_descripcion: new FormControl('')\n    });\n    this.getClientes();\n    this.getLocalidades();\n    // Subscribe to empresa data\n    this._empresaService.empresa$\n    .pipe(takeUntil(this._unsubscribeAll))\n    .subscribe(empresa => {\n        this.color_primario = empresa.color_primario;\n        this.color_secundario = empresa.color_secundario;\n    });\n\n    // Load empresa data\n    this._empresaService.getEmpresa();\n    this.formFilters.patchValue(this.data.filter);\n  }\n\n  resetFilters() {\n    this.formFilters.reset({\n      razonSocial: '',\n      Cuit: '',\n      localidad_descripcion: ''\n    });\n  }\n\n  /**\n    * Esta funcion es para listar los clientes en el filtro de grilla.\n    */\n  async getClientes() {\n    const Clientes: any = await firstValueFrom(this._clientesService.getClientes());\n    this.clientes = Clientes.list;\n    this.filteredClientes = this.formFilters.controls['razonSocial'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterCliente(value))\n    )\n    this.filteredCuit = this.formFilters.controls['Cuit'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterCliente(value))\n    )\n  }\n\n  /**\n    * Esta funcion es para filtrar los clientes según el input que se haya ingresado en el input de razon social y cuit.\n    * @param value \n    * @returns \n    */\n  private _filterCliente(value: string) {\n    const filterValue = value.toLowerCase();\n    return this.clientes.filter(cliente =>\n      cliente.razonSocial.toLowerCase().includes(filterValue) ||\n      cliente.Cuit.toLowerCase().includes(filterValue)\n    );\n  }\n\n  /**\n    * Esta funcion es para listar las localidades en el filtro de grilla.\n    */\n  async getLocalidades() {\n    const Localidades = await firstValueFrom(this._clientesService.getLocalidades())\n    this.localidades = Localidades.list\n    this.filteredLocalidades = this.formFilters.controls['localidad_descripcion'].valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterLocalidad(value))\n    )\n  }\n\n  /**\n    * Esta funcion es para filtrar las localidades según el input que se haya ingresado en el input de localidad_descripcion.\n    * @param value \n    * @returns \n    */\n  private _filterLocalidad(value: string) {\n    const filterValue = value.toLowerCase();\n    return this.localidades.filter(localidad =>\n      localidad.descripcion.toLowerCase().includes(filterValue) \n    );\n  }\n\n  onCloseMenu(data: any = null) {\n    this._menuService.close(data);\n  }\n}","<div class=\"fixed filtroJeds inset-0 sm:static max-h-screen sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-y-auto overflow-hidden shadow-lg bg-white dark:bg-slate-900\"\n    [@expandCollapse]=\"'expanded'\">\n    <div [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n        class=\"w-full px-4 py-4 flex justify-between items-center\">\n        <span class=\"text-white font-bold text-lg pl-2\">Filtros</span>\n        <div>\n            <button mat-icon-button class=\"md:hidden\" (click)=\"resetFilters()\">\n                <mat-icon class=\"text-white\">refresh</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"onCloseMenu()\">\n                <mat-icon class=\"text-white\">close</mat-icon>\n            </button>\n        </div>\n    </div>\n    <form class=\"flex flex-col w-full h-full p-6 form-menu\" [formGroup]=\"formFilters\">\n        \n        <!-- Razon Social -->\n        <span class=\"font-semibold text-gray-600 text-base\">Razón Social</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <input type=\"text\" placeholder=\"Seleccione Razón Social\" matInput [matAutocomplete]=\"autoCliente\" formControlName=\"razonSocial\">\n            <button mat-icon-button matSuffix>\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n            <mat-autocomplete #autoCliente=\"matAutocomplete\">\n                <mat-option *ngFor=\"let cliente of filteredClientes | async\" [value]=\"cliente.razonSocial\">\n                    {{cliente.razonSocial}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n\n        <!-- Cuit -->\n        <span class=\"font-semibold text-gray-600 text-base\">CUIT</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <input type=\"text\" placeholder=\"Seleccione CUIT\" matInput [matAutocomplete]=\"autoCuit\" formControlName=\"Cuit\">\n            <button mat-icon-button matSuffix>\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n            <mat-autocomplete #autoCuit=\"matAutocomplete\">\n                <mat-option *ngFor=\"let cliente of filteredCuit | async\" [value]=\"cliente.Cuit\">\n                    {{cliente.Cuit}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n\n        <!-- Localidad -->\n        <span class=\"font-semibold text-gray-600 text-base\">Localidad</span>\n        <mat-form-field class=\"fuse-mat-dense fuse-mat-no-subscript fuse-mat-rounded-lg min-w-64 mt-2\">\n            <input type=\"text\" placeholder=\"Seleccione Localidad\" matInput [matAutocomplete]=\"autoLocalidad\" formControlName=\"localidad_descripcion\">\n            <button mat-icon-button matSuffix>\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n            <mat-autocomplete #autoLocalidad=\"matAutocomplete\">\n                <mat-option *ngFor=\"let localidad of filteredLocalidades | async\" [value]=\"localidad.descripcion\">\n                    {{localidad.descripcion}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n\n    </form>\n    <div class=\"w-full md:flex md:justify-between md:pb-4 md:px-4\">\n        <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.color]=\"color_primario || '' \" \n            [style.border]=\"color_primario || '' \"\n            class=\"w-full !border border-solid rounded-none md:w-26 md:rounded-lg hidden md:block\" (click)=\"resetFilters()\">\n            <span class=\"font-medium text-base\">Limpiar</span>\n        </button>\n        <button mat-raised-button [class]=\"color_primario ? '' : default_color\" [style.background-color]=\"color_primario || '' \"\n            class=\"w-full rounded-none md:w-26 md:rounded-lg py-8 md:py-0\"\n            (click)=\"onCloseMenu(formFilters.getRawValue())\">\n            <span class=\"text-white font-bold\">Filtrar</span>\n        </button>\n    </div>\n</div>"],"names":["RouterModule","CommonModule","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","JedsMenuService","MatIconModule","AppAlertService","MatTooltipModule","ClientesComponent","SaveComponent","ClientesService","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDialogModule","FilterMenuComponent","routes","path","component","ClientesModule","imports","forChild","declarations","i1","exports","EventEmitter","Subject","debounceTime","distinctUntilChanged","takeUntil","MatTableDataSource","FormControl","TablaDinamicaComponent","environment","constructor","_clientesService","_searchService","_menuService","confirm","alert","dialogo","router","_headerTextService","_empresaService","dataSource","funcionesObjeto","accionesObjeto","filtroBusqueda","filtersLike","filter","razonSocial","Cuit","localidad_descripcion","extraParams","parametrosActualizados","env","administracion","view_clientes","search","default_color","_unsubscribeAll","setTitulo","iconoAccion","cliente","iconoAccionado","iconoDeshabilitado","visible","showMenu","nombre_boton","functionName","tieneClientesAsociados","subscribe","ClientesAsociados","headers","column_params","ngOnInit","SearchTextSub$","getSearchText","pipe","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","empresa$","empresa","color_primario","color_secundario","getEmpresa","origin","open","_elementRef","afterClosed","next","generarAcciones","name","verCliente","updateCliente","deleteCliente","saveCliente","panelClass","componentInstance","creadoExitosamente","success","data","params","autoFocus","editadoExitosamente","visualizar","disableClose","title","message","dismissible","actions","show","color","label","cancel","res","codigo","renderTabla","error","console","warning","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i2","SearchService","i3","i4","FuseConfirmationService","i5","i6","MatDialog","i7","Router","i8","HeaderTextService","i9","EmpresaService","selectors","viewQuery","ClientesComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","ClientesComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","ClientesComponent_Template_app_tabla_dinamica_functionEmitter_11_listener","$event","ɵɵadvance","ɵɵclassMap","ɵɵstyleProp","ɵɵproperty","FormGroup","fuseAnimations","firstValueFrom","map","startWith","cliente_r6","ɵɵtextInterpolate1","cliente_r7","localidad_r8","descripcion","clientes","localidades","formFilters","getClientes","getLocalidades","patchValue","resetFilters","reset","_this","_asyncToGenerator","Clientes","list","filteredClientes","controls","valueChanges","_filterCliente","filteredCuit","filterValue","toLowerCase","includes","_this2","Localidades","filteredLocalidades","_filterLocalidad","localidad","onCloseMenu","close","decls","vars","consts","template","FilterMenuComponent_Template","FilterMenuComponent_Template_button_click_5_listener","FilterMenuComponent_Template_button_click_8_listener","ɵɵtemplate","FilterMenuComponent_mat_option_21_Template","FilterMenuComponent_mat_option_32_Template","FilterMenuComponent_mat_option_43_Template","FilterMenuComponent_Template_button_click_46_listener","FilterMenuComponent_Template_button_click_49_listener","getRawValue","_r0","ɵɵpipeBind1","_r2","_r4"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}