{"version":3,"file":"src_app_modules_seguridad_usuarios_usuarios_module_ts.js","mappings":"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","sources":["./src/app/modules/seguridad/usuarios/components/usuarios.component.ts","./src/app/modules/seguridad/usuarios/components/usuarios.component.html","./src/app/modules/seguridad/usuarios/service/usuarios.service.ts","./src/app/modules/seguridad/usuarios/usuarios.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { UsuariosService } from '../service/usuarios.service';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n\r\n@Component({\r\n    selector: 'app-usuarios',\r\n    templateUrl: './usuarios.component.html',\r\n    styleUrls: ['./usuarios.component.scss']\r\n})\r\nexport class UsuariosComponent implements OnInit, OnDestroy {\r\n    usuarios: IUsuario;\r\n    public dataSource: MatTableDataSource<IUsuario> = new MatTableDataSource();\r\n    column_params = ['nick', 'nombre', 'apellido', 'email', 'acciones']\r\n    headers = ['Usuario', 'Nombre', 'Apellido', 'Mail', ''];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick', 'email'];\r\n    filter: IFilter = {\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.login.view_usuarios + '?';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary' && 'text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _usuariosService: UsuariosService,\r\n        private _empresaService: EmpresaService,\r\n        private _menuService: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            // {\r\n            //     icono: 'edit',\r\n            //     nombre_boton: \"Editar\",\r\n            //     functionName: 'editar',\r\n            //     //functionParams: 'id' // vacio o parametros, se manda desde el hijo el $event.data.[param]\r\n            // },\r\n            {\r\n                icono: 'person_pin',\r\n                nombre_boton: \"Credencial\",\r\n                functionName: 'credencial',\r\n            },\r\n            // {\r\n            //     icono: 'vpn_key',\r\n            //     nombre_boton: \"Rol\",\r\n            //     functionName: 'asignar_rol'\r\n            // }\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n    * @param origin \r\n    */\r\n    onFilterMenu(origin: MatButton) {\r\n        // this._menuService\r\n        //     .open(FilterMenuComponent, origin._elementRef, {\r\n        //         filter: this.filter,\r\n        //     })\r\n        //     .afterClosed()\r\n        //     .subscribe({\r\n        //         next: filter => {\r\n        //             if (filter) {\r\n        //                 this.filter = filter;\r\n        //                 this.extraParams = this.filter.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\r\n        //                 this.extraParams = this.filter.tipo != -1 ? \"filter[tipo]=\" + this.filter.tipo : '';\r\n        //                 this.tabla.filters(this.filtroBusqueda);\r\n        //                 // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n        //             }\r\n        //         },\r\n        //     });\r\n    }\r\n    \r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'credencial':\r\n                this.credencialUsuario(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion en el componente\r\n    * - Esta funcion abre el modal de la Credencial del Usuario.\r\n    * @param documentRef\r\n    * @param usuario\r\n    */\r\n    credencialUsuario(event) {\r\n        const idUsuario = event.params.data.codigo;\r\n        this._usuariosService.credencialUsuario(idUsuario).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank'); \r\n                    }\r\n                } else {\r\n                    this.alert.error('Exiten Datos Nulos.')\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                this.alert.error('Exiten Datos Nulos.')\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n    \r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\" \r\n            [cache]=\"false\"\r\n            [columnsNames]=\"headers\" \r\n            [renderType]=\"'client'\" \r\n            [columnsParams]=\"column_params\" \r\n            [endpoint]=\"env\"\r\n            [functions]=\"funcionesObjeto\" \r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" \r\n            [FiltersLikes]=\"filtersLike\" \r\n            [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IUsuarioResponse } from '../models/usuario';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Injectable()\r\nexport class UsuariosService {\r\n    constructor(\r\n        private http: HttpClient, \r\n        private _authService: AuthService\r\n    ) {}\r\n\r\n    /**\r\n     * \r\n     * @param idusuario\r\n     * @returns \r\n     */\r\n    credencialUsuario(idusuario: number): Observable<IUsuarioResponse> {\r\n        return this.http.get<IUsuarioResponse>(`${environment.login.credencial_usuario}` + idusuario);\r\n    }\r\n    \r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { UsuariosService } from './service/usuarios.service';\r\nimport { UsuariosComponent } from './components/usuarios.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UsuariosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [UsuariosComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [UsuariosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class UsuariosModule { }"],"names":["EventEmitter","Subject","debounceTime","distinctUntilChanged","takeUntil","MatTableDataSource","FormControl","environment","TablaDinamicaComponent","UsuariosComponent","constructor","_usuariosService","_empresaService","_menuService","confirm","alert","dialogo","_searchService","router","_headerTextService","pwaService","dataSource","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","filter","extraParams","parametrosActualizados","env","login","view_usuarios","search","default_color","_unsubscribeAll","setTitulo","icono","nombre_boton","functionName","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","generarAcciones","name","credencialUsuario","idUsuario","params","data","codigo","success","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","open","error","console","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i1","UsuariosService","i2","EmpresaService","i3","JedsMenuService","i4","FuseConfirmationService","i5","AppAlertService","i6","MatDialog","i7","SearchService","i8","Router","i9","HeaderTextService","i10","PwaService","selectors","viewQuery","UsuariosComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","UsuariosComponent_Template_app_tabla_dinamica_functionEmitter_2_listener","$event","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","http","_authService","idusuario","get","credencial_usuario","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","DatePipe","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDatepickerModule","routes","component","UsuariosModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}