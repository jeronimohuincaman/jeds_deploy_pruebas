{"version":3,"file":"src_app_modules_seguridad_usuarios_usuarios_module_ts.js","mappings":"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","sources":["./src/app/modules/seguridad/usuarios/components/usuarios.component.ts","./src/app/modules/seguridad/usuarios/components/usuarios.component.html","./src/app/modules/seguridad/usuarios/service/usuarios.service.ts","./src/app/modules/seguridad/usuarios/usuarios.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Subject, Subscription, debounceTime, distinctUntilChanged, firstValueFrom, takeUntil } from 'rxjs';\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { MatButton } from '@angular/material/button';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { IFilter } from '@shared/models/filter';\r\nimport { environment } from 'environments/environment';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SearchService } from 'app/layout/common/search/search.service';\r\nimport { TablaDinamicaComponent } from '@shared/components/tabla-dinamica/tabla-dinamica.component';\r\nimport { HeaderTextService } from '@shared/components/header-text/header-text.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmpresaService } from '@shared/service/app/empresa.service';\r\nimport { UsuariosService } from '../service/usuarios.service';\r\nimport { IUsuario } from '@core/user/user.types';\r\nimport { PwaService } from '@shared/service/app/pwa.service';\r\n\r\n@Component({\r\n    selector: 'app-usuarios',\r\n    templateUrl: './usuarios.component.html',\r\n    styleUrls: ['./usuarios.component.scss']\r\n})\r\nexport class UsuariosComponent implements OnInit, OnDestroy {\r\n    usuarios: IUsuario;\r\n    selectedUsuarios: any[] = [];\r\n    public dataSource: MatTableDataSource<IUsuario> = new MatTableDataSource();\r\n    column_params = ['seleccion', 'nick', 'nombre', 'apellido', 'email', 'acciones']\r\n    headers = ['', 'Usuario', 'Nombre', 'Apellido', 'Mail', 'Acciones'];\r\n    funcionesObjeto = null;\r\n    filtroBusqueda: string = '';\r\n    filtersLike = ['nick', 'email'];\r\n    filter: IFilter = {\r\n    };\r\n    @Input() extraParams = '';\r\n    @Output() parametrosActualizados = new EventEmitter<any>();\r\n    env = environment.login.view_usuarios + '?';\r\n    search: FormControl = new FormControl('');\r\n    sortValue: string;\r\n    FilterEventSub$: Subscription;\r\n    SearchTextSub$: Subscription;\r\n    color_primario: string;\r\n    color_secundario: string;\r\n    default_color: string = 'border-primary text-primary';\r\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\r\n\r\n    constructor(\r\n        private _usuariosService: UsuariosService,\r\n        private _empresaService: EmpresaService,\r\n        private _menuService: JedsMenuService,\r\n        private confirm: FuseConfirmationService,\r\n        private alert: AppAlertService,\r\n        private dialogo: MatDialog,\r\n        private _searchService: SearchService,\r\n        private router: Router,\r\n        public _headerTextService: HeaderTextService,\r\n        private pwaService: PwaService\r\n    ) {\r\n        this._headerTextService.setTitulo(this.router);\r\n\r\n        /**\r\n        * Aca se declaran los botones que iran en la grilla sobre el apartado de acciones.\r\n        */\r\n        this.funcionesObjeto = [\r\n            {\r\n                nombre_boton: \"Credencial\",\r\n                functionName: 'credencial',\r\n                iconoAccion: (usuario: IUsuario) => 'jedstion:credencial_usuario',\r\n                iconoAccionado: (usuario: IUsuario) => '',\r\n                iconoDeshabilitado: (usuario: IUsuario) => '',\r\n            }\r\n        ];\r\n    }\r\n    @ViewChild(TablaDinamicaComponent) tabla: TablaDinamicaComponent;\r\n\r\n\r\n    ngOnInit(): void {\r\n        // Subscribe to empresa data\r\n        this._empresaService.empresa$\r\n            .pipe(takeUntil(this._unsubscribeAll))\r\n            .subscribe(empresa => {\r\n                this.color_primario = empresa.color_primario;\r\n                this.color_secundario = empresa.color_secundario;\r\n            });\r\n        \r\n        // Load empresa data\r\n        this._empresaService.getEmpresa();\r\n        this.SearchTextSub$ = this._searchService.getSearchText().pipe( //Se obtienen los valores que coinciden con lo ingresado en la barra de busqueda\r\n            debounceTime(250),\r\n            distinctUntilChanged()\r\n        )\r\n            .subscribe(value => {\r\n                this.filtroBusqueda = value;\r\n                this.tabla.filters(this.filtroBusqueda);\r\n            });\r\n\r\n        this.FilterEventSub$ = this._searchService.getFilterEvent().subscribe(event => {\r\n            this.onFilterMenu(this._searchService.getFilterOrigin())\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Esta funcion se encarga de levantar los datos que se van a filtrar en el componente general del filtro\r\n    * @param origin \r\n    */\r\n    onFilterMenu(origin: MatButton) {\r\n        // this._menuService\r\n        //     .open(FilterMenuComponent, origin._elementRef, {\r\n        //         filter: this.filter,\r\n        //     })\r\n        //     .afterClosed()\r\n        //     .subscribe({\r\n        //         next: filter => {\r\n        //             if (filter) {\r\n        //                 this.filter = filter;\r\n        //                 this.extraParams = this.filter.activo != -1 ? \"filter[activo]=\" + this.filter.activo : '';\r\n        //                 this.extraParams = this.filter.tipo != -1 ? \"filter[tipo]=\" + this.filter.tipo : '';\r\n        //                 this.tabla.filters(this.filtroBusqueda);\r\n        //                 // this._searchService.getSearchInput().setValue(this._tabsServices.getFiltroBuscadorPedido());\r\n        //             }\r\n        //         },\r\n        //     });\r\n    }\r\n    \r\n\r\n    /**\r\n    * Esta es la funcion que se encarga de la columna acciones dentro de la grilla dinamica\r\n    * @param event \r\n    */\r\n    generarAcciones(event: { name: string, params: any }) {\r\n        switch (event.name) {\r\n            case 'credencial':\r\n                this.credencialUsuario(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Esta función es la que se encarga de la seleccion de check box de usuarios seleccionados\r\n     * @param selectedElements - La lista de usuarios seleccionados.\r\n     */\r\n    onSelectionChange(selectedElements: any[]) {\r\n        this.selectedUsuarios = selectedElements;\r\n    }\r\n\r\n    /**\r\n     * Esta funcion Genera un Reporte de Credencial/es y lo muestra en una nueva pestaña\r\n     */\r\n    reporteCredencial() {\r\n        if (!this.selectedUsuarios || this.selectedUsuarios.length === 0) {\r\n            this.alert.error('Debe seleccionar al menos un usuario.');\r\n            return;\r\n        } else {\r\n            let payload = null; \r\n            payload = {\r\n                usuarios: this.selectedUsuarios.map(element => ({ idusuario: element.codigo }))\r\n            };\r\n\r\n            this._usuariosService.credencialUsuario(payload).subscribe(\r\n                (data) => {\r\n                    if (data.success) {\r\n                        const reportePath = data.path;\r\n                        if (this.pwaService.isPwa()) {\r\n                            this.router.navigate(['/reporte', reportePath]);\r\n                        } else {\r\n                            const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                            window.open(reporteUrl, '_blank'); \r\n                        }\r\n                    } else {\r\n                        this.alert.error('Exiten Datos Nulos.');\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.error('Error en la solicitud del reporte de credenciales', error);\r\n                    this.alert.error('Exiten Datos Nulos.');\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Funcion en el componente\r\n    * - Esta funcion abre el modal de la Credencial del Usuario.\r\n    * @param documentRef\r\n    * @param usuario\r\n    */\r\n    credencialUsuario(event) {\r\n        const idUsuario = event.params.data.codigo;\r\n        let payload = null;\r\n        payload = {\r\n            usuarios: [{ idusuario: idUsuario }]\r\n        };\r\n        this._usuariosService.credencialUsuario(payload).subscribe(\r\n            (data) => {\r\n                if (data.success) {\r\n                    const reportePath = data.path;\r\n                    if (this.pwaService.isPwa()) {\r\n                        this.router.navigate(['/reporte', reportePath]);\r\n                    } else {\r\n                        const reporteUrl = `${environment.baseRest}/${reportePath}`;\r\n                        window.open(reporteUrl, '_blank'); \r\n                    }\r\n                } else {\r\n                    this.alert.error('Exiten Datos Nulos.')\r\n                    console.error('Error al generar el reporte');\r\n                }\r\n            },\r\n            (error) => {\r\n                this.alert.error('Exiten Datos Nulos.')\r\n                console.error('Error en la solicitud del reporte', error);\r\n            }\r\n        );\r\n    }\r\n    \r\n    ngOnDestroy(): void {\r\n        this._searchService.unsubscribe()\r\n    }\r\n}","<div class=\"w-full flex flex-col relative \">\r\n    <div class=\"mb-12 mt-6\">\r\n        <div class=\"fixed right-10\">\r\n            <button mat-flat-button [class]=\"color_primario ? '' : default_color\" [style.border]=\"color_primario || ''\"\r\n                [style.color]=\"color_primario || ''\"\r\n                class=\"w-full px-6 py-6 !border border-solid rounded-lg md:w-55 md:rounded-lg\"\r\n                (click)=\"reporteCredencial()\">\r\n                <div class=\"flex items-center\">\r\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 26 26\" fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g clip-path=\"url(#clip0_535_423)\">\r\n                            <path\r\n                                d=\"M20.5568 8.68182H19.4773V3.28409H6.52274V8.68182H5.4432C3.65115 8.68182 2.20456 10.1284 2.20456 11.9205V18.3977H6.52274V22.7159H19.4773V18.3977H23.7955V11.9205C23.7955 10.1284 22.3489 8.68182 20.5568 8.68182ZM8.68183 5.44318H17.3182V8.68182H8.68183V5.44318ZM17.3182 18.3977V20.5568H8.68183V16.2386H17.3182V18.3977ZM19.4773 16.2386V14.0795H6.52274V16.2386H4.36365V11.9205C4.36365 11.3267 4.84945 10.8409 5.4432 10.8409H20.5568C21.1506 10.8409 21.6364 11.3267 21.6364 11.9205V16.2386H19.4773Z\" />\r\n                            <path\r\n                                d=\"M19.4773 13.5398C20.0735 13.5398 20.5568 13.0564 20.5568 12.4602C20.5568 11.864 20.0735 11.3807 19.4773 11.3807C18.8811 11.3807 18.3977 11.864 18.3977 12.4602C18.3977 13.0564 18.8811 13.5398 19.4773 13.5398Z\" />\r\n                        </g>\r\n                        <defs>\r\n                            <clipPath id=\"clip0_535_423\">\r\n                                <rect width=\"25.9091\" height=\"25.9091\" fill=\"currentColor\"\r\n                                    transform=\"translate(0.0454712 0.0454559)\" />\r\n                            </clipPath>\r\n                        </defs>\r\n                    </svg>\r\n                    <span class=\"ml-2 text-lg mt-0.5 hidden md:inline\">Imprimir Credencial</span>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div class=\"pr-2 pl-2\">\r\n        <!-- Tabla dinámica -->\r\n        <app-tabla-dinamica class=\"bottom-10 sm:bottom-0 table-fixed sm:top-2 w-full m-0\"\r\n            (selectionChange)=\"onSelectionChange($event)\" [cache]=\"false\" [columnsNames]=\"headers\"\r\n            [renderType]=\"'client'\" [columnsParams]=\"column_params\" [endpoint]=\"env\" [functions]=\"funcionesObjeto\"\r\n            [extraClasses]=\"'td.mat-cell border,td.mat-cell border-slate-400'\"\r\n            (functionEmitter)=\"generarAcciones($event)\" [FiltersLikes]=\"filtersLike\" [extraParams]=\"extraParams\">\r\n        </app-tabla-dinamica>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from '@core/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { IUsuarioResponse } from '../models/usuario';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Injectable()\r\nexport class UsuariosService {\r\n    constructor(\r\n        private http: HttpClient, \r\n        private _authService: AuthService\r\n    ) {}\r\n\r\n    /**\r\n     * \r\n     * @param usuarios\r\n     * @returns Genera un reporte de etiquetas\r\n     */\r\n    credencialUsuario(usuarios: { idusuario: number }[]) {\r\n        return this.http.post<IUsuarioResponse>(`${environment.login.credencial_usuario}`, usuarios);\r\n    }\r\n}","import { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FuseAlertComponent } from '@fuse/components/alert';\r\nimport { JedsMenuService } from '@shared/service/app/jeds-menu.service';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { AppAlertService } from '@shared/service/app/alert.service';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { TablaDinamicaModule } from '@shared/components/tabla-dinamica/tabla-dinamica.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { UsuariosService } from './service/usuarios.service';\r\nimport { UsuariosComponent } from './components/usuarios.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: UsuariosComponent\r\n    }\r\n];\r\n@NgModule({\r\n    declarations: [UsuariosComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        MatTableModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n        MatFormFieldModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FuseAlertComponent,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        MatToolbarModule,\r\n        MatCheckboxModule,\r\n        MatDatepickerModule,\r\n        MatSortModule,\r\n        TablaDinamicaModule\r\n    ],\r\n    exports: [RouterModule],\r\n    providers: [UsuariosService, JedsMenuService, AppAlertService, DatePipe]\r\n})\r\nexport class UsuariosModule { }"],"names":["EventEmitter","Subject","debounceTime","distinctUntilChanged","takeUntil","MatTableDataSource","FormControl","environment","TablaDinamicaComponent","UsuariosComponent","constructor","_usuariosService","_empresaService","_menuService","confirm","alert","dialogo","_searchService","router","_headerTextService","pwaService","selectedUsuarios","dataSource","column_params","headers","funcionesObjeto","filtroBusqueda","filtersLike","filter","extraParams","parametrosActualizados","env","login","view_usuarios","search","default_color","_unsubscribeAll","setTitulo","nombre_boton","functionName","iconoAccion","usuario","iconoAccionado","iconoDeshabilitado","ngOnInit","empresa$","pipe","subscribe","empresa","color_primario","color_secundario","getEmpresa","SearchTextSub$","getSearchText","value","tabla","filters","FilterEventSub$","getFilterEvent","event","onFilterMenu","getFilterOrigin","origin","generarAcciones","name","credencialUsuario","onSelectionChange","selectedElements","reporteCredencial","length","error","payload","usuarios","map","element","idusuario","codigo","data","success","reportePath","path","isPwa","navigate","reporteUrl","baseRest","window","open","console","idUsuario","params","ngOnDestroy","unsubscribe","i0","ɵɵdirectiveInject","i1","UsuariosService","i2","EmpresaService","i3","JedsMenuService","i4","FuseConfirmationService","i5","AppAlertService","i6","MatDialog","i7","SearchService","i8","Router","i9","HeaderTextService","i10","PwaService","selectors","viewQuery","UsuariosComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","UsuariosComponent_Template_button_click_3_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","ɵɵnamespaceHTML","ɵɵtext","UsuariosComponent_Template_app_tabla_dinamica_selectionChange_15_listener","$event","UsuariosComponent_Template_app_tabla_dinamica_functionEmitter_15_listener","ɵɵadvance","ɵɵclassMap","ɵɵstyleProp","ɵɵproperty","http","_authService","post","credencial_usuario","ɵɵinject","HttpClient","AuthService","factory","ɵfac","RouterModule","CommonModule","DatePipe","MatToolbarModule","MatTableModule","MatButtonModule","MatSelectModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","FuseAlertComponent","MatIconModule","MatTooltipModule","MatAutocompleteModule","MatCheckboxModule","MatSortModule","TablaDinamicaModule","MatDatepickerModule","routes","component","UsuariosModule","imports","forChild","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}